Vue.use(VueScroll),
Vue.directive("click-outside", {
    bind: function(t, a, i) {
        const e = t;
        e.clickOutsideEvent = function(e) {
            t === e.target || t.contains(e.target) || i.context[a.expression](e)
        }
        ,
        document.body.addEventListener("click", t.clickOutsideEvent)
    },
    unbind: function(e) {
        document.body.removeEventListener("click", e.clickOutsideEvent)
    }
}),
Vue.prototype.$bus = new Vue,
Vue.prototype.$store = new Vue({
    data: {
        main: {
            giftAnimation: {},
            testChannelList: [],
            isFullScreen: !1
        },
        user: {
            balance: 0,
            freePoint: 0
        },
        gift: {
            canFree: !0,
            canDonate: !0,
            useAnimationStatus: !0,
            giftIndex: [],
            gift: {}
        },
        newest: {
            receiptIndex: [],
            receiptInfo: {},
            exchangeInfo: {},
            excSet: [],
            excDelSet: [],
            excDelCache: []
        },
        order: {
            wIdSet: {},
            orderData: {},
            total: [],
            ballSet: [],
            ballData: {},
            weekData: {
                week: [],
                other: []
            },
            giftData: [],
            exchangeInfo: {},
            excSet: [],
            excDelSet: [],
            excDelCache: []
        }
    }
}),
Vue.prototype.$chat = new Vue({
    methods: {
        ToThousends: function(e) {
            var t = (e || 0).toString()
              , e = /(\d{1,3})(?=(\d{3})+$)/g;
            return t = "vi" == langFont.Font_Langue ? t.replace(e, "$1.") : t.replace(e, "$1,")
        },
        LoadGiftImageError: function(e) {
            e.target.onerror = null,
            e.target.src = "/images/bb/closeLoading.gif"
        },
        ChatMsgProcess: function(e) {
            for (var t = [], a = 0; a < e.length; a++) {
                var i = e[a];
                i[0] === ChatType.Gift ? Array.prototype.splice.apply(t, [t.length, 0].concat(function(e) {
                    var t = e[4].split("|")
                      , a = t[1] ? parseInt(t[1]) : 0;
                    if (isNaN(a) || !a)
                        return [e];
                    var i = [];
                    t[1] = 1;
                    for (var n = t.join("|"), r = 0; r < a; r++) {
                        var s = $.extend([], e);
                        s[4] = n,
                        s[7] = s[7] + "_" + r,
                        i.push(s)
                    }
                    return i
                }(i))) : t.push(i)
            }
            return t
        },
        GetGiftAnimation: function(e) {
            return this.$store.main.giftAnimation.setting[e] ? {
                src: "/images/ani/" + this.$store.main.giftAnimation.setting[e].file,
                time: this.$store.main.giftAnimation.setting[e].time
            } : {
                src: "",
                time: 1e3
            }
        }
    }
}),
Vue.prototype.$order = new Vue({
    methods: {
        GetShowTeamName: function(e, t, a, i, n) {
            a = 2 == t ? [i, a] : [a, i],
            i = "",
            e = Ball[e.substr(0, 2)].key,
            t = 0 == t ? '<font class="t_red"> (' + langFont.Font_NeutralMark + ")</font>" : Tool.IsShowHomeRemark(e) && 4 != t ? '<span class="t_orange"> (' + langFont.Font_Home + ")</span>" : "";
            switch (n[4]) {
            case Args.TeamA:
                i = a[0] + t;
                break;
            case Args.TeamB:
                i = a[1];
                break;
            default:
                i = e == Ball.bb.key ? a[1] + '<span class="t_gray"> VS </span>' + a[0] + t : a[0] + t + '<span class="t_gray"> VS </span>' + a[1]
            }
            return i
        },
        GetOrderInfo: function(e, t, a, i, n, r, s) {
            var o, l = "", c = "", d = "", n = Tool.TransformNumToPk(e, n.toString());
            switch (s[1]) {
            case Args.PlayWin:
                switch (o = t.substr(t.length - 1, 1)) {
                case "1":
                    c = i[0];
                    break;
                case "2":
                    c = i[1];
                    break;
                case "3":
                    c = langFont.Font_Dauce
                }
                parseInt(o, 10) < 3 && (d = "PK");
                break;
            case Args.PlayHDP:
                switch (o = t.substr(t.length - 1, 1)) {
                case "1":
                    c = i[0];
                    break;
                case "2":
                    c = i[1];
                    break;
                case "3":
                    c = langFont.Font_Dauce
                }
                "" != n && 0 != n && (s = t.split(""),
                d = 0 < r ? 1 == s[s.length - 1] ? "-" : "+" : 2 == s[s.length - 1] ? "-" : "+"),
                d += n;
                break;
            case Args.PlayOU:
                switch (l = t.substr(t.length - 1, 1),
                c = "",
                parseInt(l, 10)) {
                case 1:
                    c = 0 <= ["180191", "180291", "180391", "180491", "180591", "180691", "180791"].indexOf(e) ? langFont.Font_MoreThan : langFont.Font_Big,
                    d = n;
                    break;
                case 2:
                    c = 0 <= ["180191", "180291", "180391", "180491", "180591", "180691", "180791"].indexOf(e) ? langFont.Font_LessThan : langFont.Font_Small,
                    d = n
                }
                break;
            case Args.PlayOE:
                switch (l = t.substr(t.length - 1, 1),
                parseInt(l, 10)) {
                case 1:
                    c = langFont.Font_Single;
                    break;
                case 2:
                    c = langFont.Font_Pair
                }
                break;
            case Args.PlayShowPK:
                switch (o = t.substr(t.length - 1, 1)) {
                case "1":
                    c = i[0];
                    break;
                case "2":
                    c = i[1]
                }
                break;
            case Args.PlayYN:
                switch (l = t.substr(t.length - 1, 1),
                parseInt(l, 10)) {
                case 1:
                    c = langFont.Font_Yes;
                    break;
                case 2:
                    c = langFont.Font_No
                }
                break;
            case Args.PlayHT:
                switch (l = t,
                parseInt(l, 10)) {
                case 1:
                    c = langFont.Font_1stHalf;
                    break;
                case 2:
                    c = langFont.Font_2ndHalf;
                    break;
                case 3:
                    c = langFont.Font_Dauce
                }
                break;
            case Args.PlayTeamTS:
                switch (o = t.substr(t.length - 2, 1)) {
                case "1":
                    c = i[0];
                    break;
                case "2":
                    c = i[1]
                }
                switch (l = t.substr(t.length - 1, 1),
                parseInt(l, 10)) {
                case 1:
                    c += " " + langFont.Font_Big,
                    d = n;
                    break;
                case 2:
                    c += " " + langFont.Font_Small,
                    d = n
                }
                break;
            case Args.PlayCS:
                c = "99" == (l = t) ? langFont.Font_Else : 2 == a ? l.split("")[1] + ":" + l.split("")[0] : l.split("")[0] + ":" + l.split("")[1];
                break;
            case Args.PlayTS:
                if (1 == (l = t).length)
                    c = "3" == l ? langFont.Font_3orMore : l;
                else if ("9" == l.split("")[1])
                    switch (l.split("")[0]) {
                    case "3":
                        c = langFont.Font_3orMore;
                        break;
                    case "7":
                        c = langFont.Font_7orMore
                    }
                else
                    c = l.split("")[0] + "-" + l.split("")[1];
                break;
            case Args.PlayHF:
                a = [i[0], i[1], langFont.Font_Peace],
                l = t,
                c = a[parseInt(l.split("")[0], 10) - 1] + "/" + a[parseInt(l.split("")[1], 10) - 1];
                break;
            case Args.PlayPSO:
                switch (l = t.substr(t.length - 1, 1),
                parseInt(l, 10)) {
                case 1:
                    c = langFont.Font_Goal;
                    break;
                case 2:
                    c = langFont.Font_NoGoal
                }
                break;
            case Args.PlayGoalWin:
                switch (l = t.substr(t.length - 1, 1)) {
                case "1":
                    c = i[0];
                    break;
                case "2":
                    c = i[1];
                    break;
                case "3":
                    c = langFont.Font_GRNoGoal
                }
                parseInt(l) < 3 && (d = "PK")
            }
            return [c, d]
        },
        GetGameResult: function(e, t, a, i, n, r, s) {
            var o = "";
            switch (t[0] && t[1] || (0 == n ? o = langFont.Font_ORLose : 1 == n && (o = langFont.Font_ORWin)),
            e) {
            case Args.OR_ScoreAB:
                t[0] && t[1] && (o = (t = "13" == s ? 2 != i ? t.reverse() : t : 2 == i ? t.reverse() : t)[0] + "：" + t[1]);
                break;
            case Args.OR_FHAndFT:
                t[0] && t[1] && (o = "(" + langFont.Font_1stHalf + ": " + t[0] + ") (" + langFont.Font_FT + ": " + t[1] + ")");
                break;
            case Args.OR_ScoreA:
                (t = 2 == i ? t.reverse() : t)[0] && (o = t[0]);
                break;
            case Args.OR_ScoreB:
                (t = 2 == i ? t.reverse() : t)[1] && (o = t[1]);
                break;
            case Args.OR_YesOrNo:
                3 == n ? o = "X" : 0 != n && 1 != n || (parseInt(t[0], 10) > parseInt(t[1], 10) ? o = langFont.Font_Yes : parseInt(t[0], 10) < parseInt(t[1], 10) && (o = langFont.Font_No));
                break;
            case Args.OR_FHAndSH:
                t[0] && t[1] && (o = "(" + langFont.Font_1stHalf + ": " + t[0] + ") (" + langFont.Font_2ndHalf + ": " + t[1] + ")");
                break;
            case Args.OR_TeamAOrBOrDauce:
                3 == n || t[0] && t[1] && ("X" == t[0] || "X" == t[1]) ? o = "X" : 0 != n && 1 != n || (parseInt(t[0], 10) == parseInt(t[1], 10) ? o = langFont.Font_Dauce : parseInt(t[0], 10) > parseInt(t[1], 10) ? o = a[0] : parseInt(t[0], 10) < parseInt(t[1], 10) && (o = a[1]));
                break;
            case Args.OR_ScoreAPlusB:
                t[0] && t[1] && (o = "X" == t[0] || "X" == t[1] ? "X" : parseInt(t[0], 10) + parseInt(t[1], 10));
                break;
            case Args.OR_TeamAOrBOrNoGoal:
                3 == n || t[0] && t[1] && ("X" == t[0] || "X" == t[1]) ? o = "X" : 0 != n && 1 != n || (parseInt(t[0], 10) == parseInt(t[1], 10) ? o = langFont.Font_GRNoGoal : parseInt(t[0], 10) > parseInt(t[1], 10) ? o = a[0] : parseInt(t[0], 10) < parseInt(t[1], 10) && (o = a[1]));
                break;
            case Args.OR_MinuteAndSecond:
                t[0] && t[1] && (o = "X" == t[0] || "X" == t[1] ? "X" : t[0] + langFont.Font_Point + t[1] + langFont.Font_Second);
                break;
            case Args.OR_TeamAOrBOrX:
                3 == n || t[0] && t[1] && ("X" == t[0] || "X" == t[1]) ? o = "X" : 0 != n && 1 != n || (parseInt(t[0], 10) == parseInt(t[1], 10) ? o = "X" : parseInt(t[0], 10) > parseInt(t[1], 10) ? o = a[0] : parseInt(t[0], 10) < parseInt(t[1], 10) && (o = a[1]));
                break;
            case Args.OR_BothTeamsToGoals:
                3 == n ? o = "X" : 0 != n && 1 != n || (0 < parseInt(t[0], 10) && 0 < parseInt(t[1], 10) ? o = langFont.Font_Yes : t[0] && t[1] && (o = langFont.Font_No));
                break;
            case Args.OR_IsLoseBall:
                3 == n ? o = "X" : 0 != n && 1 != n || (t = 2 == i ? t.reverse() : t,
                r == Args.TeamA ? 0 < parseInt(t[1], 10) ? o = langFont.Font_Yes : parseInt(t[1], 10) <= 0 && (o = langFont.Font_No) : r == Args.TeamB && (0 < parseInt(t[0], 10) ? o = langFont.Font_Yes : parseInt(t[0], 10) <= 0 && (o = langFont.Font_No)))
            }
            return o
        },
        GetColor: function(e) {
            return 0 < e ? "t_green" : e < 0 ? "t_red" : ""
        },
        GetResultColor: function(e, t) {
            return 0 <= e && !t ? "t_green" : e < 0 ? "t_red" : "t_blue"
        },
        GetStatusArray: function(e, t, a, i) {
            var n = []
              , r = Tool.TransformInvalid(t);
            return 210 == t ? n = i || a ? "mobile" == MainProperty.webDevice ? ["btn_status_i", r + '<div class="statusInfo">' + i + (a ? (i ? " - " : "") + a : "") + "</div>"] : ["btn_RT_i", "RT_i_T", r, "RT_i_In", "RT_i_InBox", i + (a ? (i ? " - " : "") + a : "")] : "mobile" == MainProperty.webDevice ? ["img_refuse", r] : ["icon_RT_no", "", r, "", "", ""] : 211 == t ? n = "mobile" == MainProperty.webDevice ? ["btn_status_iG", r + '<div class="statusInfo">' + i + "</div>"] : ["btn_RT_iG", "RT_iG_T", r, "RT_iG_In", "RT_iG_InBox", i] : r && a ? n = "mobile" == MainProperty.webDevice ? ["btn_status_iR", r + '<div class="statusInfo">' + a + "</div>"] : ["btn_RT_iR", "RT_iR_T", r, "RT_iR_In", "RT_iR_InBox", a] : r ? n = "mobile" == MainProperty.webDevice ? ["img_refuse", r] : ["icon_RT_no", "", r, "", "", ""] : 254 == e ? n = "mobile" == MainProperty.webDevice ? ["img_check", langFont.Font_CartConfirmed] : ["icon_RT_ok", "", langFont.Font_CartConfirmed, "", "", ""] : 255 == e && (n = "mobile" == MainProperty.webDevice ? ["btn_status", langFont.Font_CartWaiting + '<div class="statusInfo">' + langFont.Font_CartBetIsBeingProcessed + "</div>"] : ["btn_RT_wait", "RT_wait_T", langFont.Font_CartWaiting, "RT_wait_In", "RT_wait_InBox", langFont.Font_CartBetIsBeingProcessed]),
            n
        },
        CalHighestReturn: function(e, t) {
            return result = (e + Number.parseFloat(t)).toFixed(2)
        }
    }
}),
function() {
    XMLHttpRequest.prototype.cancel = function() {
        var e = this.onload;
        this.onload = function() {
            this.abort(),
            e()
        }
    }
    ,
    this.BBXhr = function(e) {
        if ("object" == typeof e) {
            var t, a = new XMLHttpRequest, i = "", n = !0, r = "", s = "GET", o = "", l = "TEXT", c = 3e3, d = function() {}, u = function() {}, h = function() {}, p = function() {};
            for (t in e)
                0 != e.hasOwnProperty(t) && ("async" == t.toLowerCase() && "boolean" == typeof e[t] && (n = e[t]),
                "url" == t.toLowerCase() && "string" == typeof e[t] && e[t] && (r = e[t]),
                "type" == t.toLowerCase() && "string" == typeof e[t] && ("post" == e[t].toLowerCase() ? s = "POST" : "put" == e[t].toLowerCase() ? s = "PUT" : "head" == e[t].toLowerCase() ? s = "HEAD" : "delete" == e[t].toLowerCase() ? s = "DELETE" : "connect" == e[t].toLowerCase() ? s = "CONNECT" : "options" == e[t].toLowerCase() ? s = "OPTIONS" : "trace" == e[t].toLowerCase() && (s = "TRACE")),
                "datatype" == t.toLowerCase() && "string" == typeof e[t] && "text" != e[t].toLowerCase() && (l = "JSON"),
                "timeout" == t.toLowerCase() && "number" == typeof e[t] && 0 < e[t] && (c = e[t]),
                "beforesend" == t.toLowerCase() && "function" == typeof e[t] && (d = e[t]),
                "success" == t.toLowerCase() && "function" == typeof e[t] && (u = e[t]),
                "complete" == t.toLowerCase() && "function" == typeof e[t] && (h = e[t]),
                "error" == t.toLowerCase() && "function" == typeof e[t] && (p = e[t]),
                0 <= ["id", "data", "contenttype", "cache", "authorization"].indexOf(t.toLowerCase()) && (e[t.toLowerCase()] = e[t],
                t.toLowerCase() != t && delete e[t]));
            if (i = e.id || Date.now() + function(e) {
                for (var t = "", a = 0; a < e; a++)
                    t += String.fromCharCode(65 + Math.ceil(25 * Math.random()));
                return t
            }(4),
            a.open(s, r, n),
            a.setRequestHeader("Accept", "application/json, text/javascript, text/plain, */*; q=0.01"),
            e.contenttype && "string" == typeof e.contenttype ? a.setRequestHeader("Content-type", e.contenttype) : a.setRequestHeader("Content-type", "application/x-www-form-urlencoded; charset=UTF-8"),
            e.cache && "boolean" == typeof e.cache && (a.setRequestHeader("Cache-Control", "no-cache, must-revalidate, post-check=0, pre-check=0"),
            a.setRequestHeader("Cache-Control", "max-age=0"),
            a.setRequestHeader("expires", "0"),
            a.setRequestHeader("expires", "Tue, 01 Jan 1980 1:00:00 GMT"),
            a.setRequestHeader("pragma", "no-cache"),
            a.setRequestHeader("If-Modified-Since", "0")),
            e.authorization && "string" == typeof e.authorization && a.setRequestHeader("Authorization", e.authorization),
            e.data)
                if ("string" == typeof e.data)
                    o = e.data;
                else if ("object" == typeof e.data)
                    if (e.contenttype && 0 <= e.contenttype.indexOf("application/json; charset=UTF-8"))
                        o = JSON.stringify(e.data);
                    else {
                        for (var m in e.data)
                            0 < o.length && (o += "&"),
                            o += m + "=" + e.data[m];
                        "GET" == s && (r += "?" + o)
                    }
            return n && (a.timeout = c),
            a.onerror = function(e) {
                p({
                    id: i,
                    target: a,
                    event: e
                })
            }
            ,
            a.onload = function(e) {
                if (0 == a.status)
                    h({
                        id: i,
                        target: a,
                        event: e
                    });
                else if (200 == a.status) {
                    var t = a.responseText;
                    if ("JSON" == l)
                        try {
                            t = JSON.parse(a.responseText)
                        } catch (e) {}
                    u({
                        id: i,
                        target: a,
                        event: e,
                        data: t
                    }),
                    h({
                        id: i,
                        target: a,
                        event: e
                    })
                } else
                    p({
                        id: i,
                        target: a,
                        event: e
                    })
            }
            ,
            a.ontimeout = function(e) {
                p({
                    id: i,
                    target: a,
                    event: e
                })
            }
            ,
            d(),
            setTimeout(function() {
                1 == a.readyState && 0 == a.status && a.send(o)
            }, 50),
            a
        }
    }
}();
var DataAdapter = {
    LastCt: {},
    DriveCount: {
        cst: 1,
        more: 1,
        sm: 1,
        wr: 1,
        pass: 1,
        popLive: 1,
        gotoMore: 1,
        us: 1,
        exc: 1
    },
    PageVisibility: {
        onShow: function() {},
        onHidden: function() {},
        timer: null,
        status: !0
    },
    IsIEEdgeBelow: "ActiveXObject"in window,
    IsSupportWS: "undefined" != typeof WebSocket,
    InitialAdapter: function(e, t, a) {
        e[0] && this.IsSupportWS && BBSocket.EnableProcess(MainProperty.sessionID, e),
        t[0] && this.IsSupportWS && 0 == this.IsIEEdgeBelow && SMSocket.EnableProcess(MainProperty.sessionID, t),
        a[0] && this.IsSupportWS && WRSocket.EnableProcess(MainProperty.sessionID, a, "WRRS"),
        BBXHR.EnableProcess(MainProperty.sessionID),
        this.IsSupportWS && (GiftWorker.EnableProcess(),
        WebGLPlayerWorker.EnableProcess()),
        ErrorLogInitial(MainProperty.sessionID, MainProperty.RecordLog),
        BBSocket.SocketConnect(),
        WRSocket.SocketConnect()
    },
    InitialAdapterWR: function(e, t) {
        e[0] && this.IsSupportWS && WRSocket.EnableProcess(MainProperty.sessionID, e, "WRRS_" + t),
        ErrorLogInitial(MainProperty.sessionID),
        WRSocket.SocketConnect()
    },
    SendCommand: function(e) {
        (0 <= ["orderR", "orderD", "orderP", "showR", "giftD", "giftR", "unsettle", "cPass"].indexOf(e.action) ? WRSocket : 0 <= ["talk", "cTalk", "addT", "updateT", "addSR", "addQT", "getAnn"].indexOf(e.action) ? SMSocket : BBSocket).SendCommand(e)
    },
    TerminateWorker: function() {
        var e = Date.now();
        for (BBSocket.TerminateWorker(),
        SMSocket.TerminateWorker(),
        WRSocket.TerminateWorker(),
        GiftWorker.TerminateWorker(),
        BBXHR.TerminateWorker(),
        DataAdapter.SetVisibilityEvent(function() {}, function() {}); BBXHR.XHRWorker || BBSocket.SocketWorker || GiftWorker.Worker || SMSocket.SocketWorker || WRSocket.SocketWorker; )
            if (500 < Date.now() - e)
                break
    },
    SetVisibilityEvent: function(e, t) {
        "function" == typeof e && (this.PageVisibility.onShow = e),
        "function" == typeof t && (this.PageVisibility.onHidden = t),
        0 == MainProperty.IsIosBagOrAndroidApp && this.CheckVisibility()
    },
    CheckVisibility: function() {
        var e = this;
        clearTimeout(e.PageVisibility.timer);
        var t = 0 == document.hidden || "visible" == document.visibilityState;
        t != this.PageVisibility.status && ((e.PageVisibility.status = t) ? e.PageVisibility.onShow() : e.PageVisibility.onHidden()),
        e.PageVisibility.timer = setTimeout(function() {
            e.CheckVisibility()
        }, 100)
    },
    UpdateLastCt: function(e) {
        for (var t = ["action", "sport", "mode", "type", "dc", "fvpk"], a = 0; a < t.length; a++)
            DataAdapter.LastCt[t[a]] = e[t[a]] || DataAdapter.LastCt[t[a]]
    }
}
  , BBXHR = {
    XHRWorker: null,
    CallBackPool: [],
    TrashQueue: {},
    RecordLog: function(e, t) {
        this.NotifyWorker({
            action: "recordLog",
            data: e,
            mode: t
        })
    },
    CircuitLog: function(e, t) {
        this.NotifyWorker({
            action: "circuitLog",
            data: e,
            mode: t
        })
    },
    onNext: function() {},
    SendCommand: function() {},
    TerminateWorker: function() {},
    GetFastestUrl: function() {},
    StartWorker: function() {},
    NotifyWorker: function(e) {
        null != this.XHRWorker && this.XHRWorker.postMessage(e)
    },
    EnableProcess: function(a) {
        var n = this;
        n.onNext = function(e, t) {
            switch (ReceiveLog.RecordLog("接收時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + a + "\r\nsource: " + t.id + "\r\nurl: " + t.url + "\r\nstatus: " + t.status + " " + t.statusText + "\r\n" + JSON.stringify(e), t.id),
            e.action) {
            case "list":
            case "change":
            case "reflash":
                GameResultBase.ProcessReceive(e);
                break;
            case "detail":
                GameResultBase.ProcessDetail(e);
                break;
            case "error":
                "BBGR" == t.id && GameResult.ProcessError(t.status)
            }
            n.NotifyWorker({
                action: "next"
            })
        }
        ,
        n.SendCommand = function(e) {
            n.NotifyWorker({
                action: "send",
                setting: e
            }),
            ReceiveLog.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + a + "\r\nsource: " + e.id + "\r\n" + JSON.stringify(e.data), e.id)
        }
        ,
        n.TerminateWorker = function() {
            n.NotifyWorker({
                action: "terminate"
            })
        }
        ,
        n.GetFastestUrl = function(e, i, t) {
            var a = Date.now();
            n.CallBackPool[a] = function(e, t, a) {
                delete n.CallBackPool[e],
                i(t, a)
            }
            ,
            n.NotifyWorker({
                action: "speedTest",
                urlArray: e,
                callBackId: a,
                source: t
            })
        }
        ,
        n.GetRadarUrl = function(e, a) {
            var t = Date.now();
            n.CallBackPool[t] = function(e, t) {
                delete n.CallBackPool[e],
                a(t)
            }
            ,
            n.NotifyWorker({
                action: "radar",
                setting: e,
                callBackId: t
            })
        }
        ,
        n.StartWorker = function() {
            var t;
            null != n.XHRWorker && (t = Date.now() + GetRanStr(4),
            n.TrashQueue[t] = n.XHRWorker,
            n.TrashQueue[t].onmessage = function(e) {
                "onTerminate" == e.data.action && (n.TrashQueue[t].terminate(),
                n.TrashQueue[t] = null,
                delete n.TrashQueue[t])
            }
            ,
            n.TerminateWorker(),
            n.XHRWorker = null),
            n.XHRWorker = new Worker("/js/" + MainProperty.jsPath + "/XHRWorker.js"),
            n.XHRWorker.onmessage = function(e) {
                switch (e.data.action) {
                case "onNext":
                    n.onNext(e.data.data, e.data.xhrInfo);
                    break;
                case "onTerminate":
                    n.XHRWorker.terminate(),
                    n.XHRWorker = null;
                    break;
                case "speedTest":
                    var t = e.data.callBackId;
                    n.CallBackPool[t] && n.CallBackPool[t](t, e.data.target, e.data.left);
                    break;
                case "radar":
                    t = e.data.callBackId;
                    n.CallBackPool[t] && n.CallBackPool[t](t, e.data)
                }
            }
            ,
            n.NotifyWorker({
                action: "initial",
                token: a,
                circuit: MainProperty.RecordCircuitLog,
                log: MainProperty.RecordLog
            })
        }
        ,
        n.StartWorker()
    }
}
  , BBSocket = {
    Path: [],
    SocketWorker: null,
    firstCommand: "",
    TrashQueue: {},
    SocketConnect: function() {},
    onConnect: function() {},
    onReconnect: function() {},
    onNext: function() {},
    onAllDown: function() {},
    SendCommand: function() {},
    SocketClose: function() {},
    TerminateWorker: function() {},
    StartWorker: function() {},
    NotifyWorker: function(e) {
        null != this.SocketWorker && this.SocketWorker.postMessage(e)
    },
    getSetUpCommand: function(e) {
        var t, a = [], i = $.extend({}, DataAdapter.LastCt);
        return i.action = "cst",
        i.mode = MainProperty.playMode,
        i.sport = Tool.TransformGameType(MainProperty.ballType, Args.ShortNum),
        i.type = MainProperty.sortOption.kind,
        i.deposit = MainProperty.user.hasEnoughDeposit,
        i.modeId = MainProperty.user.modeId,
        i.verify = MainProperty.verify,
        i.stick = 1,
        i.dc = DataAdapter.DriveCount.cst,
        i.module = "mobile" == MainProperty.webDevice && "Classic" == MainProperty.user.theme.theme ? 1 : 0,
        i.device = "mobile" == MainProperty.webDevice ? 1 : 0,
        i = e ? JSON.stringify(i) : i,
        a.push(i),
        MainProperty.innerPage && (i = {
            action: "more",
            gId: MainProperty.innerPage,
            dc: DataAdapter.DriveCount.more,
            stick: 1
        },
        i = e ? JSON.stringify(i) : i,
        a.push(i)),
        MainProperty.panelData.popGameLive.gId && (t = MainProperty.panelData.popGameLive.type == Args.GameLive ? 0 : 1,
        t = {
            action: "popLive",
            gId: MainProperty.panelData.popGameLive.gId,
            type: t,
            dc: DataAdapter.DriveCount.popLive
        },
        t = e ? JSON.stringify(t) : t,
        a.push(t)),
        0 < MainProperty.cart.list.length && (t = {
            action: "sc",
            value: MainProperty.cart.list.map(function(e) {
                return e.split("_").slice(0, 3)
            }),
            stick: 1
        },
        t = e ? JSON.stringify(t) : t,
        a.push(t)),
        a
    },
    EnableProcess: function(s, e) {
        var o = this;
        o.Path = e,
        o.SocketConnect = function() {
            3 <= o.Path.length && o.NotifyWorker({
                action: "connect",
                urlArray: o.Path[0],
                urlSearch: o.Path[1],
                keepCount: MainProperty.KeepBBRSCount,
                isSSL: !0,
                protocolData: o.Path[2]
            })
        }
        ,
        o.onConnect = function(e) {
            if (Tool.IsEmptyObject(DataAdapter.LastCt))
                o.firstCommand = {
                    action: "first",
                    module: "mobile" == MainProperty.webDevice && "Classic" == MainProperty.user.theme.theme ? 1 : 0,
                    device: "mobile" == MainProperty.webDevice ? 1 : 0,
                    mode: MainProperty.playMode,
                    sport: Tool.TransformGameType(MainProperty.ballType, Args.ShortNum),
                    deposit: MainProperty.user.hasEnoughDeposit,
                    modeId: MainProperty.user.modeId,
                    verify: MainProperty.verify
                },
                o.SendCommand(o.firstCommand);
            else
                for (var t = o.getSetUpCommand(!1), a = 0; a < t.length; a++)
                    o.SendCommand(t[a])
        }
        ,
        o.onReconnect = function(e, t) {
            var a = o.getSetUpCommand(!0);
            o.NotifyWorker({
                action: "socketSync",
                index: e,
                command: a
            }),
            ReceiveLog.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + s + "\r\nsource: BBRS\r\nurl: " + t.url + "\r\n" + JSON.stringify(a), "BBRS")
        }
        ,
        o.onNext = function(e, t) {
            switch (ReceiveLog.RecordLog("接收時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + s + "\r\nsource: BBRS\r\nurl: " + t.url + "\r\n" + JSON.stringify(e), "BBRS"),
            e.date && (clearInterval(MainProperty.serverTime.timer),
            MainProperty.serverTime.last = e.date,
            MainProperty.serverTime.ms = new Date(e.date).getTime(),
            Header.SetServerTime(),
            Outer.CalculateRunTimer(),
            Panel.CalculateRunTimer()),
            void 0 !== e.smmt && (e.smmt ? SMMaintain.Open() : SMMaintain.Close()),
            e.action) {
            case "first":
                if (null == Maintain.Version)
                    Maintain.Version = e.mtv;
                else if (e.mtv > Maintain.Version) {
                    Maintain.Close(),
                    DataAdapter.TerminateWorker();
                    break
                }
                if (e.inv > MainProperty.initVersion) {
                    MainProperty.initVersion = e.inv,
                    o.onReconnect(t.id, t);
                    break
                }
                if (e.dc != DataAdapter.DriveCount.cst)
                    break;
                AuthGroup(e.action, e.group, e.sn),
                DataAdapter.DriveCount.cst++,
                ActionFirst(e),
                DataAdapter.UpdateLastCt(e);
                break;
            case "cm":
            case "cs":
            case "ckg":
            case "cst":
                if (null == Maintain.Version)
                    Maintain.Version = e.mtv;
                else if (e.mtv > Maintain.Version) {
                    Maintain.Close(),
                    DataAdapter.TerminateWorker();
                    break
                }
                if (e.inv > MainProperty.initVersion) {
                    MainProperty.initVersion = e.inv,
                    o.onReconnect(t.id, t);
                    break
                }
                if (e.dc != DataAdapter.DriveCount.cst)
                    break;
                AuthGroup(e.action, e.group, e.sn),
                DataAdapter.DriveCount.cst++,
                ActionChangeType(e),
                DataAdapter.UpdateLastCt(e);
                break;
            case "more":
                if (e.dc != DataAdapter.DriveCount.more)
                    break;
                AuthGroup(e.action, e.group, e.sn),
                DataAdapter.DriveCount.more++,
                ActionMore(e);
                break;
            case "popLive":
                if (e.dc != DataAdapter.DriveCount.popLive)
                    break;
                AuthGroup(e.action, e.group, e.sn),
                DataAdapter.DriveCount.popLive++,
                ActionPopLive(e);
                break;
            case "gotoMore":
                if (e.dc != DataAdapter.DriveCount.gotoMore)
                    break;
                if (AuthGroup(e.action, e.group, e.sn),
                DataAdapter.DriveCount.gotoMore++,
                2 == e.data.length) {
                    var a = e.data[0]
                      , i = e.data[1];
                    if (null == Maintain.Version)
                        Maintain.Version = a.mtv;
                    else if (a.mtv > Maintain.Version) {
                        Maintain.Close(),
                        DataAdapter.TerminateWorker();
                        break
                    }
                    if (a.inv > MainProperty.initVersion) {
                        MainProperty.initVersion = a.inv,
                        o.onReconnect(t.id, t);
                        break
                    }
                    DataAdapter.DriveCount.cst++,
                    a.gotoMoreGId = i.gId,
                    ActionChangeType(a),
                    DataAdapter.UpdateLastCt(a),
                    Inner.Close(!0),
                    MainProperty.innerPage = i.gId,
                    e.gId && (MainProperty.panelData.panel = MainProperty.panelData.popGameLive.type),
                    DataAdapter.DriveCount.more++,
                    ActionMore(i)
                }
                break;
            case "add":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                var n = Object.keys(e);
                if (!AuthLocation(e.action, e.mode, e.sport, e.type, null, n))
                    break;
                ActionAddGame(e, !1);
                break;
            case "addC":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                ActionAddCart(e);
                break;
            case "addM":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                if (!AuthLocation(e.action, null, null, null, e.gId, []))
                    break;
                ActionAddMore(e, !1);
                break;
            case "del":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                n = Object.keys(e);
                if (!AuthLocation(e.action, e.mode, e.sport, e.type, null, n))
                    break;
                ActionDelGame(e, !1);
                break;
            case "delC":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                ActionDelCart(e);
                break;
            case "delM":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                if (!AuthLocation(e.action, null, null, null, e.gId, []))
                    break;
                ActionDelMore(e, !1);
                break;
            case "checkTime":
                $("#maintBlock").is(":visible") && ActionMtover();
                break;
            case "update":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                n = Object.keys(e);
                if (e.menu && e.kindSub && n.push("kindSub"),
                !AuthLocation(e.action, e.mode, e.sport, e.type, null, n))
                    break;
                ActionUpdate(e, !1);
                break;
            case "updateC":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                ActionUpdateCart(e);
                break;
            case "updateM":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                if (!AuthLocation(e.action, null, null, null, e.gId, []))
                    break;
                ActionUpdateMore(e);
                break;
            case "sf_over":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                MainProperty.favoriteData = e.val,
                $("#btnFV > div > div").text(MainProperty.favoriteData.length),
                "mobile" == MainProperty.webDevice && Menu.ShowOrHideFV(),
                SetCookie("fvpk", JSON.stringify(MainProperty.favoriteData));
                break;
            case "note":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                Header.SetNote(e.val);
                break;
            case "updateP":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                if (!AuthLocation(e.action, null, null, null, e.gId, []))
                    break;
                ActionUpdatePanel(e, !1);
                break;
            case "updatePL":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                if (!AuthLocation(e.action, null, null, null, e.gId, []))
                    break;
                ActionUpdatePopLive(e, !1);
                break;
            case "mt":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                Maintain.Initial(),
                ShowAlert(Args.BackPage, langFont.Font_PleaseRevisitAndOperate1),
                DataAdapter.TerminateWorker();
                break;
            case "mt_over":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                Maintain.Close(),
                DataAdapter.TerminateWorker();
                break;
            case "smmt":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                SMMaintain.Open();
                break;
            case "smmt_over":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                SMMaintain.Close();
                break;
            case "ban":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                "mobile" == MainProperty.webDevice ? ShowAlert(Args.BackPage, langFont.Font_AccountBan, Header.BackPage) : ShowAlert(Args.BackPage, langFont.Font_AccountBan),
                DataAdapter.TerminateWorker();
                break;
            case "init":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                e.version > MainProperty.initVersion && (MainProperty.initVersion = e.version,
                o.onReconnect(t.id, t));
                break;
            case "timeto12":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                MainProperty.playMode == PlayMode.ZP && MainProperty.innerPage && 0 <= e.data.indexOf(MainProperty.innerPage) && Inner.Close(),
                MainProperty.playMode == PlayMode.ZP && MainProperty.isFastTrade && ActionDelCart({
                    val: e.data.map(function(e) {
                        return [e, -1]
                    })
                });
                t = {
                    action: "cst",
                    mode: MainProperty.playMode,
                    sport: Tool.TransformGameType(MainProperty.ballType, Args.ShortNum),
                    type: MainProperty.sortOption.kind,
                    deposit: MainProperty.user.hasEnoughDeposit,
                    modeId: MainProperty.user.modeId,
                    verify: MainProperty.verify
                };
                o.SendCommand(t);
                break;
            case "gift":
                if (!AuthGroup(e.action, e.group, e.sn))
                    break;
                var r;
                e.index && (r = e.index.map(function(e) {
                    return ChatVue.$store.main.giftAnimation.setting[e] ? ChatVue.$store.main.giftAnimation.setting[e].file.replaceAll(".html", "") : ""
                }),
                e = ChatVue.$store.main.giftAnimation.manifestList.filter(function(e) {
                    return 0 <= r.indexOf(e.id)
                }),
                AniCanvas.Init(e),
                AniCanvas.Load(e))
            }
            o.NotifyWorker({
                action: "next"
            })
        }
        ,
        o.SendCommand = function(e) {
            if (0 <= ["first", "cm", "cs", "ckg", "more", "cst", "popLive", "gotoMore"].indexOf(e.action)) {
                switch (e.action) {
                case "first":
                case "cm":
                case "cs":
                case "ckg":
                case "cst":
                    e.dc = DataAdapter.DriveCount.cst;
                    break;
                case "more":
                    e.dc = DataAdapter.DriveCount.more;
                    break;
                case "popLive":
                    e.dc = DataAdapter.DriveCount.popLive;
                    break;
                case "gotoMore":
                    e.dc = DataAdapter.DriveCount.gotoMore
                }
                ["more", "cst", "popLive"].indexOf(e.action) < 0 && (DataAdapter.LastCt = e)
            }
            o.NotifyWorker({
                action: "send",
                command: e
            }),
            ReceiveLog.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + s + "\r\nsource: BBRS\r\n" + JSON.stringify(e), "BBRS")
        }
        ,
        o.SocketClose = function() {
            o.NotifyWorker({
                action: "close"
            })
        }
        ,
        o.TerminateWorker = function() {
            o.NotifyWorker({
                action: "terminate"
            })
        }
        ,
        o.StartWorker = function(t) {
            var a;
            null != o.SocketWorker && (a = Date.now() + GetRanStr(4),
            o.TrashQueue[a] = o.SocketWorker,
            o.TrashQueue[a].onmessage = function(e) {
                "onTerminate" == e.data.action && (o.TrashQueue[a].terminate(),
                o.TrashQueue[a] = null,
                delete o.TrashQueue[a])
            }
            ,
            o.TerminateWorker(),
            o.SocketWorker = null),
            o.SocketWorker = new Worker("/js/" + MainProperty.jsPath + "/SocketWorker.js"),
            o.SocketWorker.onmessage = function(e) {
                switch (e.data.action) {
                case "onConnect":
                    o.onConnect(t);
                    break;
                case "onNext":
                    o.onNext(e.data.data, e.data.socketInfo);
                    break;
                case "onLog":
                    BBXHR.RecordLog(e.data.text);
                    break;
                case "onCircuitLog":
                    BBXHR.CircuitLog(e.data.text, "BBRS");
                    break;
                case "onTerminate":
                    o.SocketWorker.terminate(),
                    o.SocketWorker = null;
                    break;
                case "onReconnect":
                    o.onReconnect(e.data.socketInfo.id, e.data.socketInfo)
                }
            }
            ,
            o.NotifyWorker({
                action: "initial",
                token: s,
                source: "BBRS",
                heartBeatAction: "checkTime",
                mustReceive: ["first", "cm", "cs", "ckg", "cst", "more", "popLive", "sr", "gotoMore"],
                needInflate: !0
            })
        }
        ,
        o.StartWorker(s)
    }
}
  , SMSocket = {
    Path: [],
    LastUpdateUrlTime: null,
    SocketWorker: null,
    firstCommand: "",
    TrashQueue: {},
    RecentSN: 0,
    SocketConnect: function() {},
    onConnect: function() {},
    onReconnect: function() {},
    onNext: function() {},
    SendCommand: function() {},
    SocketClose: function() {},
    TerminateWorker: function() {},
    StartWorker: function() {},
    NotifyWorker: function(e) {
        null != this.SocketWorker && this.SocketWorker.postMessage(e)
    },
    EnableProcess: function(n, e) {
        var r = this;
        r.Path = e,
        r.LastUpdateUrlTime = (new Date).getTime() + 6e4 * r.Path[2],
        r.SocketConnect = function() {
            3 <= r.Path.length && r.NotifyWorker({
                action: "connect",
                urlArray: r.Path[0],
                urlSearch: r.Path[1],
                keepCount: MainProperty.KeepSMRSCount,
                isSSL: !0,
                urlFresh: r.Path[2],
                lastUrlUpdateTime: r.LastUpdateUrlTime
            })
        }
        ,
        r.onConnect = function() {
            var e = ChatVue.gift.status && ChatVue.roomId;
            ChatVue.status && (ChatVue.smId || e) && r.SendCommand({
                action: "talk",
                val: e ? ChatVue.roomId : ChatVue.smId,
                cl: e ? 0 : 1
            })
        }
        ,
        r.onReconnect = function(e, t) {
            var a, i = ChatVue.gift.status && ChatVue.roomId;
            ChatVue.status && (ChatVue.smId || i) && ((a = []).push(JSON.stringify({
                action: "talk",
                val: i ? ChatVue.roomId : ChatVue.smId,
                cl: i ? 0 : 1,
                dc: DataAdapter.DriveCount.sm
            })),
            r.NotifyWorker({
                action: "socketSync",
                index: e,
                command: a
            }),
            ReceiveLog.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + n + "\r\nsource: SMRS\r\nurl: " + t.url + "\r\n" + JSON.stringify(a), "SMRS"))
        }
        ,
        r.onNext = function(e, t) {
            switch (ReceiveLog.RecordLog("接收時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + n + "\r\nurl: " + t.url + "\r\nsource: SMRS\r\n" + JSON.stringify(e), "SMRS"),
            e.action) {
            case "talk":
                if (e.dc != DataAdapter.DriveCount.sm)
                    break;
                t = ChatVue.connect;
                ChatVue.connect = !0,
                DataAdapter.DriveCount.sm++,
                e.date && (clearTimeout(ChatVue.smTime.timer),
                ChatVue.smTime.timer = null,
                ChatVue.smTime.ms = new Date(e.date).getTime(),
                ChatVue.SetSMTime()),
                ChatVue.user.id = e.self || "",
                1 == e.isLimit && (ChatVue.user.noTalk = !0),
                (void 0 === e.exist || e.exist) && "" !== e.self || ChatVue.Error(),
                void 0 !== e.istalk && (ChatVue.user.permission = 1 === e.istalk),
                void 0 !== e.guid && (ChatVue.user.guid = e.guid),
                e.limitT && (ChatVue.user.limitTime = new Date(e.limitT).getTime()),
                e.data && ChatVue.ProcessFirstMessage(e.data, t),
                e.quick && ChatVue.ProcessQuickMessage(e.quick);
                break;
            case "addT":
            case "addSR":
            case "addQT":
                if (e.dc != DataAdapter.DriveCount.sm)
                    break;
                DataAdapter.DriveCount.sm++,
                ChatVue.SendMessageOver(e);
                break;
            case "updateT":
                if (e.sn <= r.RecentSN)
                    break;
                r.RecentSN = e.sn,
                void 0 !== e.isLimit && (ChatVue.user.noTalk = e.isLimit || !1,
                ChatVue.user.limitTime = e.isLimit ? ChatVue.user.limitTime : 0),
                void 0 !== e.istalk && (ChatVue.user.permission = 1 === e.istalk),
                e.limitT && (ChatVue.user.limitTime = new Date(e.limitT).getTime() - 3e3),
                void 0 === e.exist || e.exist || ChatVue.Error(),
                e.data && ChatVue.ProcessUpdateMessage(e.data),
                e.limit && ChatVue.NoTalkProcess(e.limit);
                break;
            case "getAnn":
                if (e.dc != DataAdapter.DriveCount.sm || 1 == e.dc)
                    break;
                DataAdapter.DriveCount.sm++,
                ChatVue.ShowChatAnn(e.data);
                break;
            case "mt":
                ChatVue.error || ChatVue.maintain || !ChatVue.smId || (ChatVue.maintain = !0);
                break;
            case "mt_over":
                ChatVue.error || (ChatVue.maintain = !1);
                break;
            case "checkSN":
                r.RecentSN = e.result,
                e.date && (clearTimeout(ChatVue.smTime.timer),
                ChatVue.smTime.timer = null,
                ChatVue.smTime.ms = new Date(e.date).getTime(),
                ChatVue.SetSMTime())
            }
            r.NotifyWorker({
                action: "next"
            })
        }
        ,
        r.SendCommand = function(e) {
            e.dc = DataAdapter.DriveCount.sm,
            r.NotifyWorker({
                action: "send",
                command: e
            }),
            ReceiveLog.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + n + "\r\nsource: SMRS\r\n" + JSON.stringify(e), "SMRS")
        }
        ,
        r.SocketClose = function() {
            r.NotifyWorker({
                action: "close"
            })
        }
        ,
        r.TerminateWorker = function() {
            r.NotifyWorker({
                action: "terminate"
            })
        }
        ,
        r.StartWorker = function(t) {
            var a;
            null != r.SocketWorker && (a = Date.now() + GetRanStr(4),
            r.TrashQueue[a] = r.SocketWorker,
            r.TrashQueue[a].onmessage = function(e) {
                "onTerminate" == e.data.action && (r.TrashQueue[a].terminate(),
                r.TrashQueue[a] = null,
                delete r.TrashQueue[a])
            }
            ,
            r.TerminateWorker(),
            r.SocketWorker = null),
            r.SocketWorker = new Worker("/js/" + MainProperty.jsPath + "/SocketWorker.js"),
            r.SocketWorker.onmessage = function(e) {
                switch (e.data.action) {
                case "onConnect":
                    r.onConnect(t);
                    break;
                case "onNext":
                    r.onNext(e.data.data, e.data.socketInfo);
                    break;
                case "onLog":
                    BBXHR.RecordLog(e.data.text);
                    break;
                case "onCircuitLog":
                    BBXHR.CircuitLog(e.data.text, "SMRS");
                    break;
                case "onTerminate":
                    r.SocketWorker.terminate(),
                    r.SocketWorker = null;
                    break;
                case "onReconnect":
                    r.onReconnect(e.data.socketInfo.id, e.data.socketInfo);
                    break;
                case "onUrlRefresh":
                    r.Path[1] = e.data.urlSearch || r.Path[1],
                    r.LastUpdateUrlTime = e.data.lastUrlUpdateTime || r.LastUpdateUrlTime;
                    break;
                case "onLogOut":
                    LogOutCheck(e.data.data) && DataAdapter.TerminateWorker()
                }
            }
            ,
            r.NotifyWorker({
                action: "initial",
                token: n,
                source: "SMRS",
                heartBeatAction: "checkSN",
                mustReceive: ["talk", "addT", "addSR", "addQT"],
                needInflate: !1
            })
        }
    }
}
  , WRSocket = {
    Path: [],
    SocketWorker: null,
    TrashQueue: {},
    RecentSN: {},
    VerifySN: function() {},
    LastCommand: "",
    SocketConnect: function() {},
    onConnect: function() {},
    onReconnect: function() {},
    onNext: function() {},
    onAllDown: function() {},
    SendCommand: function() {},
    SocketClose: function() {},
    TerminateWorker: function() {},
    StartWorker: function() {},
    NotifyWorker: function(e) {
        null != this.SocketWorker && this.SocketWorker.postMessage(e)
    },
    EnableProcess: function(r, e, s) {
        var o = this;
        o.Path = e,
        o.SocketConnect = function() {
            3 <= o.Path.length && o.NotifyWorker({
                action: "connect",
                urlArray: o.Path[0],
                urlSearch: o.Path[1],
                keepCount: MainProperty.KeepWRRSCount,
                isSSL: !0,
                protocolData: o.Path[2]
            })
        }
        ,
        o.onConnect = function() {
            var e = {
                action: "orderR",
                date: "",
                ball: 0
            }
              , t = {
                action: "unsettle"
            };
            "mobile" != MainProperty.webDevice && window.VuePassReport || (window.VueOrderReport && (e = VueOrderReport.GetCommand()),
            WRSocket.LastCommand && (e.stick = 1,
            t.stick = 1),
            o.SendCommand(e)),
            "mobile" == MainProperty.webDevice && o.SendCommand(t),
            window.VuePassReport && VuePassReport.GetCommand() && (e = VuePassReport.GetCommand(),
            WRSocket.LastCommand && (e.stick = 1),
            o.SendCommand(e))
        }
        ,
        o.onReconnect = function(e, t) {
            var a, i = [], n = {
                action: "orderR",
                date: "",
                ball: 0
            };
            "mobile" == MainProperty.webDevice && (a = {
                action: "unsettle",
                dc: DataAdapter.DriveCount.us,
                stick: 1
            },
            i.push(JSON.stringify(a))),
            "mobile" != MainProperty.webDevice && window.VuePassReport || (window.VueOrderReport && (n = VueOrderReport.GetCommand()),
            n.dc = DataAdapter.DriveCount.wr,
            n.stick = 1,
            i.push(JSON.stringify(n))),
            window.VuePassReport && VuePassReport.GetCommand() && ((n = VuePassReport.GetCommand()).dc = DataAdapter.DriveCount.pass,
            n.stick = 1,
            i.push(JSON.stringify(n))),
            o.NotifyWorker({
                action: "socketSync",
                index: e,
                command: i
            }),
            ReceiveLog.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + r + "\r\nsource: " + s + "\r\nurl: " + t.url + "\r\n" + JSON.stringify(i), s)
        }
        ,
        o.VerifySN = function(e, t) {
            return void 0 !== e && void 0 !== t && (void 0 === o.RecentSN[e] || t > o.RecentSN[e]) && (o.RecentSN[e] = t,
            !0)
        }
        ,
        o.onNext = function(e, t) {
            switch (ReceiveLog.RecordLog("接收時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + r + "\r\nsource: " + s + "\r\nurl: " + t.url + "\r\n" + JSON.stringify(e), s),
            e.action) {
            case "showR":
                if (e.dc != DataAdapter.DriveCount.wr)
                    break;
                DataAdapter.DriveCount.wr++,
                window.ChatVue && e.order && ChatVue.ProcessShowReceipt(e.order);
                break;
            case "orderR":
                if (e.dc != DataAdapter.DriveCount.wr)
                    break;
                DataAdapter.DriveCount.wr++,
                "mobile" == MainProperty.webDevice && 0 == $("#reportBlock:visible").length || window.VueOrderReport && VueOrderReport.DrawReport(e),
                window.ReceiptVue && ReceiptVue.ProcessReceipt(e);
                break;
            case "addOR":
                o.VerifySN(e.group, e.sn) && ("mobile" == MainProperty.webDevice && 0 == $("#reportBlock:visible").length || window.VueOrderReport && VueOrderReport.AddReport(e),
                window.ReceiptVue && ReceiptVue.AddReceipt(e));
                break;
            case "updateOR":
                o.VerifySN(e.group, e.sn) && ("mobile" == MainProperty.webDevice && 0 == $("#reportBlock:visible").length || window.VueOrderReport && VueOrderReport.UpdateReport(e),
                window.ReceiptVue && ReceiptVue.UpdateReceipt(e));
                break;
            case "delOR":
                o.VerifySN(e.group, e.sn) && ("mobile" == MainProperty.webDevice && 0 == $("#reportBlock:visible").length || window.VueOrderReport && VueOrderReport.DelReport(e),
                window.ReceiptVue && ReceiptVue.DelReceipt(e));
                break;
            case "orderD":
                if (e.dc) {
                    if (e.dc != DataAdapter.DriveCount.wr)
                        break;
                    DataAdapter.DriveCount.wr++
                } else if (!e.sn || !o.VerifySN(e.group, e.sn))
                    break;
                window.VueOrderReport && VueOrderReport.DrawDateReport(e);
                break;
            case "orderP":
                if (e.dc != DataAdapter.DriveCount.pass)
                    break;
                DataAdapter.DriveCount.pass++,
                window.VuePassReport && VuePassReport.DrawPassReport(e);
                break;
            case "updateOP":
                o.VerifySN(e.group, e.sn) && window.VuePassReport && VuePassReport.UpdatePassReport(e);
                break;
            case "giftD":
                if (e.dc) {
                    if (e.dc != DataAdapter.DriveCount.wr)
                        break;
                    DataAdapter.DriveCount.wr++
                } else if (!e.sn || !o.VerifySN(e.group, e.sn))
                    break;
                window.VueOrderReport && VueOrderReport.DrawDateGift(e);
                break;
            case "giftR":
                if (e.dc != DataAdapter.DriveCount.wr)
                    break;
                DataAdapter.DriveCount.wr++,
                window.VueOrderReport && VueOrderReport.DrawReport(e);
                break;
            case "addGR":
                o.VerifySN(e.group, e.sn) && window.VueOrderReport && VueOrderReport.AddGift(e);
                break;
            case "ban":
                "mobile" == MainProperty.webDevice ? ShowAlert(Args.BackPage, langFont.Font_AccountBan, Header.BackPage) : ShowAlert(Args.BackPage, langFont.Font_AccountBan),
                DataAdapter.TerminateWorker();
                break;
            case "checkBL":
                if (o.VerifySN(e.group, e.sn)) {
                    if ("mobile" != MainProperty.webDevice && (window.VueOrderReport || window.VuePassReport))
                        break;
                    GetUserBalance()
                }
                break;
            case "unsettle":
                if (e.dc) {
                    if (e.dc != DataAdapter.DriveCount.us)
                        break;
                    DataAdapter.DriveCount.us++
                } else if (!e.sn || !o.VerifySN(e.group, e.sn))
                    break;
                window.ReceiptVue && "function" == typeof ReceiptVue.UpdateUnsettle && ReceiptVue.UpdateUnsettle(e.count),
                window.VueOrderReport && "function" == typeof VueOrderReport.UpdateUnsettle && VueOrderReport.UpdateUnsettle(e);
                break;
            case "addExchange":
                if (e.dc != DataAdapter.DriveCount.exc)
                    break;
                DataAdapter.DriveCount.exc++,
                window.ReceiptVue && "function" == typeof ReceiptVue.UpdateExchange && ReceiptVue.AddExchange(e.val),
                window.VueOrderReport && "function" == typeof VueOrderReport.UpdateExchange && VueOrderReport.AddExchange(e);
                break;
            case "updateExchange":
                o.VerifySN(e.group, e.sn) && (window.ReceiptVue && "function" == typeof ReceiptVue.UpdateExchange && ReceiptVue.UpdateExchange(e.val),
                window.VueOrderReport && "function" == typeof VueOrderReport.UpdateExchange && VueOrderReport.UpdateExchange(e))
            }
            o.NotifyWorker({
                action: "next"
            })
        }
        ,
        o.SendCommand = function(e) {
            "unsettle" == e.action ? e.dc = DataAdapter.DriveCount.us : "orderP" == e.action ? (e.dc = DataAdapter.DriveCount.pass,
            WRSocket.LastCommand = e) : "cPass" != e.action && (e.dc = DataAdapter.DriveCount.wr,
            DataAdapter.DriveCount.exc = DataAdapter.DriveCount.wr,
            WRSocket.LastCommand = e),
            o.NotifyWorker({
                action: "send",
                command: e
            }),
            ReceiveLog.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + r + "\r\nsource: " + s + "\r\n" + JSON.stringify(e), s)
        }
        ,
        o.SocketClose = function() {
            o.NotifyWorker({
                action: "close"
            })
        }
        ,
        o.TerminateWorker = function() {
            o.NotifyWorker({
                action: "terminate"
            })
        }
        ,
        o.StartWorker = function() {
            var t;
            null != o.SocketWorker && (t = Date.now() + GetRanStr(4),
            o.TrashQueue[t] = o.SocketWorker,
            o.TrashQueue[t].onmessage = function(e) {
                "onTerminate" == e.data.action && (o.TrashQueue[t].terminate(),
                o.TrashQueue[t] = null,
                delete o.TrashQueue[t])
            }
            ,
            o.TerminateWorker(),
            o.SocketWorker = null),
            o.SocketWorker = new Worker("/js/" + MainProperty.jsPath + "/SocketWorker.js"),
            o.SocketWorker.onmessage = function(e) {
                switch (e.data.action) {
                case "onConnect":
                    o.onConnect();
                    break;
                case "onNext":
                    o.onNext(e.data.data, e.data.socketInfo);
                    break;
                case "onLog":
                    BBXHR.RecordLog(e.data.text);
                    break;
                case "onCircuitLog":
                    BBXHR.CircuitLog(e.data.text, "WRRS");
                    break;
                case "onTerminate":
                    o.SocketWorker.terminate(),
                    o.SocketWorker = null;
                    break;
                case "onReconnect":
                    o.onReconnect(e.data.socketInfo.id, e.data.socketInfo)
                }
            }
            ,
            o.NotifyWorker({
                action: "initial",
                token: r,
                source: s,
                heartBeatAction: "checkSN",
                mustReceive: ["orderR", "orderD", "orderP", "showR", "giftD", "giftR", "unsettle"],
                needInflate: !0
            })
        }
        ,
        o.StartWorker()
    }
}
  , WebGLPlayerWorker = {
    SocketWorker: null,
    Enable: !1,
    CallBackPool: [],
    TerminateWorker: function() {},
    GetFastestUrl: function() {},
    NotifyWorker: function(e) {
        null != this.SocketWorker && this.SocketWorker.postMessage(e)
    },
    EnableProcess: function() {
        var n = this;
        n.TerminateWorker = function() {
            n.NotifyWorker({
                action: "terminate"
            })
        }
        ,
        n.GetFastestUrl = function(e, i, t) {
            var a = Date.now();
            n.CallBackPool[a] = function(e, t, a) {
                delete n.CallBackPool[e],
                i(t, a)
            }
            ,
            t ? n.NotifyWorker({
                action: "speedTest",
                urlArray: e,
                urlSearch: "",
                keepCount: 1,
                isSSL: !0,
                protocolData: "sldp.softvelum.com",
                callBackId: a
            }) : n.NotifyWorker({
                action: "speedTest",
                urlArray: e,
                urlSearch: "",
                keepCount: 1,
                isSSL: !0,
                callBackId: a
            })
        }
        ,
        n.StartWorker = function() {
            null != n.SocketWorker && n.TerminateWorker(),
            n.SocketWorker = new Worker("/js/" + MainProperty.jsPath + "/WebGLPlayerWorker.js"),
            n.SocketWorker.onmessage = function(e) {
                switch (e.data.action,
                e.data.action) {
                case "onTerminate":
                    n.SocketWorker.terminate(),
                    n.SocketWorker = null;
                    break;
                case "speedTest":
                    var t = e.data.callBackId;
                    n.CallBackPool[t] && n.CallBackPool[t](t, e.data.target, e.data.left)
                }
            }
        }
        ,
        n.StartWorker()
    }
}
  , GiftWorker = {
    Worker: null,
    Enable: !1,
    onNext: function() {},
    SendCommand: function() {},
    TerminateWorker: function() {},
    NotifyWorker: function(e) {
        null != this.Worker && this.Worker.postMessage(e)
    },
    EnableProcess: function() {
        var t = this;
        t.onNext = function(e) {
            t.Enable ? "next" === e.action && ChatVue.$bus.$emit("GiftShow") : t.SendCommand({
                action: "stop"
            })
        }
        ,
        t.SendCommand = function(e) {
            t.NotifyWorker(e)
        }
        ,
        t.TerminateWorker = function() {
            null != t.Worker && (t.Worker.terminate(),
            t.Worker = null)
        }
        ,
        t.StartWorker = function() {
            null != t.Worker && t.TerminateWorker(),
            t.Worker = new Worker("/js/" + MainProperty.jsPath + "/GiftWorker.js"),
            t.Worker.onmessage = function(e) {
                t.onNext(e.data)
            }
            ,
            t.NotifyWorker({
                action: "start"
            })
        }
        ,
        t.StartWorker()
    }
};
this.createjs = this.createjs || {},
createjs.extend = function(e, t) {
    "use strict";
    function a() {
        this.constructor = e
    }
    return a.prototype = t.prototype,
    e.prototype = new a
}
,
this.createjs = this.createjs || {},
createjs.promote = function(e, t) {
    "use strict";
    var a = e.prototype
      , i = Object.getPrototypeOf && Object.getPrototypeOf(a) || a.__proto__;
    if (i)
        for (var n in a[(t += "_") + "constructor"] = i.constructor,
        i)
            a.hasOwnProperty(n) && "function" == typeof i[n] && (a[t + n] = i[n]);
    return e
}
,
this.createjs = this.createjs || {},
createjs.indexOf = function(e, t) {
    "use strict";
    for (var a = 0, i = e.length; a < i; a++)
        if (t === e[a])
            return a;
    return -1
}
,
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        throw "UID cannot be instantiated"
    }
    e._nextID = 0,
    e.get = function() {
        return e._nextID++
    }
    ,
    createjs.UID = e
}(),
this.createjs = this.createjs || {},
createjs.deprecate = function(e, t) {
    "use strict";
    return function() {
        return console && console.warn,
        e && e.apply(this, arguments)
    }
}
,
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a) {
        this.type = e,
        this.target = null,
        this.currentTarget = null,
        this.eventPhase = 0,
        this.bubbles = !!t,
        this.cancelable = !!a,
        this.timeStamp = (new Date).getTime(),
        this.defaultPrevented = !1,
        this.propagationStopped = !1,
        this.immediatePropagationStopped = !1,
        this.removed = !1
    }
    var t = e.prototype;
    t.preventDefault = function() {
        this.defaultPrevented = this.cancelable && !0
    }
    ,
    t.stopPropagation = function() {
        this.propagationStopped = !0
    }
    ,
    t.stopImmediatePropagation = function() {
        this.immediatePropagationStopped = this.propagationStopped = !0
    }
    ,
    t.remove = function() {
        this.removed = !0
    }
    ,
    t.clone = function() {
        return new e(this.type,this.bubbles,this.cancelable)
    }
    ,
    t.set = function(e) {
        for (var t in e)
            this[t] = e[t];
        return this
    }
    ,
    t.toString = function() {
        return "[Event (type=" + this.type + ")]"
    }
    ,
    createjs.Event = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        this._listeners = null,
        this._captureListeners = null
    }
    var t = e.prototype;
    e.initialize = function(e) {
        e.addEventListener = t.addEventListener,
        e.on = t.on,
        e.removeEventListener = e.off = t.removeEventListener,
        e.removeAllEventListeners = t.removeAllEventListeners,
        e.hasEventListener = t.hasEventListener,
        e.dispatchEvent = t.dispatchEvent,
        e._dispatchEvent = t._dispatchEvent,
        e.willTrigger = t.willTrigger
    }
    ,
    t.addEventListener = function(e, t, a) {
        var i = a ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {}
          , n = i[e];
        return n && this.removeEventListener(e, t, a),
        (n = i[e]) ? n.push(t) : i[e] = [t],
        t
    }
    ,
    t.on = function(e, t, a, i, n, r) {
        return t.handleEvent && (a = a || t,
        t = t.handleEvent),
        a = a || this,
        this.addEventListener(e, function(e) {
            t.call(a, e, n),
            i && e.remove()
        }, r)
    }
    ,
    t.removeEventListener = function(e, t, a) {
        var i = a ? this._captureListeners : this._listeners;
        if (i) {
            var n = i[e];
            if (n)
                for (var r = 0, s = n.length; r < s; r++)
                    if (n[r] == t) {
                        1 == s ? delete i[e] : n.splice(r, 1);
                        break
                    }
        }
    }
    ,
    t.off = t.removeEventListener,
    t.removeAllEventListeners = function(e) {
        e ? (this._listeners && delete this._listeners[e],
        this._captureListeners && delete this._captureListeners[e]) : this._listeners = this._captureListeners = null
    }
    ,
    t.dispatchEvent = function(e, t, a) {
        if ("string" == typeof e) {
            var i = this._listeners;
            if (!(t || i && i[e]))
                return !0;
            e = new createjs.Event(e,t,a)
        } else
            e.target && e.clone && (e = e.clone());
        try {
            e.target = this
        } catch (e) {}
        if (e.bubbles && this.parent) {
            for (var n = this, r = [n]; n.parent; )
                r.push(n = n.parent);
            for (var s = r.length, o = s - 1; 0 <= o && !e.propagationStopped; o--)
                r[o]._dispatchEvent(e, 1 + (0 == o));
            for (o = 1; o < s && !e.propagationStopped; o++)
                r[o]._dispatchEvent(e, 3)
        } else
            this._dispatchEvent(e, 2);
        return !e.defaultPrevented
    }
    ,
    t.hasEventListener = function(e) {
        var t = this._listeners
          , a = this._captureListeners;
        return !!(t && t[e] || a && a[e])
    }
    ,
    t.willTrigger = function(e) {
        for (var t = this; t; ) {
            if (t.hasEventListener(e))
                return !0;
            t = t.parent
        }
        return !1
    }
    ,
    t.toString = function() {
        return "[EventDispatcher]"
    }
    ,
    t._dispatchEvent = function(e, t) {
        var a, i, n = t <= 2 ? this._captureListeners : this._listeners;
        if (e && n && (i = n[e.type]) && (a = i.length)) {
            try {
                e.currentTarget = this
            } catch (e) {}
            try {
                e.eventPhase = 0 | t
            } catch (e) {}
            e.removed = !1,
            i = i.slice();
            for (var r = 0; r < a && !e.immediatePropagationStopped; r++) {
                var s = i[r];
                s.handleEvent ? s.handleEvent(e) : s(e),
                e.removed && (this.off(e.type, s, 1 == t),
                e.removed = !1)
            }
        }
        2 === t && this._dispatchEvent(e, 2.1)
    }
    ,
    createjs.EventDispatcher = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function r() {
        throw "Ticker cannot be instantiated."
    }
    r.RAF_SYNCHED = "synched",
    r.RAF = "raf",
    r.TIMEOUT = "timeout",
    r.timingMode = null,
    r.maxDelta = 0,
    r.paused = !1,
    r.removeEventListener = null,
    r.removeAllEventListeners = null,
    r.dispatchEvent = null,
    r.hasEventListener = null,
    r._listeners = null,
    createjs.EventDispatcher.initialize(r),
    r._addEventListener = r.addEventListener,
    r.addEventListener = function() {
        return r._inited || r.init(),
        r._addEventListener.apply(r, arguments)
    }
    ,
    r._inited = !1,
    r._startTime = 0,
    r._pausedTime = 0,
    r._ticks = 0,
    r._pausedTicks = 0,
    r._interval = 50,
    r._lastTime = 0,
    r._times = null,
    r._tickTimes = null,
    r._timerId = null,
    r._raf = !0,
    r._setInterval = function(e) {
        r._interval = e,
        r._inited && r._setupTick()
    }
    ,
    r.setInterval = createjs.deprecate(r._setInterval, "Ticker.setInterval"),
    r._getInterval = function() {
        return r._interval
    }
    ,
    r.getInterval = createjs.deprecate(r._getInterval, "Ticker.getInterval"),
    r._setFPS = function(e) {
        r._setInterval(1e3 / e)
    }
    ,
    r.setFPS = createjs.deprecate(r._setFPS, "Ticker.setFPS"),
    r._getFPS = function() {
        return 1e3 / r._interval
    }
    ,
    r.getFPS = createjs.deprecate(r._getFPS, "Ticker.getFPS");
    try {
        Object.defineProperties(r, {
            interval: {
                get: r._getInterval,
                set: r._setInterval
            },
            framerate: {
                get: r._getFPS,
                set: r._setFPS
            }
        })
    } catch (e) {}
    r.init = function() {
        r._inited || (r._inited = !0,
        r._times = [],
        r._tickTimes = [],
        r._startTime = r._getTime(),
        r._times.push(r._lastTime = 0),
        r.interval = r._interval)
    }
    ,
    r.reset = function() {
        var e;
        r._raf ? (e = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame) && e(r._timerId) : clearTimeout(r._timerId),
        r.removeAllEventListeners("tick"),
        r._timerId = r._times = r._tickTimes = null,
        r._startTime = r._lastTime = r._ticks = r._pausedTime = 0,
        r._inited = !1
    }
    ,
    r.getMeasuredTickTime = function(e) {
        var t = 0
          , a = r._tickTimes;
        if (!a || a.length < 1)
            return -1;
        e = Math.min(a.length, e || 0 | r._getFPS());
        for (var i = 0; i < e; i++)
            t += a[i];
        return t / e
    }
    ,
    r.getMeasuredFPS = function(e) {
        var t = r._times;
        return !t || t.length < 2 ? -1 : (e = Math.min(t.length - 1, e || 0 | r._getFPS()),
        1e3 / ((t[0] - t[e]) / e))
    }
    ,
    r.getTime = function(e) {
        return r._startTime ? r._getTime() - (e ? r._pausedTime : 0) : -1
    }
    ,
    r.getEventTime = function(e) {
        return r._startTime ? (r._lastTime || r._startTime) - (e ? r._pausedTime : 0) : -1
    }
    ,
    r.getTicks = function(e) {
        return r._ticks - (e ? r._pausedTicks : 0)
    }
    ,
    r._handleSynch = function() {
        r._timerId = null,
        r._setupTick(),
        r._getTime() - r._lastTime >= .97 * (r._interval - 1) && r._tick()
    }
    ,
    r._handleRAF = function() {
        r._timerId = null,
        r._setupTick(),
        r._tick()
    }
    ,
    r._handleTimeout = function() {
        r._timerId = null,
        r._setupTick(),
        r._tick()
    }
    ,
    r._setupTick = function() {
        if (null == r._timerId) {
            var e = r.timingMode;
            if (e == r.RAF_SYNCHED || e == r.RAF) {
                var t = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
                if (t)
                    return r._timerId = t(e == r.RAF ? r._handleRAF : r._handleSynch),
                    void (r._raf = !0)
            }
            r._raf = !1,
            r._timerId = setTimeout(r._handleTimeout, r._interval)
        }
    }
    ,
    r._tick = function() {
        var e, t, a = r.paused, i = r._getTime(), n = i - r._lastTime;
        for (r._lastTime = i,
        r._ticks++,
        a && (r._pausedTicks++,
        r._pausedTime += n),
        r.hasEventListener("tick") && (e = new createjs.Event("tick"),
        t = r.maxDelta,
        e.delta = t && t < n ? t : n,
        e.paused = a,
        e.time = i,
        e.runTime = i - r._pausedTime,
        r.dispatchEvent(e)),
        r._tickTimes.unshift(r._getTime() - i); 100 < r._tickTimes.length; )
            r._tickTimes.pop();
        for (r._times.unshift(i); 100 < r._times.length; )
            r._times.pop()
    }
    ;
    var e = window
      , t = e.performance.now || e.performance.mozNow || e.performance.msNow || e.performance.oNow || e.performance.webkitNow;
    r._getTime = function() {
        return (t && t.call(e.performance) || (new Date).getTime()) - r._startTime
    }
    ,
    createjs.Ticker = r
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.readyState = e.readyState,
        this._video = e,
        this._canvas = null,
        this._lastTime = -1,
        this.readyState < 2 && e.addEventListener("canplaythrough", this._videoReady.bind(this))
    }
    var t = e.prototype;
    t.getImage = function() {
        if (!(this.readyState < 2)) {
            var e, t = this._canvas, a = this._video;
            return t || ((t = this._canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")).width = a.videoWidth,
            t.height = a.videoHeight),
            2 <= a.readyState && a.currentTime !== this._lastTime && ((e = t.getContext("2d")).clearRect(0, 0, t.width, t.height),
            e.drawImage(a, 0, 0, t.width, t.height),
            this._lastTime = a.currentTime),
            t
        }
    }
    ,
    t._videoReady = function() {
        this.readyState = 2
    }
    ,
    createjs.VideoBuffer = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a, i, n, r, s, o, l, c, d) {
        this.Event_constructor(e, t, a),
        this.stageX = i,
        this.stageY = n,
        this.rawX = null == l ? i : l,
        this.rawY = null == c ? n : c,
        this.nativeEvent = r,
        this.pointerID = s,
        this.primary = !!o,
        this.relatedTarget = d
    }
    var t = createjs.extend(e, createjs.Event);
    t._get_localX = function() {
        return this.currentTarget.globalToLocal(this.rawX, this.rawY).x
    }
    ,
    t._get_localY = function() {
        return this.currentTarget.globalToLocal(this.rawX, this.rawY).y
    }
    ,
    t._get_isTouch = function() {
        return -1 !== this.pointerID
    }
    ;
    try {
        Object.defineProperties(t, {
            localX: {
                get: t._get_localX
            },
            localY: {
                get: t._get_localY
            },
            isTouch: {
                get: t._get_isTouch
            }
        })
    } catch (e) {}
    t.clone = function() {
        return new e(this.type,this.bubbles,this.cancelable,this.stageX,this.stageY,this.nativeEvent,this.pointerID,this.primary,this.rawX,this.rawY)
    }
    ,
    t.toString = function() {
        return "[MouseEvent (type=" + this.type + " stageX=" + this.stageX + " stageY=" + this.stageY + ")]"
    }
    ,
    createjs.MouseEvent = createjs.promote(e, "Event")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function u(e, t, a, i, n, r) {
        this.setValues(e, t, a, i, n, r)
    }
    var e = u.prototype;
    u.DEG_TO_RAD = Math.PI / 180,
    u.identity = null,
    e.setValues = function(e, t, a, i, n, r) {
        return this.a = null == e ? 1 : e,
        this.b = t || 0,
        this.c = a || 0,
        this.d = null == i ? 1 : i,
        this.tx = n || 0,
        this.ty = r || 0,
        this
    }
    ,
    e.append = function(e, t, a, i, n, r) {
        var s = this.a
          , o = this.b
          , l = this.c
          , c = this.d;
        return 1 == e && 0 == t && 0 == a && 1 == i || (this.a = s * e + l * t,
        this.b = o * e + c * t,
        this.c = s * a + l * i,
        this.d = o * a + c * i),
        this.tx = s * n + l * r + this.tx,
        this.ty = o * n + c * r + this.ty,
        this
    }
    ,
    e.prepend = function(e, t, a, i, n, r) {
        var s = this.a
          , o = this.c
          , l = this.tx;
        return this.a = e * s + a * this.b,
        this.b = t * s + i * this.b,
        this.c = e * o + a * this.d,
        this.d = t * o + i * this.d,
        this.tx = e * l + a * this.ty + n,
        this.ty = t * l + i * this.ty + r,
        this
    }
    ,
    e.appendMatrix = function(e) {
        return this.append(e.a, e.b, e.c, e.d, e.tx, e.ty)
    }
    ,
    e.prependMatrix = function(e) {
        return this.prepend(e.a, e.b, e.c, e.d, e.tx, e.ty)
    }
    ,
    e.appendTransform = function(e, t, a, i, n, r, s, o, l) {
        var c, d = n % 360 ? (d = n * u.DEG_TO_RAD,
        c = Math.cos(d),
        Math.sin(d)) : (c = 1,
        0);
        return r || s ? (r *= u.DEG_TO_RAD,
        s *= u.DEG_TO_RAD,
        this.append(Math.cos(s), Math.sin(s), -Math.sin(r), Math.cos(r), e, t),
        this.append(c * a, d * a, -d * i, c * i, 0, 0)) : this.append(c * a, d * a, -d * i, c * i, e, t),
        (o || l) && (this.tx -= o * this.a + l * this.c,
        this.ty -= o * this.b + l * this.d),
        this
    }
    ,
    e.prependTransform = function(e, t, a, i, n, r, s, o, l) {
        var c, d = n % 360 ? (d = n * u.DEG_TO_RAD,
        c = Math.cos(d),
        Math.sin(d)) : (c = 1,
        0);
        return (o || l) && (this.tx -= o,
        this.ty -= l),
        r || s ? (r *= u.DEG_TO_RAD,
        s *= u.DEG_TO_RAD,
        this.prepend(c * a, d * a, -d * i, c * i, 0, 0),
        this.prepend(Math.cos(s), Math.sin(s), -Math.sin(r), Math.cos(r), e, t)) : this.prepend(c * a, d * a, -d * i, c * i, e, t),
        this
    }
    ,
    e.rotate = function(e) {
        e *= u.DEG_TO_RAD;
        var t = Math.cos(e)
          , a = Math.sin(e)
          , i = this.a
          , e = this.b;
        return this.a = i * t + this.c * a,
        this.b = e * t + this.d * a,
        this.c = -i * a + this.c * t,
        this.d = -e * a + this.d * t,
        this
    }
    ,
    e.skew = function(e, t) {
        return e *= u.DEG_TO_RAD,
        t *= u.DEG_TO_RAD,
        this.append(Math.cos(t), Math.sin(t), -Math.sin(e), Math.cos(e), 0, 0),
        this
    }
    ,
    e.scale = function(e, t) {
        return this.a *= e,
        this.b *= e,
        this.c *= t,
        this.d *= t,
        this
    }
    ,
    e.translate = function(e, t) {
        return this.tx += this.a * e + this.c * t,
        this.ty += this.b * e + this.d * t,
        this
    }
    ,
    e.identity = function() {
        return this.a = this.d = 1,
        this.b = this.c = this.tx = this.ty = 0,
        this
    }
    ,
    e.invert = function() {
        var e = this.a
          , t = this.b
          , a = this.c
          , i = this.d
          , n = this.tx
          , r = e * i - t * a;
        return this.a = i / r,
        this.b = -t / r,
        this.c = -a / r,
        this.d = e / r,
        this.tx = (a * this.ty - i * n) / r,
        this.ty = -(e * this.ty - t * n) / r,
        this
    }
    ,
    e.isIdentity = function() {
        return 0 === this.tx && 0 === this.ty && 1 === this.a && 0 === this.b && 0 === this.c && 1 === this.d
    }
    ,
    e.equals = function(e) {
        return this.tx === e.tx && this.ty === e.ty && this.a === e.a && this.b === e.b && this.c === e.c && this.d === e.d
    }
    ,
    e.transformPoint = function(e, t, a) {
        return (a = a || {}).x = e * this.a + t * this.c + this.tx,
        a.y = e * this.b + t * this.d + this.ty,
        a
    }
    ,
    e.decompose = function(e) {
        null == e && (e = {}),
        e.x = this.tx,
        e.y = this.ty,
        e.scaleX = Math.sqrt(this.a * this.a + this.b * this.b),
        e.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);
        var t = Math.atan2(-this.c, this.d)
          , a = Math.atan2(this.b, this.a);
        return Math.abs(1 - t / a) < 1e-5 ? (e.rotation = a / u.DEG_TO_RAD,
        this.a < 0 && 0 <= this.d && (e.rotation += e.rotation <= 0 ? 180 : -180),
        e.skewX = e.skewY = 0) : (e.skewX = t / u.DEG_TO_RAD,
        e.skewY = a / u.DEG_TO_RAD),
        e
    }
    ,
    e.copy = function(e) {
        return this.setValues(e.a, e.b, e.c, e.d, e.tx, e.ty)
    }
    ,
    e.clone = function() {
        return new u(this.a,this.b,this.c,this.d,this.tx,this.ty)
    }
    ,
    e.toString = function() {
        return "[Matrix2D (a=" + this.a + " b=" + this.b + " c=" + this.c + " d=" + this.d + " tx=" + this.tx + " ty=" + this.ty + ")]"
    }
    ,
    u.identity = new u,
    createjs.Matrix2D = u
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a, i, n) {
        this.setValues(e, t, a, i, n)
    }
    var t = e.prototype;
    t.setValues = function(e, t, a, i, n) {
        return this.visible = null == e || !!e,
        this.alpha = null == t ? 1 : t,
        this.shadow = a,
        this.compositeOperation = i,
        this.matrix = n || this.matrix && this.matrix.identity() || new createjs.Matrix2D,
        this
    }
    ,
    t.append = function(e, t, a, i, n) {
        return this.alpha *= t,
        this.shadow = a || this.shadow,
        this.compositeOperation = i || this.compositeOperation,
        this.visible = this.visible && e,
        n && this.matrix.appendMatrix(n),
        this
    }
    ,
    t.prepend = function(e, t, a, i, n) {
        return this.alpha *= t,
        this.shadow = this.shadow || a,
        this.compositeOperation = this.compositeOperation || i,
        this.visible = this.visible && e,
        n && this.matrix.prependMatrix(n),
        this
    }
    ,
    t.identity = function() {
        return this.visible = !0,
        this.alpha = 1,
        this.shadow = this.compositeOperation = null,
        this.matrix.identity(),
        this
    }
    ,
    t.clone = function() {
        return new e(this.alpha,this.shadow,this.compositeOperation,this.visible,this.matrix.clone())
    }
    ,
    createjs.DisplayProps = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.setValues(e, t)
    }
    var t = e.prototype;
    t.setValues = function(e, t) {
        return this.x = e || 0,
        this.y = t || 0,
        this
    }
    ,
    t.copy = function(e) {
        return this.x = e.x,
        this.y = e.y,
        this
    }
    ,
    t.clone = function() {
        return new e(this.x,this.y)
    }
    ,
    t.toString = function() {
        return "[Point (x=" + this.x + " y=" + this.y + ")]"
    }
    ,
    createjs.Point = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function n(e, t, a, i) {
        this.setValues(e, t, a, i)
    }
    var e = n.prototype;
    e.setValues = function(e, t, a, i) {
        return this.x = e || 0,
        this.y = t || 0,
        this.width = a || 0,
        this.height = i || 0,
        this
    }
    ,
    e.extend = function(e, t, a, i) {
        return i = i || 0,
        e + (a = a || 0) > this.x + this.width && (this.width = e + a - this.x),
        t + i > this.y + this.height && (this.height = t + i - this.y),
        e < this.x && (this.width += this.x - e,
        this.x = e),
        t < this.y && (this.height += this.y - t,
        this.y = t),
        this
    }
    ,
    e.pad = function(e, t, a, i) {
        return this.x -= t,
        this.y -= e,
        this.width += t + i,
        this.height += e + a,
        this
    }
    ,
    e.copy = function(e) {
        return this.setValues(e.x, e.y, e.width, e.height)
    }
    ,
    e.contains = function(e, t, a, i) {
        return a = a || 0,
        i = i || 0,
        e >= this.x && e + a <= this.x + this.width && t >= this.y && t + i <= this.y + this.height
    }
    ,
    e.union = function(e) {
        return this.clone().extend(e.x, e.y, e.width, e.height)
    }
    ,
    e.intersection = function(e) {
        var t = e.x
          , a = e.y
          , i = t + e.width
          , e = a + e.height;
        return this.x > t && (t = this.x),
        this.y > a && (a = this.y),
        this.x + this.width < i && (i = this.x + this.width),
        this.y + this.height < e && (e = this.y + this.height),
        i <= t || e <= a ? null : new n(t,a,i - t,e - a)
    }
    ,
    e.intersects = function(e) {
        return e.x <= this.x + this.width && this.x <= e.x + e.width && e.y <= this.y + this.height && this.y <= e.y + e.height
    }
    ,
    e.isEmpty = function() {
        return this.width <= 0 || this.height <= 0
    }
    ,
    e.clone = function() {
        return new n(this.x,this.y,this.width,this.height)
    }
    ,
    e.toString = function() {
        return "[Rectangle (x=" + this.x + " y=" + this.y + " width=" + this.width + " height=" + this.height + ")]"
    }
    ,
    createjs.Rectangle = n
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a, i, n, r, s) {
        e.addEventListener && (this.target = e,
        this.overLabel = null == a ? "over" : a,
        this.outLabel = null == t ? "out" : t,
        this.downLabel = null == i ? "down" : i,
        this.play = n,
        this._isPressed = !1,
        this._isOver = !1,
        this._enabled = !1,
        e.mouseChildren = !1,
        this.enabled = !0,
        this.handleEvent({}),
        r && (s && (r.actionsEnabled = !1,
        r.gotoAndStop && r.gotoAndStop(s)),
        e.hitArea = r))
    }
    var t = e.prototype;
    t._setEnabled = function(e) {
        var t;
        e != this._enabled && (t = this.target,
        (this._enabled = e) ? (t.cursor = "pointer",
        t.addEventListener("rollover", this),
        t.addEventListener("rollout", this),
        t.addEventListener("mousedown", this),
        t.addEventListener("pressup", this),
        t._reset && (t.__reset = t._reset,
        t._reset = this._reset)) : (t.cursor = null,
        t.removeEventListener("rollover", this),
        t.removeEventListener("rollout", this),
        t.removeEventListener("mousedown", this),
        t.removeEventListener("pressup", this),
        t.__reset && (t._reset = t.__reset,
        delete t.__reset)))
    }
    ,
    t.setEnabled = createjs.deprecate(t._setEnabled, "ButtonHelper.setEnabled"),
    t._getEnabled = function() {
        return this._enabled
    }
    ,
    t.getEnabled = createjs.deprecate(t._getEnabled, "ButtonHelper.getEnabled");
    try {
        Object.defineProperties(t, {
            enabled: {
                get: t._getEnabled,
                set: t._setEnabled
            }
        })
    } catch (e) {}
    t.toString = function() {
        return "[ButtonHelper]"
    }
    ,
    t.handleEvent = function(e) {
        var t = this.target
          , e = e.type
          , e = "mousedown" == e ? (this._isPressed = !0,
        this.downLabel) : "pressup" == e ? (this._isPressed = !1,
        this._isOver ? this.overLabel : this.outLabel) : "rollover" == e ? (this._isOver = !0,
        this._isPressed ? this.downLabel : this.overLabel) : (this._isOver = !1,
        this._isPressed ? this.overLabel : this.outLabel);
        this.play ? t.gotoAndPlay && t.gotoAndPlay(e) : t.gotoAndStop && t.gotoAndStop(e)
    }
    ,
    t._reset = function() {
        var e = this.paused;
        this.__reset(),
        this.paused = e
    }
    ,
    createjs.ButtonHelper = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a, i) {
        this.color = e || "black",
        this.offsetX = t || 0,
        this.offsetY = a || 0,
        this.blur = i || 0
    }
    var t = e.prototype;
    e.identity = new e("transparent",0,0,0),
    t.toString = function() {
        return "[Shadow]"
    }
    ,
    t.clone = function() {
        return new e(this.color,this.offsetX,this.offsetY,this.blur)
    }
    ,
    createjs.Shadow = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.EventDispatcher_constructor(),
        this.complete = !0,
        this.framerate = 0,
        this._animations = null,
        this._frames = null,
        this._images = null,
        this._data = null,
        this._loadCount = 0,
        this._frameHeight = 0,
        this._frameWidth = 0,
        this._numFrames = 0,
        this._regX = 0,
        this._regY = 0,
        this._spacing = 0,
        this._margin = 0,
        this._parseData(e)
    }
    var t = createjs.extend(e, createjs.EventDispatcher);
    t._getAnimations = function() {
        return this._animations.slice()
    }
    ,
    t.getAnimations = createjs.deprecate(t._getAnimations, "SpriteSheet.getAnimations");
    try {
        Object.defineProperties(t, {
            animations: {
                get: t._getAnimations
            }
        })
    } catch (e) {}
    t.getNumFrames = function(e) {
        if (null == e)
            return this._frames ? this._frames.length : this._numFrames || 0;
        e = this._data[e];
        return null == e ? 0 : e.frames.length
    }
    ,
    t.getAnimation = function(e) {
        return this._data[e]
    }
    ,
    t.getFrame = function(e) {
        var t;
        return this._frames && (t = this._frames[e]) ? t : null
    }
    ,
    t.getFrameBounds = function(e, t) {
        e = this.getFrame(e);
        return e ? (t || new createjs.Rectangle).setValues(-e.regX, -e.regY, e.rect.width, e.rect.height) : null
    }
    ,
    t.toString = function() {
        return "[SpriteSheet]"
    }
    ,
    t.clone = function() {
        throw "SpriteSheet cannot be cloned."
    }
    ,
    t._parseData = function(e) {
        var t, a, i, n;
        if (null != e) {
            if (this.framerate = e.framerate || 0,
            e.images && 0 < (a = e.images.length))
                for (u = this._images = [],
                t = 0; t < a; t++) {
                    var r, s = e.images[t];
                    "string" == typeof s && (r = s,
                    (s = document.createElement("img")).src = r),
                    u.push(s),
                    s.getContext || s.naturalWidth || (this._loadCount++,
                    this.complete = !1,
                    function(e, t) {
                        s.onload = function() {
                            e._handleImageLoad(t)
                        }
                    }(this, r),
                    function(e, t) {
                        s.onerror = function() {
                            e._handleImageError(t)
                        }
                    }(this, r))
                }
            if (null != e.frames)
                if (Array.isArray(e.frames))
                    for (this._frames = [],
                    u = e.frames,
                    t = 0,
                    a = u.length; t < a; t++) {
                        var o = u[t];
                        this._frames.push({
                            image: this._images[o[4] || 0],
                            rect: new createjs.Rectangle(o[0],o[1],o[2],o[3]),
                            regX: o[5] || 0,
                            regY: o[6] || 0
                        })
                    }
                else
                    i = e.frames,
                    this._frameWidth = i.width,
                    this._frameHeight = i.height,
                    this._regX = i.regX || 0,
                    this._regY = i.regY || 0,
                    this._spacing = i.spacing || 0,
                    this._margin = i.margin || 0,
                    this._numFrames = i.count,
                    0 == this._loadCount && this._calculateFrames();
            if (this._animations = [],
            null != (i = e.animations))
                for (n in this._data = {},
                i) {
                    var l = {
                        name: n
                    }
                      , c = i[n];
                    if ("number" == typeof c)
                        u = l.frames = [c];
                    else if (Array.isArray(c))
                        if (1 == c.length)
                            l.frames = [c[0]];
                        else
                            for (l.speed = c[3],
                            l.next = c[2],
                            u = l.frames = [],
                            t = c[0]; t <= c[1]; t++)
                                u.push(t);
                    else {
                        l.speed = c.speed,
                        l.next = c.next;
                        var d = c.frames
                          , u = l.frames = "number" == typeof d ? [d] : d.slice(0)
                    }
                    !0 !== l.next && void 0 !== l.next || (l.next = n),
                    (!1 === l.next || u.length < 2 && l.next == n) && (l.next = null),
                    l.speed || (l.speed = 1),
                    this._animations.push(n),
                    this._data[n] = l
                }
        }
    }
    ,
    t._handleImageLoad = function(e) {
        0 == --this._loadCount && (this._calculateFrames(),
        this.complete = !0,
        this.dispatchEvent("complete"))
    }
    ,
    t._handleImageError = function(e) {
        var t = new createjs.Event("error");
        t.src = e,
        this.dispatchEvent(t),
        0 == --this._loadCount && this.dispatchEvent("complete")
    }
    ,
    t._calculateFrames = function() {
        if (!this._frames && 0 != this._frameWidth) {
            this._frames = [];
            var e = this._numFrames || 1e5
              , t = 0
              , a = this._frameWidth
              , i = this._frameHeight
              , n = this._spacing
              , r = this._margin;
            e: for (var s = 0, o = this._images; s < o.length; s++)
                for (var l = o[s], c = l.width || l.naturalWidth, d = l.height || l.naturalHeight, u = r; u <= d - r - i; ) {
                    for (var h = r; h <= c - r - a; ) {
                        if (e <= t)
                            break e;
                        t++,
                        this._frames.push({
                            image: l,
                            rect: new createjs.Rectangle(h,u,a,i),
                            regX: this._regX,
                            regY: this._regY
                        }),
                        h += a + n
                    }
                    u += i + n
                }
            this._numFrames = t
        }
    }
    ,
    createjs.SpriteSheet = createjs.promote(e, "EventDispatcher")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function _() {
        this.command = null,
        this._stroke = null,
        this._strokeStyle = null,
        this._oldStrokeStyle = null,
        this._strokeDash = null,
        this._oldStrokeDash = null,
        this._strokeIgnoreScale = !1,
        this._fill = null,
        this._instructions = [],
        this._commitIndex = 0,
        this._activeInstructions = [],
        this._dirty = !1,
        this._storeIndex = 0,
        this.clear()
    }
    var e = _.prototype
      , l = _;
    _.getRGB = function(e, t, a, i) {
        return null != e && null == a && (i = t,
        a = 255 & e,
        t = e >> 8 & 255,
        e = e >> 16 & 255),
        null == i ? "rgb(" + e + "," + t + "," + a + ")" : "rgba(" + e + "," + t + "," + a + "," + i + ")"
    }
    ,
    _.getHSL = function(e, t, a, i) {
        return null == i ? "hsl(" + e % 360 + "," + t + "%," + a + "%)" : "hsla(" + e % 360 + "," + t + "%," + a + "%," + i + ")"
    }
    ,
    _.BASE_64 = {
        A: 0,
        B: 1,
        C: 2,
        D: 3,
        E: 4,
        F: 5,
        G: 6,
        H: 7,
        I: 8,
        J: 9,
        K: 10,
        L: 11,
        M: 12,
        N: 13,
        O: 14,
        P: 15,
        Q: 16,
        R: 17,
        S: 18,
        T: 19,
        U: 20,
        V: 21,
        W: 22,
        X: 23,
        Y: 24,
        Z: 25,
        a: 26,
        b: 27,
        c: 28,
        d: 29,
        e: 30,
        f: 31,
        g: 32,
        h: 33,
        i: 34,
        j: 35,
        k: 36,
        l: 37,
        m: 38,
        n: 39,
        o: 40,
        p: 41,
        q: 42,
        r: 43,
        s: 44,
        t: 45,
        u: 46,
        v: 47,
        w: 48,
        x: 49,
        y: 50,
        z: 51,
        0: 52,
        1: 53,
        2: 54,
        3: 55,
        4: 56,
        5: 57,
        6: 58,
        7: 59,
        8: 60,
        9: 61,
        "+": 62,
        "/": 63
    },
    _.STROKE_CAPS_MAP = ["butt", "round", "square"],
    _.STROKE_JOINTS_MAP = ["miter", "round", "bevel"];
    var t = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    t.getContext && (_._ctx = t.getContext("2d"),
    t.width = t.height = 1),
    e._getInstructions = function() {
        return this._updateInstructions(),
        this._instructions
    }
    ,
    e.getInstructions = createjs.deprecate(e._getInstructions, "Graphics.getInstructions");
    try {
        Object.defineProperties(e, {
            instructions: {
                get: e._getInstructions
            }
        })
    } catch (e) {}
    e.isEmpty = function() {
        return !(this._instructions.length || this._activeInstructions.length)
    }
    ,
    e.draw = function(e, t) {
        this._updateInstructions();
        for (var a = this._instructions, i = this._storeIndex, n = a.length; i < n; i++)
            a[i].exec(e, t)
    }
    ,
    e.drawAsPath = function(e) {
        this._updateInstructions();
        for (var t, a = this._instructions, i = this._storeIndex, n = a.length; i < n; i++)
            !1 !== (t = a[i]).path && t.exec(e)
    }
    ,
    e.moveTo = function(e, t) {
        return this.append(new l.MoveTo(e,t), !0)
    }
    ,
    e.lineTo = function(e, t) {
        return this.append(new l.LineTo(e,t))
    }
    ,
    e.arcTo = function(e, t, a, i, n) {
        return this.append(new l.ArcTo(e,t,a,i,n))
    }
    ,
    e.arc = function(e, t, a, i, n, r) {
        return this.append(new l.Arc(e,t,a,i,n,r))
    }
    ,
    e.quadraticCurveTo = function(e, t, a, i) {
        return this.append(new l.QuadraticCurveTo(e,t,a,i))
    }
    ,
    e.bezierCurveTo = function(e, t, a, i, n, r) {
        return this.append(new l.BezierCurveTo(e,t,a,i,n,r))
    }
    ,
    e.rect = function(e, t, a, i) {
        return this.append(new l.Rect(e,t,a,i))
    }
    ,
    e.closePath = function() {
        return this._activeInstructions.length ? this.append(new l.ClosePath) : this
    }
    ,
    e.clear = function() {
        return this._instructions.length = this._activeInstructions.length = this._commitIndex = 0,
        this._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null,
        this._dirty = this._strokeIgnoreScale = !1,
        this
    }
    ,
    e.beginFill = function(e) {
        return this._setFill(e ? new l.Fill(e) : null)
    }
    ,
    e.beginLinearGradientFill = function(e, t, a, i, n, r) {
        return this._setFill((new l.Fill).linearGradient(e, t, a, i, n, r))
    }
    ,
    e.beginRadialGradientFill = function(e, t, a, i, n, r, s, o) {
        return this._setFill((new l.Fill).radialGradient(e, t, a, i, n, r, s, o))
    }
    ,
    e.beginBitmapFill = function(e, t, a) {
        return this._setFill(new l.Fill(null,a).bitmap(e, t))
    }
    ,
    e.endFill = function() {
        return this.beginFill()
    }
    ,
    e.setStrokeStyle = function(e, t, a, i, n) {
        return this._updateInstructions(!0),
        this._strokeStyle = this.command = new l.StrokeStyle(e,t,a,i,n),
        this._stroke && (this._stroke.ignoreScale = n),
        this._strokeIgnoreScale = n,
        this
    }
    ,
    e.setStrokeDash = function(e, t) {
        return this._updateInstructions(!0),
        this._strokeDash = this.command = new l.StrokeDash(e,t),
        this
    }
    ,
    e.beginStroke = function(e) {
        return this._setStroke(e ? new l.Stroke(e) : null)
    }
    ,
    e.beginLinearGradientStroke = function(e, t, a, i, n, r) {
        return this._setStroke((new l.Stroke).linearGradient(e, t, a, i, n, r))
    }
    ,
    e.beginRadialGradientStroke = function(e, t, a, i, n, r, s, o) {
        return this._setStroke((new l.Stroke).radialGradient(e, t, a, i, n, r, s, o))
    }
    ,
    e.beginBitmapStroke = function(e, t) {
        return this._setStroke((new l.Stroke).bitmap(e, t))
    }
    ,
    e.endStroke = function() {
        return this.beginStroke()
    }
    ,
    e.curveTo = e.quadraticCurveTo,
    e.drawRect = e.rect,
    e.drawRoundRect = function(e, t, a, i, n) {
        return this.drawRoundRectComplex(e, t, a, i, n, n, n, n)
    }
    ,
    e.drawRoundRectComplex = function(e, t, a, i, n, r, s, o) {
        return this.append(new l.RoundRect(e,t,a,i,n,r,s,o))
    }
    ,
    e.drawCircle = function(e, t, a) {
        return this.append(new l.Circle(e,t,a))
    }
    ,
    e.drawEllipse = function(e, t, a, i) {
        return this.append(new l.Ellipse(e,t,a,i))
    }
    ,
    e.drawPolyStar = function(e, t, a, i, n, r) {
        return this.append(new l.PolyStar(e,t,a,i,n,r))
    }
    ,
    e.append = function(e, t) {
        return this._activeInstructions.push(e),
        this.command = e,
        t || (this._dirty = !0),
        this
    }
    ,
    e.decodePath = function(e) {
        for (var t = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath], a = [2, 2, 4, 6, 0], i = 0, n = e.length, r = [], s = 0, o = 0, l = _.BASE_64; i < n; ) {
            var c = e.charAt(i)
              , d = l[c]
              , u = d >> 3
              , h = t[u];
            if (!h || 3 & d)
                throw "bad path data (@" + i + "): " + c;
            var p = a[u];
            u || (s = o = 0),
            i++;
            for (var m = 2 + (d >> 2 & 1), g = r.length = 0; g < p; g++) {
                var f = (v = l[e.charAt(i)]) >> 5 ? -1 : 1
                  , v = (31 & v) << 6 | l[e.charAt(i + 1)];
                3 == m && (v = v << 6 | l[e.charAt(i + 2)]),
                v = f * v / 10,
                g % 2 ? s = v += s : o = v += o,
                r[g] = v,
                i += m
            }
            h.apply(this, r)
        }
        return this
    }
    ,
    e.store = function() {
        return this._updateInstructions(!0),
        this._storeIndex = this._instructions.length,
        this
    }
    ,
    e.unstore = function() {
        return this._storeIndex = 0,
        this
    }
    ,
    e.clone = function() {
        var e = new _;
        return e.command = this.command,
        e._stroke = this._stroke,
        e._strokeStyle = this._strokeStyle,
        e._strokeDash = this._strokeDash,
        e._strokeIgnoreScale = this._strokeIgnoreScale,
        e._fill = this._fill,
        e._instructions = this._instructions.slice(),
        e._commitIndex = this._commitIndex,
        e._activeInstructions = this._activeInstructions.slice(),
        e._dirty = this._dirty,
        e._storeIndex = this._storeIndex,
        e
    }
    ,
    e.toString = function() {
        return "[Graphics]"
    }
    ,
    e.mt = e.moveTo,
    e.lt = e.lineTo,
    e.at = e.arcTo,
    e.bt = e.bezierCurveTo,
    e.qt = e.quadraticCurveTo,
    e.a = e.arc,
    e.r = e.rect,
    e.cp = e.closePath,
    e.c = e.clear,
    e.f = e.beginFill,
    e.lf = e.beginLinearGradientFill,
    e.rf = e.beginRadialGradientFill,
    e.bf = e.beginBitmapFill,
    e.ef = e.endFill,
    e.ss = e.setStrokeStyle,
    e.sd = e.setStrokeDash,
    e.s = e.beginStroke,
    e.ls = e.beginLinearGradientStroke,
    e.rs = e.beginRadialGradientStroke,
    e.bs = e.beginBitmapStroke,
    e.es = e.endStroke,
    e.dr = e.drawRect,
    e.rr = e.drawRoundRect,
    e.rc = e.drawRoundRectComplex,
    e.dc = e.drawCircle,
    e.de = e.drawEllipse,
    e.dp = e.drawPolyStar,
    e.p = e.decodePath,
    e._updateInstructions = function(e) {
        var t = this._instructions
          , a = this._activeInstructions
          , i = this._commitIndex;
        if (this._dirty && a.length) {
            t.length = i,
            t.push(_.beginCmd);
            var n = a.length
              , r = t.length;
            t.length = r + n;
            for (var s = 0; s < n; s++)
                t[s + r] = a[s];
            this._fill && t.push(this._fill),
            this._stroke && (this._strokeDash !== this._oldStrokeDash && t.push(this._strokeDash),
            this._strokeStyle !== this._oldStrokeStyle && t.push(this._strokeStyle),
            e && (this._oldStrokeStyle = this._strokeStyle,
            this._oldStrokeDash = this._strokeDash),
            t.push(this._stroke)),
            this._dirty = !1
        }
        e && (a.length = 0,
        this._commitIndex = t.length)
    }
    ,
    e._setFill = function(e) {
        return this._updateInstructions(!0),
        this.command = this._fill = e,
        this
    }
    ,
    e._setStroke = function(e) {
        return this._updateInstructions(!0),
        (this.command = this._stroke = e) && (e.ignoreScale = this._strokeIgnoreScale),
        this
    }
    ,
    (l.LineTo = function(e, t) {
        this.x = e,
        this.y = t
    }
    ).prototype.exec = function(e) {
        e.lineTo(this.x, this.y)
    }
    ,
    (l.MoveTo = function(e, t) {
        this.x = e,
        this.y = t
    }
    ).prototype.exec = function(e) {
        e.moveTo(this.x, this.y)
    }
    ,
    (l.ArcTo = function(e, t, a, i, n) {
        this.x1 = e,
        this.y1 = t,
        this.x2 = a,
        this.y2 = i,
        this.radius = n
    }
    ).prototype.exec = function(e) {
        e.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius)
    }
    ,
    (l.Arc = function(e, t, a, i, n, r) {
        this.x = e,
        this.y = t,
        this.radius = a,
        this.startAngle = i,
        this.endAngle = n,
        this.anticlockwise = !!r
    }
    ).prototype.exec = function(e) {
        e.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise)
    }
    ,
    (l.QuadraticCurveTo = function(e, t, a, i) {
        this.cpx = e,
        this.cpy = t,
        this.x = a,
        this.y = i
    }
    ).prototype.exec = function(e) {
        e.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y)
    }
    ,
    (l.BezierCurveTo = function(e, t, a, i, n, r) {
        this.cp1x = e,
        this.cp1y = t,
        this.cp2x = a,
        this.cp2y = i,
        this.x = n,
        this.y = r
    }
    ).prototype.exec = function(e) {
        e.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y)
    }
    ,
    (l.Rect = function(e, t, a, i) {
        this.x = e,
        this.y = t,
        this.w = a,
        this.h = i
    }
    ).prototype.exec = function(e) {
        e.rect(this.x, this.y, this.w, this.h)
    }
    ,
    (l.ClosePath = function() {}
    ).prototype.exec = function(e) {
        e.closePath()
    }
    ,
    (l.BeginPath = function() {}
    ).prototype.exec = function(e) {
        e.beginPath()
    }
    ,
    (e = (l.Fill = function(e, t) {
        this.style = e,
        this.matrix = t
    }
    ).prototype).exec = function(e) {
        var t;
        this.style && (e.fillStyle = this.style,
        (t = this.matrix) && (e.save(),
        e.transform(t.a, t.b, t.c, t.d, t.tx, t.ty)),
        e.fill(),
        t && e.restore())
    }
    ,
    e.linearGradient = function(e, t, a, i, n, r) {
        for (var s = this.style = _._ctx.createLinearGradient(a, i, n, r), o = 0, l = e.length; o < l; o++)
            s.addColorStop(t[o], e[o]);
        return s.props = {
            colors: e,
            ratios: t,
            x0: a,
            y0: i,
            x1: n,
            y1: r,
            type: "linear"
        },
        this
    }
    ,
    e.radialGradient = function(e, t, a, i, n, r, s, o) {
        for (var l = this.style = _._ctx.createRadialGradient(a, i, n, r, s, o), c = 0, d = e.length; c < d; c++)
            l.addColorStop(t[c], e[c]);
        return l.props = {
            colors: e,
            ratios: t,
            x0: a,
            y0: i,
            r0: n,
            x1: r,
            y1: s,
            r1: o,
            type: "radial"
        },
        this
    }
    ,
    e.bitmap = function(e, t) {
        return (e.naturalWidth || e.getContext || 2 <= e.readyState) && ((this.style = _._ctx.createPattern(e, t || "")).props = {
            image: e,
            repetition: t,
            type: "bitmap"
        }),
        this
    }
    ,
    e.path = !1,
    (e = (l.Stroke = function(e, t) {
        this.style = e,
        this.ignoreScale = t
    }
    ).prototype).exec = function(e) {
        this.style && (e.strokeStyle = this.style,
        this.ignoreScale && (e.save(),
        e.setTransform(1, 0, 0, 1, 0, 0)),
        e.stroke(),
        this.ignoreScale && e.restore())
    }
    ,
    e.linearGradient = l.Fill.prototype.linearGradient,
    e.radialGradient = l.Fill.prototype.radialGradient,
    e.bitmap = l.Fill.prototype.bitmap,
    e.path = !1,
    (e = (l.StrokeStyle = function(e, t, a, i, n) {
        this.width = e,
        this.caps = t,
        this.joints = a,
        this.miterLimit = i,
        this.ignoreScale = n
    }
    ).prototype).exec = function(e) {
        e.lineWidth = null == this.width ? "1" : this.width,
        e.lineCap = null == this.caps ? "butt" : isNaN(this.caps) ? this.caps : _.STROKE_CAPS_MAP[this.caps],
        e.lineJoin = null == this.joints ? "miter" : isNaN(this.joints) ? this.joints : _.STROKE_JOINTS_MAP[this.joints],
        e.miterLimit = null == this.miterLimit ? "10" : this.miterLimit,
        e.ignoreScale = null != this.ignoreScale && this.ignoreScale
    }
    ,
    e.path = !1,
    (l.StrokeDash = function(e, t) {
        this.segments = e,
        this.offset = t || 0
    }
    ).prototype.exec = function(e) {
        e.setLineDash && (e.setLineDash(this.segments || l.StrokeDash.EMPTY_SEGMENTS),
        e.lineDashOffset = this.offset || 0)
    }
    ,
    l.StrokeDash.EMPTY_SEGMENTS = [],
    (l.RoundRect = function(e, t, a, i, n, r, s, o) {
        this.x = e,
        this.y = t,
        this.w = a,
        this.h = i,
        this.radiusTL = n,
        this.radiusTR = r,
        this.radiusBR = s,
        this.radiusBL = o
    }
    ).prototype.exec = function(e) {
        var t = (l < c ? l : c) / 2
          , a = 0
          , i = 0
          , n = 0
          , r = 0
          , s = this.x
          , o = this.y
          , l = this.w
          , c = this.h
          , d = this.radiusTL
          , u = this.radiusTR
          , h = this.radiusBR
          , p = this.radiusBL;
        d < 0 && (d *= a = -1),
        t < d && (d = t),
        u < 0 && (u *= i = -1),
        t < u && (u = t),
        h < 0 && (h *= n = -1),
        t < h && (h = t),
        p < 0 && (p *= r = -1),
        t < p && (p = t),
        e.moveTo(s + l - u, o),
        e.arcTo(s + l + u * i, o - u * i, s + l, o + u, u),
        e.lineTo(s + l, o + c - h),
        e.arcTo(s + l + h * n, o + c + h * n, s + l - h, o + c, h),
        e.lineTo(s + p, o + c),
        e.arcTo(s - p * r, o + c + p * r, s, o + c - p, p),
        e.lineTo(s, o + d),
        e.arcTo(s - d * a, o - d * a, s + d, o, d),
        e.closePath()
    }
    ,
    (l.Circle = function(e, t, a) {
        this.x = e,
        this.y = t,
        this.radius = a
    }
    ).prototype.exec = function(e) {
        e.arc(this.x, this.y, this.radius, 0, 2 * Math.PI)
    }
    ,
    (l.Ellipse = function(e, t, a, i) {
        this.x = e,
        this.y = t,
        this.w = a,
        this.h = i
    }
    ).prototype.exec = function(e) {
        var t = this.x
          , a = this.y
          , i = this.w
          , n = this.h
          , r = i / 2 * .5522848
          , s = n / 2 * .5522848
          , o = t + i
          , l = a + n
          , i = t + i / 2
          , n = a + n / 2;
        e.moveTo(t, n),
        e.bezierCurveTo(t, n - s, i - r, a, i, a),
        e.bezierCurveTo(i + r, a, o, n - s, o, n),
        e.bezierCurveTo(o, n + s, i + r, l, i, l),
        e.bezierCurveTo(i - r, l, t, n + s, t, n)
    }
    ,
    (l.PolyStar = function(e, t, a, i, n, r) {
        this.x = e,
        this.y = t,
        this.radius = a,
        this.sides = i,
        this.pointSize = n,
        this.angle = r
    }
    ).prototype.exec = function(e) {
        var t = this.x
          , a = this.y
          , i = this.radius
          , n = (this.angle || 0) / 180 * Math.PI
          , r = this.sides
          , s = 1 - (this.pointSize || 0)
          , o = Math.PI / r;
        e.moveTo(t + Math.cos(n) * i, a + Math.sin(n) * i);
        for (var l = 0; l < r; l++)
            n += o,
            1 != s && e.lineTo(t + Math.cos(n) * i * s, a + Math.sin(n) * i * s),
            n += o,
            e.lineTo(t + Math.cos(n) * i, a + Math.sin(n) * i);
        e.closePath()
    }
    ,
    _.beginCmd = new l.BeginPath,
    createjs.Graphics = _
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function r() {
        this.EventDispatcher_constructor(),
        this.alpha = 1,
        this.cacheCanvas = null,
        this.bitmapCache = null,
        this.id = createjs.UID.get(),
        this.mouseEnabled = !0,
        this.tickEnabled = !0,
        this.name = null,
        this.parent = null,
        this.regX = 0,
        this.regY = 0,
        this.rotation = 0,
        this.scaleX = 1,
        this.scaleY = 1,
        this.skewX = 0,
        this.skewY = 0,
        this.shadow = null,
        this.visible = !0,
        this.x = 0,
        this.y = 0,
        this.transformMatrix = null,
        this.compositeOperation = null,
        this.snapToPixel = !0,
        this.filters = null,
        this.mask = null,
        this.hitArea = null,
        this.cursor = null,
        this._props = new createjs.DisplayProps,
        this._rectangle = new createjs.Rectangle,
        this._bounds = null,
        this._webGLRenderStyle = r._StageGL_NONE
    }
    var e = createjs.extend(r, createjs.EventDispatcher);
    r._MOUSE_EVENTS = ["click", "dblclick", "mousedown", "mouseout", "mouseover", "pressmove", "pressup", "rollout", "rollover"],
    r.suppressCrossDomainErrors = !1,
    r._snapToPixelEnabled = !1,
    r._StageGL_NONE = 0,
    r._StageGL_SPRITE = 1,
    r._StageGL_BITMAP = 2;
    var t = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    t.getContext && (r._hitTestCanvas = t,
    r._hitTestContext = t.getContext("2d"),
    t.width = t.height = 1),
    e._getStage = function() {
        for (var e = this, t = createjs.Stage; e.parent; )
            e = e.parent;
        return e instanceof t ? e : null
    }
    ,
    e.getStage = createjs.deprecate(e._getStage, "DisplayObject.getStage");
    try {
        Object.defineProperties(e, {
            stage: {
                get: e._getStage
            },
            cacheID: {
                get: function() {
                    return this.bitmapCache && this.bitmapCache.cacheID
                },
                set: function(e) {
                    this.bitmapCache && (this.bitmapCache.cacheID = e)
                }
            },
            scale: {
                get: function() {
                    return this.scaleX
                },
                set: function(e) {
                    this.scaleX = this.scaleY = e
                }
            }
        })
    } catch (e) {}
    e.isVisible = function() {
        return !!(this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY)
    }
    ,
    e.draw = function(e, t) {
        var a = this.bitmapCache;
        return !(!a || t) && a.draw(e)
    }
    ,
    e.updateContext = function(e) {
        var t = this
          , a = t.mask
          , i = t._props.matrix;
        a && a.graphics && !a.graphics.isEmpty() && (a.getMatrix(i),
        e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty),
        a.graphics.drawAsPath(e),
        e.clip(),
        i.invert(),
        e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty)),
        this.getMatrix(i);
        var n = i.tx
          , a = i.ty;
        r._snapToPixelEnabled && t.snapToPixel && (n = n + (n < 0 ? -.5 : .5) | 0,
        a = a + (a < 0 ? -.5 : .5) | 0),
        e.transform(i.a, i.b, i.c, i.d, n, a),
        e.globalAlpha *= t.alpha,
        t.compositeOperation && (e.globalCompositeOperation = t.compositeOperation),
        t.shadow && this._applyShadow(e, t.shadow)
    }
    ,
    e.cache = function(e, t, a, i, n, r) {
        this.bitmapCache || (this.bitmapCache = new createjs.BitmapCache),
        this.bitmapCache.define(this, e, t, a, i, n, r)
    }
    ,
    e.updateCache = function(e) {
        if (!this.bitmapCache)
            throw "cache() must be called before updateCache()";
        this.bitmapCache.update(e)
    }
    ,
    e.uncache = function() {
        this.bitmapCache && (this.bitmapCache.release(),
        this.bitmapCache = void 0)
    }
    ,
    e.getCacheDataURL = function() {
        return this.bitmapCache ? this.bitmapCache.getDataURL() : null
    }
    ,
    e.localToGlobal = function(e, t, a) {
        return this.getConcatenatedMatrix(this._props.matrix).transformPoint(e, t, a || new createjs.Point)
    }
    ,
    e.globalToLocal = function(e, t, a) {
        return this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(e, t, a || new createjs.Point)
    }
    ,
    e.localToLocal = function(e, t, a, i) {
        return i = this.localToGlobal(e, t, i),
        a.globalToLocal(i.x, i.y, i)
    }
    ,
    e.setTransform = function(e, t, a, i, n, r, s, o, l) {
        return this.x = e || 0,
        this.y = t || 0,
        this.scaleX = null == a ? 1 : a,
        this.scaleY = null == i ? 1 : i,
        this.rotation = n || 0,
        this.skewX = r || 0,
        this.skewY = s || 0,
        this.regX = o || 0,
        this.regY = l || 0,
        this
    }
    ,
    e.getMatrix = function(e) {
        var t = this
          , e = e && e.identity() || new createjs.Matrix2D;
        return t.transformMatrix ? e.copy(t.transformMatrix) : e.appendTransform(t.x, t.y, t.scaleX, t.scaleY, t.rotation, t.skewX, t.skewY, t.regX, t.regY)
    }
    ,
    e.getConcatenatedMatrix = function(e) {
        for (var t = this, a = this.getMatrix(e); t = t.parent; )
            a.prependMatrix(t.getMatrix(t._props.matrix));
        return a
    }
    ,
    e.getConcatenatedDisplayProps = function(e) {
        e = e ? e.identity() : new createjs.DisplayProps;
        for (var t = this, a = t.getMatrix(e.matrix); e.prepend(t.visible, t.alpha, t.shadow, t.compositeOperation),
        t != this && a.prependMatrix(t.getMatrix(t._props.matrix)),
        t = t.parent; )
            ;
        return e
    }
    ,
    e.hitTest = function(e, t) {
        var a = r._hitTestContext;
        a.setTransform(1, 0, 0, 1, -e, -t),
        this.draw(a);
        t = this._testHit(a);
        return a.setTransform(1, 0, 0, 1, 0, 0),
        a.clearRect(0, 0, 2, 2),
        t
    }
    ,
    e.set = function(e) {
        for (var t in e)
            this[t] = e[t];
        return this
    }
    ,
    e.getBounds = function() {
        if (this._bounds)
            return this._rectangle.copy(this._bounds);
        var e = this.cacheCanvas;
        if (e) {
            var t = this._cacheScale;
            return this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, e.width / t, e.height / t)
        }
        return null
    }
    ,
    e.getTransformedBounds = function() {
        return this._getBounds()
    }
    ,
    e.setBounds = function(e, t, a, i) {
        return null == e ? void (this._bounds = e) : void (this._bounds = (this._bounds || new createjs.Rectangle).setValues(e, t, a, i))
    }
    ,
    e.clone = function() {
        return this._cloneProps(new r)
    }
    ,
    e.toString = function() {
        return "[DisplayObject (name=" + this.name + ")]"
    }
    ,
    e._updateState = null,
    e._cloneProps = function(e) {
        return e.alpha = this.alpha,
        e.mouseEnabled = this.mouseEnabled,
        e.tickEnabled = this.tickEnabled,
        e.name = this.name,
        e.regX = this.regX,
        e.regY = this.regY,
        e.rotation = this.rotation,
        e.scaleX = this.scaleX,
        e.scaleY = this.scaleY,
        e.shadow = this.shadow,
        e.skewX = this.skewX,
        e.skewY = this.skewY,
        e.visible = this.visible,
        e.x = this.x,
        e.y = this.y,
        e.compositeOperation = this.compositeOperation,
        e.snapToPixel = this.snapToPixel,
        e.filters = null == this.filters ? null : this.filters.slice(0),
        e.mask = this.mask,
        e.hitArea = this.hitArea,
        e.cursor = this.cursor,
        e._bounds = this._bounds,
        e
    }
    ,
    e._applyShadow = function(e, t) {
        t = t || Shadow.identity,
        e.shadowColor = t.color,
        e.shadowOffsetX = t.offsetX,
        e.shadowOffsetY = t.offsetY,
        e.shadowBlur = t.blur
    }
    ,
    e._tick = function(e) {
        var t = this._listeners;
        t && t.tick && (e.target = null,
        e.propagationStopped = e.immediatePropagationStopped = !1,
        this.dispatchEvent(e))
    }
    ,
    e._testHit = function(e) {
        try {
            var t = 1 < e.getImageData(0, 0, 1, 1).data[3]
        } catch (e) {
            if (!r.suppressCrossDomainErrors)
                throw "An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images."
        }
        return t
    }
    ,
    e._getBounds = function(e, t) {
        return this._transformBounds(this.getBounds(), e, t)
    }
    ,
    e._transformBounds = function(e, t, a) {
        if (!e)
            return e;
        var i = e.x
          , n = e.y
          , r = e.width
          , s = e.height
          , o = this._props.matrix
          , o = a ? o.identity() : this.getMatrix(o);
        (i || n) && o.appendTransform(0, 0, 1, 1, 0, 0, 0, -i, -n),
        t && o.prependMatrix(t);
        var l = r * o.a
          , c = r * o.b
          , d = s * o.c
          , u = s * o.d
          , h = o.tx
          , a = o.ty
          , t = h
          , r = h
          , s = a
          , o = a;
        return (i = l + h) < t ? t = i : r < i && (r = i),
        (i = l + d + h) < t ? t = i : r < i && (r = i),
        (i = d + h) < t ? t = i : r < i && (r = i),
        (n = c + a) < s ? s = n : o < n && (o = n),
        (n = c + u + a) < s ? s = n : o < n && (o = n),
        (n = u + a) < s ? s = n : o < n && (o = n),
        e.setValues(t, s, r - t, o - s)
    }
    ,
    e._hasMouseEventListener = function() {
        for (var e = r._MOUSE_EVENTS, t = 0, a = e.length; t < a; t++)
            if (this.hasEventListener(e[t]))
                return !0;
        return !!this.cursor
    }
    ,
    createjs.DisplayObject = createjs.promote(r, "EventDispatcher")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function p() {
        this.DisplayObject_constructor(),
        this.children = [],
        this.mouseChildren = !0,
        this.tickChildren = !0
    }
    var e = createjs.extend(p, createjs.DisplayObject);
    e._getNumChildren = function() {
        return this.children.length
    }
    ,
    e.getNumChildren = createjs.deprecate(e._getNumChildren, "Container.getNumChildren");
    try {
        Object.defineProperties(e, {
            numChildren: {
                get: e._getNumChildren
            }
        })
    } catch (e) {}
    e.initialize = p,
    e.isVisible = function() {
        var e = this.cacheCanvas || this.children.length;
        return !!(this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && e)
    }
    ,
    e.draw = function(e, t) {
        if (this.DisplayObject_draw(e, t))
            return !0;
        for (var a = this.children.slice(), i = 0, n = a.length; i < n; i++) {
            var r = a[i];
            r.isVisible() && (e.save(),
            r.updateContext(e),
            r.draw(e),
            e.restore())
        }
        return !0
    }
    ,
    e.addChild = function(e) {
        if (null == e)
            return e;
        var t = arguments.length;
        if (1 < t) {
            for (var a = 0; a < t; a++)
                this.addChild(arguments[a]);
            return arguments[t - 1]
        }
        var i = e.parent
          , n = i === this;
        return i && i._removeChildAt(createjs.indexOf(i.children, e), n),
        (e.parent = this).children.push(e),
        n || e.dispatchEvent("added"),
        e
    }
    ,
    e.addChildAt = function(e, t) {
        var a = arguments.length
          , i = arguments[a - 1];
        if (i < 0 || i > this.children.length)
            return arguments[a - 2];
        if (2 < a) {
            for (var n = 0; n < a - 1; n++)
                this.addChildAt(arguments[n], i + n);
            return arguments[a - 2]
        }
        var r = e.parent
          , s = r === this;
        return r && r._removeChildAt(createjs.indexOf(r.children, e), s),
        (e.parent = this).children.splice(t, 0, e),
        s || e.dispatchEvent("added"),
        e
    }
    ,
    e.removeChild = function(e) {
        var t = arguments.length;
        if (1 < t) {
            for (var a = !0, i = 0; i < t; i++)
                a = a && this.removeChild(arguments[i]);
            return a
        }
        return this._removeChildAt(createjs.indexOf(this.children, e))
    }
    ,
    e.removeChildAt = function(e) {
        var t = arguments.length;
        if (1 < t) {
            for (var a = [], i = 0; i < t; i++)
                a[i] = arguments[i];
            a.sort(function(e, t) {
                return t - e
            });
            for (var n = !0, i = 0; i < t; i++)
                n = n && this._removeChildAt(a[i]);
            return n
        }
        return this._removeChildAt(e)
    }
    ,
    e.removeAllChildren = function() {
        for (var e = this.children; e.length; )
            this._removeChildAt(0)
    }
    ,
    e.getChildAt = function(e) {
        return this.children[e]
    }
    ,
    e.getChildByName = function(e) {
        for (var t = this.children, a = 0, i = t.length; a < i; a++)
            if (t[a].name == e)
                return t[a];
        return null
    }
    ,
    e.sortChildren = function(e) {
        this.children.sort(e)
    }
    ,
    e.getChildIndex = function(e) {
        return createjs.indexOf(this.children, e)
    }
    ,
    e.swapChildrenAt = function(e, t) {
        var a = this.children
          , i = a[e]
          , n = a[t];
        i && n && (a[e] = n,
        a[t] = i)
    }
    ,
    e.swapChildren = function(e, t) {
        for (var a, i, n = this.children, r = 0, s = n.length; r < s && (n[r] == e && (a = r),
        n[r] == t && (i = r),
        null == a || null == i); r++)
            ;
        r != s && (n[a] = t,
        n[i] = e)
    }
    ,
    e.setChildIndex = function(e, t) {
        var a = this.children
          , i = a.length;
        if (!(e.parent != this || t < 0 || i <= t)) {
            for (var n = 0; n < i && a[n] != e; n++)
                ;
            n != i && n != t && (a.splice(n, 1),
            a.splice(t, 0, e))
        }
    }
    ,
    e.contains = function(e) {
        for (; e; ) {
            if (e == this)
                return !0;
            e = e.parent
        }
        return !1
    }
    ,
    e.hitTest = function(e, t) {
        return null != this.getObjectUnderPoint(e, t)
    }
    ,
    e.getObjectsUnderPoint = function(e, t, a) {
        var i = []
          , t = this.localToGlobal(e, t);
        return this._getObjectsUnderPoint(t.x, t.y, i, 0 < a, 1 == a),
        i
    }
    ,
    e.getObjectUnderPoint = function(e, t, a) {
        t = this.localToGlobal(e, t);
        return this._getObjectsUnderPoint(t.x, t.y, null, 0 < a, 1 == a)
    }
    ,
    e.getBounds = function() {
        return this._getBounds(null, !0)
    }
    ,
    e.getTransformedBounds = function() {
        return this._getBounds()
    }
    ,
    e.clone = function(e) {
        var t = this._cloneProps(new p);
        return e && this._cloneChildren(t),
        t
    }
    ,
    e.toString = function() {
        return "[Container (name=" + this.name + ")]"
    }
    ,
    e._tick = function(e) {
        if (this.tickChildren)
            for (var t = this.children.length - 1; 0 <= t; t--) {
                var a = this.children[t];
                a.tickEnabled && a._tick && a._tick(e)
            }
        this.DisplayObject__tick(e)
    }
    ,
    e._cloneChildren = function(e) {
        e.children.length && e.removeAllChildren();
        for (var t = e.children, a = 0, i = this.children.length; a < i; a++) {
            var n = this.children[a].clone(!0);
            n.parent = e,
            t.push(n)
        }
    }
    ,
    e._removeChildAt = function(e, t) {
        if (e < 0 || e > this.children.length - 1)
            return !1;
        var a = this.children[e];
        return a && (a.parent = null),
        this.children.splice(e, 1),
        t || a.dispatchEvent("removed"),
        !0
    }
    ,
    e._getObjectsUnderPoint = function(e, t, a, i, n, r) {
        if (!(r = r || 0) && !this._testMask(this, e, t))
            return null;
        var s = createjs.DisplayObject._hitTestContext;
        n = n || i && this._hasMouseEventListener();
        for (var o = this.children, l = o.length - 1; 0 <= l; l--) {
            var c = o[l]
              , d = c.hitArea;
            if (c.visible && (d || c.isVisible()) && (!i || c.mouseEnabled) && (d || this._testMask(c, e, t)))
                if (!d && c instanceof p) {
                    var u = c._getObjectsUnderPoint(e, t, a, i, n, r + 1);
                    if (!a && u)
                        return i && !this.mouseChildren ? this : u
                } else if (!i || n || c._hasMouseEventListener()) {
                    var h = c.getConcatenatedDisplayProps(c._props)
                      , u = h.matrix;
                    if (d && (u.appendMatrix(d.getMatrix(d._props.matrix)),
                    h.alpha = d.alpha),
                    s.globalAlpha = h.alpha,
                    s.setTransform(u.a, u.b, u.c, u.d, u.tx - e, u.ty - t),
                    (d || c).draw(s),
                    this._testHit(s)) {
                        if (s.setTransform(1, 0, 0, 1, 0, 0),
                        s.clearRect(0, 0, 2, 2),
                        !a)
                            return i && !this.mouseChildren ? this : c;
                        a.push(c)
                    }
                }
        }
        return null
    }
    ,
    e._testMask = function(e, t, a) {
        var i = e.mask;
        if (!i || !i.graphics || i.graphics.isEmpty())
            return !0;
        var n = this._props.matrix
          , e = e.parent
          , n = e ? e.getConcatenatedMatrix(n) : n.identity();
        n = i.getMatrix(i._props.matrix).prependMatrix(n);
        e = createjs.DisplayObject._hitTestContext;
        return e.setTransform(n.a, n.b, n.c, n.d, n.tx - t, n.ty - a),
        i.graphics.drawAsPath(e),
        e.fillStyle = "#000",
        e.fill(),
        !!this._testHit(e) && (e.setTransform(1, 0, 0, 1, 0, 0),
        e.clearRect(0, 0, 2, 2),
        !0)
    }
    ,
    e._getBounds = function(e, t) {
        var a = this.DisplayObject_getBounds();
        if (a)
            return this._transformBounds(a, e, t);
        var i = this._props.matrix
          , i = t ? i.identity() : this.getMatrix(i);
        e && i.prependMatrix(e);
        for (var n = this.children.length, r = null, s = 0; s < n; s++) {
            var o = this.children[s];
            o.visible && (a = o._getBounds(i)) && (r ? r.extend(a.x, a.y, a.width, a.height) : r = a.clone())
        }
        return r
    }
    ,
    createjs.Container = createjs.promote(p, "DisplayObject")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.Container_constructor(),
        this.autoClear = !0,
        this.canvas = "string" == typeof e ? document.getElementById(e) : e,
        this.mouseX = 0,
        this.mouseY = 0,
        this.drawRect = null,
        this.snapToPixelEnabled = !1,
        this.mouseInBounds = !1,
        this.tickOnUpdate = !0,
        this.mouseMoveOutside = !1,
        this.preventSelection = !0,
        this._pointerData = {},
        this._pointerCount = 0,
        this._primaryPointerID = null,
        this._mouseOverIntervalID = null,
        this._nextStage = null,
        this._prevStage = null,
        this.enableDOMEvents(!0)
    }
    var t = createjs.extend(e, createjs.Container);
    t._get_nextStage = function() {
        return this._nextStage
    }
    ,
    t._set_nextStage = function(e) {
        this._nextStage && (this._nextStage._prevStage = null),
        e && (e._prevStage = this),
        this._nextStage = e
    }
    ;
    try {
        Object.defineProperties(t, {
            nextStage: {
                get: t._get_nextStage,
                set: t._set_nextStage
            }
        })
    } catch (e) {}
    t.update = function(e) {
        var t;
        this.canvas && (this.tickOnUpdate && this.tick(e),
        !1 !== this.dispatchEvent("drawstart", !1, !0)) && (createjs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled,
        t = this.drawRect,
        (e = this.canvas.getContext("2d")).setTransform(1, 0, 0, 1, 0, 0),
        this.autoClear && (t ? e.clearRect(t.x, t.y, t.width, t.height) : e.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1)),
        e.save(),
        this.drawRect && (e.beginPath(),
        e.rect(t.x, t.y, t.width, t.height),
        e.clip()),
        this.updateContext(e),
        this.draw(e, !1),
        e.restore(),
        this.dispatchEvent("drawend"))
    }
    ,
    t.tick = function(e) {
        if (this.tickEnabled && !1 !== this.dispatchEvent("tickstart", !1, !0)) {
            var t = new createjs.Event("tick");
            if (e)
                for (var a in e)
                    e.hasOwnProperty(a) && (t[a] = e[a]);
            this._tick(t),
            this.dispatchEvent("tickend")
        }
    }
    ,
    t.handleEvent = function(e) {
        "tick" == e.type && this.update(e)
    }
    ,
    t.clear = function() {
        var e;
        this.canvas && ((e = this.canvas.getContext("2d")).setTransform(1, 0, 0, 1, 0, 0),
        e.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1))
    }
    ,
    t.toDataURL = function(e, t) {
        var a, i, n = this.canvas.getContext("2d"), r = this.canvas.width, s = this.canvas.height;
        e && (a = n.getImageData(0, 0, r, s),
        i = n.globalCompositeOperation,
        n.globalCompositeOperation = "destination-over",
        n.fillStyle = e,
        n.fillRect(0, 0, r, s));
        t = this.canvas.toDataURL(t || "image/png");
        return e && (n.putImageData(a, 0, 0),
        n.globalCompositeOperation = i),
        t
    }
    ,
    t.enableMouseOver = function(e) {
        if (this._mouseOverIntervalID && (clearInterval(this._mouseOverIntervalID),
        this._mouseOverIntervalID = null,
        0 == e && this._testMouseOver(!0)),
        null == e)
            e = 20;
        else if (e <= 0)
            return;
        var t = this;
        this._mouseOverIntervalID = setInterval(function() {
            t._testMouseOver()
        }, 1e3 / Math.min(50, e))
    }
    ,
    t.enableDOMEvents = function(e) {
        null == e && (e = !0);
        var t, a, i = this._eventListeners;
        if (!e && i) {
            for (t in i)
                a = i[t],
                a.t.removeEventListener(t, a.f, !1);
            this._eventListeners = null
        } else if (e && !i && this.canvas) {
            var e = window.addEventListener ? window : document
              , n = this;
            for (t in (i = this._eventListeners = {}).mouseup = {
                t: e,
                f: function(e) {
                    n._handleMouseUp(e)
                }
            },
            i.mousemove = {
                t: e,
                f: function(e) {
                    n._handleMouseMove(e)
                }
            },
            i.dblclick = {
                t: this.canvas,
                f: function(e) {
                    n._handleDoubleClick(e)
                }
            },
            i.mousedown = {
                t: this.canvas,
                f: function(e) {
                    n._handleMouseDown(e)
                }
            },
            i)
                a = i[t],
                a.t.addEventListener(t, a.f, !1)
        }
    }
    ,
    t.clone = function() {
        throw "Stage cannot be cloned."
    }
    ,
    t.toString = function() {
        return "[Stage (name=" + this.name + ")]"
    }
    ,
    t._getElementRect = function(t) {
        var a;
        try {
            a = t.getBoundingClientRect()
        } catch (e) {
            a = {
                top: t.offsetTop,
                left: t.offsetLeft,
                width: t.offsetWidth,
                height: t.offsetHeight
            }
        }
        var e = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0)
          , i = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0)
          , n = window.getComputedStyle ? getComputedStyle(t, null) : t.currentStyle
          , r = parseInt(n.paddingLeft) + parseInt(n.borderLeftWidth)
          , s = parseInt(n.paddingTop) + parseInt(n.borderTopWidth)
          , o = parseInt(n.paddingRight) + parseInt(n.borderRightWidth)
          , n = parseInt(n.paddingBottom) + parseInt(n.borderBottomWidth);
        return {
            left: a.left + e + r,
            right: a.right + e - o,
            top: a.top + i + s,
            bottom: a.bottom + i - n
        }
    }
    ,
    t._getPointerData = function(e) {
        return this._pointerData[e] || (this._pointerData[e] = {
            x: 0,
            y: 0
        })
    }
    ,
    t._handleMouseMove = function(e) {
        e = e || window.event,
        this._handlePointerMove(-1, e, e.pageX, e.pageY)
    }
    ,
    t._handlePointerMove = function(e, t, a, i, n) {
        var r, s;
        this._prevStage && void 0 === n || !this.canvas || (r = this._nextStage,
        n = (s = this._getPointerData(e)).inBounds,
        this._updatePointerPosition(e, t, a, i),
        (n || s.inBounds || this.mouseMoveOutside) && (-1 === e && s.inBounds == !n && this._dispatchMouseEvent(this, n ? "mouseleave" : "mouseenter", !1, e, s, t),
        this._dispatchMouseEvent(this, "stagemousemove", !1, e, s, t),
        this._dispatchMouseEvent(s.target, "pressmove", !0, e, s, t)),
        r && r._handlePointerMove(e, t, a, i, null))
    }
    ,
    t._updatePointerPosition = function(e, t, a, i) {
        var n = this._getElementRect(this.canvas);
        a -= n.left,
        i -= n.top;
        var r = this.canvas.width
          , s = this.canvas.height;
        a /= (n.right - n.left) / r,
        i /= (n.bottom - n.top) / s;
        n = this._getPointerData(e);
        (n.inBounds = 0 <= a && 0 <= i && a <= r - 1 && i <= s - 1) ? (n.x = a,
        n.y = i) : this.mouseMoveOutside && (n.x = a < 0 ? 0 : r - 1 < a ? r - 1 : a,
        n.y = i < 0 ? 0 : s - 1 < i ? s - 1 : i),
        n.posEvtObj = t,
        n.rawX = a,
        n.rawY = i,
        e !== this._primaryPointerID && -1 !== e || (this.mouseX = n.x,
        this.mouseY = n.y,
        this.mouseInBounds = n.inBounds)
    }
    ,
    t._handleMouseUp = function(e) {
        this._handlePointerUp(-1, e, !1)
    }
    ,
    t._handlePointerUp = function(e, t, a, i) {
        var n, r, s = this._nextStage, o = this._getPointerData(e);
        this._prevStage && void 0 === i || (n = null,
        r = o.target,
        i || !r && !s || (n = this._getObjectsUnderPoint(o.x, o.y, null, !0)),
        o.down && (this._dispatchMouseEvent(this, "stagemouseup", !1, e, o, t, n),
        o.down = !1),
        n == r && this._dispatchMouseEvent(r, "click", !0, e, o, t),
        this._dispatchMouseEvent(r, "pressup", !0, e, o, t),
        a ? (e == this._primaryPointerID && (this._primaryPointerID = null),
        delete this._pointerData[e]) : o.target = null,
        s && s._handlePointerUp(e, t, a, i || n && this))
    }
    ,
    t._handleMouseDown = function(e) {
        this._handlePointerDown(-1, e, e.pageX, e.pageY)
    }
    ,
    t._handlePointerDown = function(e, t, a, i, n) {
        this.preventSelection && t.preventDefault(),
        null != this._primaryPointerID && -1 !== e || (this._primaryPointerID = e),
        null != i && this._updatePointerPosition(e, t, a, i);
        var r = null
          , s = this._nextStage
          , o = this._getPointerData(e);
        n || (r = o.target = this._getObjectsUnderPoint(o.x, o.y, null, !0)),
        o.inBounds && (this._dispatchMouseEvent(this, "stagemousedown", !1, e, o, t, r),
        o.down = !0),
        this._dispatchMouseEvent(r, "mousedown", !0, e, o, t),
        s && s._handlePointerDown(e, t, a, i, n || r && this)
    }
    ,
    t._testMouseOver = function(e, t, a) {
        if (!this._prevStage || void 0 !== t) {
            var i = this._nextStage;
            if (this._mouseOverIntervalID) {
                var n = this._getPointerData(-1);
                if (n && (e || this.mouseX != this._mouseOverX || this.mouseY != this._mouseOverY || !this.mouseInBounds)) {
                    var r, s, o = n.posEvtObj, l = a || o && o.target == this.canvas, c = null, d = -1, u = "";
                    !t && (e || this.mouseInBounds && l) && (c = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, !0),
                    this._mouseOverX = this.mouseX,
                    this._mouseOverY = this.mouseY);
                    for (var h = this._mouseOverTarget || [], p = h[h.length - 1], m = this._mouseOverTarget = [], g = c; g; )
                        m.unshift(g),
                        u = u || g.cursor,
                        g = g.parent;
                    for (this.canvas.style.cursor = u,
                    !t && a && (a.canvas.style.cursor = u),
                    r = 0,
                    s = m.length; r < s && m[r] == h[r]; r++)
                        d = r;
                    for (p != c && this._dispatchMouseEvent(p, "mouseout", !0, -1, n, o, c),
                    r = h.length - 1; d < r; r--)
                        this._dispatchMouseEvent(h[r], "rollout", !1, -1, n, o, c);
                    for (r = m.length - 1; d < r; r--)
                        this._dispatchMouseEvent(m[r], "rollover", !1, -1, n, o, p);
                    p != c && this._dispatchMouseEvent(c, "mouseover", !0, -1, n, o, p),
                    i && i._testMouseOver(e, t || c && this, a || l && this)
                }
            } else
                i && i._testMouseOver(e, t, a)
        }
    }
    ,
    t._handleDoubleClick = function(e, t) {
        var a = null
          , i = this._nextStage
          , n = this._getPointerData(-1);
        t || (a = this._getObjectsUnderPoint(n.x, n.y, null, !0),
        this._dispatchMouseEvent(a, "dblclick", !0, -1, n, e)),
        i && i._handleDoubleClick(e, t || a && this)
    }
    ,
    t._dispatchMouseEvent = function(e, t, a, i, n, r, s) {
        e && (a || e.hasEventListener(t)) && (s = new createjs.MouseEvent(t,a,!1,n.x,n.y,r,i,i === this._primaryPointerID || -1 === i,n.rawX,n.rawY,s),
        e.dispatchEvent(s))
    }
    ,
    createjs.Stage = createjs.promote(e, "Container")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function I(e, t) {
        if (this.Stage_constructor(e),
        void 0 !== t) {
            if ("object" != typeof t)
                throw "Invalid options object";
            var a = t.premultiply
              , i = t.transparent
              , n = t.antialias
              , r = t.preserveBuffer
              , s = t.autoPurge
        }
        this.vocalDebug = !1,
        this._preserveBuffer = r || !1,
        this._antialias = n || !1,
        this._transparent = i || !1,
        this._premultiply = a || !1,
        this._autoPurge = void 0,
        this.autoPurge = s,
        this._viewportWidth = 0,
        this._viewportHeight = 0,
        this._projectionMatrix = null,
        this._webGLContext = null,
        this._clearColor = {
            r: .5,
            g: .5,
            b: .5,
            a: 0
        },
        this._maxCardsPerBatch = I.DEFAULT_MAX_BATCH_SIZE,
        this._activeShader = null,
        this._vertices = null,
        this._vertexPositionBuffer = null,
        this._uvs = null,
        this._uvPositionBuffer = null,
        this._indices = null,
        this._textureIndexBuffer = null,
        this._alphas = null,
        this._alphaBuffer = null,
        this._textureDictionary = [],
        this._textureIDs = {},
        this._batchTextures = [],
        this._baseTextures = [],
        this._batchTextureCount = 8,
        this._lastTextureInsert = -1,
        this._batchID = 0,
        this._drawID = 0,
        this._slotBlacklist = [],
        this._isDrawing = 0,
        this._lastTrackedCanvas = 0,
        this.isCacheControlled = !1,
        this._cacheContainer = new createjs.Container,
        this._initializeWebGL()
    }
    var e = createjs.extend(I, createjs.Stage);
    I.buildUVRects = function(e, t, a) {
        if (!e || !e._frames)
            return null;
        void 0 === t && (t = -1),
        void 0 === a && (a = !1);
        for (var i = -1 != t && a ? t : 0, n = -1 != t && a ? t + 1 : e._frames.length, r = i; r < n; r++) {
            var s, o = e._frames[r];
            o.uvRect || o.image.width <= 0 || o.image.height <= 0 || (s = o.rect,
            o.uvRect = {
                t: s.y / o.image.height,
                l: s.x / o.image.width,
                b: (s.y + s.height) / o.image.height,
                r: (s.x + s.width) / o.image.width
            })
        }
        return e._frames[-1 != t ? t : 0].uvRect || {
            t: 0,
            l: 0,
            b: 1,
            r: 1
        }
    }
    ,
    I.isWebGLActive = function(e) {
        return e && e instanceof WebGLRenderingContext && "undefined" != typeof WebGLRenderingContext
    }
    ,
    I.VERTEX_PROPERTY_COUNT = 6,
    I.INDICIES_PER_CARD = 6,
    I.DEFAULT_MAX_BATCH_SIZE = 1e4,
    I.WEBGL_MAX_INDEX_NUM = Math.pow(2, 16),
    I.UV_RECT = {
        t: 0,
        l: 0,
        b: 1,
        r: 1
    };
    try {
        I.COVER_VERT = new Float32Array([-1, 1, 1, 1, -1, -1, 1, 1, 1, -1, -1, -1]),
        I.COVER_UV = new Float32Array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1]),
        I.COVER_UV_FLIP = new Float32Array([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0])
    } catch (e) {}
    I.REGULAR_VERTEX_HEADER = (I.REGULAR_VARYING_HEADER = "precision mediump float;varying vec2 vTextureCoord;varying lowp float indexPicker;varying lowp float alphaValue;") + "attribute vec2 vertexPosition;attribute vec2 uvPosition;attribute lowp float textureIndex;attribute lowp float objectAlpha;uniform mat4 pMatrix;",
    I.REGULAR_FRAGMENT_HEADER = I.REGULAR_VARYING_HEADER + "uniform sampler2D uSampler[{{count}}];",
    I.REGULAR_VERTEX_BODY = "void main(void) {gl_Position = vec4((vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],pMatrix[3][2],1.0);alphaValue = objectAlpha;indexPicker = textureIndex;vTextureCoord = uvPosition;}",
    I.REGULAR_FRAGMENT_BODY = "void main(void) {vec4 color = vec4(1.0, 0.0, 0.0, 1.0);if (indexPicker <= 0.5) {color = texture2D(uSampler[0], vTextureCoord);{{alternates}}}{{fragColor}}}",
    I.REGULAR_FRAG_COLOR_NORMAL = "gl_FragColor = vec4(color.rgb, color.a * alphaValue);",
    I.REGULAR_FRAG_COLOR_PREMULTIPLY = "if(color.a > 0.0035) {gl_FragColor = vec4(color.rgb/color.a, color.a * alphaValue);} else {gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);}",
    I.PARTICLE_VERTEX_BODY = I.REGULAR_VERTEX_BODY,
    I.PARTICLE_FRAGMENT_BODY = I.REGULAR_FRAGMENT_BODY,
    I.COVER_VERTEX_HEADER = (I.COVER_VARYING_HEADER = "precision mediump float;varying highp vec2 vRenderCoord;varying highp vec2 vTextureCoord;") + "attribute vec2 vertexPosition;attribute vec2 uvPosition;uniform float uUpright;",
    I.COVER_FRAGMENT_HEADER = I.COVER_VARYING_HEADER + "uniform sampler2D uSampler;",
    I.COVER_VERTEX_BODY = "void main(void) {gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);vRenderCoord = uvPosition;vTextureCoord = vec2(uvPosition.x, abs(uUpright - uvPosition.y));}",
    I.COVER_FRAGMENT_BODY = "void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);gl_FragColor = color;}",
    e._get_isWebGL = function() {
        return !!this._webGLContext
    }
    ,
    e._set_autoPurge = function(e) {
        -1 != (e = isNaN(e) ? 1200 : e) && (e = e < 10 ? 10 : e),
        this._autoPurge = e
    }
    ,
    e._get_autoPurge = function() {
        return Number(this._autoPurge)
    }
    ;
    try {
        Object.defineProperties(e, {
            isWebGL: {
                get: e._get_isWebGL
            },
            autoPurge: {
                get: e._get_autoPurge,
                set: e._set_autoPurge
            }
        })
    } catch (e) {}
    e._initializeWebGL = function() {
        if (this.canvas) {
            if (!this._webGLContext || this._webGLContext.canvas !== this.canvas) {
                var e = {
                    depth: !1,
                    alpha: this._transparent,
                    stencil: !0,
                    antialias: this._antialias,
                    premultipliedAlpha: this._premultiply,
                    preserveDrawingBuffer: this._preserveBuffer
                }
                  , e = this._webGLContext = this._fetchWebGLContext(this.canvas, e);
                if (!e)
                    return null;
                this.updateSimultaneousTextureCount(e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)),
                this._maxTextureSlots = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
                this._createBuffers(e),
                this._initTextures(e),
                e.disable(e.DEPTH_TEST),
                e.enable(e.BLEND),
                e.blendFuncSeparate(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA),
                e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiply),
                this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a),
                this.updateViewport(this._viewportWidth || this.canvas.width, this._viewportHeight || this.canvas.height)
            }
        } else
            this._webGLContext = null;
        return this._webGLContext
    }
    ,
    e.update = function(e) {
        this.canvas && (this.tickOnUpdate && this.tick(e),
        this.dispatchEvent("drawstart"),
        this.autoClear && this.clear(),
        this._webGLContext ? (this._batchDraw(this, this._webGLContext),
        -1 == this._autoPurge || this._drawID % (this._autoPurge / 2 | 0) || this.purgeTextures(this._autoPurge)) : ((e = this.canvas.getContext("2d")).save(),
        this.updateContext(e),
        this.draw(e, !1),
        e.restore()),
        this.dispatchEvent("drawend"))
    }
    ,
    e.clear = function() {
        var e, t, a;
        this.canvas && (I.isWebGLActive(this._webGLContext) ? (e = this._webGLContext,
        t = this._clearColor,
        a = this._transparent ? t.a : 1,
        this._webGLContext.clearColor(t.r * a, t.g * a, t.b * a, a),
        e.clear(e.COLOR_BUFFER_BIT),
        this._webGLContext.clearColor(t.r, t.g, t.b, t.a)) : this.Stage_clear())
    }
    ,
    e.draw = function(e, t) {
        if (e === this._webGLContext && I.isWebGLActive(this._webGLContext)) {
            var a = this._webGLContext;
            return this._batchDraw(this, a, t),
            !0
        }
        return this.Stage_draw(e, t)
    }
    ,
    e.cacheDraw = function(e, t, a) {
        if (I.isWebGLActive(this._webGLContext)) {
            var i = this._webGLContext;
            return this._cacheDraw(i, e, t, a),
            !0
        }
        return !1
    }
    ,
    e.protectTextureSlot = function(e, t) {
        if (e > this._maxTextureSlots || e < 0)
            throw "Slot outside of acceptable range";
        this._slotBlacklist[e] = !!t
    }
    ,
    e.getTargetRenderTexture = function(e, t, a) {
        var i = !1
          , n = this._webGLContext;
        if (void 0 !== e.__lastRT && e.__lastRT === e.__rtA && (i = !0),
        !(n = i ? (void 0 === e.__rtB ? e.__rtB = this.getRenderBufferTexture(t, a) : (t == e.__rtB._width && a == e.__rtB._height || this.resizeTexture(e.__rtB, t, a),
        this.setTextureParams(n)),
        e.__rtB) : (void 0 === e.__rtA ? e.__rtA = this.getRenderBufferTexture(t, a) : (t == e.__rtA._width && a == e.__rtA._height || this.resizeTexture(e.__rtA, t, a),
        this.setTextureParams(n)),
        e.__rtA)))
            throw "Problems creating render textures, known causes include using too much VRAM by not releasing WebGL texture instances";
        return e.__lastRT = n
    }
    ,
    e.releaseTexture = function(e) {
        var t, a;
        if (e) {
            if (e.children)
                for (t = 0,
                a = e.children.length; t < a; t++)
                    this.releaseTexture(e.children[t]);
            e.cacheCanvas && e.uncache();
            var i = void 0;
            if (void 0 !== e._storeID) {
                if (e === this._textureDictionary[e._storeID])
                    return this._killTextureObject(e),
                    void (e._storeID = void 0);
                i = e
            } else if (2 === e._webGLRenderStyle)
                i = e.image;
            else if (1 === e._webGLRenderStyle) {
                for (t = 0,
                a = e.spriteSheet._images.length; t < a; t++)
                    this.releaseTexture(e.spriteSheet._images[t]);
                return
            }
            void 0 !== i ? (this._killTextureObject(this._textureDictionary[i._storeID]),
            i._storeID = void 0) : this.vocalDebug
        }
    }
    ,
    e.purgeTextures = function(e) {
        null == e && (e = 100);
        for (var t = this._textureDictionary, a = t.length, i = 0; i < a; i++) {
            var n = t[i];
            n && n._drawID + e <= this._drawID && this._killTextureObject(n)
        }
    }
    ,
    e.updateSimultaneousTextureCount = function(e) {
        var t = this._webGLContext
          , a = !1;
        for ((e < 1 || isNaN(e)) && (e = 1),
        this._batchTextureCount = e; !a; )
            try {
                this._activeShader = this._fetchShaderProgram(t),
                a = !0
            } catch (e) {
                if (1 == this._batchTextureCount)
                    throw "Cannot compile shader " + e;
                this._batchTextureCount -= 4,
                this._batchTextureCount < 1 && (this._batchTextureCount = 1),
                this.vocalDebug
            }
    }
    ,
    e.updateViewport = function(e, t) {
        this._viewportWidth = 0 | e,
        this._viewportHeight = 0 | t;
        t = this._webGLContext;
        t && (t.viewport(0, 0, this._viewportWidth, this._viewportHeight),
        this._projectionMatrix = new Float32Array([2 / this._viewportWidth, 0, 0, 0, 0, -2 / this._viewportHeight, 1, 0, 0, 0, 1, 0, -1, 1, .1, 0]),
        this._projectionMatrixFlip = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
        this._projectionMatrixFlip.set(this._projectionMatrix),
        this._projectionMatrixFlip[5] *= -1,
        this._projectionMatrixFlip[13] *= -1)
    }
    ,
    e.getFilterShader = function(e) {
        e = e || this;
        var t = this._webGLContext
          , a = this._activeShader;
        if (e._builtShader)
            a = e._builtShader,
            e.shaderParamSetup && (t.useProgram(a),
            e.shaderParamSetup(t, this, a));
        else
            try {
                a = this._fetchShaderProgram(t, "filter", e.VTX_SHADER_BODY, e.FRAG_SHADER_BODY, e.shaderParamSetup && e.shaderParamSetup.bind(e)),
                (e._builtShader = a)._name = e.toString()
            } catch (e) {
                console
            }
        return a
    }
    ,
    e.getBaseTexture = function(e, t) {
        var a = Math.ceil(0 < e ? e : 1) || 1
          , i = Math.ceil(0 < t ? t : 1) || 1
          , e = this._webGLContext
          , t = e.createTexture();
        return this.resizeTexture(t, a, i),
        this.setTextureParams(e, !1),
        t
    }
    ,
    e.resizeTexture = function(e, t, a) {
        var i = this._webGLContext;
        i.bindTexture(i.TEXTURE_2D, e),
        i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, t, a, 0, i.RGBA, i.UNSIGNED_BYTE, null),
        e.width = t,
        e.height = a
    }
    ,
    e.getRenderBufferTexture = function(e, t) {
        var a = this._webGLContext
          , i = this.getBaseTexture(e, t);
        if (!i)
            return null;
        var n = a.createFramebuffer();
        return n ? (i.width = e,
        i.height = t,
        a.bindFramebuffer(a.FRAMEBUFFER, n),
        a.framebufferTexture2D(a.FRAMEBUFFER, a.COLOR_ATTACHMENT0, a.TEXTURE_2D, i, 0),
        (n._renderTexture = i)._frameBuffer = n,
        i._storeID = this._textureDictionary.length,
        this._textureDictionary[i._storeID] = i,
        a.bindFramebuffer(a.FRAMEBUFFER, null),
        i) : null
    }
    ,
    e.setTextureParams = function(e, t) {
        t && this._antialias ? (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.LINEAR),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.LINEAR)) : (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST)),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE)
    }
    ,
    e.setClearColor = function(e) {
        var t, a, i, n, r;
        "string" == typeof e ? 0 == e.indexOf("#") ? (4 == e.length && (e = "#" + e.charAt(1) + e.charAt(1) + e.charAt(2) + e.charAt(2) + e.charAt(3) + e.charAt(3)),
        t = Number("0x" + e.slice(1, 3)) / 255,
        a = Number("0x" + e.slice(3, 5)) / 255,
        i = Number("0x" + e.slice(5, 7)) / 255,
        n = Number("0x" + e.slice(7, 9)) / 255) : 0 == e.indexOf("rgba(") && (r = e.slice(5, -1).split(","),
        t = Number(r[0]) / 255,
        a = Number(r[1]) / 255,
        i = Number(r[2]) / 255,
        n = Number(r[3])) : (t = ((4278190080 & e) >>> 24) / 255,
        a = ((16711680 & e) >>> 16) / 255,
        i = ((65280 & e) >>> 8) / 255,
        n = (255 & e) / 255),
        this._clearColor.r = t || 0,
        this._clearColor.g = a || 0,
        this._clearColor.b = i || 0,
        this._clearColor.a = n || 0,
        this._webGLContext && this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a)
    }
    ,
    e.toString = function() {
        return "[StageGL (name=" + this.name + ")]"
    }
    ,
    e._fetchWebGLContext = function(e, t) {
        var a;
        try {
            a = e.getContext("webgl", t) || e.getContext("experimental-webgl", t)
        } catch (e) {}
        return a ? (a.viewportWidth = e.width,
        a.viewportHeight = e.height) : console.error,
        a
    }
    ,
    e._fetchShaderProgram = function(e, t, a, i, n) {
        switch (e.useProgram(null),
        t) {
        case "filter":
            r = I.COVER_VERTEX_HEADER + (a || I.COVER_VERTEX_BODY),
            s = I.COVER_FRAGMENT_HEADER + (i || I.COVER_FRAGMENT_BODY);
            break;
        case "particle":
            r = I.REGULAR_VERTEX_HEADER + I.PARTICLE_VERTEX_BODY,
            s = I.REGULAR_FRAGMENT_HEADER + I.PARTICLE_FRAGMENT_BODY;
            break;
        case "override":
            r = I.REGULAR_VERTEX_HEADER + (a || I.REGULAR_VERTEX_BODY),
            s = I.REGULAR_FRAGMENT_HEADER + (i || I.REGULAR_FRAGMENT_BODY);
            break;
        case "regular":
        default:
            r = I.REGULAR_VERTEX_HEADER + I.REGULAR_VERTEX_BODY,
            s = I.REGULAR_FRAGMENT_HEADER + I.REGULAR_FRAGMENT_BODY
        }
        var i = this._createShader(e, e.VERTEX_SHADER, r)
          , r = this._createShader(e, e.FRAGMENT_SHADER, s)
          , s = e.createProgram();
        if (e.attachShader(s, i),
        e.attachShader(s, r),
        e.linkProgram(s),
        s._type = t,
        !e.getProgramParameter(s, e.LINK_STATUS))
            throw e.useProgram(this._activeShader),
            e.getProgramInfoLog(s);
        switch (e.useProgram(s),
        t) {
        case "filter":
            s.vertexPositionAttribute = e.getAttribLocation(s, "vertexPosition"),
            e.enableVertexAttribArray(s.vertexPositionAttribute),
            s.uvPositionAttribute = e.getAttribLocation(s, "uvPosition"),
            e.enableVertexAttribArray(s.uvPositionAttribute),
            s.samplerUniform = e.getUniformLocation(s, "uSampler"),
            e.uniform1i(s.samplerUniform, 0),
            s.uprightUniform = e.getUniformLocation(s, "uUpright"),
            e.uniform1f(s.uprightUniform, 0),
            n && n(e, this, s);
            break;
        case "override":
        case "particle":
        case "regular":
        default:
            s.vertexPositionAttribute = e.getAttribLocation(s, "vertexPosition"),
            e.enableVertexAttribArray(s.vertexPositionAttribute),
            s.uvPositionAttribute = e.getAttribLocation(s, "uvPosition"),
            e.enableVertexAttribArray(s.uvPositionAttribute),
            s.textureIndexAttribute = e.getAttribLocation(s, "textureIndex"),
            e.enableVertexAttribArray(s.textureIndexAttribute),
            s.alphaAttribute = e.getAttribLocation(s, "objectAlpha"),
            e.enableVertexAttribArray(s.alphaAttribute);
            for (var o = [], l = 0; l < this._batchTextureCount; l++)
                o[l] = l;
            s.samplerData = o,
            s.samplerUniform = e.getUniformLocation(s, "uSampler"),
            e.uniform1iv(s.samplerUniform, o),
            s.pMatrixUniform = e.getUniformLocation(s, "pMatrix")
        }
        return e.useProgram(this._activeShader),
        s
    }
    ,
    e._createShader = function(e, t, a) {
        a = a.replace(/{{count}}/g, this._batchTextureCount);
        for (var i = "", n = 1; n < this._batchTextureCount; n++)
            i += "} else if (indexPicker <= " + n + ".5) { color = texture2D(uSampler[" + n + "], vTextureCoord);";
        a = (a = a.replace(/{{alternates}}/g, i)).replace(/{{fragColor}}/g, this._premultiply ? I.REGULAR_FRAG_COLOR_PREMULTIPLY : I.REGULAR_FRAG_COLOR_NORMAL);
        t = e.createShader(t);
        if (e.shaderSource(t, a),
        e.compileShader(t),
        !e.getShaderParameter(t, e.COMPILE_STATUS))
            throw e.getShaderInfoLog(t);
        return t
    }
    ,
    e._createBuffers = function(e) {
        var t, a = this._maxCardsPerBatch * I.INDICIES_PER_CARD, i = this._vertexPositionBuffer = e.createBuffer();
        e.bindBuffer(e.ARRAY_BUFFER, i),
        t = 2;
        for (var n = this._vertices = new Float32Array(a * t), r = 0, s = n.length; r < s; r += t)
            n[r] = n[r + 1] = 0;
        e.bufferData(e.ARRAY_BUFFER, n, e.DYNAMIC_DRAW),
        i.itemSize = t,
        i.numItems = a;
        i = this._uvPositionBuffer = e.createBuffer();
        e.bindBuffer(e.ARRAY_BUFFER, i),
        t = 2;
        var o = this._uvs = new Float32Array(a * t);
        for (r = 0,
        s = o.length; r < s; r += t)
            o[r] = o[r + 1] = 0;
        e.bufferData(e.ARRAY_BUFFER, o, e.DYNAMIC_DRAW),
        i.itemSize = t,
        i.numItems = a;
        i = this._textureIndexBuffer = e.createBuffer();
        e.bindBuffer(e.ARRAY_BUFFER, i),
        t = 1;
        var l = this._indices = new Float32Array(a * t);
        for (r = 0,
        s = l.length; r < s; r++)
            l[r] = 0;
        e.bufferData(e.ARRAY_BUFFER, l, e.DYNAMIC_DRAW),
        i.itemSize = t,
        i.numItems = a;
        i = this._alphaBuffer = e.createBuffer();
        e.bindBuffer(e.ARRAY_BUFFER, i),
        t = 1;
        var c = this._alphas = new Float32Array(a * t);
        for (r = 0,
        s = c.length; r < s; r++)
            c[r] = 1;
        e.bufferData(e.ARRAY_BUFFER, c, e.DYNAMIC_DRAW),
        i.itemSize = t,
        i.numItems = a
    }
    ,
    e._initTextures = function() {
        this._lastTextureInsert = -1,
        this._textureDictionary = [],
        this._textureIDs = {},
        this._baseTextures = [],
        this._batchTextures = [];
        for (var e = 0; e < this._batchTextureCount; e++) {
            var t = this.getBaseTexture();
            if (!(this._baseTextures[e] = this._batchTextures[e] = t))
                throw "Problems creating basic textures, known causes include using too much VRAM by not releasing WebGL texture instances"
        }
    }
    ,
    e._loadTextureImage = function(e, t) {
        var a = t.src;
        a || (t._isCanvas = !0,
        a = t.src = "canvas_" + this._lastTrackedCanvas++);
        var i = this._textureIDs[a];
        void 0 === i && (i = this._textureIDs[a] = this._textureDictionary.length),
        void 0 === this._textureDictionary[i] && (this._textureDictionary[i] = this.getBaseTexture());
        a = this._textureDictionary[i];
        return a ? (a._batchID = this._batchID,
        a._storeID = i,
        a._imageData = t,
        this._insertTextureInBatch(e, a),
        t._storeID = i,
        t.complete || t.naturalWidth || t._isCanvas ? this._updateTextureImageData(e, t) : t.addEventListener("load", this._updateTextureImageData.bind(this, e, t))) : (console.error,
        (a = this._baseTextures[0])._batchID = this._batchID,
        a._storeID = -1,
        a._imageData = a,
        this._insertTextureInBatch(e, a)),
        a
    }
    ,
    e._updateTextureImageData = function(e, t) {
        var a = t.width & t.width - 1 || t.height & t.height - 1
          , i = this._textureDictionary[t._storeID];
        e.activeTexture(e.TEXTURE0 + i._activeIndex),
        e.bindTexture(e.TEXTURE_2D, i),
        i.isPOT = !a,
        this.setTextureParams(e, i.isPOT);
        try {
            e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, t)
        } catch (e) {
            console.error || console
        }
        t._invalid = !1,
        i._w = t.width,
        i._h = t.height,
        !this.vocalDebug || (t.width > e.MAX_TEXTURE_SIZE || t.height > e.MAX_TEXTURE_SIZE) && console
    }
    ,
    e._insertTextureInBatch = function(e, t) {
        if (this._batchTextures[t._activeIndex] !== t) {
            var a = -1
              , i = (this._lastTextureInsert + 1) % this._batchTextureCount
              , n = i;
            do {
                if (this._batchTextures[n]._batchID != this._batchID && !this._slotBlacklist[n]) {
                    a = n;
                    break
                }
            } while ((n = (n + 1) % this._batchTextureCount) !== i);
            -1 === a && (this.batchReason = "textureOverflow",
            this._drawBuffers(e),
            this.batchCardCount = 0,
            a = i),
            (this._batchTextures[a] = t)._activeIndex = a,
            (r = t._imageData) && r._invalid && void 0 !== t._drawID ? this._updateTextureImageData(e, r) : (e.activeTexture(e.TEXTURE0 + a),
            e.bindTexture(e.TEXTURE_2D, t),
            this.setTextureParams(e)),
            this._lastTextureInsert = a
        } else {
            var r = t._imageData;
            null != t._storeID && r && r._invalid && this._updateTextureImageData(e, r)
        }
        t._drawID = this._drawID,
        t._batchID = this._batchID
    }
    ,
    e._killTextureObject = function(e) {
        if (e) {
            var t = this._webGLContext;
            if (void 0 !== e._storeID && 0 <= e._storeID) {
                for (var a in this._textureDictionary[e._storeID] = void 0,
                this._textureIDs)
                    this._textureIDs[a] == e._storeID && delete this._textureIDs[a];
                e._imageData && (e._imageData._storeID = void 0),
                e._imageData = e._storeID = void 0
            }
            void 0 !== e._activeIndex && this._batchTextures[e._activeIndex] === e && (this._batchTextures[e._activeIndex] = this._baseTextures[e._activeIndex]);
            try {
                e._frameBuffer && t.deleteFramebuffer(e._frameBuffer),
                e._frameBuffer = void 0
            } catch (e) {
                this.vocalDebug
            }
            try {
                t.deleteTexture(e)
            } catch (e) {
                this.vocalDebug
            }
        }
    }
    ,
    e._backupBatchTextures = function(e, t) {
        var a = this._webGLContext;
        this._backupTextures || (this._backupTextures = []),
        void 0 === t && (t = this._backupTextures);
        for (var i = 0; i < this._batchTextureCount; i++)
            a.activeTexture(a.TEXTURE0 + i),
            e ? this._batchTextures[i] = t[i] : (t[i] = this._batchTextures[i],
            this._batchTextures[i] = this._baseTextures[i]),
            a.bindTexture(a.TEXTURE_2D, this._batchTextures[i]),
            this.setTextureParams(a, this._batchTextures[i].isPOT);
        e && t === this._backupTextures && (this._backupTextures = [])
    }
    ,
    e._batchDraw = function(e, t, a) {
        0 < this._isDrawing && this._drawBuffers(t),
        this._isDrawing++,
        this._drawID++,
        this.batchCardCount = 0,
        this.depth = 0,
        this._appendToBatchGroup(e, t, new createjs.Matrix2D, this.alpha, a),
        this.batchReason = "drawFinish",
        this._drawBuffers(t),
        this._isDrawing--
    }
    ,
    e._cacheDraw = function(e, t, a, i) {
        var n = this._activeShader
          , r = this._slotBlacklist
          , s = this._maxTextureSlots - 1
          , o = this._viewportWidth
          , l = this._viewportHeight;
        this.protectTextureSlot(s, !0);
        var c = t.getMatrix();
        (c = c.clone()).scale(1 / i.scale, 1 / i.scale),
        (c = c.invert()).translate(-i.offX / i.scale * t.scaleX, -i.offY / i.scale * t.scaleY);
        var d = this._cacheContainer;
        d.children = [t],
        d.transformMatrix = c,
        this._backupBatchTextures(!1),
        a && a.length ? this._drawFilters(t, a, i) : this.isCacheControlled ? (e.clear(e.COLOR_BUFFER_BIT),
        this._batchDraw(d, e, !0)) : (e.activeTexture(e.TEXTURE0 + s),
        t.cacheCanvas = this.getTargetRenderTexture(t, i._drawWidth, i._drawHeight),
        t = t.cacheCanvas,
        e.bindFramebuffer(e.FRAMEBUFFER, t._frameBuffer),
        this.updateViewport(i._drawWidth, i._drawHeight),
        this._projectionMatrix = this._projectionMatrixFlip,
        e.clear(e.COLOR_BUFFER_BIT),
        this._batchDraw(d, e, !0),
        e.bindFramebuffer(e.FRAMEBUFFER, null),
        this.updateViewport(o, l)),
        this._backupBatchTextures(!0),
        this.protectTextureSlot(s, !1),
        this._activeShader = n,
        this._slotBlacklist = r
    }
    ,
    e._drawFilters = function(e, t, a) {
        var i, n = this._webGLContext, r = this._maxTextureSlots - 1, s = this._viewportWidth, o = this._viewportHeight, l = this._cacheContainer, c = t.length;
        n.activeTexture(n.TEXTURE0 + r),
        i = this.getTargetRenderTexture(e, a._drawWidth, a._drawHeight),
        n.bindFramebuffer(n.FRAMEBUFFER, i._frameBuffer),
        this.updateViewport(a._drawWidth, a._drawHeight),
        n.clear(n.COLOR_BUFFER_BIT),
        this._batchDraw(l, n, !0),
        n.activeTexture(n.TEXTURE0),
        n.bindTexture(n.TEXTURE_2D, i),
        this.setTextureParams(n);
        for (var d = !1, u = 0, h = t[u]; this._activeShader = this.getFilterShader(h),
        this._activeShader && (n.activeTexture(n.TEXTURE0 + r),
        i = this.getTargetRenderTexture(e, a._drawWidth, a._drawHeight),
        n.bindFramebuffer(n.FRAMEBUFFER, i._frameBuffer),
        n.viewport(0, 0, a._drawWidth, a._drawHeight),
        n.clear(n.COLOR_BUFFER_BIT),
        this._drawCover(n, d),
        n.activeTexture(n.TEXTURE0),
        n.bindTexture(n.TEXTURE_2D, i),
        this.setTextureParams(n),
        (1 < c || t[0]._multiPass) && (d = !d),
        h = null !== h._multiPass ? h._multiPass : t[++u]),
        h; )
            ;
        this.isCacheControlled ? (n.bindFramebuffer(n.FRAMEBUFFER, null),
        this.updateViewport(s, o),
        this._activeShader = this.getFilterShader(this),
        n.clear(n.COLOR_BUFFER_BIT),
        this._drawCover(n, d)) : (d && (n.activeTexture(n.TEXTURE0 + r),
        i = this.getTargetRenderTexture(e, a._drawWidth, a._drawHeight),
        n.bindFramebuffer(n.FRAMEBUFFER, i._frameBuffer),
        this._activeShader = this.getFilterShader(this),
        n.viewport(0, 0, a._drawWidth, a._drawHeight),
        n.clear(n.COLOR_BUFFER_BIT),
        this._drawCover(n, !d)),
        n.bindFramebuffer(n.FRAMEBUFFER, null),
        this.updateViewport(s, o),
        e.cacheCanvas = i)
    }
    ,
    e._appendToBatchGroup = function(e, t, a, i, n) {
        e._glMtx || (e._glMtx = new createjs.Matrix2D);
        var r = e._glMtx;
        r.copy(a),
        e.transformMatrix ? r.appendMatrix(e.transformMatrix) : r.appendTransform(e.x, e.y, e.scaleX, e.scaleY, e.rotation, e.skewX, e.skewY, e.regX, e.regY);
        for (var s, o, l, c, d = e.children.length, u = 0; u < d; u++) {
            var h = e.children[u];
            if (h.visible && i)
                if (h.cacheCanvas && !n || (h._updateState && h._updateState(),
                !h.children)) {
                    this.batchCardCount + 1 > this._maxCardsPerBatch && (this.batchReason = "vertexOverflow",
                    this._drawBuffers(t),
                    this.batchCardCount = 0),
                    h._glMtx || (h._glMtx = new createjs.Matrix2D);
                    var p = h._glMtx;
                    p.copy(r),
                    h.transformMatrix ? p.appendMatrix(h.transformMatrix) : p.appendTransform(h.x, h.y, h.scaleX, h.scaleY, h.rotation, h.skewX, h.skewY, h.regX, h.regY);
                    var m, g, f, v, _ = h.cacheCanvas && !n;
                    if (2 === h._webGLRenderStyle || _)
                        m = !n && h.cacheCanvas || h.image;
                    else {
                        if (1 !== h._webGLRenderStyle)
                            continue;
                        if (null === (g = h.spriteSheet.getFrame(h.currentFrame)))
                            continue;
                        m = g.image
                    }
                    var y = this._uvs
                      , P = this._vertices
                      , S = this._indices
                      , b = this._alphas;
                    if (m) {
                        if (void 0 === m._storeID)
                            f = this._loadTextureImage(t, m),
                            this._insertTextureInBatch(t, f);
                        else {
                            if (!(f = this._textureDictionary[m._storeID])) {
                                this.vocalDebug;
                                continue
                            }
                            f._batchID !== this._batchID && this._insertTextureInBatch(t, f)
                        }
                        var T, C = f._activeIndex;
                        2 === h._webGLRenderStyle || _ ? c = !_ && h.sourceRect ? (h._uvRect || (h._uvRect = {}),
                        v = h.sourceRect,
                        (T = h._uvRect).t = v.y / m.height,
                        T.l = v.x / m.width,
                        T.b = (v.y + v.height) / m.height,
                        T.r = (v.x + v.width) / m.width,
                        o = s = 0,
                        l = v.width + s,
                        v.height + o) : (T = I.UV_RECT,
                        _ ? (s = (v = h.bitmapCache).x + v._filterOffX / v.scale,
                        o = v.y + v._filterOffY / v.scale,
                        l = v._drawWidth / v.scale + s,
                        v._drawHeight / v.scale + o) : (o = s = 0,
                        l = m.width + s,
                        m.height + o)) : 1 === h._webGLRenderStyle && (M = g.rect,
                        T = (T = g.uvRect) || I.buildUVRects(h.spriteSheet, h.currentFrame, !1),
                        s = -g.regX,
                        o = -g.regY,
                        l = M.width - g.regX,
                        c = M.height - g.regY);
                        var _ = this.batchCardCount * I.INDICIES_PER_CARD
                          , M = 2 * _;
                        P[M] = s * p.a + o * p.c + p.tx,
                        P[1 + M] = s * p.b + o * p.d + p.ty,
                        P[2 + M] = s * p.a + c * p.c + p.tx,
                        P[3 + M] = s * p.b + c * p.d + p.ty,
                        P[4 + M] = l * p.a + o * p.c + p.tx,
                        P[5 + M] = l * p.b + o * p.d + p.ty,
                        P[6 + M] = P[2 + M],
                        P[7 + M] = P[3 + M],
                        P[8 + M] = P[4 + M],
                        P[9 + M] = P[5 + M],
                        P[10 + M] = l * p.a + c * p.c + p.tx,
                        P[11 + M] = l * p.b + c * p.d + p.ty,
                        y[M] = T.l,
                        y[1 + M] = T.t,
                        y[2 + M] = T.l,
                        y[3 + M] = T.b,
                        y[4 + M] = T.r,
                        y[5 + M] = T.t,
                        y[6 + M] = T.l,
                        y[7 + M] = T.b,
                        y[8 + M] = T.r,
                        y[9 + M] = T.t,
                        y[10 + M] = T.r,
                        y[11 + M] = T.b,
                        S[_] = S[1 + _] = S[2 + _] = S[3 + _] = S[4 + _] = S[5 + _] = C,
                        b[_] = b[1 + _] = b[2 + _] = b[3 + _] = b[4 + _] = b[5 + _] = h.alpha * i,
                        this.batchCardCount++
                    }
                } else
                    this._appendToBatchGroup(h, t, r, h.alpha * i)
        }
    }
    ,
    e._drawBuffers = function(e) {
        if (!(this.batchCardCount <= 0)) {
            this.vocalDebug;
            var t = this._activeShader
              , a = this._vertexPositionBuffer
              , i = this._textureIndexBuffer
              , n = this._uvPositionBuffer
              , r = this._alphaBuffer;
            e.useProgram(t),
            e.bindBuffer(e.ARRAY_BUFFER, a),
            e.vertexAttribPointer(t.vertexPositionAttribute, a.itemSize, e.FLOAT, !1, 0, 0),
            e.bufferSubData(e.ARRAY_BUFFER, 0, this._vertices),
            e.bindBuffer(e.ARRAY_BUFFER, i),
            e.vertexAttribPointer(t.textureIndexAttribute, i.itemSize, e.FLOAT, !1, 0, 0),
            e.bufferSubData(e.ARRAY_BUFFER, 0, this._indices),
            e.bindBuffer(e.ARRAY_BUFFER, n),
            e.vertexAttribPointer(t.uvPositionAttribute, n.itemSize, e.FLOAT, !1, 0, 0),
            e.bufferSubData(e.ARRAY_BUFFER, 0, this._uvs),
            e.bindBuffer(e.ARRAY_BUFFER, r),
            e.vertexAttribPointer(t.alphaAttribute, r.itemSize, e.FLOAT, !1, 0, 0),
            e.bufferSubData(e.ARRAY_BUFFER, 0, this._alphas),
            e.uniformMatrix4fv(t.pMatrixUniform, e.FALSE, this._projectionMatrix);
            for (var s = 0; s < this._batchTextureCount; s++) {
                var o = this._batchTextures[s];
                e.activeTexture(e.TEXTURE0 + s),
                e.bindTexture(e.TEXTURE_2D, o),
                this.setTextureParams(e, o.isPOT)
            }
            e.drawArrays(e.TRIANGLES, 0, this.batchCardCount * I.INDICIES_PER_CARD),
            this._batchID++
        }
    }
    ,
    e._drawCover = function(e, t) {
        0 < this._isDrawing && this._drawBuffers(e),
        this.vocalDebug;
        var a = this._activeShader
          , i = this._vertexPositionBuffer
          , n = this._uvPositionBuffer;
        e.clear(e.COLOR_BUFFER_BIT),
        e.useProgram(a),
        e.bindBuffer(e.ARRAY_BUFFER, i),
        e.vertexAttribPointer(a.vertexPositionAttribute, i.itemSize, e.FLOAT, !1, 0, 0),
        e.bufferSubData(e.ARRAY_BUFFER, 0, I.COVER_VERT),
        e.bindBuffer(e.ARRAY_BUFFER, n),
        e.vertexAttribPointer(a.uvPositionAttribute, n.itemSize, e.FLOAT, !1, 0, 0),
        e.bufferSubData(e.ARRAY_BUFFER, 0, t ? I.COVER_UV_FLIP : I.COVER_UV),
        e.uniform1i(a.samplerUniform, 0),
        e.uniform1f(a.uprightUniform, t ? 0 : 1),
        e.drawArrays(e.TRIANGLES, 0, I.INDICIES_PER_CARD)
    }
    ,
    createjs.StageGL = createjs.promote(I, "Stage")
}(),
this.createjs = this.createjs || {},
function() {
    function a(e) {
        this.DisplayObject_constructor(),
        "string" == typeof e ? (this.image = document.createElement("img"),
        this.image.src = e) : this.image = e,
        this.sourceRect = null,
        this._webGLRenderStyle = createjs.DisplayObject._StageGL_BITMAP
    }
    var e = createjs.extend(a, createjs.DisplayObject);
    e.initialize = a,
    e.isVisible = function() {
        var e = this.image
          , e = this.cacheCanvas || e && (e.naturalWidth || e.getContext || 2 <= e.readyState);
        return !!(this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && e)
    }
    ,
    e.draw = function(e, t) {
        if (this.DisplayObject_draw(e, t))
            return !0;
        var a, i, n, r, s, o = this.image, l = this.sourceRect;
        return o.getImage && (o = o.getImage()),
        o && (l ? (a = l.x,
        i = l.y,
        n = a + l.width,
        r = i + l.height,
        a < (t = s = 0) && (s -= a,
        a = 0),
        (l = o.width) < n && (n = l),
        i < 0 && (t -= i,
        i = 0),
        (l = o.height) < r && (r = l),
        e.drawImage(o, a, i, n - a, r - i, s, t, n - a, r - i)) : e.drawImage(o, 0, 0)),
        !0
    }
    ,
    e.getBounds = function() {
        var e = this.DisplayObject_getBounds();
        if (e)
            return e;
        var t = this.image
          , e = this.sourceRect || t;
        return t && (t.naturalWidth || t.getContext || 2 <= t.readyState) ? this._rectangle.setValues(0, 0, e.width, e.height) : null
    }
    ,
    e.clone = function(e) {
        var t = this.image;
        t && e && (t = t.cloneNode());
        t = new a(t);
        return this.sourceRect && (t.sourceRect = this.sourceRect.clone()),
        this._cloneProps(t),
        t
    }
    ,
    e.toString = function() {
        return "[Bitmap (name=" + this.name + ")]"
    }
    ,
    createjs.Bitmap = createjs.promote(a, "DisplayObject")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.DisplayObject_constructor(),
        this.currentFrame = 0,
        this.currentAnimation = null,
        this.paused = !0,
        this.spriteSheet = e,
        this.currentAnimationFrame = 0,
        this.framerate = 0,
        this._animation = null,
        this._currentFrame = null,
        this._skipAdvance = !1,
        this._webGLRenderStyle = createjs.DisplayObject._StageGL_SPRITE,
        null != t && this.gotoAndPlay(t)
    }
    var t = createjs.extend(e, createjs.DisplayObject);
    t.initialize = e,
    t.isVisible = function() {
        var e = this.cacheCanvas || this.spriteSheet.complete;
        return !!(this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && e)
    }
    ,
    t.draw = function(e, t) {
        if (this.DisplayObject_draw(e, t))
            return !0;
        this._normalizeFrame();
        var a = this.spriteSheet.getFrame(0 | this._currentFrame);
        if (!a)
            return !1;
        t = a.rect;
        return t.width && t.height && e.drawImage(a.image, t.x, t.y, t.width, t.height, -a.regX, -a.regY, t.width, t.height),
        !0
    }
    ,
    t.play = function() {
        this.paused = !1
    }
    ,
    t.stop = function() {
        this.paused = !0
    }
    ,
    t.gotoAndPlay = function(e) {
        this.paused = !1,
        this._skipAdvance = !0,
        this._goto(e)
    }
    ,
    t.gotoAndStop = function(e) {
        this.paused = !0,
        this._goto(e)
    }
    ,
    t.advance = function(e) {
        var t = this.framerate || this.spriteSheet.framerate
          , t = t && null != e ? e / (1e3 / t) : 1;
        this._normalizeFrame(t)
    }
    ,
    t.getBounds = function() {
        return this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle)
    }
    ,
    t.clone = function() {
        return this._cloneProps(new e(this.spriteSheet))
    }
    ,
    t.toString = function() {
        return "[Sprite (name=" + this.name + ")]"
    }
    ,
    t._cloneProps = function(e) {
        return this.DisplayObject__cloneProps(e),
        e.currentFrame = this.currentFrame,
        e.currentAnimation = this.currentAnimation,
        e.paused = this.paused,
        e.currentAnimationFrame = this.currentAnimationFrame,
        e.framerate = this.framerate,
        e._animation = this._animation,
        e._currentFrame = this._currentFrame,
        e._skipAdvance = this._skipAdvance,
        e
    }
    ,
    t._tick = function(e) {
        this.paused || (this._skipAdvance || this.advance(e && e.delta),
        this._skipAdvance = !1),
        this.DisplayObject__tick(e)
    }
    ,
    t._normalizeFrame = function(e) {
        e = e || 0;
        var t = this._animation
          , a = this.paused
          , i = this._currentFrame;
        if (t) {
            var n, r = t.speed || 1, s = this.currentAnimationFrame;
            if ((n = t.frames.length) <= s + e * r) {
                var o = t.next;
                if (this._dispatchAnimationEnd(t, i, a, o, n - 1))
                    return;
                if (o)
                    return this._goto(o, e - (n - s) / r);
                this.paused = !0,
                s = t.frames.length - 1
            } else
                s += e * r;
            this.currentAnimationFrame = s,
            this._currentFrame = t.frames[0 | s]
        } else if (i = this._currentFrame += e,
        (n = this.spriteSheet.getNumFrames()) <= i && 0 < n && !this._dispatchAnimationEnd(t, i, a, n - 1) && (this._currentFrame -= n) >= n)
            return this._normalizeFrame();
        i = 0 | this._currentFrame,
        this.currentFrame != i && (this.currentFrame = i,
        this.dispatchEvent("change"))
    }
    ,
    t._dispatchAnimationEnd = function(e, t, a, i, n) {
        var r, s = e ? e.name : null;
        this.hasEventListener("animationend") && ((r = new createjs.Event("animationend")).name = s,
        r.next = i,
        this.dispatchEvent(r));
        t = this._animation != e || this._currentFrame != t;
        return t || a || !this.paused || (this.currentAnimationFrame = n,
        t = !0),
        t
    }
    ,
    t._goto = function(e, t) {
        var a;
        this.currentAnimationFrame = 0,
        isNaN(e) ? (a = this.spriteSheet.getAnimation(e)) && (this._animation = a,
        this.currentAnimation = e,
        this._normalizeFrame(t)) : (this.currentAnimation = this._animation = null,
        this._currentFrame = e,
        this._normalizeFrame())
    }
    ,
    createjs.Sprite = createjs.promote(e, "DisplayObject")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function t(e) {
        this.DisplayObject_constructor(),
        this.graphics = e || new createjs.Graphics
    }
    var e = createjs.extend(t, createjs.DisplayObject);
    e.isVisible = function() {
        var e = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();
        return !!(this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && e)
    }
    ,
    e.draw = function(e, t) {
        return this.DisplayObject_draw(e, t) || this.graphics.draw(e, this),
        !0
    }
    ,
    e.clone = function(e) {
        e = e && this.graphics ? this.graphics.clone() : this.graphics;
        return this._cloneProps(new t(e))
    }
    ,
    e.toString = function() {
        return "[Shape (name=" + this.name + ")]"
    }
    ,
    createjs.Shape = createjs.promote(t, "DisplayObject")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function f(e, t, a) {
        this.DisplayObject_constructor(),
        this.text = e,
        this.font = t,
        this.color = a,
        this.textAlign = "left",
        this.textBaseline = "top",
        this.maxWidth = null,
        this.outline = 0,
        this.lineHeight = 0,
        this.lineWidth = null
    }
    var e = createjs.extend(f, createjs.DisplayObject)
      , t = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    t.getContext && (f._workingContext = t.getContext("2d"),
    t.width = t.height = 1),
    f.H_OFFSETS = {
        start: 0,
        left: 0,
        center: -.5,
        end: -1,
        right: -1
    },
    f.V_OFFSETS = {
        top: 0,
        hanging: -.01,
        middle: -.4,
        alphabetic: -.8,
        ideographic: -.85,
        bottom: -1
    },
    e.isVisible = function() {
        var e = this.cacheCanvas || null != this.text && "" !== this.text;
        return !!(this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && e)
    }
    ,
    e.draw = function(e, t) {
        if (this.DisplayObject_draw(e, t))
            return !0;
        t = this.color || "#000";
        return this.outline ? (e.strokeStyle = t,
        e.lineWidth = +this.outline) : e.fillStyle = t,
        this._drawText(this._prepContext(e)),
        !0
    }
    ,
    e.getMeasuredWidth = function() {
        return this._getMeasuredWidth(this.text)
    }
    ,
    e.getMeasuredLineHeight = function() {
        return 1.2 * this._getMeasuredWidth("M")
    }
    ,
    e.getMeasuredHeight = function() {
        return this._drawText(null, {}).height
    }
    ,
    e.getBounds = function() {
        var e = this.DisplayObject_getBounds();
        if (e)
            return e;
        if (null == this.text || "" === this.text)
            return null;
        var t = this._drawText(null, {})
          , a = this.maxWidth && this.maxWidth < t.width ? this.maxWidth : t.width
          , i = a * f.H_OFFSETS[this.textAlign || "left"]
          , e = (this.lineHeight || this.getMeasuredLineHeight()) * f.V_OFFSETS[this.textBaseline || "top"];
        return this._rectangle.setValues(i, e, a, t.height)
    }
    ,
    e.getMetrics = function() {
        var e = {
            lines: []
        };
        return e.lineHeight = this.lineHeight || this.getMeasuredLineHeight(),
        e.vOffset = e.lineHeight * f.V_OFFSETS[this.textBaseline || "top"],
        this._drawText(null, e, e.lines)
    }
    ,
    e.clone = function() {
        return this._cloneProps(new f(this.text,this.font,this.color))
    }
    ,
    e.toString = function() {
        return "[Text (text=" + (20 < this.text.length ? this.text.substr(0, 17) + "..." : this.text) + ")]"
    }
    ,
    e._cloneProps = function(e) {
        return this.DisplayObject__cloneProps(e),
        e.textAlign = this.textAlign,
        e.textBaseline = this.textBaseline,
        e.maxWidth = this.maxWidth,
        e.outline = this.outline,
        e.lineHeight = this.lineHeight,
        e.lineWidth = this.lineWidth,
        e
    }
    ,
    e._prepContext = function(e) {
        return e.font = this.font || "10px sans-serif",
        e.textAlign = this.textAlign || "left",
        e.textBaseline = this.textBaseline || "top",
        e.lineJoin = "miter",
        e.miterLimit = 2.5,
        e
    }
    ,
    e._drawText = function(e, t, a) {
        var i = !!e;
        i || ((e = f._workingContext).save(),
        this._prepContext(e));
        for (var n = this.lineHeight || this.getMeasuredLineHeight(), r = 0, s = 0, o = String(this.text).split(/(?:\r\n|\r|\n)/), l = 0, c = o.length; l < c; l++) {
            var d = o[l]
              , u = null;
            if (null != this.lineWidth && (u = e.measureText(d).width) > this.lineWidth)
                for (var h = d.split(/(\s)/), d = h[0], u = e.measureText(d).width, p = 1, m = h.length; p < m; p += 2) {
                    var g = e.measureText(h[p] + h[p + 1]).width;
                    u + g > this.lineWidth ? (i && this._drawTextLine(e, d, s * n),
                    a && a.push(d),
                    r < u && (r = u),
                    d = h[p + 1],
                    u = e.measureText(d).width,
                    s++) : (d += h[p] + h[p + 1],
                    u += g)
                }
            i && this._drawTextLine(e, d, s * n),
            a && a.push(d),
            t && null == u && (u = e.measureText(d).width),
            r < u && (r = u),
            s++
        }
        return t && (t.width = r,
        t.height = s * n),
        i || e.restore(),
        t
    }
    ,
    e._drawTextLine = function(e, t, a) {
        this.outline ? e.strokeText(t, 0, a, this.maxWidth || 65535) : e.fillText(t, 0, a, this.maxWidth || 65535)
    }
    ,
    e._getMeasuredWidth = function(e) {
        var t = f._workingContext;
        t.save();
        e = this._prepContext(t).measureText(e).width;
        return t.restore(),
        e
    }
    ,
    createjs.Text = createjs.promote(f, "DisplayObject")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function _(e, t) {
        this.Container_constructor(),
        this.text = e || "",
        this.spriteSheet = t,
        this.lineHeight = 0,
        this.letterSpacing = 0,
        this.spaceWidth = 0,
        this._oldProps = {
            text: 0,
            spriteSheet: 0,
            lineHeight: 0,
            letterSpacing: 0,
            spaceWidth: 0
        },
        this._oldStage = null,
        this._drawAction = null
    }
    var e = createjs.extend(_, createjs.Container);
    _.maxPoolSize = 100,
    _._spritePool = [],
    e.draw = function(e, t) {
        this.DisplayObject_draw(e, t) || (this._updateState(),
        this.Container_draw(e, t))
    }
    ,
    e.getBounds = function() {
        return this._updateText(),
        this.Container_getBounds()
    }
    ,
    e.isVisible = function() {
        var e = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;
        return !!(this.visible && 0 < this.alpha && 0 !== this.scaleX && 0 !== this.scaleY && e)
    }
    ,
    e.clone = function() {
        return this._cloneProps(new _(this.text,this.spriteSheet))
    }
    ,
    e.addChild = e.addChildAt = e.removeChild = e.removeChildAt = e.removeAllChildren = function() {}
    ,
    e._updateState = function() {
        this._updateText()
    }
    ,
    e._cloneProps = function(e) {
        return this.Container__cloneProps(e),
        e.lineHeight = this.lineHeight,
        e.letterSpacing = this.letterSpacing,
        e.spaceWidth = this.spaceWidth,
        e
    }
    ,
    e._getFrameIndex = function(e, t) {
        var a, i = t.getAnimation(e);
        return i || (e != (a = e.toUpperCase()) || e != (a = e.toLowerCase()) || (a = null),
        a && (i = t.getAnimation(a))),
        i && i.frames[0]
    }
    ,
    e._getFrame = function(e, t) {
        e = this._getFrameIndex(e, t);
        return null == e ? e : t.getFrame(e)
    }
    ,
    e._getLineHeight = function(e) {
        e = this._getFrame("1", e) || this._getFrame("T", e) || this._getFrame("L", e) || e.getFrame(0);
        return e ? e.rect.height : 1
    }
    ,
    e._getSpaceWidth = function(e) {
        e = this._getFrame("1", e) || this._getFrame("l", e) || this._getFrame("e", e) || this._getFrame("a", e) || e.getFrame(0);
        return e ? e.rect.width : 1
    }
    ,
    e._updateText = function() {
        var e, t, a = 0, i = 0, n = this._oldProps, r = !1, s = this.spaceWidth, o = this.lineHeight, l = this.spriteSheet, c = _._spritePool, d = this.children, u = 0, h = d.length;
        for (t in n)
            n[t] != this[t] && (n[t] = this[t],
            r = !0);
        if (r) {
            var p = !!this._getFrame(" ", l);
            p || s || (s = this._getSpaceWidth(l)),
            o = o || this._getLineHeight(l);
            for (var m = 0, g = this.text.length; m < g; m++) {
                var f, v = this.text.charAt(m);
                " " != v || p ? "\n" != v && "\r" != v ? null != (f = this._getFrameIndex(v, l)) && (u < h ? e = d[u] : (d.push(e = c.length ? c.pop() : new createjs.Sprite),
                e.parent = this,
                h++),
                e.spriteSheet = l,
                e.gotoAndStop(f),
                e.x = a,
                e.y = i,
                u++,
                a += e.getBounds().width + this.letterSpacing) : ("\r" == v && "\n" == this.text.charAt(m + 1) && m++,
                a = 0,
                i += o) : a += s
            }
            for (; u < h; )
                c.push(e = d.pop()),
                e.parent = null,
                h--;
            c.length > _.maxPoolSize && (c.length = _.maxPoolSize)
        }
    }
    ,
    createjs.BitmapText = createjs.promote(_, "Container")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function r(e) {
        var t, a, i, n;
        this.Container_constructor(),
        r.inited || r.init(),
        e instanceof String || 1 < arguments.length ? (t = e,
        a = arguments[1],
        n = arguments[3],
        null == (i = arguments[2]) && (i = -1),
        e = null) : e && (t = e.mode,
        a = e.startPosition,
        i = e.loop,
        n = e.labels),
        e = e || {
            labels: n
        },
        this.mode = t || r.INDEPENDENT,
        this.startPosition = a || 0,
        this.loop = !0 === i ? -1 : i || 0,
        this.currentFrame = 0,
        this.paused = e.paused || !1,
        this.actionsEnabled = !0,
        this.autoReset = !0,
        this.frameBounds = this.frameBounds || e.frameBounds,
        this.framerate = null,
        e.useTicks = e.paused = !0,
        this.timeline = new createjs.Timeline(e),
        this._synchOffset = 0,
        this._rawPosition = -1,
        this._bound_resolveState = this._resolveState.bind(this),
        this._t = 0,
        this._managed = {}
    }
    function i() {
        throw "MovieClipPlugin cannot be instantiated."
    }
    var e = createjs.extend(r, createjs.Container);
    r.INDEPENDENT = "independent",
    r.SINGLE_FRAME = "single",
    r.SYNCHED = "synched",
    r.inited = !1,
    r.init = function() {
        r.inited || (i.install(),
        r.inited = !0)
    }
    ,
    e._getLabels = function() {
        return this.timeline.getLabels()
    }
    ,
    e.getLabels = createjs.deprecate(e._getLabels, "MovieClip.getLabels"),
    e._getCurrentLabel = function() {
        return this.timeline.currentLabel
    }
    ,
    e.getCurrentLabel = createjs.deprecate(e._getCurrentLabel, "MovieClip.getCurrentLabel"),
    e._getDuration = function() {
        return this.timeline.duration
    }
    ,
    e.getDuration = createjs.deprecate(e._getDuration, "MovieClip.getDuration");
    try {
        Object.defineProperties(e, {
            labels: {
                get: e._getLabels
            },
            currentLabel: {
                get: e._getCurrentLabel
            },
            totalFrames: {
                get: e._getDuration
            },
            duration: {
                get: e._getDuration
            }
        })
    } catch (e) {}
    e.initialize = r,
    e.isVisible = function() {
        return !!(this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY)
    }
    ,
    e.draw = function(e, t) {
        return this.DisplayObject_draw(e, t) || (this._updateState(),
        this.Container_draw(e, t)),
        !0
    }
    ,
    e.play = function() {
        this.paused = !1
    }
    ,
    e.stop = function() {
        this.paused = !0
    }
    ,
    e.gotoAndPlay = function(e) {
        this.paused = !1,
        this._goto(e)
    }
    ,
    e.gotoAndStop = function(e) {
        this.paused = !0,
        this._goto(e)
    }
    ,
    e.advance = function(e) {
        var t = r.INDEPENDENT;
        if (this.mode === t) {
            for (var a = this, i = a.framerate; (a = a.parent) && null === i; )
                a.mode === t && (i = a._framerate);
            if (this._framerate = i,
            !this.paused) {
                var e = null !== i && -1 !== i && null !== e ? e / (1e3 / i) + this._t : 1
                  , n = 0 | e;
                for (this._t = e - n; n--; )
                    this._updateTimeline(this._rawPosition + 1, !1)
            }
        }
    }
    ,
    e.clone = function() {
        throw "MovieClip cannot be cloned."
    }
    ,
    e.toString = function() {
        return "[MovieClip (name=" + this.name + ")]"
    }
    ,
    e._updateState = function() {
        -1 !== this._rawPosition && this.mode === r.INDEPENDENT || this._updateTimeline(-1)
    }
    ,
    e._tick = function(e) {
        this.advance(e && e.delta),
        this.Container__tick(e)
    }
    ,
    e._goto = function(e) {
        e = this.timeline.resolve(e);
        null != e && (this._t = 0,
        this._updateTimeline(e, !0))
    }
    ,
    e._reset = function() {
        this._rawPosition = -1,
        this._t = this.currentFrame = 0,
        this.paused = !1
    }
    ,
    e._updateTimeline = function(e, t) {
        var a = this.mode !== r.INDEPENDENT
          , i = this.timeline;
        a && (e = this.startPosition + (this.mode === r.SINGLE_FRAME ? 0 : this._synchOffset)),
        e < 0 && (e = 0),
        this._rawPosition === e && !a || (this._rawPosition = e,
        i.loop = this.loop,
        i.setPosition(e, a || !this.actionsEnabled, t, this._bound_resolveState))
    }
    ,
    e._renderFirstFrame = function() {
        var e = this.timeline
          , t = e.rawPosition;
        e.setPosition(0, !0, !0, this._bound_resolveState),
        e.rawPosition = t
    }
    ,
    e._resolveState = function() {
        var e, t = this.timeline;
        for (e in this.currentFrame = t.position,
        this._managed)
            this._managed[e] = 1;
        for (var a = t.tweens, i = 0, n = a.length; i < n; i++) {
            var r = a[i]
              , s = r.target;
            s === this || r.passive || (r = r._stepPosition,
            s instanceof createjs.DisplayObject ? this._addManagedChild(s, r) : this._setState(s.state, r))
        }
        for (var o = this.children, i = o.length - 1; 0 <= i; i--) {
            var l = o[i].id;
            1 === this._managed[l] && (this.removeChildAt(i),
            delete this._managed[l])
        }
    }
    ,
    e._setState = function(e, t) {
        if (e)
            for (var a = e.length - 1; 0 <= a; a--) {
                var i, n = e[a], r = n.t, s = n.p;
                for (i in s)
                    r[i] = s[i];
                this._addManagedChild(r, t)
            }
    }
    ,
    e._addManagedChild = function(e, t) {
        e._off || (this.addChildAt(e, 0),
        e instanceof r && (e._synchOffset = t,
        e.mode === r.INDEPENDENT && e.autoReset && !this._managed[e.id] && e._reset()),
        this._managed[e.id] = 2)
    }
    ,
    e._getBounds = function(e, t) {
        var a = this.DisplayObject_getBounds();
        return a || this.frameBounds && (a = this._rectangle.copy(this.frameBounds[this.currentFrame])),
        a ? this._transformBounds(a, e, t) : this.Container__getBounds(e, t)
    }
    ,
    createjs.MovieClip = createjs.promote(r, "Container"),
    i.priority = 100,
    i.ID = "MovieClip",
    i.install = function() {
        createjs.Tween._installPlugin(i)
    }
    ,
    i.init = function(e, t, a) {
        "startPosition" === t && e.target instanceof r && e._addPlugin(i)
    }
    ,
    i.step = function(e, t, a) {}
    ,
    i.change = function(e, t, a, i, n, r) {
        return "startPosition" === a ? (1 === n ? t : t.prev).props[a] : void 0
    }
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function T() {
        throw "SpriteSheetUtils cannot be instantiated"
    }
    var e = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    e.getContext && (T._workingCanvas = e,
    T._workingContext = e.getContext("2d"),
    e.width = e.height = 1),
    T.extractFrame = function(e, t) {
        isNaN(t) && (t = e.getAnimation(t).frames[0]);
        var a = e.getFrame(t);
        if (!a)
            return null;
        e = a.rect,
        t = T._workingCanvas;
        t.width = e.width,
        t.height = e.height,
        T._workingContext.drawImage(a.image, e.x, e.y, e.width, e.height, 0, 0, e.width, e.height);
        e = document.createElement("img");
        return e.src = t.toDataURL("image/png"),
        e
    }
    ,
    T.addFlippedFrames = createjs.deprecate(null, "SpriteSheetUtils.addFlippedFrames"),
    T.mergeAlpha = createjs.deprecate(null, "SpriteSheetUtils.mergeAlpha"),
    T._flip = function(e, t, a, i) {
        for (var n = e._images, r = T._workingCanvas, s = T._workingContext, o = n.length / t, l = 0; l < o; l++) {
            var c = n[l];
            c.__tmp = l,
            s.setTransform(1, 0, 0, 1, 0, 0),
            s.clearRect(0, 0, r.width + 1, r.height + 1),
            r.width = c.width,
            r.height = c.height,
            s.setTransform(a ? -1 : 1, 0, 0, i ? -1 : 1, a ? c.width : 0, i ? c.height : 0),
            s.drawImage(c, 0, 0);
            var d = document.createElement("img");
            d.src = r.toDataURL("image/png"),
            d.width = c.width || c.naturalWidth,
            d.height = c.height || c.naturalHeight,
            n.push(d)
        }
        for (var u = e._frames, h = u.length / t, l = 0; l < h; l++) {
            var p = (c = u[l]).rect.clone()
              , m = {
                image: d = n[c.image.__tmp + o * t],
                rect: p,
                regX: c.regX,
                regY: c.regY
            };
            a && (p.x = (d.width || d.naturalWidth) - p.x - p.width,
            m.regX = p.width - c.regX),
            i && (p.y = (d.height || d.naturalHeight) - p.y - p.height,
            m.regY = p.height - c.regY),
            u.push(m)
        }
        var g = "_" + (a ? "h" : "") + (i ? "v" : "")
          , f = e._animations
          , v = e._data
          , _ = f.length / t;
        for (l = 0; l < _; l++) {
            var y = f[l]
              , P = {
                name: y + g,
                speed: (c = v[y]).speed,
                next: c.next,
                frames: []
            };
            c.next && (P.next += g);
            for (var S = 0, b = (u = c.frames).length; S < b; S++)
                P.frames.push(u[S] + h * t);
            v[P.name] = P,
            f.push(P.name)
        }
    }
    ,
    createjs.SpriteSheetUtils = T
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function S(e) {
        this.EventDispatcher_constructor(),
        this.maxWidth = 2048,
        this.maxHeight = 2048,
        this.spriteSheet = null,
        this.scale = 1,
        this.padding = 1,
        this.timeSlice = .3,
        this.progress = -1,
        this.framerate = e || 0,
        this._frames = [],
        this._animations = {},
        this._data = null,
        this._nextFrameIndex = 0,
        this._index = 0,
        this._timerID = null,
        this._scale = 1
    }
    var e = createjs.extend(S, createjs.EventDispatcher);
    S.ERR_DIMENSIONS = "frame dimensions exceed max spritesheet dimensions",
    S.ERR_RUNNING = "a build is already running",
    e.addFrame = function(e, t, a, i, n) {
        if (this._data)
            throw S.ERR_RUNNING;
        t = t || e.bounds || e.nominalBounds;
        return !t && e.getBounds && (t = e.getBounds()),
        t ? (a = a || 1,
        this._frames.push({
            source: e,
            sourceRect: t,
            scale: a,
            funct: i,
            data: n,
            index: this._frames.length,
            height: t.height * a
        }) - 1) : null
    }
    ,
    e.addAnimation = function(e, t, a, i) {
        if (this._data)
            throw S.ERR_RUNNING;
        this._animations[e] = {
            frames: t,
            next: a,
            speed: i
        }
    }
    ,
    e.addMovieClip = function(e, t, a, i, n, r) {
        if (this._data)
            throw S.ERR_RUNNING;
        var s = e.frameBounds
          , o = t || e.bounds || e.nominalBounds;
        if (!o && e.getBounds && (o = e.getBounds()),
        o || s) {
            for (var l, c = this._frames.length, d = e.timeline.duration, u = 0; u < d; u++) {
                var h = s && s[u] ? s[u] : o;
                this.addFrame(e, h, a, this._setupMovieClipFrame, {
                    i: u,
                    f: i,
                    d: n
                })
            }
            var p, m = e.timeline._labels, g = [];
            for (p in m)
                g.push({
                    index: m[p],
                    label: p
                });
            if (g.length)
                for (g.sort(function(e, t) {
                    return e.index - t.index
                }),
                u = 0,
                l = g.length; u < l; u++) {
                    for (var f = g[u].label, v = c + g[u].index, _ = c + (u == l - 1 ? d : g[u + 1].index), y = [], P = v; P < _; P++)
                        y.push(P);
                    r && !(f = r(f, e, v, _)) || this.addAnimation(f, y, !0)
                }
        }
    }
    ,
    e.build = function() {
        if (this._data)
            throw S.ERR_RUNNING;
        for (this._startBuild(); this._drawNext(); )
            ;
        return this._endBuild(),
        this.spriteSheet
    }
    ,
    e.buildAsync = function(e) {
        if (this._data)
            throw S.ERR_RUNNING;
        this.timeSlice = e,
        this._startBuild();
        var t = this;
        this._timerID = setTimeout(function() {
            t._run()
        }, 50 - 50 * Math.max(.01, Math.min(.99, this.timeSlice || .3)))
    }
    ,
    e.stopAsync = function() {
        clearTimeout(this._timerID),
        this._data = null
    }
    ,
    e.clone = function() {
        throw "SpriteSheetBuilder cannot be cloned."
    }
    ,
    e.toString = function() {
        return "[SpriteSheetBuilder]"
    }
    ,
    e._startBuild = function() {
        var e = this.padding || 0;
        this.progress = 0,
        this.spriteSheet = null,
        this._index = 0,
        this._scale = this.scale;
        var t = [];
        this._data = {
            images: [],
            frames: t,
            framerate: this.framerate,
            animations: this._animations
        };
        var a = this._frames.slice();
        if (a.sort(function(e, t) {
            return e.height <= t.height ? -1 : 1
        }),
        a[a.length - 1].height + 2 * e > this.maxHeight)
            throw S.ERR_DIMENSIONS;
        for (var i = 0, n = 0, r = 0; a.length; ) {
            var s, o = this._fillRow(a, i, r, t, e);
            o.w > n && (n = o.w),
            i += o.h,
            o.h && a.length || ((s = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")).width = this._getSize(n, this.maxWidth),
            s.height = this._getSize(i, this.maxHeight),
            this._data.images[r] = s,
            o.h || (n = i = 0,
            r++))
        }
    }
    ,
    e._setupMovieClipFrame = function(e, t) {
        var a = e.actionsEnabled;
        e.actionsEnabled = !1,
        e.gotoAndStop(t.i),
        e.actionsEnabled = a,
        t.f && t.f(e, t.d, t.i)
    }
    ,
    e._getSize = function(e, t) {
        for (var a = 4; Math.pow(2, ++a) < e; )
            ;
        return Math.min(t, Math.pow(2, a))
    }
    ,
    e._fillRow = function(e, t, a, i, n) {
        for (var r = this.maxWidth, s = this.maxHeight - (t += n), o = n, l = 0, c = e.length - 1; 0 <= c; c--) {
            var d = e[c]
              , u = this._scale * d.scale
              , h = d.sourceRect
              , p = d.source
              , m = Math.floor(u * h.x - n)
              , g = Math.floor(u * h.y - n)
              , f = Math.ceil(u * h.height + 2 * n)
              , h = Math.ceil(u * h.width + 2 * n);
            if (r < h)
                throw S.ERR_DIMENSIONS;
            s < f || r < o + h || (d.img = a,
            d.rect = new createjs.Rectangle(o,t,h,f),
            l = l || f,
            e.splice(c, 1),
            i[d.index] = [o, t, h, f, a, Math.round(-m + u * p.regX - n), Math.round(-g + u * p.regY - n)],
            o += h)
        }
        return {
            w: o,
            h: l
        }
    }
    ,
    e._endBuild = function() {
        this.spriteSheet = new createjs.SpriteSheet(this._data),
        this._data = null,
        this.progress = 1,
        this.dispatchEvent("complete")
    }
    ,
    e._run = function() {
        for (var e, t = 50 * Math.max(.01, Math.min(.99, this.timeSlice || .3)), a = (new Date).getTime() + t, i = !1; a > (new Date).getTime(); )
            if (!this._drawNext()) {
                i = !0;
                break
            }
        i ? this._endBuild() : (e = this)._timerID = setTimeout(function() {
            e._run()
        }, 50 - t);
        var n = this.progress = this._index / this._frames.length;
        this.hasEventListener("progress") && ((t = new createjs.Event("progress")).progress = n,
        this.dispatchEvent(t))
    }
    ,
    e._drawNext = function() {
        var e = this._frames[this._index]
          , t = e.scale * this._scale
          , a = e.rect
          , i = e.sourceRect
          , n = this._data.images[e.img].getContext("2d");
        return e.funct && e.funct(e.source, e.data),
        n.save(),
        n.beginPath(),
        n.rect(a.x, a.y, a.width, a.height),
        n.clip(),
        n.translate(Math.ceil(a.x - i.x * t), Math.ceil(a.y - i.y * t)),
        n.scale(t, t),
        e.source.draw(n),
        n.restore(),
        ++this._index < this._frames.length
    }
    ,
    createjs.SpriteSheetBuilder = createjs.promote(S, "EventDispatcher")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.DisplayObject_constructor(),
        "string" == typeof e && (e = document.getElementById(e)),
        this.mouseEnabled = !1;
        var t = e.style;
        t.position = "absolute",
        t.transformOrigin = t.WebkitTransformOrigin = t.msTransformOrigin = t.MozTransformOrigin = t.OTransformOrigin = "0% 0%",
        this.htmlElement = e,
        this._oldProps = null,
        this._oldStage = null,
        this._drawAction = null
    }
    var t = createjs.extend(e, createjs.DisplayObject);
    t.isVisible = function() {
        return null != this.htmlElement
    }
    ,
    t.draw = function(e, t) {
        return !0
    }
    ,
    t.cache = function() {}
    ,
    t.uncache = function() {}
    ,
    t.updateCache = function() {}
    ,
    t.hitTest = function() {}
    ,
    t.localToGlobal = function() {}
    ,
    t.globalToLocal = function() {}
    ,
    t.localToLocal = function() {}
    ,
    t.clone = function() {
        throw "DOMElement cannot be cloned."
    }
    ,
    t.toString = function() {
        return "[DOMElement (name=" + this.name + ")]"
    }
    ,
    t._tick = function(e) {
        var t = this.stage;
        t && t !== this._oldStage && (this._drawAction && t.off("drawend", this._drawAction),
        this._drawAction = t.on("drawend", this._handleDrawEnd, this),
        this._oldStage = t),
        this.DisplayObject__tick(e)
    }
    ,
    t._handleDrawEnd = function(e) {
        var t, a, i, n, r, s = this.htmlElement;
        s && (t = s.style,
        i = (a = this.getConcatenatedDisplayProps(this._props)).matrix,
        (r = a.visible ? "visible" : "hidden") != t.visibility && (t.visibility = r),
        a.visible && (n = 1e4,
        (r = (s = this._oldProps) && s.matrix) && r.equals(i) || (r = "matrix(" + (i.a * n | 0) / n + "," + (i.b * n | 0) / n + "," + (i.c * n | 0) / n + "," + (i.d * n | 0) / n + "," + (i.tx + .5 | 0),
        t.transform = t.WebkitTransform = t.OTransform = t.msTransform = r + "," + (i.ty + .5 | 0) + ")",
        t.MozTransform = r + "px," + (i.ty + .5 | 0) + "px)",
        (s = s || (this._oldProps = new createjs.DisplayProps(!0,null))).matrix.copy(i)),
        s.alpha != a.alpha && (t.opacity = "" + (a.alpha * n | 0) / n,
        s.alpha = a.alpha)))
    }
    ,
    createjs.DOMElement = createjs.promote(e, "DisplayObject")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        this.usesContext = !1,
        this._multiPass = null,
        this.VTX_SHADER_BODY = null,
        this.FRAG_SHADER_BODY = null
    }
    var t = e.prototype;
    t.getBounds = function(e) {
        return e
    }
    ,
    t.shaderParamSetup = function(e, t, a) {}
    ,
    t.applyFilter = function(e, t, a, i, n, r, s, o) {
        r = r || e,
        null == s && (s = t),
        null == o && (o = a);
        try {
            var l = e.getImageData(t, a, i, n)
        } catch (e) {
            return !1
        }
        return !!this._applyFilter(l) && (r.putImageData(l, s, o),
        !0)
    }
    ,
    t.toString = function() {
        return "[Filter]"
    }
    ,
    t.clone = function() {
        return new e
    }
    ,
    t._applyFilter = function(e) {
        return !0
    }
    ,
    createjs.Filter = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function i() {
        this.width = void 0,
        this.height = void 0,
        this.x = void 0,
        this.y = void 0,
        this.scale = 1,
        this.offX = 0,
        this.offY = 0,
        this.cacheID = 0,
        this._filterOffX = 0,
        this._filterOffY = 0,
        this._cacheDataURLID = 0,
        this._cacheDataURL = null,
        this._drawWidth = 0,
        this._drawHeight = 0
    }
    var e = i.prototype;
    i.getFilterBounds = function(e, t) {
        t = t || new createjs.Rectangle;
        var a = e.filters
          , i = a && a.length;
        if (!!i <= 0)
            return t;
        for (var n = 0; n < i; n++) {
            var r = a[n];
            r && r.getBounds && ((r = r.getBounds()) && (0 == n ? t.setValues(r.x, r.y, r.width, r.height) : t.extend(r.x, r.y, r.width, r.height)))
        }
        return t
    }
    ,
    e.toString = function() {
        return "[BitmapCache]"
    }
    ,
    e.define = function(e, t, a, i, n, r, s) {
        if (!e)
            throw "No symbol to cache";
        this._options = s,
        this.target = e,
        this.width = 1 <= i ? i : 1,
        this.height = 1 <= n ? n : 1,
        this.x = t || 0,
        this.y = a || 0,
        this.scale = r || 1,
        this.update()
    }
    ,
    e.update = function(e) {
        if (!this.target)
            throw "define() must be called before update()";
        var t = i.getFilterBounds(this.target)
          , a = this.target.cacheCanvas;
        this._drawWidth = Math.ceil(this.width * this.scale) + t.width,
        this._drawHeight = Math.ceil(this.height * this.scale) + t.height,
        a && this._drawWidth == a.width && this._drawHeight == a.height || this._updateSurface(),
        this._filterOffX = t.x,
        this._filterOffY = t.y,
        this.offX = this.x * this.scale + this._filterOffX,
        this.offY = this.y * this.scale + this._filterOffY,
        this._drawToCache(e),
        this.cacheID = this.cacheID ? this.cacheID + 1 : 1
    }
    ,
    e.release = function() {
        var e;
        this._webGLCache ? (this._webGLCache.isCacheControlled || (this.__lastRT && (this.__lastRT = void 0),
        this.__rtA && this._webGLCache._killTextureObject(this.__rtA),
        this.__rtB && this._webGLCache._killTextureObject(this.__rtB),
        this.target && this.target.cacheCanvas && this._webGLCache._killTextureObject(this.target.cacheCanvas)),
        this._webGLCache = !1) : (e = this.target.stage)instanceof createjs.StageGL && e.releaseTexture(this.target.cacheCanvas),
        this.target = this.target.cacheCanvas = null,
        this.cacheID = this._cacheDataURLID = this._cacheDataURL = void 0,
        this.width = this.height = this.x = this.y = this.offX = this.offY = 0,
        this.scale = 1
    }
    ,
    e.getCacheDataURL = function() {
        var e = this.target && this.target.cacheCanvas;
        return e ? (this.cacheID != this._cacheDataURLID && (this._cacheDataURLID = this.cacheID,
        this._cacheDataURL = e.toDataURL ? e.toDataURL() : null),
        this._cacheDataURL) : null
    }
    ,
    e.draw = function(e) {
        return !!this.target && (e.drawImage(this.target.cacheCanvas, this.x + this._filterOffX / this.scale, this.y + this._filterOffY / this.scale, this._drawWidth / this.scale, this._drawHeight / this.scale),
        !0)
    }
    ,
    e._updateSurface = function() {
        if (!this._options || !this._options.useGL)
            return (e = (e = this.target.cacheCanvas) || (this.target.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas"))).width = this._drawWidth,
            void (e.height = this._drawHeight);
        if (!this._webGLCache)
            if ("stage" === this._options.useGL) {
                if (!this.target.stage || !this.target.stage.isWebGL)
                    throw "Cannot use 'stage' for cache because the object's parent stage is " + (this.target.stage ? "non WebGL." : "not set, please addChild to the correct stage.");
                this.target.cacheCanvas = !0,
                this._webGLCache = this.target.stage
            } else if ("new" === this._options.useGL)
                this.target.cacheCanvas = document.createElement("canvas"),
                this._webGLCache = new createjs.StageGL(this.target.cacheCanvas,{
                    antialias: !0,
                    transparent: !0,
                    autoPurge: -1
                }),
                this._webGLCache.isCacheControlled = !0;
            else {
                if (!(this._options.useGL instanceof createjs.StageGL))
                    throw "Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got " + this._options.useGL;
                this.target.cacheCanvas = !0,
                this._webGLCache = this._options.useGL,
                this._webGLCache.isCacheControlled = !0
            }
        var e = this.target.cacheCanvas
          , t = this._webGLCache;
        t.isCacheControlled && (e.width = this._drawWidth,
        e.height = this._drawHeight,
        t.updateViewport(this._drawWidth, this._drawHeight)),
        this.target.filters ? (t.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight),
        t.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight)) : t.isCacheControlled || t.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight)
    }
    ,
    e._drawToCache = function(e) {
        var t = this.target.cacheCanvas
          , a = this.target
          , i = this._webGLCache;
        i ? (i.cacheDraw(a, a.filters, this),
        (t = this.target.cacheCanvas).width = this._drawWidth,
        t.height = this._drawHeight) : (i = t.getContext("2d"),
        e || i.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1),
        i.save(),
        i.globalCompositeOperation = e,
        i.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY),
        i.translate(-this.x, -this.y),
        a.draw(i, !0),
        i.restore(),
        a.filters && a.filters.length && this._applyFilters(i)),
        t._invalid = !0
    }
    ,
    e._applyFilters = function(e) {
        for (var t, a = this.target.filters, i = this._drawWidth, n = this._drawHeight, r = 0, s = a[r]; s.usesContext ? (t && (e.putImageData(t, 0, 0),
        t = null),
        s.applyFilter(e, 0, 0, i, n)) : (t = t || e.getImageData(0, 0, i, n),
        s._applyFilter(t)),
        s = null !== s._multiPass ? s._multiPass : a[++r],
        s; )
            ;
        t && e.putImageData(t, 0, 0)
    }
    ,
    createjs.BitmapCache = i
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function R(e, t, a) {
        this.Filter_constructor(),
        this._blurX = e,
        this._blurXTable = [],
        this._lastBlurX = null,
        this._blurY = t,
        this._blurYTable = [],
        this._lastBlurY = null,
        this._quality,
        this._lastQuality = null,
        this.FRAG_SHADER_TEMPLATE = "uniform float xWeight[{{blurX}}];uniform float yWeight[{{blurY}}];uniform vec2 textureOffset;void main(void) {vec4 color = vec4(0.0);float xAdj = ({{blurX}}.0-1.0)/2.0;float yAdj = ({{blurY}}.0-1.0)/2.0;vec2 sampleOffset;for(int i=0; i<{{blurX}}; i++) {for(int j=0; j<{{blurY}}; j++) {sampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));color += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);}}gl_FragColor = color.rgba;}",
        (isNaN(a) || a < 1) && (a = 1),
        this.setQuality(0 | a)
    }
    var e = createjs.extend(R, createjs.Filter);
    e.getBlurX = function() {
        return this._blurX
    }
    ,
    e.getBlurY = function() {
        return this._blurY
    }
    ,
    e.setBlurX = function(e) {
        (isNaN(e) || e < 0) && (e = 0),
        this._blurX = e
    }
    ,
    e.setBlurY = function(e) {
        (isNaN(e) || e < 0) && (e = 0),
        this._blurY = e
    }
    ,
    e.getQuality = function() {
        return this._quality
    }
    ,
    e.setQuality = function(e) {
        (isNaN(e) || e < 0) && (e = 0),
        this._quality = 0 | e
    }
    ,
    e._getShader = function() {
        var e = this._lastBlurX !== this._blurX
          , t = this._lastBlurY !== this._blurY
          , a = this._lastQuality !== this._quality;
        return e || t || a ? ((e || a) && (this._blurXTable = this._getTable(this._blurX * this._quality)),
        (t || a) && (this._blurYTable = this._getTable(this._blurY * this._quality)),
        this._updateShader(),
        this._lastBlurX = this._blurX,
        this._lastBlurY = this._blurY,
        void (this._lastQuality = this._quality)) : this._compiledShader
    }
    ,
    e._setShader = function() {
        this._compiledShader
    }
    ;
    try {
        Object.defineProperties(e, {
            blurX: {
                get: e.getBlurX,
                set: e.setBlurX
            },
            blurY: {
                get: e.getBlurY,
                set: e.setBlurY
            },
            quality: {
                get: e.getQuality,
                set: e.setQuality
            },
            _builtShader: {
                get: e._getShader,
                set: e._setShader
            }
        })
    } catch (e) {}
    e._getTable = function(e) {
        if (e <= 1)
            return [1];
        for (var t = [], e = Math.ceil(2 * e), a = (e += e % 2 ? 0 : 1) / 2 | 0, i = -a; i <= a; i++) {
            var n = i / a * 4.2;
            t.push(1 / Math.sqrt(2 * Math.PI) * Math.pow(Math.E, -Math.pow(n, 2) / 4))
        }
        var r = t.reduce(function(e, t) {
            return e + t
        });
        return t.map(function(e, t, a) {
            return e / r
        })
    }
    ,
    e._updateShader = function() {
        var e;
        void 0 !== this._blurX && void 0 !== this._blurY && (e = (e = (e = this.FRAG_SHADER_TEMPLATE).replace(/\{\{blurX\}\}/g, this._blurXTable.length.toFixed(0))).replace(/\{\{blurY\}\}/g, this._blurYTable.length.toFixed(0)),
        this.FRAG_SHADER_BODY = e)
    }
    ,
    e.shaderParamSetup = function(e, t, a) {
        e.uniform1fv(e.getUniformLocation(a, "xWeight"), this._blurXTable),
        e.uniform1fv(e.getUniformLocation(a, "yWeight"), this._blurYTable),
        e.uniform2f(e.getUniformLocation(a, "textureOffset"), 2 / (t._viewportWidth * this._quality), 2 / (t._viewportHeight * this._quality))
    }
    ,
    R.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1],
    R.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9],
    e.getBounds = function(e) {
        var t = 0 | this.blurX
          , a = 0 | this.blurY;
        if (t <= 0 && a <= 0)
            return e;
        var i = Math.pow(this.quality, .2);
        return (e || new createjs.Rectangle).pad(a * i + 1, t * i + 1, a * i + 1, t * i + 1)
    }
    ,
    e.clone = function() {
        return new R(this.blurX,this.blurY,this.quality)
    }
    ,
    e.toString = function() {
        return "[BlurFilter]"
    }
    ,
    e._applyFilter = function(e) {
        var t = this._blurX >> 1;
        if (isNaN(t) || t < 0)
            return !1;
        var a = this._blurY >> 1;
        if (isNaN(a) || a < 0)
            return !1;
        if (0 == t && 0 == a)
            return !1;
        var i = this.quality;
        (isNaN(i) || i < 1) && (i = 1),
        3 < (i |= 0) && (i = 3),
        i < 1 && (i = 1);
        for (var n = e.data, r = 0, s = 0, o = 0, l = 0, c = 0, d = 0, u = 0, h = 0, p = 0, m = 0, g = 0, f = 0, v = 0, _ = 0, y = 0, P = t + t + 1 | 0, S = a + a + 1 | 0, b = 0 | e.width, T = 0 | e.height, C = b - 1 | 0, M = T - 1 | 0, I = 1 + t | 0, A = 1 + a | 0, L = {
            r: 0,
            b: 0,
            g: 0,
            a: 0
        }, x = L, o = 1; o < P; o++)
            x = x.n = {
                r: 0,
                b: 0,
                g: 0,
                a: 0
            };
        x.n = L;
        var D = {
            r: 0,
            b: 0,
            g: 0,
            a: 0
        }
          , w = D;
        for (o = 1; o < S; o++)
            w = w.n = {
                r: 0,
                b: 0,
                g: 0,
                a: 0
            };
        w.n = D;
        for (var k = null, $ = 0 | R.MUL_TABLE[t], B = 0 | R.SHG_TABLE[t], G = 0 | R.MUL_TABLE[a], O = 0 | R.SHG_TABLE[a]; 0 < i--; ) {
            u = d = 0;
            for (var E = $, F = B, s = T; -1 < --s; ) {
                for (h = I * (f = n[0 | d]),
                p = I * (v = n[d + 1 | 0]),
                m = I * (_ = n[d + 2 | 0]),
                g = I * (y = n[d + 3 | 0]),
                x = L,
                o = I; -1 < --o; )
                    x.r = f,
                    x.g = v,
                    x.b = _,
                    x.a = y,
                    x = x.n;
                for (o = 1; o < I; o++)
                    l = d + ((C < o ? C : o) << 2) | 0,
                    h += x.r = n[l],
                    p += x.g = n[l + 1],
                    m += x.b = n[l + 2],
                    g += x.a = n[l + 3],
                    x = x.n;
                for (k = L,
                r = 0; r < b; r++)
                    n[d++] = h * E >>> F,
                    n[d++] = p * E >>> F,
                    n[d++] = m * E >>> F,
                    n[d++] = g * E >>> F,
                    l = u + ((l = r + t + 1) < C ? l : C) << 2,
                    h -= k.r - (k.r = n[l]),
                    p -= k.g - (k.g = n[l + 1]),
                    m -= k.b - (k.b = n[l + 2]),
                    g -= k.a - (k.a = n[l + 3]),
                    k = k.n;
                u += b
            }
            for (E = G,
            F = O,
            r = 0; r < b; r++) {
                for (h = A * (f = n[d = r << 2 | 0]) | 0,
                p = A * (v = n[d + 1 | 0]) | 0,
                m = A * (_ = n[d + 2 | 0]) | 0,
                g = A * (y = n[d + 3 | 0]) | 0,
                w = D,
                o = 0; o < A; o++)
                    w.r = f,
                    w.g = v,
                    w.b = _,
                    w.a = y,
                    w = w.n;
                for (c = b,
                o = 1; o <= a; o++)
                    d = c + r << 2,
                    h += w.r = n[d],
                    p += w.g = n[d + 1],
                    m += w.b = n[d + 2],
                    g += w.a = n[d + 3],
                    w = w.n,
                    o < M && (c += b);
                if (d = r,
                k = D,
                0 < i)
                    for (s = 0; s < T; s++)
                        n[(l = d << 2) + 3] = y = g * E >>> F,
                        0 < y ? (n[l] = h * E >>> F,
                        n[l + 1] = p * E >>> F,
                        n[l + 2] = m * E >>> F) : n[l] = n[l + 1] = n[l + 2] = 0,
                        l = r + ((l = s + A) < M ? l : M) * b << 2,
                        h -= k.r - (k.r = n[l]),
                        p -= k.g - (k.g = n[l + 1]),
                        m -= k.b - (k.b = n[l + 2]),
                        g -= k.a - (k.a = n[l + 3]),
                        k = k.n,
                        d += b;
                else
                    for (s = 0; s < T; s++)
                        n[(l = d << 2) + 3] = y = g * E >>> F,
                        0 < y ? (y = 255 / y,
                        n[l] = (h * E >>> F) * y,
                        n[l + 1] = (p * E >>> F) * y,
                        n[l + 2] = (m * E >>> F) * y) : n[l] = n[l + 1] = n[l + 2] = 0,
                        l = r + ((l = s + A) < M ? l : M) * b << 2,
                        h -= k.r - (k.r = n[l]),
                        p -= k.g - (k.g = n[l + 1]),
                        m -= k.b - (k.b = n[l + 2]),
                        g -= k.a - (k.a = n[l + 3]),
                        k = k.n,
                        d += b
            }
        }
        return !0
    }
    ,
    createjs.BlurFilter = createjs.promote(R, "Filter")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function t(e) {
        this.Filter_constructor(),
        this.alphaMap = e,
        this._alphaMap = null,
        this._mapData = null,
        this._mapTexture = null,
        this.FRAG_SHADER_BODY = "uniform sampler2D uAlphaSampler;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);gl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));}"
    }
    var e = createjs.extend(t, createjs.Filter);
    e.shaderParamSetup = function(e, t, a) {
        this._mapTexture || (this._mapTexture = e.createTexture()),
        e.activeTexture(e.TEXTURE1),
        e.bindTexture(e.TEXTURE_2D, this._mapTexture),
        t.setTextureParams(e),
        e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, this.alphaMap),
        e.uniform1i(e.getUniformLocation(a, "uAlphaSampler"), 1)
    }
    ,
    e.clone = function() {
        var e = new t(this.alphaMap);
        return e._alphaMap = this._alphaMap,
        e._mapData = this._mapData,
        e
    }
    ,
    e.toString = function() {
        return "[AlphaMapFilter]"
    }
    ,
    e._applyFilter = function(e) {
        if (!this.alphaMap)
            return !0;
        if (!this._prepAlphaMap())
            return !1;
        for (var t = e.data, a = this._mapData, i = 0, n = t.length; i < n; i += 4)
            t[i + 3] = a[i] || 0;
        return !0
    }
    ,
    e._prepAlphaMap = function() {
        if (!this.alphaMap)
            return !1;
        if (this.alphaMap == this._alphaMap && this._mapData)
            return !0;
        this._mapData = null;
        var e, t = this._alphaMap = this.alphaMap, a = t;
        t instanceof HTMLCanvasElement ? e = a.getContext("2d") : ((a = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")).width = t.width,
        a.height = t.height,
        (e = a.getContext("2d")).drawImage(t, 0, 0));
        try {
            var i = e.getImageData(0, 0, t.width, t.height)
        } catch (e) {
            return !1
        }
        return this._mapData = i.data,
        !0
    }
    ,
    createjs.AlphaMapFilter = createjs.promote(t, "Filter")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.Filter_constructor(),
        this.mask = e,
        this.usesContext = !0,
        this.FRAG_SHADER_BODY = "uniform sampler2D uAlphaSampler;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);gl_FragColor = vec4(color.rgb, color.a * alphaMap.a);}"
    }
    var t = createjs.extend(e, createjs.Filter);
    t.shaderParamSetup = function(e, t, a) {
        this._mapTexture || (this._mapTexture = e.createTexture()),
        e.activeTexture(e.TEXTURE1),
        e.bindTexture(e.TEXTURE_2D, this._mapTexture),
        t.setTextureParams(e),
        e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, this.mask),
        e.uniform1i(e.getUniformLocation(a, "uAlphaSampler"), 1)
    }
    ,
    t.applyFilter = function(e, t, a, i, n, r, s, o) {
        return !this.mask || (null == s && (s = t),
        null == o && (o = a),
        (r = r || e).save(),
        e == r && (r.globalCompositeOperation = "destination-in",
        r.drawImage(this.mask, s, o),
        r.restore(),
        !0))
    }
    ,
    t.clone = function() {
        return new e(this.mask)
    }
    ,
    t.toString = function() {
        return "[AlphaMaskFilter]"
    }
    ,
    createjs.AlphaMaskFilter = createjs.promote(e, "Filter")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a, i, n, r, s, o) {
        this.Filter_constructor(),
        this.redMultiplier = null != e ? e : 1,
        this.greenMultiplier = null != t ? t : 1,
        this.blueMultiplier = null != a ? a : 1,
        this.alphaMultiplier = null != i ? i : 1,
        this.redOffset = n || 0,
        this.greenOffset = r || 0,
        this.blueOffset = s || 0,
        this.alphaOffset = o || 0,
        this.FRAG_SHADER_BODY = "uniform vec4 uColorMultiplier;uniform vec4 uColorOffset;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);gl_FragColor = (color * uColorMultiplier) + uColorOffset;}"
    }
    var t = createjs.extend(e, createjs.Filter);
    t.shaderParamSetup = function(e, t, a) {
        e.uniform4f(e.getUniformLocation(a, "uColorMultiplier"), this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier),
        e.uniform4f(e.getUniformLocation(a, "uColorOffset"), this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255)
    }
    ,
    t.toString = function() {
        return "[ColorFilter]"
    }
    ,
    t.clone = function() {
        return new e(this.redMultiplier,this.greenMultiplier,this.blueMultiplier,this.alphaMultiplier,this.redOffset,this.greenOffset,this.blueOffset,this.alphaOffset)
    }
    ,
    t._applyFilter = function(e) {
        for (var t = e.data, a = t.length, i = 0; i < a; i += 4)
            t[i] = t[i] * this.redMultiplier + this.redOffset,
            t[i + 1] = t[i + 1] * this.greenMultiplier + this.greenOffset,
            t[i + 2] = t[i + 2] * this.blueMultiplier + this.blueOffset,
            t[i + 3] = t[i + 3] * this.alphaMultiplier + this.alphaOffset;
        return !0
    }
    ,
    createjs.ColorFilter = createjs.promote(e, "Filter")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function i(e, t, a, i) {
        this.setColor(e, t, a, i)
    }
    var e = i.prototype;
    i.DELTA_INDEX = [0, .01, .02, .04, .05, .06, .07, .08, .1, .11, .12, .14, .15, .16, .17, .18, .2, .21, .22, .24, .25, .27, .28, .3, .32, .34, .36, .38, .4, .42, .44, .46, .48, .5, .53, .56, .59, .62, .65, .68, .71, .74, .77, .8, .83, .86, .89, .92, .95, .98, 1, 1.06, 1.12, 1.18, 1.24, 1.3, 1.36, 1.42, 1.48, 1.54, 1.6, 1.66, 1.72, 1.78, 1.84, 1.9, 1.96, 2, 2.12, 2.25, 2.37, 2.5, 2.62, 2.75, 2.87, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.7, 4.9, 5, 5.5, 6, 6.5, 6.8, 7, 7.3, 7.5, 7.8, 8, 8.4, 8.7, 9, 9.4, 9.6, 9.8, 10],
    i.LENGTH = (i.IDENTITY_MATRIX = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]).length,
    e.setColor = function(e, t, a, i) {
        return this.reset().adjustColor(e, t, a, i)
    }
    ,
    e.reset = function() {
        return this.copy(i.IDENTITY_MATRIX)
    }
    ,
    e.adjustColor = function(e, t, a, i) {
        return this.adjustHue(i),
        this.adjustContrast(t),
        this.adjustBrightness(e),
        this.adjustSaturation(a)
    }
    ,
    e.adjustBrightness = function(e) {
        return 0 == e || isNaN(e) || (e = this._cleanValue(e, 255),
        this._multiplyMatrix([1, 0, 0, 0, e, 0, 1, 0, 0, e, 0, 0, 1, 0, e, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1])),
        this
    }
    ,
    e.adjustContrast = function(e) {
        return 0 == e || isNaN(e) || (t = (e = this._cleanValue(e, 100)) < 0 ? 127 + e / 100 * 127 : 127 * (t = 0 == (t = e % 1) ? i.DELTA_INDEX[e] : i.DELTA_INDEX[e << 0] * (1 - t) + i.DELTA_INDEX[1 + (e << 0)] * t) + 127,
        this._multiplyMatrix([t / 127, 0, 0, 0, .5 * (127 - t), 0, t / 127, 0, 0, .5 * (127 - t), 0, 0, t / 127, 0, .5 * (127 - t), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1])),
        this;
        var t
    }
    ,
    e.adjustSaturation = function(e) {
        if (0 == e || isNaN(e))
            return this;
        e = 1 + (0 < (e = this._cleanValue(e, 100)) ? 3 * e / 100 : e / 100);
        return this._multiplyMatrix([.3086 * (1 - e) + e, .6094 * (1 - e), .082 * (1 - e), 0, 0, .3086 * (1 - e), .6094 * (1 - e) + e, .082 * (1 - e), 0, 0, .3086 * (1 - e), .6094 * (1 - e), .082 * (1 - e) + e, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]),
        this
    }
    ,
    e.adjustHue = function(e) {
        if (0 == e || isNaN(e))
            return this;
        e = this._cleanValue(e, 180) / 180 * Math.PI;
        var t = Math.cos(e)
          , a = Math.sin(e)
          , i = .213
          , n = .715
          , e = .072;
        return this._multiplyMatrix([i + .787 * t + a * -i, n + t * -n + a * -n, e + t * -e + .928 * a, 0, 0, i + t * -i + .143 * a, n + t * (1 - n) + .14 * a, e + t * -e + -.283 * a, 0, 0, i + t * -i + -.787 * a, n + t * -n + a * n, e + .928 * t + a * e, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]),
        this
    }
    ,
    e.concat = function(e) {
        return (e = this._fixMatrix(e)).length != i.LENGTH || this._multiplyMatrix(e),
        this
    }
    ,
    e.clone = function() {
        return (new i).copy(this)
    }
    ,
    e.toArray = function() {
        for (var e = [], t = 0, a = i.LENGTH; t < a; t++)
            e[t] = this[t];
        return e
    }
    ,
    e.copy = function(e) {
        for (var t = i.LENGTH, a = 0; a < t; a++)
            this[a] = e[a];
        return this
    }
    ,
    e.toString = function() {
        return "[ColorMatrix]"
    }
    ,
    e._multiplyMatrix = function(e) {
        for (var t, a = [], i = 0; i < 5; i++) {
            for (t = 0; t < 5; t++)
                a[t] = this[t + 5 * i];
            for (t = 0; t < 5; t++) {
                for (var n = 0, r = 0; r < 5; r++)
                    n += e[t + 5 * r] * a[r];
                this[t + 5 * i] = n
            }
        }
    }
    ,
    e._cleanValue = function(e, t) {
        return Math.min(t, Math.max(-t, e))
    }
    ,
    e._fixMatrix = function(e) {
        return e instanceof i && (e = e.toArray()),
        e.length < i.LENGTH ? e = e.slice(0, e.length).concat(i.IDENTITY_MATRIX.slice(e.length, i.LENGTH)) : e.length > i.LENGTH && (e = e.slice(0, i.LENGTH)),
        e
    }
    ,
    createjs.ColorMatrix = i
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.Filter_constructor(),
        this.matrix = e,
        this.FRAG_SHADER_BODY = "uniform mat4 uColorMatrix;uniform vec4 uColorMatrixOffset;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);mat4 m = uColorMatrix;vec4 newColor = vec4(0,0,0,0);newColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];newColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];newColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];newColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];gl_FragColor = newColor + uColorMatrixOffset;}"
    }
    var t = createjs.extend(e, createjs.Filter);
    t.shaderParamSetup = function(e, t, a) {
        var i = this.matrix
          , n = new Float32Array([i[0], i[1], i[2], i[3], i[5], i[6], i[7], i[8], i[10], i[11], i[12], i[13], i[15], i[16], i[17], i[18]]);
        e.uniformMatrix4fv(e.getUniformLocation(a, "uColorMatrix"), !1, n),
        e.uniform4f(e.getUniformLocation(a, "uColorMatrixOffset"), i[4] / 255, i[9] / 255, i[14] / 255, i[19] / 255)
    }
    ,
    t.toString = function() {
        return "[ColorMatrixFilter]"
    }
    ,
    t.clone = function() {
        return new e(this.matrix)
    }
    ,
    t._applyFilter = function(e) {
        for (var t, a, i, n, r = e.data, s = r.length, e = this.matrix, o = e[0], l = e[1], c = e[2], d = e[3], u = e[4], h = e[5], p = e[6], m = e[7], g = e[8], f = e[9], v = e[10], _ = e[11], y = e[12], P = e[13], S = e[14], b = e[15], T = e[16], C = e[17], M = e[18], I = e[19], A = 0; A < s; A += 4)
            t = r[A],
            a = r[A + 1],
            i = r[A + 2],
            n = r[A + 3],
            r[A] = t * o + a * l + i * c + n * d + u,
            r[A + 1] = t * h + a * p + i * m + n * g + f,
            r[A + 2] = t * v + a * _ + i * y + n * P + S,
            r[A + 3] = t * b + a * T + i * C + n * M + I;
        return !0
    }
    ,
    createjs.ColorMatrixFilter = createjs.promote(e, "Filter")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function i() {
        throw "Touch cannot be instantiated"
    }
    i.isSupported = function() {
        return !!("ontouchstart"in window || window.navigator.msPointerEnabled && 0 < window.navigator.msMaxTouchPoints || window.navigator.pointerEnabled && 0 < window.navigator.maxTouchPoints)
    }
    ,
    i.enable = function(e, t, a) {
        return !!(e && e.canvas && i.isSupported()) && (e.__touch || (e.__touch = {
            pointers: {},
            multitouch: !t,
            preventDefault: !a,
            count: 0
        },
        "ontouchstart"in window ? i._IOS_enable(e) : (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) && i._IE_enable(e)),
        !0)
    }
    ,
    i.disable = function(e) {
        e && ("ontouchstart"in window ? i._IOS_disable(e) : (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) && i._IE_disable(e),
        delete e.__touch)
    }
    ,
    i._IOS_enable = function(t) {
        var e = t.canvas
          , a = t.__touch.f = function(e) {
            i._IOS_handleEvent(t, e)
        }
        ;
        e.addEventListener("touchstart", a, !1),
        e.addEventListener("touchmove", a, !1),
        e.addEventListener("touchend", a, !1),
        e.addEventListener("touchcancel", a, !1)
    }
    ,
    i._IOS_disable = function(e) {
        var t = e.canvas;
        t && (e = e.__touch.f,
        t.removeEventListener("touchstart", e, !1),
        t.removeEventListener("touchmove", e, !1),
        t.removeEventListener("touchend", e, !1),
        t.removeEventListener("touchcancel", e, !1))
    }
    ,
    i._IOS_handleEvent = function(e, t) {
        if (e) {
            e.__touch.preventDefault && t.preventDefault && t.preventDefault();
            for (var a = t.changedTouches, i = t.type, n = 0, r = a.length; n < r; n++) {
                var s = a[n]
                  , o = s.identifier;
                s.target == e.canvas && ("touchstart" == i ? this._handleStart(e, o, t, s.pageX, s.pageY) : "touchmove" == i ? this._handleMove(e, o, t, s.pageX, s.pageY) : "touchend" != i && "touchcancel" != i || this._handleEnd(e, o, t))
            }
        }
    }
    ,
    i._IE_enable = function(t) {
        var e = t.canvas
          , a = t.__touch.f = function(e) {
            i._IE_handleEvent(t, e)
        }
        ;
        void 0 === window.navigator.pointerEnabled ? (e.addEventListener("MSPointerDown", a, !1),
        window.addEventListener("MSPointerMove", a, !1),
        window.addEventListener("MSPointerUp", a, !1),
        window.addEventListener("MSPointerCancel", a, !1),
        t.__touch.preventDefault && (e.style.msTouchAction = "none")) : (e.addEventListener("pointerdown", a, !1),
        window.addEventListener("pointermove", a, !1),
        window.addEventListener("pointerup", a, !1),
        window.addEventListener("pointercancel", a, !1),
        t.__touch.preventDefault && (e.style.touchAction = "none")),
        t.__touch.activeIDs = {}
    }
    ,
    i._IE_disable = function(e) {
        var t = e.__touch.f;
        void 0 === window.navigator.pointerEnabled ? (window.removeEventListener("MSPointerMove", t, !1),
        window.removeEventListener("MSPointerUp", t, !1),
        window.removeEventListener("MSPointerCancel", t, !1),
        e.canvas && e.canvas.removeEventListener("MSPointerDown", t, !1)) : (window.removeEventListener("pointermove", t, !1),
        window.removeEventListener("pointerup", t, !1),
        window.removeEventListener("pointercancel", t, !1),
        e.canvas && e.canvas.removeEventListener("pointerdown", t, !1))
    }
    ,
    i._IE_handleEvent = function(e, t) {
        var a, i, n;
        e && (e.__touch.preventDefault && t.preventDefault && t.preventDefault(),
        a = t.type,
        i = t.pointerId,
        n = e.__touch.activeIDs,
        "MSPointerDown" == a || "pointerdown" == a ? t.srcElement == e.canvas && (n[i] = !0,
        this._handleStart(e, i, t, t.pageX, t.pageY)) : n[i] && ("MSPointerMove" == a || "pointermove" == a ? this._handleMove(e, i, t, t.pageX, t.pageY) : "MSPointerUp" != a && "MSPointerCancel" != a && "pointerup" != a && "pointercancel" != a || (delete n[i],
        this._handleEnd(e, i, t))))
    }
    ,
    i._handleStart = function(e, t, a, i, n) {
        var r, s = e.__touch;
        !s.multitouch && s.count || ((r = s.pointers)[t] || (r[t] = !0,
        s.count++,
        e._handlePointerDown(t, a, i, n)))
    }
    ,
    i._handleMove = function(e, t, a, i, n) {
        e.__touch.pointers[t] && e._handlePointerMove(t, a, i, n)
    }
    ,
    i._handleEnd = function(e, t, a) {
        var i = e.__touch
          , n = i.pointers;
        n[t] && (i.count--,
        e._handlePointerUp(t, a, !0),
        delete n[t])
    }
    ,
    createjs.Touch = i
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    var e = createjs.EaselJS = createjs.EaselJS || {};
    e.version = "1.0.0",
    e.buildDate = "Thu, 12 Oct 2017 16:34:10 GMT"
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    var e = createjs.PreloadJS = createjs.PreloadJS || {};
    e.version = "1.0.0",
    e.buildDate = "Thu, 12 Oct 2017 16:34:05 GMT"
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    createjs.proxy = function(e, t) {
        var a = Array.prototype.slice.call(arguments, 2);
        return function() {
            return e.apply(t, Array.prototype.slice.call(arguments, 0).concat(a))
        }
    }
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a) {
        this.Event_constructor("error"),
        this.title = e,
        this.message = t,
        this.data = a
    }
    createjs.extend(e, createjs.Event).clone = function() {
        return new createjs.ErrorEvent(this.title,this.message,this.data)
    }
    ,
    createjs.ErrorEvent = createjs.promote(e, "Event")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.Event_constructor("progress"),
        this.loaded = e,
        this.total = null == t ? 1 : t,
        this.progress = 0 == t ? 0 : this.loaded / this.total
    }
    createjs.extend(e, createjs.Event).clone = function() {
        return new createjs.ProgressEvent(this.loaded,this.total)
    }
    ,
    createjs.ProgressEvent = createjs.promote(e, "Event")
}(window),
function() {
    function O(e, l) {
        function c(e) {
            if (c[e] !== C)
                return c[e];
            var t;
            if ("bug-string-char-index" == e)
                t = "a" != "a"[0];
            else if ("json" == e)
                t = c("json-stringify") && c("json-parse");
            else {
                var a, i = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                if ("json-stringify" == e) {
                    var n = l.stringify
                      , r = "function" == typeof n && G;
                    if (r) {
                        (a = function() {
                            return 1
                        }
                        ).toJSON = a;
                        try {
                            r = "0" === n(0) && "0" === n(new d) && '""' == n(new u) && n(B) === C && n(C) === C && n() === C && "1" === n(a) && "[1]" == n([a]) && "[null]" == n([C]) && "null" == n(null) && "[null,null,null]" == n([C, B, null]) && n({
                                a: [a, !0, !1, null, "\0\b\n\f\r\t"]
                            }) == i && "1" === n(null, a) && "[\n 1,\n 2\n]" == n([1, 2], null, 1) && '"-271821-04-20T00:00:00.000Z"' == n(new h(-864e13)) && '"+275760-09-13T00:00:00.000Z"' == n(new h(864e13)) && '"-000001-01-01T00:00:00.000Z"' == n(new h(-621987552e5)) && '"1969-12-31T23:59:59.999Z"' == n(new h(-1))
                        } catch (e) {
                            r = !1
                        }
                    }
                    t = r
                }
                if ("json-parse" == e) {
                    var s = l.parse;
                    if ("function" == typeof s)
                        try {
                            if (0 === s("0") && !s(!1)) {
                                var o = 5 == (a = s(i)).a.length && 1 === a.a[0];
                                if (o) {
                                    try {
                                        o = !s('"\t"')
                                    } catch (e) {}
                                    if (o)
                                        try {
                                            o = 1 !== s("01")
                                        } catch (e) {}
                                    if (o)
                                        try {
                                            o = 1 !== s("1.")
                                        } catch (e) {}
                                }
                            }
                        } catch (e) {
                            o = !1
                        }
                    t = o
                }
            }
            return c[e] = !!t
        }
        e = e || F.Object(),
        l = l || F.Object();
        var d = e.Number || F.Number
          , u = e.String || F.String
          , t = e.Object || F.Object
          , h = e.Date || F.Date
          , a = e.SyntaxError || F.SyntaxError
          , S = e.TypeError || F.TypeError
          , i = e.Math || F.Math
          , e = e.JSON || F.JSON;
        "object" == typeof e && e && (l.stringify = e.stringify,
        l.parse = e.parse);
        var b, T, C, p, M, I, A, o, L, n, x, m, D, w, k, g, f, v, _, y, r, s, P, $, t = t.prototype, B = t.toString, G = new h(-0xc782b5b800cec);
        try {
            G = -109252 == G.getUTCFullYear() && 0 === G.getUTCMonth() && 1 === G.getUTCDate() && 10 == G.getUTCHours() && 37 == G.getUTCMinutes() && 6 == G.getUTCSeconds() && 708 == G.getUTCMilliseconds()
        } catch (e) {}
        return c("json") || (p = "[object Function]",
        M = "[object Number]",
        I = "[object String]",
        A = "[object Array]",
        o = c("bug-string-char-index"),
        G || (L = i.floor,
        n = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
        x = function(e, t) {
            return n[t] + 365 * (e - 1970) + L((e - 1969 + (t = +(1 < t))) / 4) - L((e - 1901 + t) / 100) + L((e - 1601 + t) / 400)
        }
        ),
        (b = t.hasOwnProperty) || (b = function(e) {
            var a, t = {
                __proto__: null
            };
            return t.__proto__ = {
                toString: 1
            },
            b = t.toString != B ? function(e) {
                var t = this.__proto__
                  , e = e in (this.__proto__ = null,
                this);
                return this.__proto__ = t,
                e
            }
            : (a = t.constructor,
            function(e) {
                var t = (this.constructor || a).prototype;
                return e in this && !(e in t && this[e] === t[e])
            }
            ),
            t = null,
            b.call(this, e)
        }
        ),
        T = function(e, t) {
            var a, s, i, n = 0;
            for (i in (a = function() {
                this.valueOf = 0
            }
            ).prototype.valueOf = 0,
            s = new a)
                b.call(s, i) && n++;
            return a = s = null,
            (T = n ? 2 == n ? function(e, t) {
                var a, i = {}, n = B.call(e) == p;
                for (a in e)
                    n && "prototype" == a || b.call(i, a) || !(i[a] = 1) || !b.call(e, a) || t(a)
            }
            : function(e, t) {
                var a, i, n = B.call(e) == p;
                for (a in e)
                    n && "prototype" == a || !b.call(e, a) || (i = "constructor" === a) || t(a);
                (i || b.call(e, a = "constructor")) && t(a)
            }
            : (s = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"],
            function(e, t) {
                var a, i, n = B.call(e) == p, r = !n && "function" != typeof e.constructor && E[typeof e.hasOwnProperty] && e.hasOwnProperty || b;
                for (a in e)
                    n && "prototype" == a || !r.call(e, a) || t(a);
                for (i = s.length; a = s[--i]; r.call(e, a) && t(a))
                    ;
            }
            ))(e, t)
        }
        ,
        c("json-stringify") || (m = {
            92: "\\\\",
            34: '\\"',
            8: "\\b",
            12: "\\f",
            10: "\\n",
            13: "\\r",
            9: "\\t"
        },
        D = function(e, t) {
            return ("000000" + (t || 0)).slice(-e)
        }
        ,
        w = function(e) {
            for (var t = '"', a = 0, i = e.length, n = !o || 10 < i, r = n && (o ? e.split("") : e); a < i; a++) {
                var s = e.charCodeAt(a);
                switch (s) {
                case 8:
                case 9:
                case 10:
                case 12:
                case 13:
                case 34:
                case 92:
                    t += m[s];
                    break;
                default:
                    if (s < 32) {
                        t += "\\u00" + D(2, s.toString(16));
                        break
                    }
                    t += n ? r[a] : e.charAt(a)
                }
            }
            return t + '"'
        }
        ,
        k = function(e, t, a, i, n, r, s) {
            var o, l, c, d, u, h, p, m, g, f, v, _, y, P;
            try {
                o = t[e]
            } catch (e) {}
            if ("object" == typeof o && o)
                if ("[object Date]" != (l = B.call(o)) || b.call(o, "toJSON"))
                    "function" == typeof o.toJSON && (l != M && l != I && l != A || b.call(o, "toJSON")) && (o = o.toJSON(e));
                else if (-1 / 0 < o && o < 1 / 0) {
                    if (x) {
                        for (u = L(o / 864e5),
                        c = L(u / 365.2425) + 1970 - 1; x(c + 1, 0) <= u; c++)
                            ;
                        for (d = L((u - x(c, 0)) / 30.42); x(c, d + 1) <= u; d++)
                            ;
                        u = 1 + u - x(c, d),
                        h = L((y = (o % 864e5 + 864e5) % 864e5) / 36e5) % 24,
                        p = L(y / 6e4) % 60,
                        m = L(y / 1e3) % 60,
                        y = y % 1e3
                    } else
                        c = o.getUTCFullYear(),
                        d = o.getUTCMonth(),
                        u = o.getUTCDate(),
                        h = o.getUTCHours(),
                        p = o.getUTCMinutes(),
                        m = o.getUTCSeconds(),
                        y = o.getUTCMilliseconds();
                    o = (c <= 0 || 1e4 <= c ? (c < 0 ? "-" : "+") + D(6, c < 0 ? -c : c) : D(4, c)) + "-" + D(2, d + 1) + "-" + D(2, u) + "T" + D(2, h) + ":" + D(2, p) + ":" + D(2, m) + "." + D(3, y) + "Z"
                } else
                    o = null;
            if (a && (o = a.call(t, e, o)),
            null === o)
                return "null";
            if ("[object Boolean]" == (l = B.call(o)))
                return "" + o;
            if (l == M)
                return -1 / 0 < o && o < 1 / 0 ? "" + o : "null";
            if (l == I)
                return w("" + o);
            if ("object" == typeof o) {
                for (_ = s.length; _--; )
                    if (s[_] === o)
                        throw S();
                if (s.push(o),
                g = [],
                y = r,
                r += n,
                l == A) {
                    for (v = 0,
                    _ = o.length; v < _; v++)
                        f = k(v, o, a, i, n, r, s),
                        g.push(f === C ? "null" : f);
                    P = g.length ? n ? "[\n" + r + g.join(",\n" + r) + "\n" + y + "]" : "[" + g.join(",") + "]" : "[]"
                } else
                    T(i || o, function(e) {
                        var t = k(e, o, a, i, n, r, s);
                        t !== C && g.push(w(e) + ":" + (n ? " " : "") + t)
                    }),
                    P = g.length ? n ? "{\n" + r + g.join(",\n" + r) + "\n" + y + "}" : "{" + g.join(",") + "}" : "{}";
                return s.pop(),
                P
            }
        }
        ,
        l.stringify = function(e, t, a) {
            var i, n, r, s;
            if (E[typeof t] && t)
                if ((s = B.call(t)) == p)
                    n = t;
                else if (s == A) {
                    r = {};
                    for (var o, l = 0, c = t.length; l < c; o = t[l++],
                    (s = B.call(o)) != I && s != M || (r[o] = 1))
                        ;
                }
            if (a)
                if ((s = B.call(a)) == M) {
                    if (0 < (a -= a % 1))
                        for (i = "",
                        10 < a && (a = 10); i.length < a; i += " ")
                            ;
                } else
                    s == I && (i = a.length <= 10 ? a : a.slice(0, 10));
            return k("", ((o = {})[""] = e,
            o), n, r, i, "", [])
        }
        ),
        c("json-parse") || (v = u.fromCharCode,
        _ = {
            92: "\\",
            34: '"',
            47: "/",
            98: "\b",
            116: "\t",
            110: "\n",
            102: "\f",
            114: "\r"
        },
        y = function() {
            throw g = f = null,
            a()
        }
        ,
        r = function() {
            for (var e, t, a, i, n, r = f, s = r.length; g < s; )
                switch (n = r.charCodeAt(g)) {
                case 9:
                case 10:
                case 13:
                case 32:
                    g++;
                    break;
                case 123:
                case 125:
                case 91:
                case 93:
                case 58:
                case 44:
                    return e = o ? r.charAt(g) : r[g],
                    g++,
                    e;
                case 34:
                    for (e = "@",
                    g++; g < s; )
                        if ((n = r.charCodeAt(g)) < 32)
                            y();
                        else if (92 == n)
                            switch (n = r.charCodeAt(++g)) {
                            case 92:
                            case 34:
                            case 47:
                            case 98:
                            case 116:
                            case 110:
                            case 102:
                            case 114:
                                e += _[n],
                                g++;
                                break;
                            case 117:
                                for (t = ++g,
                                a = g + 4; g < a; g++)
                                    48 <= (n = r.charCodeAt(g)) && n <= 57 || 97 <= n && n <= 102 || 65 <= n && n <= 70 || y();
                                e += v("0x" + r.slice(t, g));
                                break;
                            default:
                                y()
                            }
                        else {
                            if (34 == n)
                                break;
                            for (n = r.charCodeAt(g),
                            t = g; 32 <= n && 92 != n && 34 != n; )
                                n = r.charCodeAt(++g);
                            e += r.slice(t, g)
                        }
                    if (34 == r.charCodeAt(g))
                        return g++,
                        e;
                    y();
                default:
                    if (t = g,
                    45 == n && (i = !0,
                    n = r.charCodeAt(++g)),
                    48 <= n && n <= 57) {
                        for (48 == n && (48 <= (n = r.charCodeAt(g + 1)) && n <= 57) && y(),
                        i = !1; g < s && (48 <= (n = r.charCodeAt(g)) && n <= 57); g++)
                            ;
                        if (46 == r.charCodeAt(g)) {
                            for (a = ++g; a < s && (48 <= (n = r.charCodeAt(a)) && n <= 57); a++)
                                ;
                            a == g && y(),
                            g = a
                        }
                        if (101 == (n = r.charCodeAt(g)) || 69 == n) {
                            for (43 != (n = r.charCodeAt(++g)) && 45 != n || g++,
                            a = g; a < s && (48 <= (n = r.charCodeAt(a)) && n <= 57); a++)
                                ;
                            a == g && y(),
                            g = a
                        }
                        return +r.slice(t, g)
                    }
                    if (i && y(),
                    "true" == r.slice(g, g + 4))
                        return g += 4,
                        !0;
                    if ("false" == r.slice(g, g + 5))
                        return g += 5,
                        !1;
                    if ("null" == r.slice(g, g + 4))
                        return g += 4,
                        null;
                    y()
                }
            return "$"
        }
        ,
        s = function(e) {
            var t, a;
            if ("$" == e && y(),
            "string" == typeof e) {
                if ("@" == (o ? e.charAt(0) : e[0]))
                    return e.slice(1);
                if ("[" == e) {
                    for (t = []; "]" != (e = r()); a = a || !0)
                        a && ("," == e ? "]" == (e = r()) && y() : y()),
                        "," == e && y(),
                        t.push(s(e));
                    return t
                }
                if ("{" == e) {
                    for (t = {}; "}" != (e = r()); a = a || !0)
                        a && ("," == e ? "}" == (e = r()) && y() : y()),
                        "," != e && "string" == typeof e && "@" == (o ? e.charAt(0) : e[0]) && ":" == r() || y(),
                        t[e.slice(1)] = s(r());
                    return t
                }
                y()
            }
            return e
        }
        ,
        P = function(e, t, a) {
            a = $(e, t, a);
            a === C ? delete e[t] : e[t] = a
        }
        ,
        $ = function(e, t, a) {
            var i, n = e[t];
            if ("object" == typeof n && n)
                if (B.call(n) == A)
                    for (i = n.length; i--; )
                        P(n, i, a);
                else
                    T(n, function(e) {
                        P(n, e, a)
                    });
            return a.call(e, t, n)
        }
        ,
        l.parse = function(e, t) {
            var a;
            return g = 0,
            f = "" + e,
            a = s(r()),
            "$" != r() && y(),
            g = f = null,
            t && B.call(t) == p ? $(((e = {})[""] = a,
            e), "", t) : a
        }
        )),
        l.runInContext = O,
        l
    }
    var e, t, a, i, n = "function" == typeof define && define.amd, E = {
        function: !0,
        object: !0
    }, r = E[typeof exports] && exports && !exports.nodeType && exports, F = E[typeof window] && window || this, s = r && E[typeof module] && module && !module.nodeType && "object" == typeof global && global;
    !s || s.global !== s && s.window !== s && s.self !== s || (F = s),
    r && !n ? O(F, r) : (e = F.JSON,
    t = F.JSON3,
    a = !1,
    i = O(F, F.JSON3 = {
        noConflict: function() {
            return a || (a = !0,
            F.JSON = e,
            F.JSON3 = t,
            e = t = null),
            i
        }
    }),
    F.JSON = {
        parse: i.parse,
        stringify: i.stringify
    }),
    n && define(function() {
        return i
    })
}
.call(this),
function() {
    var e = {
        a: function() {
            return e.el("a")
        },
        svg: function() {
            return e.el("svg")
        },
        object: function() {
            return e.el("object")
        },
        image: function() {
            return e.el("image")
        },
        img: function() {
            return e.el("img")
        },
        style: function() {
            return e.el("style")
        },
        link: function() {
            return e.el("link")
        },
        script: function() {
            return e.el("script")
        },
        audio: function() {
            return e.el("audio")
        },
        video: function() {
            return e.el("video")
        },
        text: function(e) {
            return document.createTextNode(e)
        },
        el: function(e) {
            return document.createElement(e)
        }
    };
    createjs.Elements = e
}(),
function() {
    var r = {
        ABSOLUTE_PATT: /^(?:\w+:)?\/{2}/i,
        RELATIVE_PATT: /^[.\/]*?\//i,
        EXTENSION_PATT: /\/?[^\/]+\.(\w{1,5})$/i,
        parseURI: function(e) {
            var t = {
                absolute: !1,
                relative: !1,
                protocol: null,
                hostname: null,
                port: null,
                pathname: null,
                search: null,
                hash: null,
                host: null
            };
            if (null == e)
                return t;
            var a, i = createjs.Elements.a();
            for (a in i.href = e,
            t)
                a in i && (t[a] = i[a]);
            var n = e.indexOf("?");
            return -1 < n && (e = e.substr(0, n)),
            r.ABSOLUTE_PATT.test(e) ? t.absolute = !0 : r.RELATIVE_PATT.test(e) && (t.relative = !0),
            (e = e.match(r.EXTENSION_PATT)) && (t.extension = e[1].toLowerCase()),
            t
        },
        formatQueryString: function(e, t) {
            if (null == e)
                throw new Error("You must specify data.");
            var a, i = [];
            for (a in e)
                i.push(a + "=" + escape(e[a]));
            return t && (i = i.concat(t)),
            i.join("&")
        },
        buildURI: function(e, t) {
            if (null == t)
                return e;
            var a, i = [], n = e.indexOf("?");
            return -1 != n && (a = e.slice(n + 1),
            i = i.concat(a.split("&"))),
            -1 != n ? e.slice(0, n) + "?" + this.formatQueryString(t, i) : e + "?" + this.formatQueryString(t, i)
        },
        isCrossDomain: function(e) {
            var t = createjs.Elements.a();
            t.href = e.src;
            e = createjs.Elements.a();
            return e.href = location.href,
            "" != t.hostname && (t.port != e.port || t.protocol != e.protocol || t.hostname != e.hostname)
        },
        isLocal: function(e) {
            var t = createjs.Elements.a();
            return t.href = e.src,
            "" == t.hostname && "file:" == t.protocol
        }
    };
    createjs.URLUtils = r
}(),
function() {
    var a = {
        container: null,
        appendToHead: function(e) {
            a.getHead().appendChild(e)
        },
        appendToBody: function(e) {
            var t;
            null == a.container && (a.container = document.createElement("div"),
            a.container.id = "preloadjs-container",
            (t = a.container.style).visibility = "hidden",
            t.position = "absolute",
            t.width = a.container.style.height = "10px",
            t.overflow = "hidden",
            t.transform = t.msTransform = t.webkitTransform = t.oTransform = "translate(-10px, -10px)",
            a.getBody().appendChild(a.container)),
            a.container.appendChild(e)
        },
        getHead: function() {
            return document.head || document.getElementsByTagName("head")[0]
        },
        getBody: function() {
            return document.body || document.getElementsByTagName("body")[0]
        },
        removeChild: function(e) {
            e.parent && e.parent.removeChild(e)
        },
        isImageTag: function(e) {
            return e instanceof HTMLImageElement
        },
        isAudioTag: function(e) {
            return !!window.HTMLAudioElement && e instanceof HTMLAudioElement
        },
        isVideoTag: function(e) {
            return !!window.HTMLVideoElement && e instanceof HTMLVideoElement
        }
    };
    createjs.DomUtils = a
}(),
function() {
    var e = {
        parseXML: function(e) {
            var t = null;
            try {
                window.DOMParser && (t = (new DOMParser).parseFromString(e, "text/xml"))
            } catch (e) {}
            if (!t)
                try {
                    (t = new ActiveXObject("Microsoft.XMLDOM")).async = !1,
                    t.loadXML(e)
                } catch (e) {
                    t = null
                }
            return t
        },
        parseJSON: function(e) {
            if (null == e)
                return null;
            try {
                return JSON.parse(e)
            } catch (e) {
                throw e
            }
        }
    };
    createjs.DataUtils = e
}(),
this.createjs = this.createjs || {},
function() {
    var e = {
        BINARY: "binary",
        CSS: "css",
        FONT: "font",
        FONTCSS: "fontcss",
        IMAGE: "image",
        JAVASCRIPT: "javascript",
        JSON: "json",
        JSONP: "jsonp",
        MANIFEST: "manifest",
        SOUND: "sound",
        VIDEO: "video",
        SPRITESHEET: "spritesheet",
        SVG: "svg",
        TEXT: "text",
        XML: "xml"
    };
    createjs.Types = e
}(),
this.createjs = this.createjs || {},
function() {
    var e = {
        POST: "POST",
        GET: "GET"
    };
    createjs.Methods = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function a() {
        this.src = null,
        this.type = null,
        this.id = null,
        this.maintainOrder = !1,
        this.callback = null,
        this.data = null,
        this.method = createjs.Methods.GET,
        this.values = null,
        this.headers = null,
        this.withCredentials = !1,
        this.mimeType = null,
        this.crossOrigin = null,
        this.loadTimeout = i.LOAD_TIMEOUT_DEFAULT
    }
    var e = a.prototype = {}
      , i = a;
    i.LOAD_TIMEOUT_DEFAULT = 8e3,
    i.create = function(e) {
        if ("string" == typeof e) {
            var t = new a;
            return t.src = e,
            t
        }
        if (e instanceof i)
            return e;
        if (e instanceof Object && e.src)
            return null == e.loadTimeout && (e.loadTimeout = i.LOAD_TIMEOUT_DEFAULT),
            e;
        throw new Error("Type not recognized.")
    }
    ,
    e.set = function(e) {
        for (var t in e)
            this[t] = e[t];
        return this
    }
    ,
    createjs.LoadItem = i
}(),
function() {
    var e = {
        isBinary: function(e) {
            switch (e) {
            case createjs.Types.IMAGE:
            case createjs.Types.BINARY:
                return !0;
            default:
                return !1
            }
        },
        isText: function(e) {
            switch (e) {
            case createjs.Types.TEXT:
            case createjs.Types.JSON:
            case createjs.Types.MANIFEST:
            case createjs.Types.XML:
            case createjs.Types.CSS:
            case createjs.Types.SVG:
            case createjs.Types.JAVASCRIPT:
            case createjs.Types.SPRITESHEET:
                return !0;
            default:
                return !1
            }
        },
        getTypeByExtension: function(e) {
            if (null == e)
                return createjs.Types.TEXT;
            switch (e.toLowerCase()) {
            case "jpeg":
            case "jpg":
            case "gif":
            case "png":
            case "webp":
            case "bmp":
                return createjs.Types.IMAGE;
            case "ogg":
            case "mp3":
            case "webm":
                return createjs.Types.SOUND;
            case "mp4":
            case "webm":
            case "ts":
                return createjs.Types.VIDEO;
            case "json":
                return createjs.Types.JSON;
            case "xml":
                return createjs.Types.XML;
            case "css":
                return createjs.Types.CSS;
            case "js":
                return createjs.Types.JAVASCRIPT;
            case "svg":
                return createjs.Types.SVG;
            default:
                return createjs.Types.TEXT
            }
        }
    };
    createjs.RequestUtils = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a) {
        this.EventDispatcher_constructor(),
        this.loaded = !1,
        this.canceled = !1,
        this.progress = 0,
        this.type = a,
        this.resultFormatter = null,
        this._item = e ? createjs.LoadItem.create(e) : null,
        this._preferXHR = t,
        this._result = null,
        this._rawResult = null,
        this._loadedItems = null,
        this._tagSrcAttribute = null,
        this._tag = null
    }
    var t = createjs.extend(e, createjs.EventDispatcher)
      , a = e;
    try {
        Object.defineProperties(a, {
            POST: {
                get: createjs.deprecate(function() {
                    return createjs.Methods.POST
                }, "AbstractLoader.POST")
            },
            GET: {
                get: createjs.deprecate(function() {
                    return createjs.Methods.GET
                }, "AbstractLoader.GET")
            },
            BINARY: {
                get: createjs.deprecate(function() {
                    return createjs.Types.BINARY
                }, "AbstractLoader.BINARY")
            },
            CSS: {
                get: createjs.deprecate(function() {
                    return createjs.Types.CSS
                }, "AbstractLoader.CSS")
            },
            FONT: {
                get: createjs.deprecate(function() {
                    return createjs.Types.FONT
                }, "AbstractLoader.FONT")
            },
            FONTCSS: {
                get: createjs.deprecate(function() {
                    return createjs.Types.FONTCSS
                }, "AbstractLoader.FONTCSS")
            },
            IMAGE: {
                get: createjs.deprecate(function() {
                    return createjs.Types.IMAGE
                }, "AbstractLoader.IMAGE")
            },
            JAVASCRIPT: {
                get: createjs.deprecate(function() {
                    return createjs.Types.JAVASCRIPT
                }, "AbstractLoader.JAVASCRIPT")
            },
            JSON: {
                get: createjs.deprecate(function() {
                    return createjs.Types.JSON
                }, "AbstractLoader.JSON")
            },
            JSONP: {
                get: createjs.deprecate(function() {
                    return createjs.Types.JSONP
                }, "AbstractLoader.JSONP")
            },
            MANIFEST: {
                get: createjs.deprecate(function() {
                    return createjs.Types.MANIFEST
                }, "AbstractLoader.MANIFEST")
            },
            SOUND: {
                get: createjs.deprecate(function() {
                    return createjs.Types.SOUND
                }, "AbstractLoader.SOUND")
            },
            VIDEO: {
                get: createjs.deprecate(function() {
                    return createjs.Types.VIDEO
                }, "AbstractLoader.VIDEO")
            },
            SPRITESHEET: {
                get: createjs.deprecate(function() {
                    return createjs.Types.SPRITESHEET
                }, "AbstractLoader.SPRITESHEET")
            },
            SVG: {
                get: createjs.deprecate(function() {
                    return createjs.Types.SVG
                }, "AbstractLoader.SVG")
            },
            TEXT: {
                get: createjs.deprecate(function() {
                    return createjs.Types.TEXT
                }, "AbstractLoader.TEXT")
            },
            XML: {
                get: createjs.deprecate(function() {
                    return createjs.Types.XML
                }, "AbstractLoader.XML")
            }
        })
    } catch (e) {}
    t.getItem = function() {
        return this._item
    }
    ,
    t.getResult = function(e) {
        return e ? this._rawResult : this._result
    }
    ,
    t.getTag = function() {
        return this._tag
    }
    ,
    t.setTag = function(e) {
        this._tag = e
    }
    ,
    t.load = function() {
        this._createRequest(),
        this._request.on("complete", this, this),
        this._request.on("progress", this, this),
        this._request.on("loadStart", this, this),
        this._request.on("abort", this, this),
        this._request.on("timeout", this, this),
        this._request.on("error", this, this);
        var e = new createjs.Event("initialize");
        e.loader = this._request,
        this.dispatchEvent(e),
        this._request.load()
    }
    ,
    t.cancel = function() {
        this.canceled = !0,
        this.destroy()
    }
    ,
    t.destroy = function() {
        this._request && (this._request.removeAllEventListeners(),
        this._request.destroy()),
        this._request = null,
        this._item = null,
        this._rawResult = null,
        this._result = null,
        this._loadItems = null,
        this.removeAllEventListeners()
    }
    ,
    t.getLoadedItems = function() {
        return this._loadedItems
    }
    ,
    t._createRequest = function() {
        this._preferXHR ? this._request = new createjs.XHRRequest(this._item) : this._request = new createjs.TagRequest(this._item,this._tag || this._createTag(),this._tagSrcAttribute)
    }
    ,
    t._createTag = function(e) {
        return null
    }
    ,
    t._sendLoadStart = function() {
        this._isCanceled() || this.dispatchEvent("loadstart")
    }
    ,
    t._sendProgress = function(e) {
        var t;
        this._isCanceled() || (t = null,
        "number" == typeof e ? (this.progress = e,
        t = new createjs.ProgressEvent(this.progress)) : (t = e,
        this.progress = e.loaded / e.total,
        t.progress = this.progress,
        !isNaN(this.progress) && this.progress != 1 / 0 || (this.progress = 0)),
        this.hasEventListener("progress") && this.dispatchEvent(t))
    }
    ,
    t._sendComplete = function() {
        var e;
        this._isCanceled() || (this.loaded = !0,
        (e = new createjs.Event("complete")).rawResult = this._rawResult,
        null != this._result && (e.result = this._result),
        this.dispatchEvent(e))
    }
    ,
    t._sendError = function(e) {
        !this._isCanceled() && this.hasEventListener("error") && (null == e && (e = new createjs.ErrorEvent("PRELOAD_ERROR_EMPTY")),
        this.dispatchEvent(e))
    }
    ,
    t._isCanceled = function() {
        return !(null != window.createjs && !this.canceled)
    }
    ,
    t.resultFormatter = null,
    t.handleEvent = function(e) {
        switch (e.type) {
        case "complete":
            this._rawResult = e.target._response;
            var t = this.resultFormatter && this.resultFormatter(this);
            t instanceof Function ? t.call(this, createjs.proxy(this._resultFormatSuccess, this), createjs.proxy(this._resultFormatFailed, this)) : (this._result = t || this._rawResult,
            this._sendComplete());
            break;
        case "progress":
            this._sendProgress(e);
            break;
        case "error":
            this._sendError(e);
            break;
        case "loadstart":
            this._sendLoadStart();
            break;
        case "abort":
        case "timeout":
            this._isCanceled() || this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_" + e.type.toUpperCase() + "_ERROR"))
        }
    }
    ,
    t._resultFormatSuccess = function(e) {
        this._result = e,
        this._sendComplete()
    }
    ,
    t._resultFormatFailed = function(e) {
        this._sendError(e)
    }
    ,
    t.toString = function() {
        return "[PreloadJS AbstractLoader]"
    }
    ,
    createjs.AbstractLoader = createjs.promote(e, "EventDispatcher")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a) {
        this.AbstractLoader_constructor(e, t, a),
        this.resultFormatter = this._formatResult,
        this._tagSrcAttribute = "src",
        this.on("initialize", this._updateXHR, this)
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    t.load = function() {
        this._tag || (this._tag = this._createTag(this._item.src)),
        this._tag.preload = "auto",
        this._tag.load(),
        this.AbstractLoader_load()
    }
    ,
    t._createTag = function() {}
    ,
    t._createRequest = function() {
        this._preferXHR ? this._request = new createjs.XHRRequest(this._item) : this._request = new createjs.MediaTagRequest(this._item,this._tag || this._createTag(),this._tagSrcAttribute)
    }
    ,
    t._updateXHR = function(e) {
        e.loader.setResponseType && e.loader.setResponseType("blob")
    }
    ,
    t._formatResult = function(e) {
        var t, a;
        return this._tag.removeEventListener && this._tag.removeEventListener("canplaythrough", this._loadedHandler),
        this._tag.onstalled = null,
        this._preferXHR && (t = window.URL || window.webkitURL,
        a = e.getResult(!0),
        e.getTag().src = t.createObjectURL(a)),
        e.getTag()
    }
    ,
    createjs.AbstractMediaLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this._item = e
    }
    var t = createjs.extend(e, createjs.EventDispatcher);
    t.load = function() {}
    ,
    t.destroy = function() {}
    ,
    t.cancel = function() {}
    ,
    createjs.AbstractRequest = createjs.promote(e, "EventDispatcher")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a) {
        this.AbstractRequest_constructor(e),
        this._tag = t,
        this._tagSrcAttribute = a,
        this._loadedHandler = createjs.proxy(this._handleTagComplete, this),
        this._addedToDOM = !1
    }
    var t = createjs.extend(e, createjs.AbstractRequest);
    t.load = function() {
        this._tag.onload = createjs.proxy(this._handleTagComplete, this),
        this._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this),
        this._tag.onerror = createjs.proxy(this._handleError, this);
        var e = new createjs.Event("initialize");
        e.loader = this._tag,
        this.dispatchEvent(e),
        this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout),
        this._tag[this._tagSrcAttribute] = this._item.src,
        null == this._tag.parentNode && (createjs.DomUtils.appendToBody(this._tag),
        this._addedToDOM = !0)
    }
    ,
    t.destroy = function() {
        this._clean(),
        this._tag = null,
        this.AbstractRequest_destroy()
    }
    ,
    t._handleReadyStateChange = function() {
        clearTimeout(this._loadTimeout);
        var e = this._tag;
        "loaded" != e.readyState && "complete" != e.readyState || this._handleTagComplete()
    }
    ,
    t._handleError = function() {
        this._clean(),
        this.dispatchEvent("error")
    }
    ,
    t._handleTagComplete = function() {
        this._rawResult = this._tag,
        this._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult,
        this._clean(),
        this.dispatchEvent("complete")
    }
    ,
    t._handleTimeout = function() {
        this._clean(),
        this.dispatchEvent(new createjs.Event("timeout"))
    }
    ,
    t._clean = function() {
        this._tag.onload = null,
        this._tag.onreadystatechange = null,
        this._tag.onerror = null,
        this._addedToDOM && null != this._tag.parentNode && this._tag.parentNode.removeChild(this._tag),
        clearTimeout(this._loadTimeout)
    }
    ,
    t._handleStalled = function() {}
    ,
    createjs.TagRequest = createjs.promote(e, "AbstractRequest")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a) {
        this.AbstractRequest_constructor(e),
        this._tag = t,
        this._tagSrcAttribute = a,
        this._loadedHandler = createjs.proxy(this._handleTagComplete, this)
    }
    var t = createjs.extend(e, createjs.TagRequest);
    t.load = function() {
        var e = createjs.proxy(this._handleStalled, this);
        this._stalledCallback = e;
        var t = createjs.proxy(this._handleProgress, this);
        this._handleProgress = t,
        this._tag.addEventListener("stalled", e),
        this._tag.addEventListener("progress", t),
        this._tag.addEventListener && this._tag.addEventListener("canplaythrough", this._loadedHandler, !1),
        this.TagRequest_load()
    }
    ,
    t._handleReadyStateChange = function() {
        clearTimeout(this._loadTimeout);
        var e = this._tag;
        "loaded" != e.readyState && "complete" != e.readyState || this._handleTagComplete()
    }
    ,
    t._handleStalled = function() {}
    ,
    t._handleProgress = function(e) {
        !e || 0 < e.loaded && 0 == e.total || (e = new createjs.ProgressEvent(e.loaded,e.total),
        this.dispatchEvent(e))
    }
    ,
    t._clean = function() {
        this._tag.removeEventListener && this._tag.removeEventListener("canplaythrough", this._loadedHandler),
        this._tag.removeEventListener("stalled", this._stalledCallback),
        this._tag.removeEventListener("progress", this._progressCallback),
        this.TagRequest__clean()
    }
    ,
    createjs.MediaTagRequest = createjs.promote(e, "TagRequest")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.AbstractRequest_constructor(e),
        this._request = null,
        this._loadTimeout = null,
        this._xhrLevel = 1,
        this._response = null,
        this._rawResponse = null,
        this._canceled = !1,
        this._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this),
        this._handleProgressProxy = createjs.proxy(this._handleProgress, this),
        this._handleAbortProxy = createjs.proxy(this._handleAbort, this),
        this._handleErrorProxy = createjs.proxy(this._handleError, this),
        this._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this),
        this._handleLoadProxy = createjs.proxy(this._handleLoad, this),
        this._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this),
        this._createXHR(e)
    }
    var t = createjs.extend(e, createjs.AbstractRequest);
    e.ACTIVEX_VERSIONS = ["Msxml2.XMLHTTP.6.0", "Msxml2.XMLHTTP.5.0", "Msxml2.XMLHTTP.4.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"],
    t.getResult = function(e) {
        return e && this._rawResponse ? this._rawResponse : this._response
    }
    ,
    t.cancel = function() {
        this.canceled = !0,
        this._clean(),
        this._request.abort()
    }
    ,
    t.load = function() {
        if (null != this._request) {
            null != this._request.addEventListener ? (this._request.addEventListener("loadstart", this._handleLoadStartProxy, !1),
            this._request.addEventListener("progress", this._handleProgressProxy, !1),
            this._request.addEventListener("abort", this._handleAbortProxy, !1),
            this._request.addEventListener("error", this._handleErrorProxy, !1),
            this._request.addEventListener("timeout", this._handleTimeoutProxy, !1),
            this._request.addEventListener("load", this._handleLoadProxy, !1),
            this._request.addEventListener("readystatechange", this._handleReadyStateChangeProxy, !1)) : (this._request.onloadstart = this._handleLoadStartProxy,
            this._request.onprogress = this._handleProgressProxy,
            this._request.onabort = this._handleAbortProxy,
            this._request.onerror = this._handleErrorProxy,
            this._request.ontimeout = this._handleTimeoutProxy,
            this._request.onload = this._handleLoadProxy,
            this._request.onreadystatechange = this._handleReadyStateChangeProxy),
            1 == this._xhrLevel && (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout));
            try {
                this._item.values ? this._request.send(createjs.URLUtils.formatQueryString(this._item.values)) : this._request.send()
            } catch (e) {
                this.dispatchEvent(new createjs.ErrorEvent("XHR_SEND",null,e))
            }
        } else
            this._handleError()
    }
    ,
    t.setResponseType = function(e) {
        "blob" === e && (e = window.URL ? "blob" : "arraybuffer",
        this._responseType = e),
        this._request.responseType = e
    }
    ,
    t.getAllResponseHeaders = function() {
        return this._request.getAllResponseHeaders instanceof Function ? this._request.getAllResponseHeaders() : null
    }
    ,
    t.getResponseHeader = function(e) {
        return this._request.getResponseHeader instanceof Function ? this._request.getResponseHeader(e) : null
    }
    ,
    t._handleProgress = function(e) {
        !e || 0 < e.loaded && 0 == e.total || (e = new createjs.ProgressEvent(e.loaded,e.total),
        this.dispatchEvent(e))
    }
    ,
    t._handleLoadStart = function(e) {
        clearTimeout(this._loadTimeout),
        this.dispatchEvent("loadstart")
    }
    ,
    t._handleAbort = function(e) {
        this._clean(),
        this.dispatchEvent(new createjs.ErrorEvent("XHR_ABORTED",null,e))
    }
    ,
    t._handleError = function(e) {
        this._clean(),
        this.dispatchEvent(new createjs.ErrorEvent(e.message))
    }
    ,
    t._handleReadyStateChange = function(e) {
        4 == this._request.readyState && this._handleLoad()
    }
    ,
    t._handleLoad = function(e) {
        if (!this.loaded) {
            this.loaded = !0;
            var t = this._checkError();
            if (t)
                this._handleError(t);
            else {
                if (this._response = this._getResponse(),
                "arraybuffer" === this._responseType)
                    try {
                        this._response = new Blob([this._response])
                    } catch (e) {
                        window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder,
                        "TypeError" === e.name && window.BlobBuilder && ((t = new BlobBuilder).append(this._response),
                        this._response = t.getBlob())
                    }
                this._clean(),
                this.dispatchEvent(new createjs.Event("complete"))
            }
        }
    }
    ,
    t._handleTimeout = function(e) {
        this._clean(),
        this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT",null,e))
    }
    ,
    t._checkError = function() {
        var e = parseInt(this._request.status);
        return 400 <= e && e <= 599 ? new Error(e) : 0 == e && /^https?:/.test(location.protocol) ? new Error(0) : null
    }
    ,
    t._getResponse = function() {
        if (null != this._response)
            return this._response;
        if (null != this._request.response)
            return this._request.response;
        try {
            if (null != this._request.responseText)
                return this._request.responseText
        } catch (e) {}
        try {
            if (null != this._request.responseXML)
                return this._request.responseXML
        } catch (e) {}
        return null
    }
    ,
    t._createXHR = function(e) {
        var t = createjs.URLUtils.isCrossDomain(e)
          , a = {}
          , i = null;
        if (window.XMLHttpRequest)
            i = new XMLHttpRequest,
            t && void 0 === i.withCredentials && window.XDomainRequest && (i = new XDomainRequest);
        else {
            for (var n = 0, r = s.ACTIVEX_VERSIONS.length; n < r; n++) {
                var o = s.ACTIVEX_VERSIONS[n];
                try {
                    i = new ActiveXObject(o);
                    break
                } catch (e) {}
            }
            if (null == i)
                return !1
        }
        null == e.mimeType && createjs.RequestUtils.isText(e.type) && (e.mimeType = "text/plain; charset=utf-8"),
        e.mimeType && i.overrideMimeType && i.overrideMimeType(e.mimeType),
        this._xhrLevel = "string" == typeof i.responseType ? 2 : 1;
        var l = e.method == createjs.Methods.GET ? createjs.URLUtils.buildURI(e.src, e.values) : e.src;
        if (i.open(e.method || createjs.Methods.GET, l, !0),
        t && i instanceof XMLHttpRequest && 1 == this._xhrLevel && (a.Origin = location.origin),
        e.values && e.method == createjs.Methods.POST && (a["Content-Type"] = "application/x-www-form-urlencoded"),
        t || a["X-Requested-With"] || (a["X-Requested-With"] = "XMLHttpRequest"),
        e.headers)
            for (var c in e.headers)
                a[c] = e.headers[c];
        for (c in a)
            i.setRequestHeader(c, a[c]);
        return i instanceof XMLHttpRequest && void 0 !== e.withCredentials && (i.withCredentials = e.withCredentials),
        this._request = i,
        !0
    }
    ,
    t._clean = function() {
        clearTimeout(this._loadTimeout),
        null != this._request.removeEventListener ? (this._request.removeEventListener("loadstart", this._handleLoadStartProxy),
        this._request.removeEventListener("progress", this._handleProgressProxy),
        this._request.removeEventListener("abort", this._handleAbortProxy),
        this._request.removeEventListener("error", this._handleErrorProxy),
        this._request.removeEventListener("timeout", this._handleTimeoutProxy),
        this._request.removeEventListener("load", this._handleLoadProxy),
        this._request.removeEventListener("readystatechange", this._handleReadyStateChangeProxy)) : (this._request.onloadstart = null,
        this._request.onprogress = null,
        this._request.onabort = null,
        this._request.onerror = null,
        this._request.ontimeout = null,
        this._request.onload = null,
        this._request.onreadystatechange = null)
    }
    ,
    t.toString = function() {
        return "[PreloadJS XHRRequest]"
    }
    ,
    createjs.XHRRequest = createjs.promote(e, "AbstractRequest")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a) {
        this.AbstractLoader_constructor(),
        this._plugins = [],
        this._typeCallbacks = {},
        this._extensionCallbacks = {},
        this.next = null,
        this.maintainScriptOrder = !0,
        this.stopOnError = !1,
        this._maxConnections = 1,
        this._availableLoaders = [createjs.FontLoader, createjs.ImageLoader, createjs.JavaScriptLoader, createjs.CSSLoader, createjs.JSONLoader, createjs.JSONPLoader, createjs.SoundLoader, createjs.ManifestLoader, createjs.SpriteSheetLoader, createjs.XMLLoader, createjs.SVGLoader, createjs.BinaryLoader, createjs.VideoLoader, createjs.TextLoader],
        this._defaultLoaderLength = this._availableLoaders.length,
        this.init(e, t, a)
    }
    var t = createjs.extend(e, createjs.AbstractLoader)
      , l = e;
    try {
        Object.defineProperties(l, {
            POST: {
                get: createjs.deprecate(function() {
                    return createjs.Methods.POST
                }, "AbstractLoader.POST")
            },
            GET: {
                get: createjs.deprecate(function() {
                    return createjs.Methods.GET
                }, "AbstractLoader.GET")
            },
            BINARY: {
                get: createjs.deprecate(function() {
                    return createjs.Types.BINARY
                }, "AbstractLoader.BINARY")
            },
            CSS: {
                get: createjs.deprecate(function() {
                    return createjs.Types.CSS
                }, "AbstractLoader.CSS")
            },
            FONT: {
                get: createjs.deprecate(function() {
                    return createjs.Types.FONT
                }, "AbstractLoader.FONT")
            },
            FONTCSS: {
                get: createjs.deprecate(function() {
                    return createjs.Types.FONTCSS
                }, "AbstractLoader.FONTCSS")
            },
            IMAGE: {
                get: createjs.deprecate(function() {
                    return createjs.Types.IMAGE
                }, "AbstractLoader.IMAGE")
            },
            JAVASCRIPT: {
                get: createjs.deprecate(function() {
                    return createjs.Types.JAVASCRIPT
                }, "AbstractLoader.JAVASCRIPT")
            },
            JSON: {
                get: createjs.deprecate(function() {
                    return createjs.Types.JSON
                }, "AbstractLoader.JSON")
            },
            JSONP: {
                get: createjs.deprecate(function() {
                    return createjs.Types.JSONP
                }, "AbstractLoader.JSONP")
            },
            MANIFEST: {
                get: createjs.deprecate(function() {
                    return createjs.Types.MANIFEST
                }, "AbstractLoader.MANIFEST")
            },
            SOUND: {
                get: createjs.deprecate(function() {
                    return createjs.Types.SOUND
                }, "AbstractLoader.SOUND")
            },
            VIDEO: {
                get: createjs.deprecate(function() {
                    return createjs.Types.VIDEO
                }, "AbstractLoader.VIDEO")
            },
            SPRITESHEET: {
                get: createjs.deprecate(function() {
                    return createjs.Types.SPRITESHEET
                }, "AbstractLoader.SPRITESHEET")
            },
            SVG: {
                get: createjs.deprecate(function() {
                    return createjs.Types.SVG
                }, "AbstractLoader.SVG")
            },
            TEXT: {
                get: createjs.deprecate(function() {
                    return createjs.Types.TEXT
                }, "AbstractLoader.TEXT")
            },
            XML: {
                get: createjs.deprecate(function() {
                    return createjs.Types.XML
                }, "AbstractLoader.XML")
            }
        })
    } catch (e) {}
    t.init = function(e, t, a) {
        this.preferXHR = !0,
        this._preferXHR = !0,
        this.setPreferXHR(e),
        this._paused = !1,
        this._basePath = t,
        this._crossOrigin = a,
        this._loadStartWasDispatched = !1,
        this._currentlyLoadingScript = null,
        this._currentLoads = [],
        this._loadQueue = [],
        this._loadQueueBackup = [],
        this._loadItemsById = {},
        this._loadItemsBySrc = {},
        this._loadedResults = {},
        this._loadedRawResults = {},
        this._numItems = 0,
        this._numItemsLoaded = 0,
        this._scriptOrder = [],
        this._loadedScripts = [],
        this._lastProgress = NaN
    }
    ,
    t.registerLoader = function(e) {
        if (!e || !e.canLoadItem)
            throw new Error("loader is of an incorrect type.");
        if (-1 != this._availableLoaders.indexOf(e))
            throw new Error("loader already exists.");
        this._availableLoaders.unshift(e)
    }
    ,
    t.unregisterLoader = function(e) {
        e = this._availableLoaders.indexOf(e);
        -1 != e && e < this._defaultLoaderLength - 1 && this._availableLoaders.splice(e, 1)
    }
    ,
    t.setPreferXHR = function(e) {
        return this.preferXHR = 0 != e && null != window.XMLHttpRequest,
        this.preferXHR
    }
    ,
    t.removeAll = function() {
        this.remove()
    }
    ,
    t.remove = function(e) {
        var t = null;
        if (e && !Array.isArray(e))
            t = [e];
        else if (e)
            t = e;
        else if (0 < arguments.length)
            return;
        var a = !1;
        if (t) {
            for (; t.length; ) {
                for (var i = t.pop(), n = this.getResult(i), r = this._loadQueue.length - 1; 0 <= r; r--)
                    if ((s = this._loadQueue[r].getItem()).id == i || s.src == i) {
                        this._loadQueue.splice(r, 1)[0].cancel();
                        break
                    }
                for (r = this._loadQueueBackup.length - 1; 0 <= r; r--)
                    if ((s = this._loadQueueBackup[r].getItem()).id == i || s.src == i) {
                        this._loadQueueBackup.splice(r, 1)[0].cancel();
                        break
                    }
                if (n)
                    this._disposeItem(this.getItem(i));
                else
                    for (var r = this._currentLoads.length - 1; 0 <= r; r--) {
                        var s = this._currentLoads[r].getItem();
                        if (s.id == i || s.src == i) {
                            this._currentLoads.splice(r, 1)[0].cancel(),
                            a = !0;
                            break
                        }
                    }
            }
            a && this._loadNext()
        } else {
            for (var o in this.close(),
            this._loadItemsById)
                this._disposeItem(this._loadItemsById[o]);
            this.init(this.preferXHR, this._basePath)
        }
    }
    ,
    t.reset = function() {
        for (var e in this.close(),
        this._loadItemsById)
            this._disposeItem(this._loadItemsById[e]);
        for (var t = [], a = 0, i = this._loadQueueBackup.length; a < i; a++)
            t.push(this._loadQueueBackup[a].getItem());
        this.loadManifest(t, !1)
    }
    ,
    t.installPlugin = function(e) {
        if (null != e && null != e.getPreloadHandlers) {
            this._plugins.push(e);
            var t = e.getPreloadHandlers();
            if (t.scope = e,
            null != t.types)
                for (var a = 0, i = t.types.length; a < i; a++)
                    this._typeCallbacks[t.types[a]] = t;
            if (null != t.extensions)
                for (a = 0,
                i = t.extensions.length; a < i; a++)
                    this._extensionCallbacks[t.extensions[a]] = t
        }
    }
    ,
    t.setMaxConnections = function(e) {
        this._maxConnections = e,
        !this._paused && 0 < this._loadQueue.length && this._loadNext()
    }
    ,
    t.loadFile = function(e, t, a) {
        null != e ? (this._addItem(e, null, a),
        !1 !== t ? this.setPaused(!1) : this.setPaused(!0)) : (t = new createjs.ErrorEvent("PRELOAD_NO_FILE"),
        this._sendError(t))
    }
    ,
    t.loadManifest = function(e, t, a) {
        var i = null
          , n = null;
        if (Array.isArray(e)) {
            if (0 == e.length) {
                var r = new createjs.ErrorEvent("PRELOAD_MANIFEST_EMPTY");
                return void this._sendError(r)
            }
            i = e
        } else if ("string" == typeof e)
            i = [{
                src: e,
                type: l.MANIFEST
            }];
        else {
            if ("object" != typeof e) {
                var r = new createjs.ErrorEvent("PRELOAD_MANIFEST_NULL");
                return void this._sendError(r)
            }
            void 0 !== e.src ? (null == e.type ? e.type = l.MANIFEST : e.type != l.MANIFEST && (r = new createjs.ErrorEvent("PRELOAD_MANIFEST_TYPE"),
            this._sendError(r)),
            i = [e]) : void 0 !== e.manifest && (i = e.manifest,
            n = e.path)
        }
        for (var s = 0, o = i.length; s < o; s++)
            this._addItem(i[s], n, a);
        !1 !== t ? this.setPaused(!1) : this.setPaused(!0)
    }
    ,
    t.load = function() {
        this.setPaused(!1)
    }
    ,
    t.getItem = function(e) {
        return this._loadItemsById[e] || this._loadItemsBySrc[e]
    }
    ,
    t.getResult = function(e, t) {
        e = this._loadItemsById[e] || this._loadItemsBySrc[e];
        if (null == e)
            return null;
        e = e.id;
        return (t && this._loadedRawResults[e] ? this._loadedRawResults : this._loadedResults)[e]
    }
    ,
    t.getItems = function(e) {
        var t, a = [];
        for (t in this._loadItemsById) {
            var i = this._loadItemsById[t]
              , n = this.getResult(t);
            !0 === e && null == n || a.push({
                item: i,
                result: n,
                rawResult: this.getResult(t, !0)
            })
        }
        return a
    }
    ,
    t.setPaused = function(e) {
        this._paused = e,
        this._paused || this._loadNext()
    }
    ,
    t.close = function() {
        for (; this._currentLoads.length; )
            this._currentLoads.pop().cancel();
        this._scriptOrder.length = 0,
        this._loadedScripts.length = 0,
        this.loadStartWasDispatched = !1,
        this._itemCount = 0,
        this._lastProgress = NaN
    }
    ,
    t._addItem = function(e, t, a) {
        t = this._createLoadItem(e, t, a);
        null == t || null != (a = this._createLoader(t)) && ("plugins"in a && (a.plugins = this._plugins),
        t._loader = a,
        this._loadQueue.push(a),
        this._loadQueueBackup.push(a),
        this._numItems++,
        this._updateProgress(),
        (this.maintainScriptOrder && t.type == createjs.Types.JAVASCRIPT || !0 === t.maintainOrder) && (this._scriptOrder.push(t),
        this._loadedScripts.push(null)))
    }
    ,
    t._createLoadItem = function(e, t, a) {
        var i = createjs.LoadItem.create(e);
        if (null == i)
            return null;
        e = "",
        a = a || this._basePath;
        if (i.src instanceof Object) {
            if (!i.type)
                return null;
            t ? (e = t,
            r = createjs.URLUtils.parseURI(t),
            null == a || r.absolute || r.relative || (e = a + e)) : null != a && (e = a)
        } else {
            var n = createjs.URLUtils.parseURI(i.src);
            n.extension && (i.ext = n.extension),
            null == i.type && (i.type = createjs.RequestUtils.getTypeByExtension(i.ext));
            var r, s = i.src;
            n.absolute || n.relative || (t ? (e = t,
            r = createjs.URLUtils.parseURI(t),
            s = t + s,
            null == a || r.absolute || r.relative || (e = a + e)) : null != a && (e = a)),
            i.src = e + i.src
        }
        i.path = e,
        void 0 !== i.id && null !== i.id && "" !== i.id || (i.id = s);
        s = this._typeCallbacks[i.type] || this._extensionCallbacks[i.ext];
        if (s) {
            s = s.callback.call(s.scope, i, this);
            if (!1 === s)
                return null;
            !0 === s || null != s && (i._loader = s),
            null != (n = createjs.URLUtils.parseURI(i.src)).extension && (i.ext = n.extension)
        }
        return this._loadItemsById[i.id] = i,
        null == (this._loadItemsBySrc[i.src] = i).crossOrigin && (i.crossOrigin = this._crossOrigin),
        i
    }
    ,
    t._createLoader = function(e) {
        if (null != e._loader)
            return e._loader;
        for (var t = this.preferXHR, a = 0; a < this._availableLoaders.length; a++) {
            var i = this._availableLoaders[a];
            if (i && i.canLoadItem(e))
                return new i(e,t)
        }
        return null
    }
    ,
    t._loadNext = function() {
        if (!this._paused) {
            this._loadStartWasDispatched || (this._sendLoadStart(),
            this._loadStartWasDispatched = !0),
            this._numItems == this._numItemsLoaded ? (this.loaded = !0,
            this._sendComplete(),
            this.next && this.next.load && this.next.load()) : this.loaded = !1;
            for (var e = 0; e < this._loadQueue.length && !(this._currentLoads.length >= this._maxConnections); e++) {
                var t = this._loadQueue[e];
                this._canStartLoad(t) && (this._loadQueue.splice(e, 1),
                e--,
                this._loadItem(t))
            }
        }
    }
    ,
    t._loadItem = function(e) {
        e.on("fileload", this._handleFileLoad, this),
        e.on("progress", this._handleProgress, this),
        e.on("complete", this._handleFileComplete, this),
        e.on("error", this._handleError, this),
        e.on("fileerror", this._handleFileError, this),
        this._currentLoads.push(e),
        this._sendFileStart(e.getItem()),
        e.load()
    }
    ,
    t._handleFileLoad = function(e) {
        e.target = null,
        this.dispatchEvent(e)
    }
    ,
    t._handleFileError = function(e) {
        e = new createjs.ErrorEvent("FILE_LOAD_ERROR",null,e.item);
        this._sendError(e)
    }
    ,
    t._handleError = function(e) {
        var t = e.target;
        this._numItemsLoaded++,
        this._finishOrderedItem(t, !0),
        this._updateProgress();
        e = new createjs.ErrorEvent("FILE_LOAD_ERROR",null,t.getItem());
        this._sendError(e),
        this.stopOnError ? this.setPaused(!0) : (this._removeLoadItem(t),
        this._cleanLoadItem(t),
        this._loadNext())
    }
    ,
    t._handleFileComplete = function(e) {
        var t = e.target
          , a = t.getItem()
          , i = t.getResult();
        this._loadedResults[a.id] = i;
        e = t.getResult(!0);
        null != e && e !== i && (this._loadedRawResults[a.id] = e),
        this._saveLoadedItems(t),
        this._removeLoadItem(t),
        this._finishOrderedItem(t) || this._processFinishedLoad(a, t),
        this._cleanLoadItem(t)
    }
    ,
    t._saveLoadedItems = function(e) {
        var t = e.getLoadedItems();
        if (null !== t)
            for (var a = 0; a < t.length; a++) {
                var i = t[a].item;
                this._loadItemsBySrc[i.src] = i,
                this._loadItemsById[i.id] = i,
                this._loadedResults[i.id] = t[a].result,
                this._loadedRawResults[i.id] = t[a].rawResult
            }
    }
    ,
    t._finishOrderedItem = function(e, t) {
        var a = e.getItem();
        if (this.maintainScriptOrder && a.type == createjs.Types.JAVASCRIPT || a.maintainOrder) {
            e instanceof createjs.JavaScriptLoader && (this._currentlyLoadingScript = !1);
            e = createjs.indexOf(this._scriptOrder, a);
            return -1 != e && (this._loadedScripts[e] = !0 === t || a,
            this._checkScriptLoadOrder(),
            !0)
        }
        return !1
    }
    ,
    t._checkScriptLoadOrder = function() {
        for (var e = this._loadedScripts.length, t = 0; t < e; t++) {
            var a, i = this._loadedScripts[t];
            if (null === i)
                break;
            !0 !== i && (a = this._loadedResults[i.id],
            i.type == createjs.Types.JAVASCRIPT && createjs.DomUtils.appendToHead(a),
            a = i._loader,
            this._processFinishedLoad(i, a),
            this._loadedScripts[t] = !0)
        }
    }
    ,
    t._processFinishedLoad = function(e, t) {
        var a;
        this._numItemsLoaded++,
        this.maintainScriptOrder || e.type != createjs.Types.JAVASCRIPT || (a = t.getTag(),
        createjs.DomUtils.appendToHead(a)),
        this._updateProgress(),
        this._sendFileComplete(e, t),
        this._loadNext()
    }
    ,
    t._canStartLoad = function(e) {
        if (!this.maintainScriptOrder || e.preferXHR)
            return !0;
        e = e.getItem();
        if (e.type != createjs.Types.JAVASCRIPT)
            return !0;
        if (this._currentlyLoadingScript)
            return !1;
        for (var t = this._scriptOrder.indexOf(e), a = 0; a < t; ) {
            if (null == this._loadedScripts[a])
                return !1;
            a++
        }
        return this._currentlyLoadingScript = !0
    }
    ,
    t._removeLoadItem = function(e) {
        for (var t = this._currentLoads.length, a = 0; a < t; a++)
            if (this._currentLoads[a] == e) {
                this._currentLoads.splice(a, 1);
                break
            }
    }
    ,
    t._cleanLoadItem = function(e) {
        e = e.getItem();
        e && delete e._loader
    }
    ,
    t._handleProgress = function(e) {
        e = e.target;
        this._sendFileProgress(e.getItem(), e.progress),
        this._updateProgress()
    }
    ,
    t._updateProgress = function() {
        var e = this._numItemsLoaded / this._numItems
          , t = this._numItems - this._numItemsLoaded;
        if (0 < t) {
            for (var a = 0, i = 0, n = this._currentLoads.length; i < n; i++)
                a += this._currentLoads[i].progress;
            e += a / t * (t / this._numItems)
        }
        this._lastProgress != e && (this._sendProgress(e),
        this._lastProgress = e)
    }
    ,
    t._disposeItem = function(e) {
        delete this._loadedResults[e.id],
        delete this._loadedRawResults[e.id],
        delete this._loadItemsById[e.id],
        delete this._loadItemsBySrc[e.src]
    }
    ,
    t._sendFileProgress = function(e, t) {
        var a;
        this._isCanceled() || this._paused || !this.hasEventListener("fileprogress") || ((a = new createjs.Event("fileprogress")).progress = t,
        a.loaded = t,
        a.total = 1,
        a.item = e,
        this.dispatchEvent(a))
    }
    ,
    t._sendFileComplete = function(e, t) {
        var a;
        this._isCanceled() || this._paused || ((a = new createjs.Event("fileload")).loader = t,
        a.item = e,
        a.result = this._loadedResults[e.id],
        a.rawResult = this._loadedRawResults[e.id],
        e.completeHandler && e.completeHandler(a),
        this.hasEventListener("fileload") && this.dispatchEvent(a))
    }
    ,
    t._sendFileStart = function(e) {
        var t = new createjs.Event("filestart");
        t.item = e,
        this.hasEventListener("filestart") && this.dispatchEvent(t)
    }
    ,
    t.toString = function() {
        return "[PreloadJS LoadQueue]"
    }
    ,
    createjs.LoadQueue = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.AbstractLoader_constructor(e, !0, createjs.Types.TEXT)
    }
    (createjs.extend(e, createjs.AbstractLoader),
    e).canLoadItem = function(e) {
        return e.type == createjs.Types.TEXT
    }
    ,
    createjs.TextLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.AbstractLoader_constructor(e, !0, createjs.Types.BINARY),
        this.on("initialize", this._updateXHR, this)
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.BINARY
    }
    ,
    t._updateXHR = function(e) {
        e.loader.setResponseType("arraybuffer")
    }
    ,
    createjs.BinaryLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.AbstractLoader_constructor(e, t, createjs.Types.CSS),
        this.resultFormatter = this._formatResult,
        this._tagSrcAttribute = "href",
        this._tag = t ? createjs.Elements.style() : createjs.Elements.link(),
        this._tag.rel = "stylesheet",
        this._tag.type = "text/css"
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.CSS
    }
    ,
    t._formatResult = function(e) {
        var t;
        return this._preferXHR ? (t = e.getTag()).styleSheet ? t.styleSheet.cssText = e.getResult(!0) : (e = createjs.Elements.text(e.getResult(!0)),
        t.appendChild(e)) : t = this._tag,
        createjs.DomUtils.appendToHead(t),
        t
    }
    ,
    createjs.CSSLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function l(e, t) {
        this.AbstractLoader_constructor(e, t, e.type),
        this._faces = {},
        this._watched = [],
        this._count = 0,
        this._watchInterval = null,
        this._loadTimeout = null,
        this._injectCSS = void 0 === e.injectCSS || e.injectCSS,
        this.dispatchEvent("initialize")
    }
    var e = createjs.extend(l, createjs.AbstractLoader);
    l.canLoadItem = function(e) {
        return e.type == createjs.Types.FONT || e.type == createjs.Types.FONTCSS
    }
    ,
    l.sampleText = "abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ",
    l._ctx = document.createElement("canvas").getContext("2d"),
    l._referenceFonts = ["serif", "monospace"],
    l.WEIGHT_REGEX = /[- ._]*(thin|normal|book|regular|medium|black|heavy|[1-9]00|(?:extra|ultra|semi|demi)?[- ._]*(?:light|bold))[- ._]*/gi,
    l.STYLE_REGEX = /[- ._]*(italic|oblique)[- ._]*/gi,
    l.FONT_FORMAT = {
        woff2: "woff2",
        woff: "woff",
        ttf: "truetype",
        otf: "truetype"
    },
    l.FONT_WEIGHT = {
        thin: 100,
        extralight: 200,
        ultralight: 200,
        light: 300,
        semilight: 300,
        demilight: 300,
        book: "normal",
        regular: "normal",
        semibold: 600,
        demibold: 600,
        extrabold: 800,
        ultrabold: 800,
        black: 900,
        heavy: 900
    },
    l.WATCH_DURATION = 10,
    e.load = function() {
        var e;
        if (this.type == createjs.Types.FONTCSS) {
            if (!this._watchCSS())
                return void this.AbstractLoader_load()
        } else
            this._item.src instanceof Array ? this._watchFontArray() : (e = this._defFromSrc(this._item.src),
            this._watchFont(e),
            this._injectStyleTag(this._cssFromDef(e)));
        this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout),
        this.dispatchEvent("loadstart")
    }
    ,
    e._handleTimeout = function() {
        this._stopWatching(),
        this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT"))
    }
    ,
    e._createRequest = function() {
        return this._request
    }
    ,
    e.handleEvent = function(e) {
        switch (e.type) {
        case "complete":
            this._rawResult = e.target._response,
            this._result = !0,
            this._parseCSS(this._rawResult);
            break;
        case "error":
            this._stopWatching(),
            this.AbstractLoader_handleEvent(e)
        }
    }
    ,
    e._watchCSS = function() {
        var e = this._item.src;
        return e instanceof HTMLStyleElement && (this._injectCSS && !e.parentNode && (document.head || document.getElementsByTagName("head")[0]).appendChild(e),
        this._injectCSS = !1,
        e = "\n" + e.textContent),
        -1 !== e.search(/\n|\r|@font-face/i) ? (this._parseCSS(e),
        !0) : (this._request = new createjs.XHRRequest(this._item),
        !1)
    }
    ,
    e._parseCSS = function(e) {
        for (var t = /@font-face\s*\{([^}]+)}/g; ; ) {
            var a = t.exec(e);
            if (!a)
                break;
            this._watchFont(this._parseFontFace(a[1]))
        }
        this._injectStyleTag(e)
    }
    ,
    e._watchFontArray = function() {
        for (var e = this._item.src, t = "", a = e.length - 1; 0 <= a; a--) {
            var i = e[a]
              , i = "string" == typeof i ? this._defFromSrc(i) : this._defFromObj(i);
            this._watchFont(i),
            t += this._cssFromDef(i) + "\n"
        }
        this._injectStyleTag(t)
    }
    ,
    e._injectStyleTag = function(e) {
        var t, a;
        this._injectCSS && (t = document.head || document.getElementsByTagName("head")[0],
        (a = document.createElement("style")).type = "text/css",
        a.styleSheet ? a.styleSheet.cssText = e : a.appendChild(document.createTextNode(e)),
        t.appendChild(a))
    }
    ,
    e._parseFontFace = function(e) {
        var t = this._getCSSValue(e, "font-family")
          , a = this._getCSSValue(e, "src");
        return t && a ? this._defFromObj({
            family: t,
            src: a,
            style: this._getCSSValue(e, "font-style"),
            weight: this._getCSSValue(e, "font-weight")
        }) : null
    }
    ,
    e._watchFont = function(e) {
        e && !this._faces[e.id] && (this._faces[e.id] = e,
        this._watched.push(e),
        this._count++,
        this._calculateReferenceSizes(e),
        this._startWatching())
    }
    ,
    e._startWatching = function() {
        null == this._watchInterval && (this._watchInterval = setInterval(createjs.proxy(this._watch, this), l.WATCH_DURATION))
    }
    ,
    e._stopWatching = function() {
        clearInterval(this._watchInterval),
        clearTimeout(this._loadTimeout),
        this._watchInterval = null
    }
    ,
    e._watch = function() {
        for (var e = this._watched, t = l._referenceFonts, a = e.length, i = a - 1; 0 <= i; i--)
            for (var n = e[i], r = n.refs, s = r.length - 1; 0 <= s; s--)
                if (this._getTextWidth(n.family + "," + t[s], n.weight, n.style) != r[s]) {
                    var o = new createjs.Event("fileload");
                    n.type = "font-family",
                    o.item = n,
                    this.dispatchEvent(o),
                    e.splice(i, 1);
                    break
                }
        a !== e.length && (o = new createjs.ProgressEvent(this._count - e.length,this._count),
        this.dispatchEvent(o)),
        0 === a && (this._stopWatching(),
        this._sendComplete())
    }
    ,
    e._calculateReferenceSizes = function(e) {
        for (var t = l._referenceFonts, a = e.refs = [], i = 0; i < t.length; i++)
            a[i] = this._getTextWidth(t[i], e.weight, e.style)
    }
    ,
    e._defFromSrc = function(e) {
        var t = /[- ._]+/g
          , a = e
          , i = null
          , n = a.search(/[?#]/);
        -1 !== n && (a = a.substr(0, n)),
        -1 !== (n = a.lastIndexOf(".")) && (i = a.substr(n + 1),
        a = a.substr(0, n)),
        -1 !== (n = a.lastIndexOf("/")) && (a = a.substr(n + 1));
        var r = a
          , s = r.match(l.WEIGHT_REGEX);
        s && (s = s[0],
        r = r.replace(s, ""),
        s = s.replace(t, "").toLowerCase());
        n = a.match(l.STYLE_REGEX);
        n && (r = r.replace(n[0], ""),
        n = "italic"),
        r = r.replace(t, "");
        e = "local('" + a.replace(t, " ") + "'), url('" + e + "')",
        i = l.FONT_FORMAT[i];
        return i && (e += " format('" + i + "')"),
        this._defFromObj({
            family: r,
            weight: l.FONT_WEIGHT[s] || s,
            style: n,
            src: e
        })
    }
    ,
    e._defFromObj = function(e) {
        e = {
            family: e.family,
            src: e.src,
            style: e.style || "normal",
            weight: e.weight || "normal"
        };
        return e.id = e.family + ";" + e.style + ";" + e.weight,
        e
    }
    ,
    e._cssFromDef = function(e) {
        return "@font-face {\n\tfont-family: '" + e.family + "';\n\tfont-style: " + e.style + ";\n\tfont-weight: " + e.weight + ";\n\tsrc: " + e.src + ";\n}"
    }
    ,
    e._getTextWidth = function(e, t, a) {
        var i = l._ctx;
        return i.font = a + " " + t + " 72px " + e,
        i.measureText(l.sampleText).width
    }
    ,
    e._getCSSValue = function(e, t) {
        e = new RegExp(t + ":s*([^;}]+?)s*[;}]").exec(e);
        return e && e[1] ? e[1] : null
    }
    ,
    createjs.FontLoader = createjs.promote(l, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.AbstractLoader_constructor(e, t, createjs.Types.IMAGE),
        this.resultFormatter = this._formatResult,
        this._tagSrcAttribute = "src",
        createjs.DomUtils.isImageTag(e) ? this._tag = e : createjs.DomUtils.isImageTag(e.src) ? this._tag = e.src : createjs.DomUtils.isImageTag(e.tag) && (this._tag = e.tag),
        null != this._tag ? this._preferXHR = !1 : this._tag = createjs.Elements.img(),
        this.on("initialize", this._updateXHR, this)
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.IMAGE
    }
    ,
    t.load = function() {
        var e;
        "" != this._tag.src && this._tag.complete ? this._sendComplete() : (1 == (e = this._item.crossOrigin) && (e = "Anonymous"),
        null == e || createjs.URLUtils.isLocal(this._item) || (this._tag.crossOrigin = e),
        this.AbstractLoader_load())
    }
    ,
    t._updateXHR = function(e) {
        e.loader.mimeType = "text/plain; charset=x-user-defined-binary",
        e.loader.setResponseType && e.loader.setResponseType("blob")
    }
    ,
    t._formatResult = function(e) {
        return this._formatImage
    }
    ,
    t._formatImage = function(e, t) {
        var a = this._tag
          , i = window.URL || window.webkitURL;
        this._preferXHR && (i ? (i = i.createObjectURL(this.getResult(!0)),
        a.src = i,
        a.addEventListener("load", this._cleanUpURL, !1),
        a.addEventListener("error", this._cleanUpURL, !1)) : a.src = this._item.src),
        a.complete ? e(a) : (a.onload = createjs.proxy(function() {
            e(this._tag),
            a.onload = a.onerror = null
        }, this),
        a.onerror = createjs.proxy(function(e) {
            t(new createjs.ErrorEvent("IMAGE_FORMAT",null,e)),
            a.onload = a.onerror = null
        }, this))
    }
    ,
    t._cleanUpURL = function(e) {
        (window.URL || window.webkitURL).revokeObjectURL(e.target.src)
    }
    ,
    createjs.ImageLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.AbstractLoader_constructor(e, t, createjs.Types.JAVASCRIPT),
        this.resultFormatter = this._formatResult,
        this._tagSrcAttribute = "src",
        this.setTag(createjs.Elements.script())
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.JAVASCRIPT
    }
    ,
    t._formatResult = function(e) {
        var t = e.getTag();
        return this._preferXHR && (t.text = e.getResult(!0)),
        t
    }
    ,
    createjs.JavaScriptLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.AbstractLoader_constructor(e, !0, createjs.Types.JSON),
        this.resultFormatter = this._formatResult
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.JSON
    }
    ,
    t._formatResult = function(e) {
        var t = null;
        try {
            t = createjs.DataUtils.parseJSON(e.getResult(!0))
        } catch (e) {
            var a = new createjs.ErrorEvent("JSON_FORMAT",null,e);
            return this._sendError(a),
            e
        }
        return t
    }
    ,
    createjs.JSONLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.AbstractLoader_constructor(e, !1, createjs.Types.JSONP),
        this.setTag(createjs.Elements.script()),
        this.getTag().type = "text/javascript"
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.JSONP
    }
    ,
    t.cancel = function() {
        this.AbstractLoader_cancel(),
        this._dispose()
    }
    ,
    t.load = function() {
        if (null == this._item.callback)
            throw new Error("callback is required for loading JSONP requests.");
        if (null != window[this._item.callback])
            throw new Error("JSONP callback '" + this._item.callback + "' already exists on window. You need to specify a different callback or re-name the current one.");
        window[this._item.callback] = createjs.proxy(this._handleLoad, this),
        createjs.DomUtils.appendToBody(this._tag),
        this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout),
        this._tag.src = this._item.src
    }
    ,
    t._handleLoad = function(e) {
        this._result = this._rawResult = e,
        this._sendComplete(),
        this._dispose()
    }
    ,
    t._handleTimeout = function() {
        this._dispose(),
        this.dispatchEvent(new createjs.ErrorEvent("timeout"))
    }
    ,
    t._dispose = function() {
        createjs.DomUtils.removeChild(this._tag),
        delete window[this._item.callback],
        clearTimeout(this._loadTimeout)
    }
    ,
    createjs.JSONPLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.AbstractLoader_constructor(e, t, createjs.Types.MANIFEST),
        this.plugins = null,
        this._manifestQueue = null
    }
    var t = createjs.extend(e, createjs.AbstractLoader)
      , a = e;
    a.MANIFEST_PROGRESS = .25,
    a.canLoadItem = function(e) {
        return e.type == createjs.Types.MANIFEST
    }
    ,
    t.load = function() {
        this.AbstractLoader_load()
    }
    ,
    t._createRequest = function() {
        var e = this._item.callback;
        this._request = new (null != e ? createjs.JSONPLoader : createjs.JSONLoader)(this._item)
    }
    ,
    t.handleEvent = function(e) {
        switch (e.type) {
        case "complete":
            return this._rawResult = e.target.getResult(!0),
            this._result = e.target.getResult(),
            this._sendProgress(a.MANIFEST_PROGRESS),
            void this._loadManifest(this._result);
        case "progress":
            return e.loaded *= a.MANIFEST_PROGRESS,
            this.progress = e.loaded / e.total,
            !isNaN(this.progress) && this.progress != 1 / 0 || (this.progress = 0),
            void this._sendProgress(e)
        }
        this.AbstractLoader_handleEvent(e)
    }
    ,
    t.destroy = function() {
        this.AbstractLoader_destroy(),
        this._manifestQueue.close()
    }
    ,
    t._loadManifest = function(e) {
        if (e && e.manifest) {
            var t = this._manifestQueue = new createjs.LoadQueue(this._preferXHR);
            t.on("fileload", this._handleManifestFileLoad, this),
            t.on("progress", this._handleManifestProgress, this),
            t.on("complete", this._handleManifestComplete, this, !0),
            t.on("error", this._handleManifestError, this, !0);
            for (var a = 0, i = this.plugins.length; a < i; a++)
                t.installPlugin(this.plugins[a]);
            t.loadManifest(e)
        } else
            this._sendComplete()
    }
    ,
    t._handleManifestFileLoad = function(e) {
        e.target = null,
        this.dispatchEvent(e)
    }
    ,
    t._handleManifestComplete = function(e) {
        this._loadedItems = this._manifestQueue.getItems(!0),
        this._sendComplete()
    }
    ,
    t._handleManifestProgress = function(e) {
        this.progress = e.progress * (1 - a.MANIFEST_PROGRESS) + a.MANIFEST_PROGRESS,
        this._sendProgress(this.progress)
    }
    ,
    t._handleManifestError = function(e) {
        var t = new createjs.Event("fileerror");
        t.item = e.data,
        this.dispatchEvent(t)
    }
    ,
    createjs.ManifestLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.AbstractMediaLoader_constructor(e, t, createjs.Types.SOUND),
        createjs.DomUtils.isAudioTag(e) || createjs.DomUtils.isAudioTag(e.src) ? this._tag = e : createjs.DomUtils.isAudioTag(e.tag) && (this._tag = createjs.DomUtils.isAudioTag(e) ? e : e.src),
        null != this._tag && (this._preferXHR = !1)
    }
    var t = createjs.extend(e, createjs.AbstractMediaLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.SOUND
    }
    ,
    t._createTag = function(e) {
        var t = createjs.Elements.audio();
        return t.autoplay = !1,
        t.preload = "none",
        t.src = e,
        t
    }
    ,
    createjs.SoundLoader = createjs.promote(e, "AbstractMediaLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.AbstractMediaLoader_constructor(e, t, createjs.Types.VIDEO),
        createjs.DomUtils.isVideoTag(e) || createjs.DomUtils.isVideoTag(e.src) ? (this.setTag(createjs.DomUtils.isVideoTag(e) ? e : e.src),
        this._preferXHR = !1) : this.setTag(this._createTag())
    }
    var t = e;
    createjs.extend(e, createjs.AbstractMediaLoader)._createTag = function() {
        return createjs.Elements.video()
    }
    ,
    t.canLoadItem = function(e) {
        return e.type == createjs.Types.VIDEO
    }
    ,
    createjs.VideoLoader = createjs.promote(e, "AbstractMediaLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.AbstractLoader_constructor(e, t, createjs.Types.SPRITESHEET),
        this._manifestQueue = null
    }
    var t = createjs.extend(e, createjs.AbstractLoader)
      , a = e;
    a.SPRITESHEET_PROGRESS = .25,
    a.canLoadItem = function(e) {
        return e.type == createjs.Types.SPRITESHEET
    }
    ,
    t.destroy = function() {
        this.AbstractLoader_destroy(),
        this._manifestQueue.close()
    }
    ,
    t._createRequest = function() {
        var e = this._item.callback;
        this._request = new (null != e ? createjs.JSONPLoader : createjs.JSONLoader)(this._item)
    }
    ,
    t.handleEvent = function(e) {
        switch (e.type) {
        case "complete":
            return this._rawResult = e.target.getResult(!0),
            this._result = e.target.getResult(),
            this._sendProgress(a.SPRITESHEET_PROGRESS),
            void this._loadManifest(this._result);
        case "progress":
            return e.loaded *= a.SPRITESHEET_PROGRESS,
            this.progress = e.loaded / e.total,
            !isNaN(this.progress) && this.progress != 1 / 0 || (this.progress = 0),
            void this._sendProgress(e)
        }
        this.AbstractLoader_handleEvent(e)
    }
    ,
    t._loadManifest = function(e) {
        var t;
        e && e.images && ((t = this._manifestQueue = new createjs.LoadQueue(this._preferXHR,this._item.path,this._item.crossOrigin)).on("complete", this._handleManifestComplete, this, !0),
        t.on("fileload", this._handleManifestFileLoad, this),
        t.on("progress", this._handleManifestProgress, this),
        t.on("error", this._handleManifestError, this, !0),
        t.loadManifest(e.images))
    }
    ,
    t._handleManifestFileLoad = function(e) {
        var t, a = e.result;
        null != a && (e = (t = this.getResult().images).indexOf(e.item.src),
        t[e] = a)
    }
    ,
    t._handleManifestComplete = function(e) {
        this._result = new createjs.SpriteSheet(this._result),
        this._loadedItems = this._manifestQueue.getItems(!0),
        this._sendComplete()
    }
    ,
    t._handleManifestProgress = function(e) {
        this.progress = e.progress * (1 - a.SPRITESHEET_PROGRESS) + a.SPRITESHEET_PROGRESS,
        this._sendProgress(this.progress)
    }
    ,
    t._handleManifestError = function(e) {
        var t = new createjs.Event("fileerror");
        t.item = e.data,
        this.dispatchEvent(t)
    }
    ,
    createjs.SpriteSheetLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t) {
        this.AbstractLoader_constructor(e, t, createjs.Types.SVG),
        this.resultFormatter = this._formatResult,
        this._tagSrcAttribute = "data",
        t ? this.setTag(createjs.Elements.svg()) : (this.setTag(createjs.Elements.object()),
        this.getTag().type = "image/svg+xml")
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.SVG
    }
    ,
    t._formatResult = function(e) {
        var t = createjs.DataUtils.parseXML(e.getResult(!0))
          , e = e.getTag();
        if (!this._preferXHR && document.body.contains(e) && document.body.removeChild(e),
        null == t.documentElement)
            return t;
        t = t.documentElement;
        return document.importNode && (t = document.importNode(t, !0)),
        e.appendChild(t),
        e
    }
    ,
    createjs.SVGLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.AbstractLoader_constructor(e, !0, createjs.Types.XML),
        this.resultFormatter = this._formatResult
    }
    var t = createjs.extend(e, createjs.AbstractLoader);
    e.canLoadItem = function(e) {
        return e.type == createjs.Types.XML
    }
    ,
    t._formatResult = function(e) {
        return createjs.DataUtils.parseXML(e.getResult(!0))
    }
    ,
    createjs.XMLLoader = createjs.promote(e, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    var e = createjs.SoundJS = createjs.SoundJS || {};
    e.version = "1.0.0",
    e.buildDate = "Thu, 12 Oct 2017 16:34:05 GMT"
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        throw "BrowserDetect cannot be instantiated"
    }
    var t = e.agent = window.navigator.userAgent;
    e.isWindowPhone = -1 < t.indexOf("IEMobile") || -1 < t.indexOf("Windows Phone"),
    e.isFirefox = -1 < t.indexOf("Firefox"),
    e.isOpera = null != window.opera,
    e.isChrome = -1 < t.indexOf("Chrome"),
    e.isIOS = (-1 < t.indexOf("iPod") || -1 < t.indexOf("iPhone") || -1 < t.indexOf("iPad")) && !e.isWindowPhone,
    e.isAndroid = -1 < t.indexOf("Android") && !e.isWindowPhone,
    e.isBlackberry = -1 < t.indexOf("Blackberry"),
    createjs.BrowserDetect = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        this.interrupt = null,
        this.delay = null,
        this.offset = null,
        this.loop = null,
        this.volume = null,
        this.pan = null,
        this.startTime = null,
        this.duration = null
    }
    var t = e.prototype = {}
      , a = e;
    a.create = function(e) {
        if ("string" == typeof e)
            return console && (console.warn || console.log)("Deprecated behaviour. Sound.play takes a configuration object instead of individual arguments. See docs for info."),
            (new createjs.PlayPropsConfig).set({
                interrupt: e
            });
        if (null == e || e instanceof a || e instanceof Object)
            return (new createjs.PlayPropsConfig).set(e);
        if (null == e)
            throw new Error("PlayProps configuration not recognized.")
    }
    ,
    t.set = function(e) {
        if (null != e)
            for (var t in e)
                this[t] = e[t];
        return this
    }
    ,
    t.toString = function() {
        return "[PlayPropsConfig]"
    }
    ,
    createjs.PlayPropsConfig = a
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function s() {
        throw "Sound cannot be instantiated"
    }
    function o(e, t) {
        this.init(e, t)
    }
    var l = s;
    l.INTERRUPT_ANY = "any",
    l.INTERRUPT_EARLY = "early",
    l.INTERRUPT_LATE = "late",
    l.INTERRUPT_NONE = "none",
    l.PLAY_INITED = "playInited",
    l.PLAY_SUCCEEDED = "playSucceeded",
    l.PLAY_INTERRUPTED = "playInterrupted",
    l.PLAY_FINISHED = "playFinished",
    l.PLAY_FAILED = "playFailed",
    l.SUPPORTED_EXTENSIONS = ["mp3", "ogg", "opus", "mpeg", "wav", "m4a", "mp4", "aiff", "wma", "mid"],
    l.EXTENSION_MAP = {
        m4a: "mp4"
    },
    l.FILE_PATTERN = /^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([\/.]*?(?:[^?]+)?\/)?((?:[^\/?]+)\.(\w+))(?:\?(\S+)?)?$/,
    l.defaultInterruptBehavior = l.INTERRUPT_NONE,
    l.alternateExtensions = [],
    l.activePlugin = null,
    l._masterVolume = 1,
    l._getMasterVolume = function() {
        return this._masterVolume
    }
    ,
    l.getVolume = createjs.deprecate(l._getMasterVolume, "Sound.getVolume"),
    l._setMasterVolume = function(e) {
        if (null != Number(e) && (e = Math.max(0, Math.min(1, e)),
        l._masterVolume = e,
        !this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(e)))
            for (var t = this._instances, a = 0, i = t.length; a < i; a++)
                t[a].setMasterVolume(e)
    }
    ,
    l.setVolume = createjs.deprecate(l._setMasterVolume, "Sound.setVolume"),
    l._masterMute = !1,
    l._getMute = function() {
        return this._masterMute
    }
    ,
    l.getMute = createjs.deprecate(l._getMute, "Sound.getMute"),
    l._setMute = function(e) {
        if (null != e && (this._masterMute = e,
        !this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(e)))
            for (var t = this._instances, a = 0, i = t.length; a < i; a++)
                t[a].setMasterMute(e)
    }
    ,
    l.setMute = createjs.deprecate(l._setMute, "Sound.setMute"),
    l._getCapabilities = function() {
        return null == l.activePlugin ? null : l.activePlugin._capabilities
    }
    ,
    l.getCapabilities = createjs.deprecate(l._getCapabilities, "Sound.getCapabilities"),
    Object.defineProperties(l, {
        volume: {
            get: l._getMasterVolume,
            set: l._setMasterVolume
        },
        muted: {
            get: l._getMute,
            set: l._setMute
        },
        capabilities: {
            get: l._getCapabilities
        }
    }),
    l._pluginsRegistered = !1,
    l._lastID = 0,
    l._instances = [],
    l._idHash = {},
    l._preloadHash = {},
    l._defaultPlayPropsHash = {},
    l.addEventListener = null,
    l.removeEventListener = null,
    l.removeAllEventListeners = null,
    l.dispatchEvent = null,
    l.hasEventListener = null,
    l._listeners = null,
    createjs.EventDispatcher.initialize(l),
    l.getPreloadHandlers = function() {
        return {
            callback: createjs.proxy(l.initLoad, l),
            types: ["sound"],
            extensions: l.SUPPORTED_EXTENSIONS
        }
    }
    ,
    l._handleLoadComplete = function(e) {
        var t = e.target.getItem().src;
        if (l._preloadHash[t])
            for (var a = 0, i = l._preloadHash[t].length; a < i; a++) {
                var n = l._preloadHash[t][a];
                l._preloadHash[t][a] = !0,
                l.hasEventListener("fileload") && ((e = new createjs.Event("fileload")).src = n.src,
                e.id = n.id,
                e.data = n.data,
                e.sprite = n.sprite,
                l.dispatchEvent(e))
            }
    }
    ,
    l._handleLoadError = function(e) {
        var t = e.target.getItem().src;
        if (l._preloadHash[t])
            for (var a = 0, i = l._preloadHash[t].length; a < i; a++) {
                var n = l._preloadHash[t][a];
                l._preloadHash[t][a] = !1,
                l.hasEventListener("fileerror") && ((e = new createjs.Event("fileerror")).src = n.src,
                e.id = n.id,
                e.data = n.data,
                e.sprite = n.sprite,
                l.dispatchEvent(e))
            }
    }
    ,
    l._registerPlugin = function(e) {
        return !!e.isSupported() && (l.activePlugin = new e,
        !0)
    }
    ,
    l.registerPlugins = function(e) {
        l._pluginsRegistered = !0;
        for (var t = 0, a = e.length; t < a; t++)
            if (l._registerPlugin(e[t]))
                return !0;
        return !1
    }
    ,
    l.initializeDefaultPlugins = function() {
        return null != l.activePlugin || !l._pluginsRegistered && !!l.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin])
    }
    ,
    l.isReady = function() {
        return null != l.activePlugin
    }
    ,
    l.initLoad = function(e) {
        return "video" == e.type || l._registerSound(e)
    }
    ,
    l._registerSound = function(e) {
        if (!l.initializeDefaultPlugins())
            return !1;
        if (e.src instanceof Object ? (r = l._parseSrc(e.src)).src = e.path + r.src : r = l._parsePath(e.src),
        null == r)
            return !1;
        e.src = r.src,
        e.type = "sound";
        var t = e.data
          , a = null;
        if (null != t && (isNaN(t.channels) ? isNaN(t) || (a = parseInt(t)) : a = parseInt(t.channels),
        t.audioSprite))
            for (var i, n = t.audioSprite.length; n--; )
                i = t.audioSprite[n],
                l._idHash[i.id] = {
                    src: e.src,
                    startTime: parseInt(i.startTime),
                    duration: parseInt(i.duration)
                },
                i.defaultPlayProps && (l._defaultPlayPropsHash[i.id] = createjs.PlayPropsConfig.create(i.defaultPlayProps));
        null != e.id && (l._idHash[e.id] = {
            src: e.src
        });
        var r = l.activePlugin.register(e);
        return o.create(e.src, a),
        null != t && isNaN(t) ? e.data.channels = a || o.maxPerChannel() : e.data = a || o.maxPerChannel(),
        r.type && (e.type = r.type),
        e.defaultPlayProps && (l._defaultPlayPropsHash[e.src] = createjs.PlayPropsConfig.create(e.defaultPlayProps)),
        r
    }
    ,
    l.registerSound = function(e, t, a, i, n) {
        n = {
            src: e,
            id: t,
            data: a,
            defaultPlayProps: n
        };
        e instanceof Object && e.src && (i = t,
        n = e),
        null == ((n = createjs.LoadItem.create(n)).path = i) || n.src instanceof Object || (n.src = i + n.src);
        i = l._registerSound(n);
        if (!i)
            return !1;
        if (l._preloadHash[n.src] || (l._preloadHash[n.src] = []),
        l._preloadHash[n.src].push(n),
        1 == l._preloadHash[n.src].length)
            i.on("complete", this._handleLoadComplete, this),
            i.on("error", this._handleLoadError, this),
            l.activePlugin.preload(i);
        else if (1 == l._preloadHash[n.src][0])
            return !0;
        return n
    }
    ,
    l.registerSounds = function(e, t) {
        var a = [];
        e.path && (t ? t += e.path : t = e.path,
        e = e.manifest);
        for (var i = 0, n = e.length; i < n; i++)
            a[i] = createjs.Sound.registerSound(e[i].src, e[i].id, e[i].data, t, e[i].defaultPlayProps);
        return a
    }
    ,
    l.removeSound = function(e, t) {
        if (null == l.activePlugin)
            return !1;
        var a, i;
        if (e instanceof Object && e.src && (e = e.src),
        null == (a = e instanceof Object ? l._parseSrc(e) : (e = l._getSrcById(e).src,
        l._parsePath(e))))
            return !1;
        for (i in e = a.src,
        null != t && (e = t + e),
        l._idHash)
            l._idHash[i].src == e && delete l._idHash[i];
        return o.removeSrc(e),
        delete l._preloadHash[e],
        l.activePlugin.removeSound(e),
        !0
    }
    ,
    l.removeSounds = function(e, t) {
        var a = [];
        e.path && (t ? t += e.path : t = e.path,
        e = e.manifest);
        for (var i = 0, n = e.length; i < n; i++)
            a[i] = createjs.Sound.removeSound(e[i].src, t);
        return a
    }
    ,
    l.removeAllSounds = function() {
        l._idHash = {},
        l._preloadHash = {},
        o.removeAll(),
        l.activePlugin && l.activePlugin.removeAllSounds()
    }
    ,
    l.loadComplete = function(e) {
        if (!l.isReady())
            return !1;
        var t = l._parsePath(e);
        return e = (t ? l._getSrcById(t.src) : l._getSrcById(e)).src,
        null != l._preloadHash[e] && 1 == l._preloadHash[e][0]
    }
    ,
    l._parsePath = function(e) {
        "string" != typeof e && (e = e.toString());
        var t = e.match(l.FILE_PATTERN);
        if (null == t)
            return !1;
        for (var a = t[4], i = t[5], n = l.capabilities, r = 0; !n[i]; )
            if (i = l.alternateExtensions[r++],
            r > l.alternateExtensions.length)
                return null;
        return {
            name: a,
            src: e = e.replace("." + t[5], "." + i),
            extension: i
        }
    }
    ,
    l._parseSrc = function(e) {
        var t, a = {
            name: void 0,
            src: void 0,
            extension: void 0
        }, i = l.capabilities;
        for (t in e)
            if (e.hasOwnProperty(t) && i[t]) {
                a.src = e[t],
                a.extension = t;
                break
            }
        if (!a.src)
            return !1;
        var n = a.src.lastIndexOf("/");
        return a.name = -1 != n ? a.src.slice(n + 1) : a.src,
        a
    }
    ,
    l.play = function(e, t) {
        t = createjs.PlayPropsConfig.create(t),
        e = l.createInstance(e, t.startTime, t.duration);
        return l._playInstance(e, t) || e._playFailed(),
        e
    }
    ,
    l.createInstance = function(e, t, a) {
        if (!l.initializeDefaultPlugins())
            return new createjs.DefaultSoundInstance(e,t,a);
        var i = l._defaultPlayPropsHash[e];
        e = l._getSrcById(e);
        var n = l._parsePath(e.src)
          , r = null;
        return null != n && null != n.src ? (o.create(n.src),
        null == t && (t = e.startTime),
        r = l.activePlugin.create(n.src, t, a || e.duration),
        (i = i || l._defaultPlayPropsHash[n.src]) && r.applyPlayProps(i)) : r = new createjs.DefaultSoundInstance(e,t,a),
        r.uniqueId = l._lastID++,
        r
    }
    ,
    l.stop = function() {
        for (var e = this._instances, t = e.length; t--; )
            e[t].stop()
    }
    ,
    l.setDefaultPlayProps = function(e, t) {
        e = l._getSrcById(e),
        l._defaultPlayPropsHash[l._parsePath(e.src).src] = createjs.PlayPropsConfig.create(t)
    }
    ,
    l.getDefaultPlayProps = function(e) {
        return e = l._getSrcById(e),
        l._defaultPlayPropsHash[l._parsePath(e.src).src]
    }
    ,
    l._playInstance = function(e, t) {
        var a = l._defaultPlayPropsHash[e.src] || {};
        if (null == t.interrupt && (t.interrupt = a.interrupt || l.defaultInterruptBehavior),
        null == t.delay && (t.delay = a.delay || 0),
        null == t.offset && (t.offset = e.position),
        null == t.loop && (t.loop = e.loop),
        null == t.volume && (t.volume = e.volume),
        null == t.pan && (t.pan = e.pan),
        0 == t.delay) {
            if (!l._beginPlaying(e, t))
                return !1
        } else {
            a = setTimeout(function() {
                l._beginPlaying(e, t)
            }, t.delay);
            e.delayTimeoutId = a
        }
        return this._instances.push(e),
        !0
    }
    ,
    l._beginPlaying = function(e, t) {
        if (!o.add(e, t.interrupt))
            return !1;
        if (e._beginPlaying(t))
            return !0;
        e = createjs.indexOf(this._instances, e);
        return -1 < e && this._instances.splice(e, 1),
        !1
    }
    ,
    l._getSrcById = function(e) {
        return l._idHash[e] || {
            src: e
        }
    }
    ,
    l._playFinished = function(e) {
        o.remove(e);
        e = createjs.indexOf(this._instances, e);
        -1 < e && this._instances.splice(e, 1)
    }
    ,
    createjs.Sound = s,
    o.channels = {},
    o.create = function(e, t) {
        return null == o.get(e) && (o.channels[e] = new o(e,t),
        !0)
    }
    ,
    o.removeSrc = function(e) {
        var t = o.get(e);
        return null != t && (t._removeAll(),
        delete o.channels[e],
        !0)
    }
    ,
    o.removeAll = function() {
        for (var e in o.channels)
            o.channels[e]._removeAll();
        o.channels = {}
    }
    ,
    o.add = function(e, t) {
        var a = o.get(e.src);
        return null != a && a._add(e, t)
    }
    ,
    o.remove = function(e) {
        var t = o.get(e.src);
        return null != t && (t._remove(e),
        !0)
    }
    ,
    o.maxPerChannel = function() {
        return e.maxDefault
    }
    ,
    o.get = function(e) {
        return o.channels[e]
    }
    ;
    var e = o.prototype;
    e.constructor = o,
    e.src = null,
    e.max = null,
    e.maxDefault = 100,
    e.length = 0,
    e.init = function(e, t) {
        this.src = e,
        this.max = t || this.maxDefault,
        -1 == this.max && (this.max = this.maxDefault),
        this._instances = []
    }
    ,
    e._get = function(e) {
        return this._instances[e]
    }
    ,
    e._add = function(e, t) {
        return !!this._getSlot(t, e) && (this._instances.push(e),
        this.length++,
        !0)
    }
    ,
    e._remove = function(e) {
        e = createjs.indexOf(this._instances, e);
        return -1 != e && (this._instances.splice(e, 1),
        this.length--,
        !0)
    }
    ,
    e._removeAll = function() {
        for (var e = this.length - 1; 0 <= e; e--)
            this._instances[e].stop()
    }
    ,
    e._getSlot = function(e, t) {
        var a, i;
        if (e != s.INTERRUPT_NONE && null == (i = this._get(0)))
            return !0;
        for (var n = 0, r = this.max; n < r; n++) {
            if (null == (a = this._get(n)))
                return !0;
            if (a.playState == s.PLAY_FINISHED || a.playState == s.PLAY_INTERRUPTED || a.playState == s.PLAY_FAILED) {
                i = a;
                break
            }
            e != s.INTERRUPT_NONE && (e == s.INTERRUPT_EARLY && a.position < i.position || e == s.INTERRUPT_LATE && a.position > i.position) && (i = a)
        }
        return null != i && (i._interrupt(),
        this._remove(i),
        !0)
    }
    ,
    e.toString = function() {
        return "[Sound SoundChannel]"
    }
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a, i) {
        this.EventDispatcher_constructor(),
        this.src = e,
        this.uniqueId = -1,
        this.playState = null,
        this.delayTimeoutId = null,
        this._volume = 1,
        Object.defineProperty(this, "volume", {
            get: this._getVolume,
            set: this._setVolume
        }),
        this.getVolume = createjs.deprecate(this._getVolume, "AbstractSoundInstance.getVolume"),
        this.setVolume = createjs.deprecate(this._setVolume, "AbstractSoundInstance.setVolume"),
        this._pan = 0,
        Object.defineProperty(this, "pan", {
            get: this._getPan,
            set: this._setPan
        }),
        this.getPan = createjs.deprecate(this._getPan, "AbstractSoundInstance.getPan"),
        this.setPan = createjs.deprecate(this._setPan, "AbstractSoundInstance.setPan"),
        this._startTime = Math.max(0, t || 0),
        Object.defineProperty(this, "startTime", {
            get: this._getStartTime,
            set: this._setStartTime
        }),
        this.getStartTime = createjs.deprecate(this._getStartTime, "AbstractSoundInstance.getStartTime"),
        this.setStartTime = createjs.deprecate(this._setStartTime, "AbstractSoundInstance.setStartTime"),
        this._duration = Math.max(0, a || 0),
        Object.defineProperty(this, "duration", {
            get: this._getDuration,
            set: this._setDuration
        }),
        this.getDuration = createjs.deprecate(this._getDuration, "AbstractSoundInstance.getDuration"),
        this.setDuration = createjs.deprecate(this._setDuration, "AbstractSoundInstance.setDuration"),
        this._playbackResource = null,
        Object.defineProperty(this, "playbackResource", {
            get: this._getPlaybackResource,
            set: this._setPlaybackResource
        }),
        !1 !== i && !0 !== i && this._setPlaybackResource(i),
        this.getPlaybackResource = createjs.deprecate(this._getPlaybackResource, "AbstractSoundInstance.getPlaybackResource"),
        this.setPlaybackResource = createjs.deprecate(this._setPlaybackResource, "AbstractSoundInstance.setPlaybackResource"),
        this._position = 0,
        Object.defineProperty(this, "position", {
            get: this._getPosition,
            set: this._setPosition
        }),
        this.getPosition = createjs.deprecate(this._getPosition, "AbstractSoundInstance.getPosition"),
        this.setPosition = createjs.deprecate(this._setPosition, "AbstractSoundInstance.setPosition"),
        this._loop = 0,
        Object.defineProperty(this, "loop", {
            get: this._getLoop,
            set: this._setLoop
        }),
        this.getLoop = createjs.deprecate(this._getLoop, "AbstractSoundInstance.getLoop"),
        this.setLoop = createjs.deprecate(this._setLoop, "AbstractSoundInstance.setLoop"),
        this._muted = !1,
        Object.defineProperty(this, "muted", {
            get: this._getMuted,
            set: this._setMuted
        }),
        this.getMuted = createjs.deprecate(this._getMuted, "AbstractSoundInstance.getMuted"),
        this.setMuted = createjs.deprecate(this._setMuted, "AbstractSoundInstance.setMuted"),
        this._paused = !1,
        Object.defineProperty(this, "paused", {
            get: this._getPaused,
            set: this._setPaused
        }),
        this.getPaused = createjs.deprecate(this._getPaused, "AbstractSoundInstance.getPaused"),
        this.setPaused = createjs.deprecate(this._setPaused, "AbstractSoundInstance.setPaused")
    }
    var t = createjs.extend(e, createjs.EventDispatcher);
    t.play = function(e) {
        e = createjs.PlayPropsConfig.create(e);
        return this.playState == createjs.Sound.PLAY_SUCCEEDED ? (this.applyPlayProps(e),
        void (this._paused && this._setPaused(!1))) : (this._cleanUp(),
        createjs.Sound._playInstance(this, e),
        this)
    }
    ,
    t.stop = function() {
        return this._position = 0,
        this._paused = !1,
        this._handleStop(),
        this._cleanUp(),
        this.playState = createjs.Sound.PLAY_FINISHED,
        this
    }
    ,
    t.destroy = function() {
        this._cleanUp(),
        this.src = null,
        this.playbackResource = null,
        this.removeAllEventListeners()
    }
    ,
    t.applyPlayProps = function(e) {
        return null != e.offset && this._setPosition(e.offset),
        null != e.loop && this._setLoop(e.loop),
        null != e.volume && this._setVolume(e.volume),
        null != e.pan && this._setPan(e.pan),
        null != e.startTime && (this._setStartTime(e.startTime),
        this._setDuration(e.duration)),
        this
    }
    ,
    t.toString = function() {
        return "[AbstractSoundInstance]"
    }
    ,
    t._getPaused = function() {
        return this._paused
    }
    ,
    t._setPaused = function(e) {
        return !0 !== e && !1 !== e || this._paused == e || 1 == e && this.playState != createjs.Sound.PLAY_SUCCEEDED ? void 0 : ((this._paused = e) ? this._pause() : this._resume(),
        clearTimeout(this.delayTimeoutId),
        this)
    }
    ,
    t._setVolume = function(e) {
        return e == this._volume || (this._volume = Math.max(0, Math.min(1, e)),
        this._muted || this._updateVolume()),
        this
    }
    ,
    t._getVolume = function() {
        return this._volume
    }
    ,
    t._setMuted = function(e) {
        return !0 === e || !1 === e ? (this._muted = e,
        this._updateVolume(),
        this) : void 0
    }
    ,
    t._getMuted = function() {
        return this._muted
    }
    ,
    t._setPan = function(e) {
        return e == this._pan || (this._pan = Math.max(-1, Math.min(1, e)),
        this._updatePan()),
        this
    }
    ,
    t._getPan = function() {
        return this._pan
    }
    ,
    t._getPosition = function() {
        return this._paused || this.playState != createjs.Sound.PLAY_SUCCEEDED || (this._position = this._calculateCurrentPosition()),
        this._position
    }
    ,
    t._setPosition = function(e) {
        return this._position = Math.max(0, e),
        this.playState == createjs.Sound.PLAY_SUCCEEDED && this._updatePosition(),
        this
    }
    ,
    t._getStartTime = function() {
        return this._startTime
    }
    ,
    t._setStartTime = function(e) {
        return e == this._startTime || (this._startTime = Math.max(0, e || 0),
        this._updateStartTime()),
        this
    }
    ,
    t._getDuration = function() {
        return this._duration
    }
    ,
    t._setDuration = function(e) {
        return e == this._duration || (this._duration = Math.max(0, e || 0),
        this._updateDuration()),
        this
    }
    ,
    t._setPlaybackResource = function(e) {
        return this._playbackResource = e,
        0 == this._duration && this._playbackResource && this._setDurationFromSource(),
        this
    }
    ,
    t._getPlaybackResource = function() {
        return this._playbackResource
    }
    ,
    t._getLoop = function() {
        return this._loop
    }
    ,
    t._setLoop = function(e) {
        null != this._playbackResource && (0 != this._loop && 0 == e ? this._removeLooping(e) : 0 == this._loop && 0 != e && this._addLooping(e)),
        this._loop = e
    }
    ,
    t._sendEvent = function(e) {
        e = new createjs.Event(e);
        this.dispatchEvent(e)
    }
    ,
    t._cleanUp = function() {
        clearTimeout(this.delayTimeoutId),
        this._handleCleanUp(),
        this._paused = !1,
        createjs.Sound._playFinished(this)
    }
    ,
    t._interrupt = function() {
        this._cleanUp(),
        this.playState = createjs.Sound.PLAY_INTERRUPTED,
        this._sendEvent("interrupted")
    }
    ,
    t._beginPlaying = function(e) {
        return this._setPosition(e.offset),
        this._setLoop(e.loop),
        this._setVolume(e.volume),
        this._setPan(e.pan),
        null != e.startTime && (this._setStartTime(e.startTime),
        this._setDuration(e.duration)),
        null != this._playbackResource && this._position < this._duration ? (this._paused = !1,
        this._handleSoundReady(),
        this.playState = createjs.Sound.PLAY_SUCCEEDED,
        this._sendEvent("succeeded"),
        !0) : (this._playFailed(),
        !1)
    }
    ,
    t._playFailed = function() {
        this._cleanUp(),
        this.playState = createjs.Sound.PLAY_FAILED,
        this._sendEvent("failed")
    }
    ,
    t._handleSoundComplete = function(e) {
        return (this._position = 0) != this._loop ? (this._loop--,
        this._handleLoop(),
        void this._sendEvent("loop")) : (this._cleanUp(),
        this.playState = createjs.Sound.PLAY_FINISHED,
        void this._sendEvent("complete"))
    }
    ,
    t._handleSoundReady = function() {}
    ,
    t._updateVolume = function() {}
    ,
    t._updatePan = function() {}
    ,
    t._updateStartTime = function() {}
    ,
    t._updateDuration = function() {}
    ,
    t._setDurationFromSource = function() {}
    ,
    t._calculateCurrentPosition = function() {}
    ,
    t._updatePosition = function() {}
    ,
    t._removeLooping = function(e) {}
    ,
    t._addLooping = function(e) {}
    ,
    t._pause = function() {}
    ,
    t._resume = function() {}
    ,
    t._handleStop = function() {}
    ,
    t._handleCleanUp = function() {}
    ,
    t._handleLoop = function() {}
    ,
    createjs.AbstractSoundInstance = createjs.promote(e, "EventDispatcher"),
    createjs.DefaultSoundInstance = createjs.AbstractSoundInstance
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        this._capabilities = null,
        this._loaders = {},
        this._audioSources = {},
        this._soundInstances = {},
        this._volume = 1,
        this._loaderClass,
        this._soundInstanceClass
    }
    var t = e.prototype;
    e._capabilities = null,
    e.isSupported = function() {
        return !0
    }
    ,
    t.register = function(e) {
        var t = this._loaders[e.src];
        return t && !t.canceled ? this._loaders[e.src] : (this._audioSources[e.src] = !0,
        this._soundInstances[e.src] = [],
        (t = new this._loaderClass(e)).on("complete", this._handlePreloadComplete, this),
        this._loaders[e.src] = t)
    }
    ,
    t.preload = function(e) {
        e.on("error", this._handlePreloadError, this),
        e.load()
    }
    ,
    t.isPreloadStarted = function(e) {
        return null != this._audioSources[e]
    }
    ,
    t.isPreloadComplete = function(e) {
        return !(null == this._audioSources[e] || 1 == this._audioSources[e])
    }
    ,
    t.removeSound = function(e) {
        if (this._soundInstances[e]) {
            for (var t = this._soundInstances[e].length; t--; )
                this._soundInstances[e][t].destroy();
            delete this._soundInstances[e],
            delete this._audioSources[e],
            this._loaders[e] && this._loaders[e].destroy(),
            delete this._loaders[e]
        }
    }
    ,
    t.removeAllSounds = function() {
        for (var e in this._audioSources)
            this.removeSound(e)
    }
    ,
    t.create = function(e, t, a) {
        this.isPreloadStarted(e) || this.preload(this.register(e));
        a = new this._soundInstanceClass(e,t,a,this._audioSources[e]);
        return this._soundInstances[e] && this._soundInstances[e].push(a),
        a.setMasterVolume && a.setMasterVolume(createjs.Sound.volume),
        a.setMasterMute && a.setMasterMute(createjs.Sound.muted),
        a
    }
    ,
    t.setVolume = function(e) {
        return this._volume = e,
        this._updateVolume(),
        !0
    }
    ,
    t.getVolume = function() {
        return this._volume
    }
    ,
    t.setMute = function(e) {
        return this._updateVolume(),
        !0
    }
    ,
    t.toString = function() {
        return "[AbstractPlugin]"
    }
    ,
    t._handlePreloadComplete = function(e) {
        var t = e.target.getItem().src;
        this._audioSources[t] = e.result;
        for (var a = 0, i = this._soundInstances[t].length; a < i; a++)
            this._soundInstances[t][a].playbackResource = this._audioSources[t],
            this._soundInstances[t] = null
    }
    ,
    t._handlePreloadError = function(e) {}
    ,
    t._updateVolume = function() {}
    ,
    createjs.AbstractPlugin = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function t(e) {
        this.AbstractLoader_constructor(e, !0, createjs.Types.SOUND)
    }
    var e = createjs.extend(t, createjs.AbstractLoader);
    t.context = null,
    e.toString = function() {
        return "[WebAudioLoader]"
    }
    ,
    e._createRequest = function() {
        this._request = new createjs.XHRRequest(this._item,!1),
        this._request.setResponseType("arraybuffer")
    }
    ,
    e._sendComplete = function(e) {
        t.context.decodeAudioData(this._rawResult, createjs.proxy(this._handleAudioDecoded, this), createjs.proxy(this._sendError, this))
    }
    ,
    e._handleAudioDecoded = function(e) {
        this._result = e,
        this.AbstractLoader__sendComplete()
    }
    ,
    createjs.WebAudioLoader = createjs.promote(t, "AbstractLoader")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a, i) {
        this.AbstractSoundInstance_constructor(e, t, a, i),
        this.gainNode = n.context.createGain(),
        this.panNode = n.context.createPanner(),
        this.panNode.panningModel = n._panningModel,
        this.panNode.connect(this.gainNode),
        this._updatePan(),
        this.sourceNode = null,
        this._soundCompleteTimeout = null,
        this._sourceNodeNext = null,
        this._playbackStartTime = 0,
        this._endedHandler = createjs.proxy(this._handleSoundComplete, this)
    }
    var t = createjs.extend(e, createjs.AbstractSoundInstance)
      , n = e;
    n.context = null,
    n._scratchBuffer = null,
    n.destinationNode = null,
    n._panningModel = "equalpower",
    t.destroy = function() {
        this.AbstractSoundInstance_destroy(),
        this.panNode.disconnect(0),
        this.panNode = null,
        this.gainNode.disconnect(0),
        this.gainNode = null
    }
    ,
    t.toString = function() {
        return "[WebAudioSoundInstance]"
    }
    ,
    t._updatePan = function() {
        this.panNode.setPosition(this._pan, 0, -.5)
    }
    ,
    t._removeLooping = function(e) {
        this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext)
    }
    ,
    t._addLooping = function(e) {
        this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0))
    }
    ,
    t._setDurationFromSource = function() {
        this._duration = 1e3 * this.playbackResource.duration
    }
    ,
    t._handleCleanUp = function() {
        this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED && (this.sourceNode = this._cleanUpAudioNode(this.sourceNode),
        this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext)),
        0 != this.gainNode.numberOfOutputs && this.gainNode.disconnect(0),
        clearTimeout(this._soundCompleteTimeout),
        this._playbackStartTime = 0
    }
    ,
    t._cleanUpAudioNode = function(e) {
        if (e) {
            if (e.stop(0),
            e.disconnect(0),
            createjs.BrowserDetect.isIOS)
                try {
                    e.buffer = n._scratchBuffer
                } catch (e) {}
            e = null
        }
        return e
    }
    ,
    t._handleSoundReady = function(e) {
        this.gainNode.connect(n.destinationNode);
        var t = .001 * this._duration
          , a = Math.min(.001 * Math.max(0, this._position), t);
        this.sourceNode = this._createAndPlayAudioNode(n.context.currentTime - t, a),
        this._playbackStartTime = this.sourceNode.startTime - a,
        this._soundCompleteTimeout = setTimeout(this._endedHandler, 1e3 * (t - a)),
        0 != this._loop && (this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0))
    }
    ,
    t._createAndPlayAudioNode = function(e, t) {
        var a = n.context.createBufferSource();
        a.buffer = this.playbackResource,
        a.connect(this.panNode);
        var i = .001 * this._duration;
        return a.startTime = e + i,
        a.start(a.startTime, t + .001 * this._startTime, i - t),
        a
    }
    ,
    t._pause = function() {
        this._position = 1e3 * (n.context.currentTime - this._playbackStartTime),
        this.sourceNode = this._cleanUpAudioNode(this.sourceNode),
        this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext),
        0 != this.gainNode.numberOfOutputs && this.gainNode.disconnect(0),
        clearTimeout(this._soundCompleteTimeout)
    }
    ,
    t._resume = function() {
        this._handleSoundReady()
    }
    ,
    t._updateVolume = function() {
        var e = this._muted ? 0 : this._volume;
        e != this.gainNode.gain.value && (this.gainNode.gain.value = e)
    }
    ,
    t._calculateCurrentPosition = function() {
        return 1e3 * (n.context.currentTime - this._playbackStartTime)
    }
    ,
    t._updatePosition = function() {
        this.sourceNode = this._cleanUpAudioNode(this.sourceNode),
        this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext),
        clearTimeout(this._soundCompleteTimeout),
        this._paused || this._handleSoundReady()
    }
    ,
    t._handleLoop = function() {
        this._cleanUpAudioNode(this.sourceNode),
        this.sourceNode = this._sourceNodeNext,
        this._playbackStartTime = this.sourceNode.startTime,
        this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0),
        this._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration)
    }
    ,
    t._updateDuration = function() {
        this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._pause(),
        this._resume())
    }
    ,
    createjs.WebAudioSoundInstance = createjs.promote(e, "AbstractSoundInstance")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        this.AbstractPlugin_constructor(),
        this._panningModel = o._panningModel,
        this.context = o.context,
        this.dynamicsCompressorNode = this.context.createDynamicsCompressor(),
        this.dynamicsCompressorNode.connect(this.context.destination),
        this.gainNode = this.context.createGain(),
        this.gainNode.connect(this.dynamicsCompressorNode),
        createjs.WebAudioSoundInstance.destinationNode = this.gainNode,
        this._capabilities = o._capabilities,
        this._loaderClass = createjs.WebAudioLoader,
        this._soundInstanceClass = createjs.WebAudioSoundInstance,
        this._addPropsToClasses()
    }
    var t = createjs.extend(e, createjs.AbstractPlugin)
      , o = e;
    o._capabilities = null,
    o._panningModel = "equalpower",
    o.context = null,
    o._scratchBuffer = null,
    o._unlocked = !1,
    o.DEFAULT_SAMPLE_RATE = 44100,
    o.isSupported = function() {
        var e = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry;
        return !("file:" == location.protocol && !e && !this._isFileXHRSupported()) && (o._generateCapabilities(),
        null != o.context)
    }
    ,
    o.playEmptySound = function() {
        var e;
        null != o.context && ((e = o.context.createBufferSource()).buffer = o._scratchBuffer,
        e.connect(o.context.destination),
        e.start(0, 0, 0))
    }
    ,
    o._isFileXHRSupported = function() {
        var t = !0
          , e = new XMLHttpRequest;
        try {
            e.open("GET", "WebAudioPluginTest.fail", !1)
        } catch (e) {
            return t = !1
        }
        e.onerror = function() {
            t = !1
        }
        ,
        e.onload = function() {
            t = 404 == this.status || 200 == this.status || 0 == this.status && "" != this.response
        }
        ;
        try {
            e.send()
        } catch (e) {
            t = !1
        }
        return t
    }
    ,
    o._generateCapabilities = function() {
        if (null == o._capabilities) {
            var e = document.createElement("audio");
            if (null == e.canPlayType)
                return null;
            if (null == o.context && (o.context = o._createAudioContext(),
            null == o.context))
                return null;
            null == o._scratchBuffer && (o._scratchBuffer = o.context.createBuffer(1, 1, 22050)),
            o._compatibilitySetUp(),
            "ontouchstart"in window && "running" != o.context.state && (o._unlock(),
            document.addEventListener("mousedown", o._unlock, !0),
            document.addEventListener("touchstart", o._unlock, !0),
            document.addEventListener("touchend", o._unlock, !0)),
            o._capabilities = {
                panning: !0,
                volume: !0,
                tracks: -1
            };
            for (var t = createjs.Sound.SUPPORTED_EXTENSIONS, a = createjs.Sound.EXTENSION_MAP, i = 0, n = t.length; i < n; i++) {
                var r = t[i]
                  , s = a[r] || r;
                o._capabilities[r] = "no" != e.canPlayType("audio/" + r) && "" != e.canPlayType("audio/" + r) || "no" != e.canPlayType("audio/" + s) && "" != e.canPlayType("audio/" + s)
            }
            o.context.destination.numberOfChannels < 2 && (o._capabilities.panning = !1)
        }
    }
    ,
    o._createAudioContext = function() {
        var e = window.AudioContext || window.webkitAudioContext;
        if (null == e)
            return null;
        var t, a, i = new e;
        return /(iPhone|iPad)/i.test(navigator.userAgent) && i.sampleRate !== o.DEFAULT_SAMPLE_RATE && (t = i.createBuffer(1, 1, o.DEFAULT_SAMPLE_RATE),
        (a = i.createBufferSource()).buffer = t,
        a.connect(i.destination),
        a.start(0),
        a.disconnect(),
        i.close(),
        i = new e),
        i
    }
    ,
    o._compatibilitySetUp = function() {
        var e;
        o._panningModel = "equalpower",
        o.context.createGain || (o.context.createGain = o.context.createGainNode,
        (e = o.context.createBufferSource()).__proto__.start = e.__proto__.noteGrainOn,
        e.__proto__.stop = e.__proto__.noteOff,
        o._panningModel = 0)
    }
    ,
    o._unlock = function() {
        o._unlocked || (o.playEmptySound(),
        "running" == o.context.state && (document.removeEventListener("mousedown", o._unlock, !0),
        document.removeEventListener("touchend", o._unlock, !0),
        document.removeEventListener("touchstart", o._unlock, !0),
        o._unlocked = !0))
    }
    ,
    t.toString = function() {
        return "[WebAudioPlugin]"
    }
    ,
    t._addPropsToClasses = function() {
        var e = this._soundInstanceClass;
        e.context = this.context,
        e._scratchBuffer = o._scratchBuffer,
        e.destinationNode = this.gainNode,
        e._panningModel = this._panningModel,
        this._loaderClass.context = this.context
    }
    ,
    t._updateVolume = function() {
        var e = createjs.Sound._masterMute ? 0 : this._volume;
        e != this.gainNode.gain.value && (this.gainNode.gain.value = e)
    }
    ,
    createjs.WebAudioPlugin = createjs.promote(e, "AbstractPlugin")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        throw "HTMLAudioTagPool cannot be instantiated"
    }
    function t(e) {
        this._tags = []
    }
    var a = e;
    a._tags = {},
    a._tagPool = new t,
    a._tagUsed = {},
    a.get = function(e) {
        var t = a._tags[e];
        return null == t ? (t = a._tags[e] = a._tagPool.get()).src = e : a._tagUsed[e] ? (t = a._tagPool.get()).src = e : a._tagUsed[e] = !0,
        t
    }
    ,
    a.set = function(e, t) {
        t == a._tags[e] ? a._tagUsed[e] = !1 : a._tagPool.set(t)
    }
    ,
    a.remove = function(e) {
        var t = a._tags[e];
        return null != t && (a._tagPool.set(t),
        delete a._tags[e],
        delete a._tagUsed[e],
        !0)
    }
    ,
    a.getDuration = function(e) {
        e = a._tags[e];
        return null != e && e.duration ? 1e3 * e.duration : 0
    }
    ,
    createjs.HTMLAudioTagPool = e;
    var i = t.prototype;
    i.constructor = t,
    i.get = function() {
        var e = 0 == this._tags.length ? this._createTag() : this._tags.pop();
        return null == e.parentNode && document.body.appendChild(e),
        e
    }
    ,
    i.set = function(e) {
        -1 == createjs.indexOf(this._tags, e) && (this._tags.src = null,
        this._tags.push(e))
    }
    ,
    i.toString = function() {
        return "[TagPool]"
    }
    ,
    i._createTag = function() {
        var e = document.createElement("audio");
        return e.autoplay = !1,
        e.preload = "none",
        e
    }
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e, t, a, i) {
        this.AbstractSoundInstance_constructor(e, t, a, i),
        this._audioSpriteStopTime = null,
        this._delayTimeoutId = null,
        this._endedHandler = createjs.proxy(this._handleSoundComplete, this),
        this._readyHandler = createjs.proxy(this._handleTagReady, this),
        this._stalledHandler = createjs.proxy(this._playFailed, this),
        this._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this),
        this._loopHandler = createjs.proxy(this._handleSoundComplete, this),
        a ? this._audioSpriteStopTime = .001 * (t + a) : this._duration = createjs.HTMLAudioTagPool.getDuration(this.src)
    }
    var t = createjs.extend(e, createjs.AbstractSoundInstance);
    t.setMasterVolume = function(e) {
        this._updateVolume()
    }
    ,
    t.setMasterMute = function(e) {
        this._updateVolume()
    }
    ,
    t.toString = function() {
        return "[HTMLAudioSoundInstance]"
    }
    ,
    t._removeLooping = function() {
        null != this._playbackResource && (this._playbackResource.loop = !1,
        this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1))
    }
    ,
    t._addLooping = function() {
        null == this._playbackResource || this._audioSpriteStopTime || (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1),
        this._playbackResource.loop = !0)
    }
    ,
    t._handleCleanUp = function() {
        var e = this._playbackResource;
        if (null != e) {
            e.pause(),
            e.loop = !1,
            e.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1),
            e.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1),
            e.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, !1),
            e.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1),
            e.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, !1);
            try {
                e.currentTime = this._startTime
            } catch (e) {}
            createjs.HTMLAudioTagPool.set(this.src, e),
            this._playbackResource = null
        }
    }
    ,
    t._beginPlaying = function(e) {
        return this._playbackResource = createjs.HTMLAudioTagPool.get(this.src),
        this.AbstractSoundInstance__beginPlaying(e)
    }
    ,
    t._handleSoundReady = function(e) {
        if (4 !== this._playbackResource.readyState) {
            var t = this._playbackResource;
            return t.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1),
            t.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, !1),
            t.preload = "auto",
            void t.load()
        }
        this._updateVolume(),
        this._playbackResource.currentTime = .001 * (this._startTime + this._position),
        this._audioSpriteStopTime ? this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, !1) : (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1),
        0 != this._loop && (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1),
        this._playbackResource.loop = !0)),
        this._playbackResource.play()
    }
    ,
    t._handleTagReady = function(e) {
        this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1),
        this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, !1),
        this._handleSoundReady()
    }
    ,
    t._pause = function() {
        this._playbackResource.pause()
    }
    ,
    t._resume = function() {
        this._playbackResource.play()
    }
    ,
    t._updateVolume = function() {
        var e;
        null == this._playbackResource || (e = this._muted || createjs.Sound._masterMute ? 0 : this._volume * createjs.Sound._masterVolume) != this._playbackResource.volume && (this._playbackResource.volume = e)
    }
    ,
    t._calculateCurrentPosition = function() {
        return 1e3 * this._playbackResource.currentTime - this._startTime
    }
    ,
    t._updatePosition = function() {
        this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1),
        this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, !1);
        try {
            this._playbackResource.currentTime = .001 * (this._position + this._startTime)
        } catch (e) {
            this._handleSetPositionSeek(null)
        }
    }
    ,
    t._handleSetPositionSeek = function(e) {
        null != this._playbackResource && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, !1),
        this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1))
    }
    ,
    t._handleAudioSpriteLoop = function(e) {
        this._playbackResource.currentTime <= this._audioSpriteStopTime || (this._playbackResource.pause(),
        0 == this._loop ? this._handleSoundComplete(null) : (this._position = 0,
        this._loop--,
        this._playbackResource.currentTime = .001 * this._startTime,
        this._paused || this._playbackResource.play(),
        this._sendEvent("loop")))
    }
    ,
    t._handleLoop = function(e) {
        0 == this._loop && (this._playbackResource.loop = !1,
        this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1))
    }
    ,
    t._updateStartTime = function() {
        this._audioSpriteStopTime = .001 * (this._startTime + this._duration),
        this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1),
        this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, !1))
    }
    ,
    t._updateDuration = function() {
        this._audioSpriteStopTime = .001 * (this._startTime + this._duration),
        this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1),
        this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, !1))
    }
    ,
    t._setDurationFromSource = function() {
        this._duration = createjs.HTMLAudioTagPool.getDuration(this.src),
        this._playbackResource = null
    }
    ,
    createjs.HTMLAudioSoundInstance = createjs.promote(e, "AbstractSoundInstance")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        this.AbstractPlugin_constructor(),
        this._capabilities = o._capabilities,
        this._loaderClass = createjs.SoundLoader,
        this._soundInstanceClass = createjs.HTMLAudioSoundInstance
    }
    var t = createjs.extend(e, createjs.AbstractPlugin)
      , o = e;
    o.MAX_INSTANCES = 30,
    o._AUDIO_READY = "canplaythrough",
    o._AUDIO_ENDED = "ended",
    o._AUDIO_SEEKED = "seeked",
    o._AUDIO_STALLED = "stalled",
    o._TIME_UPDATE = "timeupdate",
    o._capabilities = null,
    o.isSupported = function() {
        return o._generateCapabilities(),
        null != o._capabilities
    }
    ,
    o._generateCapabilities = function() {
        if (null == o._capabilities) {
            var e = document.createElement("audio");
            if (null == e.canPlayType)
                return null;
            o._capabilities = {
                panning: !1,
                volume: !0,
                tracks: -1
            };
            for (var t = createjs.Sound.SUPPORTED_EXTENSIONS, a = createjs.Sound.EXTENSION_MAP, i = 0, n = t.length; i < n; i++) {
                var r = t[i]
                  , s = a[r] || r;
                o._capabilities[r] = "no" != e.canPlayType("audio/" + r) && "" != e.canPlayType("audio/" + r) || "no" != e.canPlayType("audio/" + s) && "" != e.canPlayType("audio/" + s)
            }
        }
    }
    ,
    t.register = function(e) {
        var t = createjs.HTMLAudioTagPool.get(e.src)
          , e = this.AbstractPlugin_register(e);
        return e.setTag(t),
        e
    }
    ,
    t.removeSound = function(e) {
        this.AbstractPlugin_removeSound(e),
        createjs.HTMLAudioTagPool.remove(e)
    }
    ,
    t.create = function(e, t, a) {
        a = this.AbstractPlugin_create(e, t, a);
        return a.playbackResource = null,
        a
    }
    ,
    t.toString = function() {
        return "[HTMLAudioPlugin]"
    }
    ,
    t.setVolume = t.getVolume = t.setMute = null,
    createjs.HTMLAudioPlugin = createjs.promote(e, "AbstractPlugin")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        this.EventDispatcher_constructor(),
        this.ignoreGlobalPause = !1,
        this.loop = 0,
        this.useTicks = !1,
        this.reversed = !1,
        this.bounce = !1,
        this.timeScale = 1,
        this.duration = 0,
        this.position = 0,
        this.rawPosition = -1,
        this._paused = !0,
        this._next = null,
        this._prev = null,
        this._parent = null,
        this._labels = null,
        this._labelList = null,
        e && (this.useTicks = !!e.useTicks,
        this.ignoreGlobalPause = !!e.ignoreGlobalPause,
        this.loop = !0 === e.loop ? -1 : e.loop || 0,
        this.reversed = !!e.reversed,
        this.bounce = !!e.bounce,
        this.timeScale = e.timeScale || 1,
        e.onChange && this.addEventListener("change", e.onChange),
        e.onComplete && this.addEventListener("complete", e.onComplete))
    }
    var t = createjs.extend(e, createjs.EventDispatcher);
    t._setPaused = function(e) {
        return createjs.Tween._register(this, e),
        this
    }
    ,
    t.setPaused = createjs.deprecate(t._setPaused, "AbstractTween.setPaused"),
    t._getPaused = function() {
        return this._paused
    }
    ,
    t.getPaused = createjs.deprecate(t._getPaused, "AbstactTween.getPaused"),
    t._getCurrentLabel = function(e) {
        var t = this.getLabels();
        null == e && (e = this.position);
        for (var a = 0, i = t.length; a < i && !(e < t[a].position); a++)
            ;
        return 0 === a ? null : t[a - 1].label
    }
    ,
    t.getCurrentLabel = createjs.deprecate(t._getCurrentLabel, "AbstractTween.getCurrentLabel");
    try {
        Object.defineProperties(t, {
            paused: {
                set: t._setPaused,
                get: t._getPaused
            },
            currentLabel: {
                get: t._getCurrentLabel
            }
        })
    } catch (e) {}
    t.advance = function(e, t) {
        this.setPosition(this.rawPosition + e * this.timeScale, t)
    }
    ,
    t.setPosition = function(e, t, a, i) {
        var n = this.duration
          , r = this.loop
          , s = this.rawPosition
          , o = 0
          , l = 0
          , c = !1;
        if (e < 0 && (e = 0),
        0 === n) {
            if (c = !0,
            -1 !== s)
                return c
        } else {
            if (l = e - (o = e / n | 0) * n,
            (c = -1 !== r && r * n + n <= e) && (e = (l = n) * (o = r) + n),
            e === s)
                return c;
            !this.reversed != !(this.bounce && o % 2) && (l = n - l)
        }
        this.position = l,
        this.rawPosition = e,
        this._updatePosition(a, c),
        c && (this.paused = !0),
        i && i(this),
        t || this._runActions(s, e, a, !a && -1 === s),
        this.dispatchEvent("change"),
        c && this.dispatchEvent("complete")
    }
    ,
    t.calculatePosition = function(e) {
        var t = this.duration
          , a = this.loop
          , i = 0
          , n = 0;
        return 0 === t ? 0 : (-1 !== a && a * t + t <= e ? (n = t,
        i = a) : n = e < 0 ? 0 : e - (i = e / t | 0) * t,
        !this.reversed != !(this.bounce && i % 2) ? t - n : n)
    }
    ,
    t.getLabels = function() {
        var e = this._labelList;
        if (!e) {
            e = this._labelList = [];
            var t, a = this._labels;
            for (t in a)
                e.push({
                    label: t,
                    position: a[t]
                });
            e.sort(function(e, t) {
                return e.position - t.position
            })
        }
        return e
    }
    ,
    t.setLabels = function(e) {
        this._labels = e,
        this._labelList = null
    }
    ,
    t.addLabel = function(e, t) {
        this._labels || (this._labels = {}),
        this._labels[e] = t;
        var a = this._labelList;
        if (a) {
            for (var i = 0, n = a.length; i < n && !(t < a[i].position); i++)
                ;
            a.splice(i, 0, {
                label: e,
                position: t
            })
        }
    }
    ,
    t.gotoAndPlay = function(e) {
        this.paused = !1,
        this._goto(e)
    }
    ,
    t.gotoAndStop = function(e) {
        this.paused = !0,
        this._goto(e)
    }
    ,
    t.resolve = function(e) {
        var t = Number(e);
        return isNaN(t) && (t = this._labels && this._labels[e]),
        t
    }
    ,
    t.toString = function() {
        return "[AbstractTween]"
    }
    ,
    t.clone = function() {
        throw "AbstractTween can not be cloned."
    }
    ,
    t._init = function(e) {
        e && e.paused || (this.paused = !1),
        e && null != e.position && this.setPosition(e.position)
    }
    ,
    t._updatePosition = function(e, t) {}
    ,
    t._goto = function(e) {
        e = this.resolve(e);
        null != e && this.setPosition(e, !1, !0)
    }
    ,
    t._runActions = function(e, t, a, i) {
        if (this._actionHead || this.tweens) {
            var n, r, s, o, l = this.duration, c = this.reversed, d = this.bounce, u = this.loop;
            if (0 === l ? (n = r = s = o = 0,
            c = d = !1) : (s = e - (n = e / l | 0) * l,
            o = t - (r = t / l | 0) * l),
            -1 !== u && (u < r && (o = l,
            r = u),
            u < n && (s = l,
            n = u)),
            a)
                return this._runActionsRange(o, o, a, i);
            if (n !== r || s !== o || a || i) {
                -1 === n && (n = s = 0);
                var h = e <= t
                  , p = n;
                do {
                    var m = !c != !(d && p % 2)
                      , g = p === n ? s : h ? 0 : l
                      , f = p === r ? o : h ? l : 0;
                    if (m && (g = l - g,
                    f = l - f),
                    (!d || p === n || g !== f) && this._runActionsRange(g, f, a, i || p !== n && !d))
                        return !0
                } while (i = !1,
                h && ++p <= r || !h && --p >= r)
            }
        }
    }
    ,
    t._runActionsRange = function(e, t, a, i) {}
    ,
    createjs.AbstractTween = createjs.promote(e, "EventDispatcher")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function f(e, t) {
        this.AbstractTween_constructor(t),
        this.pluginData = null,
        this.target = e,
        this.passive = !1,
        this._stepHead = new n(null,0,0,{},null,!0),
        this._stepTail = this._stepHead,
        this._stepPosition = 0,
        this._actionHead = null,
        this._actionTail = null,
        this._plugins = null,
        this._pluginIds = null,
        this._injected = null,
        t && (this.pluginData = t.pluginData,
        t.override && f.removeTweens(e)),
        this.pluginData || (this.pluginData = {}),
        this._init(t)
    }
    function n(e, t, a, i, n, r) {
        this.next = null,
        this.prev = e,
        this.t = t,
        this.d = a,
        this.props = i,
        this.ease = n,
        this.passive = r,
        this.index = e ? e.index + 1 : 0
    }
    function i(e, t, a, i, n) {
        this.next = null,
        this.prev = e,
        this.t = t,
        this.d = 0,
        this.scope = a,
        this.funct = i,
        this.params = n
    }
    var e = createjs.extend(f, createjs.AbstractTween);
    f.IGNORE = {},
    f._tweens = [],
    f._plugins = null,
    f._tweenHead = null,
    f._tweenTail = null,
    f.get = function(e, t) {
        return new f(e,t)
    }
    ,
    f.tick = function(e, t) {
        for (var a = f._tweenHead; a; ) {
            var i = a._next;
            t && !a.ignoreGlobalPause || a._paused || a.advance(a.useTicks ? 1 : e),
            a = i
        }
    }
    ,
    f.handleEvent = function(e) {
        "tick" === e.type && this.tick(e.delta, e.paused)
    }
    ,
    f.removeTweens = function(e) {
        if (e.tweenjs_count) {
            for (var t = f._tweenHead; t; ) {
                var a = t._next;
                t.target === e && f._register(t, !0),
                t = a
            }
            e.tweenjs_count = 0
        }
    }
    ,
    f.removeAllTweens = function() {
        for (var e = f._tweenHead; e; ) {
            var t = e._next;
            e._paused = !0,
            e.target && (e.target.tweenjs_count = 0),
            e._next = e._prev = null,
            e = t
        }
        f._tweenHead = f._tweenTail = null
    }
    ,
    f.hasActiveTweens = function(e) {
        return e ? !!e.tweenjs_count : !!f._tweenHead
    }
    ,
    f._installPlugin = function(e) {
        for (var t = e.priority = e.priority || 0, a = f._plugins = f._plugins || [], i = 0, n = a.length; i < n && !(t < a[i].priority); i++)
            ;
        a.splice(i, 0, e)
    }
    ,
    f._register = function(e, t) {
        var a, i = e.target;
        !t && e._paused ? (i && (i.tweenjs_count = i.tweenjs_count ? i.tweenjs_count + 1 : 1),
        (a = f._tweenTail) ? (f._tweenTail = a._next = e)._prev = a : f._tweenHead = f._tweenTail = e,
        !f._inited && createjs.Ticker && (createjs.Ticker.addEventListener("tick", f),
        f._inited = !0)) : t && !e._paused && (i && i.tweenjs_count--,
        a = e._next,
        i = e._prev,
        a ? a._prev = i : f._tweenTail = i,
        i ? i._next = a : f._tweenHead = a,
        e._next = e._prev = null),
        e._paused = t
    }
    ,
    e.wait = function(e, t) {
        return 0 < e && this._addStep(+e, this._stepTail.props, null, t),
        this
    }
    ,
    e.to = function(e, t, a) {
        (null == t || t < 0) && (t = 0);
        a = this._addStep(+t, null, a);
        return this._appendProps(e, a),
        this
    }
    ,
    e.label = function(e) {
        return this.addLabel(e, this.duration),
        this
    }
    ,
    e.call = function(e, t, a) {
        return this._addAction(a || this.target, e, t || [this])
    }
    ,
    e.set = function(e, t) {
        return this._addAction(t || this.target, this._set, [e])
    }
    ,
    e.play = function(e) {
        return this._addAction(e || this, this._set, [{
            paused: !1
        }])
    }
    ,
    e.pause = function(e) {
        return this._addAction(e || this, this._set, [{
            paused: !0
        }])
    }
    ,
    e.w = e.wait,
    e.t = e.to,
    e.c = e.call,
    e.s = e.set,
    e.toString = function() {
        return "[Tween]"
    }
    ,
    e.clone = function() {
        throw "Tween can not be cloned."
    }
    ,
    e._addPlugin = function(e) {
        var t = this._pluginIds || (this._pluginIds = {})
          , a = e.ID;
        if (a && !t[a]) {
            t[a] = !0;
            for (var i = this._plugins || (this._plugins = []), n = e.priority || 0, r = 0, s = i.length; r < s; r++)
                if (n < i[r].priority)
                    return void i.splice(r, 0, e);
            i.push(e)
        }
    }
    ,
    e._updatePosition = function(e, t) {
        var a = this._stepHead.next
          , i = this.position
          , n = this.duration;
        if (this.target && a) {
            for (var r = a.next; r && r.t <= i; )
                r = (a = a.next).next;
            n = t ? 0 === n ? 1 : i / n : (i - a.t) / a.d;
            this._updateTargetProps(a, n, t)
        }
        this._stepPosition = a ? i - a.t : 0
    }
    ,
    e._updateTargetProps = function(e, t, a) {
        if (!(this.passive = !!e.passive)) {
            var i, n, r, s, o = e.prev.props, l = e.props;
            (s = e.ease) && (t = s(t, 0, 1, 1));
            var c = this._plugins;
            e: for (var d in o) {
                if (i = (n = o[d]) !== (r = l[d]) && "number" == typeof n ? n + (r - n) * t : 1 <= t ? r : n,
                c)
                    for (var u = 0, h = c.length; u < h; u++) {
                        var p = c[u].change(this, e, d, i, t, a);
                        if (p === f.IGNORE)
                            continue e;
                        void 0 !== p && (i = p)
                    }
                this.target[d] = i
            }
        }
    }
    ,
    e._runActionsRange = function(e, t, a, i) {
        var n = t < e
          , r = n ? this._actionTail : this._actionHead
          , s = t
          , o = e;
        n && (s = e,
        o = t);
        for (var l = this.position; r; ) {
            var c = r.t;
            if ((c === t || o < c && c < s || i && c === e) && (r.funct.apply(r.scope, r.params),
            l !== this.position))
                return !0;
            r = n ? r.prev : r.next
        }
    }
    ,
    e._appendProps = function(e, t, a) {
        var i, n, r, s, o = this._stepHead.props, l = this.target, c = f._plugins, d = t.prev, u = d.props, h = t.props || (t.props = this._cloneProps(u)), p = {};
        for (i in e)
            if (e.hasOwnProperty(i) && (p[i] = h[i] = e[i],
            void 0 === o[i])) {
                if (s = void 0,
                c)
                    for (n = c.length - 1; 0 <= n; n--)
                        if (void 0 !== (r = c[n].init(this, i, s)) && (s = r),
                        s === f.IGNORE) {
                            delete h[i],
                            delete p[i];
                            break
                        }
                s !== f.IGNORE && (void 0 === s && (s = l[i]),
                u[i] = void 0 === s ? null : s)
            }
        for (i in p) {
            r = e[i];
            for (var m, g = d; (m = g) && (g = m.prev); )
                if (g.props !== m.props) {
                    if (void 0 !== g.props[i])
                        break;
                    g.props[i] = u[i]
                }
        }
        if (!1 !== a && (c = this._plugins))
            for (n = c.length - 1; 0 <= n; n--)
                c[n].step(this, t, p);
        (a = this._injected) && (this._injected = null,
        this._appendProps(a, t, !1))
    }
    ,
    e._injectProp = function(e, t) {
        (this._injected || (this._injected = {}))[e] = t
    }
    ,
    e._addStep = function(e, t, a, i) {
        i = new n(this._stepTail,this.duration,e,t,a,i || !1);
        return this.duration += e,
        this._stepTail = this._stepTail.next = i
    }
    ,
    e._addAction = function(e, t, a) {
        a = new i(this._actionTail,this.duration,e,t,a);
        return this._actionTail ? this._actionTail.next = a : this._actionHead = a,
        this._actionTail = a,
        this
    }
    ,
    e._set = function(e) {
        for (var t in e)
            this[t] = e[t]
    }
    ,
    e._cloneProps = function(e) {
        var t, a = {};
        for (t in e)
            a[t] = e[t];
        return a
    }
    ,
    createjs.Tween = createjs.promote(f, "AbstractTween")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e(e) {
        var t, a;
        e instanceof Array || null == e && 1 < arguments.length ? (t = e,
        a = arguments[1],
        e = arguments[2]) : e && (t = e.tweens,
        a = e.labels),
        this.AbstractTween_constructor(e),
        this.tweens = [],
        t && this.addTween.apply(this, t),
        this.setLabels(a),
        this._init(e)
    }
    var t = createjs.extend(e, createjs.AbstractTween);
    t.addTween = function(e) {
        e._parent && e._parent.removeTween(e);
        var t = arguments.length;
        if (1 < t) {
            for (var a = 0; a < t; a++)
                this.addTween(arguments[a]);
            return arguments[t - 1]
        }
        if (0 === t)
            return null;
        this.tweens.push(e),
        e._parent = this,
        e.paused = !0;
        var i = e.duration;
        return 0 < e.loop && (i *= e.loop + 1),
        i > this.duration && (this.duration = i),
        0 <= this.rawPosition && e.setPosition(this.rawPosition),
        e
    }
    ,
    t.removeTween = function(e) {
        var t = arguments.length;
        if (1 < t) {
            for (var a = !0, i = 0; i < t; i++)
                a = a && this.removeTween(arguments[i]);
            return a
        }
        if (0 === t)
            return !0;
        for (var n = this.tweens, i = n.length; i--; )
            if (n[i] === e)
                return n.splice(i, 1),
                e._parent = null,
                e.duration >= this.duration && this.updateDuration(),
                !0;
        return !1
    }
    ,
    t.updateDuration = function() {
        for (var e = this.duration = 0, t = this.tweens.length; e < t; e++) {
            var a = this.tweens[e]
              , i = a.duration;
            0 < a.loop && (i *= a.loop + 1),
            i > this.duration && (this.duration = i)
        }
    }
    ,
    t.toString = function() {
        return "[Timeline]"
    }
    ,
    t.clone = function() {
        throw "Timeline can not be cloned."
    }
    ,
    t._updatePosition = function(e, t) {
        for (var a = this.position, i = 0, n = this.tweens.length; i < n; i++)
            this.tweens[i].setPosition(a, !0, e)
    }
    ,
    t._runActionsRange = function(e, t, a, i) {
        for (var n = this.position, r = 0, s = this.tweens.length; r < s; r++)
            if (this.tweens[r]._runActions(e, t, a, i),
            n !== this.position)
                return !0
    }
    ,
    createjs.Timeline = createjs.promote(e, "AbstractTween")
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function t() {
        throw "Ease cannot be instantiated."
    }
    t.none = t.linear = function(e) {
        return e
    }
    ,
    t.get = function(t) {
        return t < -1 ? t = -1 : 1 < t && (t = 1),
        function(e) {
            return 0 == t ? e : t < 0 ? e * (e * -t + 1 + t) : e * ((2 - e) * t + (1 - t))
        }
    }
    ,
    t.getPowIn = function(t) {
        return function(e) {
            return Math.pow(e, t)
        }
    }
    ,
    t.getPowOut = function(t) {
        return function(e) {
            return 1 - Math.pow(1 - e, t)
        }
    }
    ,
    t.getPowInOut = function(t) {
        return function(e) {
            return (e *= 2) < 1 ? .5 * Math.pow(e, t) : 1 - .5 * Math.abs(Math.pow(2 - e, t))
        }
    }
    ,
    t.quadIn = t.getPowIn(2),
    t.quadOut = t.getPowOut(2),
    t.quadInOut = t.getPowInOut(2),
    t.cubicIn = t.getPowIn(3),
    t.cubicOut = t.getPowOut(3),
    t.cubicInOut = t.getPowInOut(3),
    t.quartIn = t.getPowIn(4),
    t.quartOut = t.getPowOut(4),
    t.quartInOut = t.getPowInOut(4),
    t.quintIn = t.getPowIn(5),
    t.quintOut = t.getPowOut(5),
    t.quintInOut = t.getPowInOut(5),
    t.sineIn = function(e) {
        return 1 - Math.cos(e * Math.PI / 2)
    }
    ,
    t.sineOut = function(e) {
        return Math.sin(e * Math.PI / 2)
    }
    ,
    t.sineInOut = function(e) {
        return -.5 * (Math.cos(Math.PI * e) - 1)
    }
    ,
    t.backIn = (t.getBackIn = function(t) {
        return function(e) {
            return e * e * ((t + 1) * e - t)
        }
    }
    )(1.7),
    t.backOut = (t.getBackOut = function(t) {
        return function(e) {
            return --e * e * ((t + 1) * e + t) + 1
        }
    }
    )(1.7),
    t.backInOut = (t.getBackInOut = function(t) {
        return t *= 1.525,
        function(e) {
            return (e *= 2) < 1 ? e * e * ((t + 1) * e - t) * .5 : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
        }
    }
    )(1.7),
    t.circIn = function(e) {
        return -(Math.sqrt(1 - e * e) - 1)
    }
    ,
    t.circOut = function(e) {
        return Math.sqrt(1 - --e * e)
    }
    ,
    t.circInOut = function(e) {
        return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
    }
    ,
    t.bounceIn = function(e) {
        return 1 - t.bounceOut(1 - e)
    }
    ,
    t.bounceOut = function(e) {
        return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
    }
    ,
    t.bounceInOut = function(e) {
        return e < .5 ? .5 * t.bounceIn(2 * e) : .5 * t.bounceOut(2 * e - 1) + .5
    }
    ,
    t.elasticIn = (t.getElasticIn = function(a, i) {
        var n = 2 * Math.PI;
        return function(e) {
            if (0 == e || 1 == e)
                return e;
            var t = i / n * Math.asin(1 / a);
            return -(a * Math.pow(2, 10 * --e) * Math.sin((e - t) * n / i))
        }
    }
    )(1, .3),
    t.elasticOut = (t.getElasticOut = function(a, i) {
        var n = 2 * Math.PI;
        return function(e) {
            if (0 == e || 1 == e)
                return e;
            var t = i / n * Math.asin(1 / a);
            return a * Math.pow(2, -10 * e) * Math.sin((e - t) * n / i) + 1
        }
    }
    )(1, .3),
    t.elasticInOut = (t.getElasticInOut = function(a, i) {
        var n = 2 * Math.PI;
        return function(e) {
            var t = i / n * Math.asin(1 / a);
            return (e *= 2) < 1 ? a * Math.pow(2, 10 * --e) * Math.sin((e - t) * n / i) * -.5 : a * Math.pow(2, -10 * --e) * Math.sin((e - t) * n / i) * .5 + 1
        }
    }
    )(1, .3 * 1.5),
    createjs.Ease = t
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    function e() {
        throw "MotionGuidePlugin cannot be instantiated."
    }
    var S = e;
    S.priority = 0,
    S.ID = "MotionGuide",
    S.install = function() {
        return createjs.Tween._installPlugin(e),
        createjs.Tween.IGNORE
    }
    ,
    S.init = function(e, t, a) {
        "guide" == t && e._addPlugin(S)
    }
    ,
    S.step = function(e, t, a) {
        for (var i in a)
            if ("guide" === i) {
                var n = t.props.guide
                  , r = S._solveGuideData(a.guide, n);
                n.valid = !r;
                var s = n.endData;
                if (e._injectProp("x", s.x),
                e._injectProp("y", s.y),
                r || !n.orient)
                    break;
                var o = void 0 === t.prev.props.rotation ? e.target.rotation || 0 : t.prev.props.rotation;
                if (n.startOffsetRot = o - n.startData.rotation,
                "fixed" == n.orient)
                    n.endAbsRot = s.rotation + n.startOffsetRot,
                    n.deltaRotation = 0;
                else {
                    r = void 0 === a.rotation ? e.target.rotation || 0 : a.rotation,
                    o = r - n.endData.rotation - n.startOffsetRot,
                    s = o % 360;
                    switch (n.endAbsRot = r,
                    n.orient) {
                    case "auto":
                        n.deltaRotation = o;
                        break;
                    case "cw":
                        n.deltaRotation = (360 + s) % 360 + 360 * Math.abs(o / 360 | 0);
                        break;
                    case "ccw":
                        n.deltaRotation = (s - 360) % 360 + -360 * Math.abs(o / 360 | 0)
                    }
                }
                e._injectProp("rotation", n.endAbsRot)
            }
    }
    ,
    S.change = function(e, t, a, i, n, r) {
        var s = t.props.guide;
        if (s && t.props !== t.prev.props && s !== t.prev.props.guide)
            return "guide" === a && !s.valid || "x" == a || "y" == a || "rotation" === a && s.orient ? createjs.Tween.IGNORE : void S._ratioToPositionData(n, s, e.target)
    }
    ,
    S.debug = function(e, t, a) {
        e = e.guide || e;
        var i = S._findPathProblems(e);
        if (!t)
            return i;
        var n = e.path
          , r = n.length;
        for (t.save(),
        t.lineCap = "round",
        t.lineJoin = "miter",
        t.beginPath(),
        t.moveTo(n[0], n[1]),
        c = 2; c < r; c += 4)
            t.quadraticCurveTo(n[c], n[c + 1], n[c + 2], n[c + 3]);
        t.strokeStyle = "black",
        t.lineWidth = 4.5,
        t.stroke(),
        t.strokeStyle = "white",
        t.lineWidth = 3,
        t.stroke(),
        t.closePath();
        var s = a.length;
        if (a && s) {
            var o = {}
              , l = {};
            S._solveGuideData(e, o);
            for (var c = 0; c < s; c++)
                o.orient = "fixed",
                S._ratioToPositionData(a[c], o, l),
                t.beginPath(),
                t.moveTo(l.x, l.y),
                t.lineTo(l.x + 9 * Math.cos(.0174533 * l.rotation), l.y + 9 * Math.sin(.0174533 * l.rotation)),
                t.strokeStyle = "black",
                t.lineWidth = 4.5,
                t.stroke(),
                t.strokeStyle = "red",
                t.lineWidth = 3,
                t.stroke(),
                t.closePath()
        }
        return t.restore(),
        i
    }
    ,
    S._solveGuideData = function(e, t) {
        if (P = S.debug(e))
            return P;
        var a = t.path = e.path;
        t.orient = e.orient,
        t.subLines = [],
        t.totalLength = 0,
        t.startOffsetRot = 0,
        t.deltaRotation = 0,
        t.startData = {
            ratio: 0
        },
        t.endData = {
            ratio: 1
        },
        t.animSpan = 1;
        for (var i, n, r, s, o = a.length, l = {}, c = a[0], d = a[1], u = 2; u < o; u += 4) {
            i = a[u],
            n = a[u + 1],
            r = a[u + 2],
            s = a[u + 3];
            for (var h = {
                weightings: [],
                estLength: 0,
                portion: 0
            }, p = c, m = d, g = 1; g <= 10; g++) {
                S._getParamsForCurve(c, d, i, n, r, s, g / 10, !1, l);
                var f = l.x - p
                  , v = l.y - m
                  , _ = Math.sqrt(f * f + v * v);
                h.weightings.push(_),
                h.estLength += _,
                p = l.x,
                m = l.y
            }
            for (t.totalLength += h.estLength,
            g = 0; g < 10; g++)
                _ = h.estLength,
                h.weightings[g] = h.weightings[g] / _;
            t.subLines.push(h),
            c = r,
            d = s
        }
        _ = t.totalLength;
        var y = t.subLines.length;
        for (u = 0; u < y; u++)
            t.subLines[u].portion = t.subLines[u].estLength / _;
        var P = isNaN(e.start) ? 0 : e.start
          , e = isNaN(e.end) ? 1 : e.end;
        S._ratioToPositionData(P, t, t.startData),
        S._ratioToPositionData(e, t, t.endData),
        t.startData.ratio = P,
        t.endData.ratio = e,
        t.animSpan = t.endData.ratio - t.startData.ratio
    }
    ,
    S._ratioToPositionData = function(e, t, a) {
        for (var i, n, r, s = t.subLines, o = 0, l = e * t.animSpan + t.startData.ratio, c = s.length, d = 0; d < c; d++) {
            if (l <= o + (n = s[d].portion)) {
                r = d;
                break
            }
            o += n
        }
        void 0 === r && (r = c - 1,
        o -= n);
        var u = s[r].weightings
          , h = n;
        for (c = u.length,
        d = 0; d < c && !(l <= o + (n = u[d] * h)); d++)
            o += n;
        r = 4 * r + 2,
        i = d / 10 + (l - o) / n * .1;
        var p = t.path;
        return S._getParamsForCurve(p[r - 2], p[r - 1], p[r], p[r + 1], p[r + 2], p[r + 3], i, t.orient, a),
        t.orient && (.99999 <= e && e <= 1.00001 && void 0 !== t.endAbsRot ? a.rotation = t.endAbsRot : a.rotation += t.startOffsetRot + e * t.deltaRotation),
        a
    }
    ,
    S._getParamsForCurve = function(e, t, a, i, n, r, s, o, l) {
        var c = 1 - s;
        l.x = c * c * e + 2 * c * s * a + s * s * n,
        l.y = c * c * t + 2 * c * s * i + s * s * r,
        o && (l.rotation = 57.2957795 * Math.atan2((i - t) * c + (r - i) * s, (a - e) * c + (n - a) * s))
    }
    ,
    S._findPathProblems = function(e) {
        var t = e.path
          , a = t && t.length || 0;
        if (a < 6 || (a - 2) % 4) {
            var i = "\tCannot parse 'path' array due to invalid number of entries in path. ";
            return i += "There should be an odd number of points, at least 3 points, and 2 entries per point (x & y). ",
            (i += "See 'CanvasRenderingContext2D.quadraticCurveTo' for details as 'path' models a quadratic bezier.\n\n") + ("Only [ " + a + " ] values found. Expected: " + Math.max(4 * Math.ceil((a - 2) / 4) + 2, 6))
        }
        for (var n = 0; n < a; n++)
            if (isNaN(t[n]))
                return "All data in path array must be numeric";
        i = e.start;
        if (isNaN(i) && void 0 !== i)
            return "'start' out of bounds. Expected 0 to 1, got: " + i;
        i = e.end;
        if (isNaN(i) && void 0 !== i)
            return "'end' out of bounds. Expected 0 to 1, got: " + i;
        e = e.orient;
        return e && "fixed" != e && "auto" != e && "cw" != e && "ccw" != e ? 'Invalid orientation value. Expected ["fixed", "auto", "cw", "ccw", undefined], got: ' + e : void 0
    }
    ,
    createjs.MotionGuidePlugin = e
}(),
this.createjs = this.createjs || {},
function() {
    "use strict";
    var e = createjs.TweenJS = createjs.TweenJS || {};
    e.version = "1.0.0",
    e.buildDate = "Thu, 12 Oct 2017 16:34:05 GMT"
}(),
function(c) {
    this.AnimationPlayer = function(e) {
        var t, a = this;
        for (t in a.log = {
            debug: function(e, t) {},
            error: function(e, t) {}
        },
        a.stageGroup = {},
        a.clearList = [],
        a.manifestObj = {},
        a.oriManifestList = [],
        a.curManifestList = [],
        a.loadCompleteFn = function() {}
        ,
        a.singleLoadCompleteFn = function() {}
        ,
        a.isLoading = !1,
        a.batchNumber = 5,
        a.batchEachTime = 1e3,
        a.batchIndex = 0,
        e) {
            var i = e[t];
            (a.stageGroup[t] = new DanaStage(i,a)).name = t
        }
        a.clearList.push(function() {
            a.reset()
        })
    }
    ,
    this.AnimationPlayer.prototype = {
        setManifestList: function(e) {
            if (e) {
                for (var t = 0; t < e.length; ++t) {
                    var a = e[t];
                    a.id ? this.manifestObj[a.id] = JSON.parse(JSON.stringify(a)) : this.log.error("function load, manifest id is null, manifest.id: " + a.id)
                }
                this.oriManifestList = JSON.parse(JSON.stringify(e))
            } else
                this.log.debug("plz set curManifestList!")
        },
        load: function(e, t, a) {
            var i = this;
            i.setManifestList(e),
            i.reset(),
            i.curManifestList = JSON.parse(JSON.stringify(e)),
            i.loadCompleteFn = t || i.loadCompleteFn,
            i.singleLoadCompleteFn = a || i.singleLoadCompleteFn,
            i.loadAnimSetting()
        },
        firstLoad: function(e, t, a) {
            var i = this;
            i.setManifestList(e),
            i.batchNumber = t || i.batchNumber,
            i.batchEachTime = a || i.batchEachTime,
            i.batchLoad()
        },
        batchLoad: function() {
            var e = this;
            e.log.debug("batchLoad: " + e.batchIndex + "/" + (e.oriManifestList.length - 1)),
            e.batchIndex > e.oriManifestList.length - 1 ? e.log.debug("batchLoad: finish") : (e.reset(),
            e.curManifestList = JSON.parse(JSON.stringify(e.oriManifestList)).splice(e.batchIndex, e.batchNumber),
            e.loadCompleteFn = function() {
                e.batchIndex += e.batchNumber
            }
            ,
            e.loadAnimSetting(),
            e.checkIsLoading())
        },
        checkIsLoading: function() {
            var e = this;
            setTimeout(function() {
                e.isLoading ? e.checkIsLoading() : e.batchLoad()
            }, e.batchEachTime)
        },
        play: function(e, t) {
            var a = this;
            if (a.manifestObj[e]) {
                var i = a.manifestObj[e]
                  , n = a.getStage(i.stage);
                if (n)
                    return n.animGroup[e] ? n.play(e, t) : (i.isLoadCompletePlay = !0,
                    i.playCompleteFn = function() {
                        t && t()
                    }
                    ,
                    a.curManifestList.push(i),
                    a.loadAnimSetting(),
                    i.isLoadCompletePlay);
                a.log.error("function: play, stage is undefined. stageId: " + i.stage)
            } else
                a.log.error("function: play, animId is not in manifestObj. animId: " + e)
        },
        stop: function(e) {
            var t = this;
            if (t.manifestObj[e]) {
                var a = t.manifestObj[e]
                  , i = t.getStage(a.stage);
                if (i)
                    return i.stop(e);
                t.log.error("function: stop, stage is undefined. stageId: " + a.stage)
            } else
                t.log.error("function: stop, animId is not in manifestObj. animId: " + e)
        },
        clear: function() {
            var e, t = this;
            for (e in t.stageGroup)
                t.getStage(e).clear();
            for (var a = 0; a < t.clearList.length; ++a)
                t.clearList[a]();
            t.clearList = []
        },
        getStage: function(e) {
            return this.stageGroup[e]
        },
        reset: function() {
            this.isLoading = !1,
            this.curManifestList = []
        },
        loadAnimSetting: function() {
            var e = this;
            e.isLoading || e.curManifestList && (e.curManifestList.length <= 0 || (manifest = e.curManifestList.shift(),
            e.log.debug(manifest.id + " start load."),
            e.isLoading = !0,
            e.loadSingleAnimSetting(manifest)))
        },
        loadSingleAnimSetting: function(e) {
            var t = this
              , a = new c.LoadQueue(!1);
            a.manifest = e,
            a.handleErrorLoad = function() {
                t.log.error("function: loader.handleErrorLoad, load error! manifest.id: " + a.manifest.id),
                a.removeAllEventListener(),
                t.nextAnimHandle()
            }
            ,
            a.handleComplete = function() {
                a.removeAllEventListener(),
                AdobeAn ? t.loadAnimSource(a.manifest, AdobeAn) : t.log.error("function: loader.handleComplete, AdobeAn is null! manifest.id: " + a.manifest.id)
            }
            ,
            a.removeAllEventListener = function() {
                a.removeEventListener("error", a.handleErrorLoad),
                a.removeEventListener("complete", a.handleComplete)
            }
            ,
            t.clearList.push(function() {
                a.removeAllEventListener()
            }),
            a.addEventListener("error", a.handleErrorLoad),
            a.addEventListener("complete", a.handleComplete),
            a.loadFile(e, null, e.path)
        },
        loadAnimSource: function(e, t) {
            var a, i, n = this;
            for (i in t.compositions)
                a = t.compositions[i];
            var r, s = a.getLibrary();
            c.MotionGuidePlugin.install(),
            s.properties.manifest.length <= 0 ? n.handleAnimSourceLoadComplete({}, a, e) : (s.properties.manifest.forEach(function(e) {
                e.src && "js" != e.ext && e.src.indexOf("/images/ani/images") < 0 && e.src.indexOf("data:image/png;base64") < 0 && (e.src = e.src.replace("images", "/images/ani/images"))
            }),
            (r = new c.LoadQueue(!1)).manifest = e,
            r.handleErrorLoad = function() {
                n.log.error("function: loader.handleErrorLoad, detail manifest load error! manifest.id: " + r.manifest.id),
                r.removeAllEventListener(),
                n.nextAnimHandle()
            }
            ,
            r.handleFileLoad = function(e) {
                n.handleAnimSourceFileLoad(e, a)
            }
            ,
            r.handleComplete = function(e) {
                n.log.debug(r.manifest.id + " load Complete"),
                n.handleAnimSourceLoadComplete(e, a, r.manifest),
                r.removeAllEventListener()
            }
            ,
            r.removeAllEventListener = function() {
                r.removeEventListener("error", r.handleErrorLoad),
                r.removeEventListener("fileload", r.handleFileLoad),
                r.removeEventListener("complete", r.handleComplete)
            }
            ,
            n.clearList.push(function() {
                r.removeAllEventListener()
            }),
            r.addEventListener("error", r.handleErrorLoad),
            r.addEventListener("fileload", r.handleFileLoad),
            r.addEventListener("complete", r.handleComplete),
            r.loadManifest(s.properties.manifest, null, e.path))
        },
        handleAnimSourceFileLoad: function(e, t) {
            t = t.getImages();
            e && "image" == e.item.type && (t[e.item.id] = e.result)
        },
        handleAnimSourceLoadComplete: function(e, t, a) {
            var n = this
              , r = t.getLibrary()
              , s = t.getSpriteSheet();
            if (e.target) {
                var o = e.target
                  , l = r.ssMetadata;
                for (i = 0; i < l.length; ++i)
                    s[l[i].name] = new c.SpriteSheet({
                        images: [o.getResult(l[i].name)],
                        frames: l[i].frames
                    })
            }
            e = a.lib || a.id;
            if (!r[e])
                return n.log.error("function: handleAnimSourceLoadComplete, lib name error! exportRootName: " + e),
                void n.nextAnimHandle();
            e = new r[e];
            e.lib = r,
            e.fps = r.properties.fps,
            e.manifest = a,
            e.name = a.id;
            r = n.getStage(a.stage);
            if (!r)
                return n.log.error("function: handleAnimSourceLoadComplete, stage is null, stage: " + a.stage),
                void n.nextAnimHandle();
            r.initAnim(e),
            AdobeAn = null,
            n.log.debug(a.id + " init Complete"),
            n.singleLoadCompleteFn(a.id),
            a.isLoadCompletePlay && r.play(a.id, a.playCompleteFn),
            n.nextAnimHandle()
        },
        nextAnimHandle: function() {
            var e = this;
            if (e.isLoading = !1,
            !e.curManifestList || e.curManifestList.length <= 0)
                return e.loadCompleteFn(),
                void e.resizeAllCanvas();
            e.loadAnimSetting()
        },
        resizeAllCanvas: function() {
            for (var e in this.stageGroup)
                this.getStage(e).resizeCanvas()
        }
    }
}(createjs),
function(r, d) {
    (this.DanaStage = function(e, t) {
        var a, n = this;
        for (a in n.layoutSetting = {
            canvas: null,
            anim_container: null,
            dom_overlay_container: null,
            width: 768,
            height: 768,
            lastW: 1,
            lastH: 1,
            lastS: 1,
            isResp: !1,
            respDim: "both",
            isScale: !1,
            scaleType: 1
        },
        n.animGroup = {},
        n.clearList = [],
        n.stage = null,
        n.myPlayer = null,
        n.name = "",
        n.setAllChild = function(e, t) {
            if ("gotoAndStop"in t) {
                t.gotoAndStop(0);
                for (var a = 0; a < t.numChildren; a++) {
                    var i = t.getChildAt(a);
                    !i.totalFrames || i.totalFrames <= 1 || (e.push(i),
                    n.setAllChild(e, i))
                }
                return e
            }
        }
        ,
        n.stopAllChild = function(e) {
            for (var t = 0; t < e.length; t++)
                "gotoAndStop"in e[t] && e[t].gotoAndStop(0)
        }
        ,
        n.playAllChild = function(e) {
            for (var t = 0; t < e.length; t++)
                "gotoAndPlay"in e[t] && e[t].gotoAndPlay(0)
        }
        ,
        e)
            n.layoutSetting[a] = e[a];
        n.myPlayer = t,
        n.stage = new r.Stage(n.layoutSetting.canvas),
        r.Ticker.on("tick", n.stage),
        d.addEventListener("resize", n.resizeCanvas),
        n.clearList.push(function() {
            n.resetAllAnim()
        }),
        n.clearList.push(function() {
            d.removeEventListener("resize", n.resizeCanvas),
            n.myPlayer.log.debug(n.name + " remove window resizeEvent Listener")
        })
    }
    ).prototype = {
        play: function(e, t) {
            var a = this;
            if (!e || !a.animGroup[e])
                return a.myPlayer.log.error("function: play, null! animId: " + e),
                null;
            var i = a.animGroup[e];
            if (i.playCompleteFn = t || function() {}
            ,
            i.isInit)
                return a.resetAllAnim(),
                r.Ticker.setFPS(i.fps),
                i.manifest.loop || i.addPlayComleteListen(),
                a.myPlayer.log.debug(e + " play."),
                i.visible = !0,
                i.gotoAndPlay(0),
                a.playAllChild(i.myChildren),
                i;
            a.myPlayer.log.debug(e + " not init yet")
        },
        stop: function(e) {
            if (!e || !this.animGroup[e])
                return this.myPlayer.log.error("function: stop, undefined! animId: " + e),
                null;
            this.animGroup[e].reset()
        },
        clear: function() {
            for (var e = this, t = 0; t < e.clearList.length; t++)
                e.clearList[t]();
            e.clearList = [],
            e.myPlayer.log.debug(e.name + " clear done")
        },
        initAnim: function(e) {
            var t = this;
            e.visible = !1,
            e.gotoAndStop(0);
            var a = e.mc = e.children[0];
            a.myTotalFrames = a.totalFrames - 1,
            a.myCurrentFrame = 0,
            e.myChildren = [],
            t.setAllChild(e.myChildren, e),
            e.handleAnimPlayComlete = function() {
                a.myCurrentFrame++,
                t.myPlayer.log.debug(a.myCurrentFrame + "/" + a.myTotalFrames),
                a.preFrame != a.myCurrentFrame ? (a.preFrame = a.myCurrentFrame,
                a.myCurrentFrame < a.myTotalFrames || (t.myPlayer.log.debug(e.name + " paly complete"),
                e.reset(),
                e.playCompleteFn())) : e.reset()
            }
            ,
            e.reset = function() {
                r.Ticker.removeEventListener("tick", e.handleAnimPlayComlete),
                e.visible = !1,
                e.gotoAndStop(0),
                t.stopAllChild(e.myChildren),
                e.mc.myCurrentFrame = 0
            }
            ,
            e.addPlayComleteListen = function() {
                e.mc.preFrame = -1,
                t.clearList.push(function() {
                    e.reset()
                }),
                r.Ticker.addEventListener("tick", e.handleAnimPlayComlete)
            }
            ,
            t.animGroup[e.manifest.id] = e,
            t.stage.addChild(e),
            e.isInit = !0
        },
        resizeCanvas: function() {
            var e, t, a, i, n, r, s, o, l, c = this;
            c.canvas && c.anim_container && c.dom_overlay_container && (t = (e = c.layoutSetting).width,
            a = e.height,
            i = d.innerWidth,
            n = d.innerHeight,
            r = d.devicePixelRatio || 1,
            s = i / t,
            o = n / a,
            l = 1,
            e.isResp && ("width" == e.respDim && e.lastW == i || "height" == e.respDim && e.lastH == n ? l = e.lastS : e.isScale ? 1 == e.scaleType ? l = Math.min(s, o) : 2 == e.scaleType && (l = Math.max(s, o)) : (i < t || n < a) && (l = Math.min(s, o))),
            c.canvas.width = t * r * l,
            c.canvas.height = a * r * l,
            c.canvas.style.width = c.dom_overlay_container.style.width = c.anim_container.style.width = t * l + "px",
            c.canvas.style.height = c.anim_container.style.height = c.dom_overlay_container.style.height = a * l + "px",
            c.stage.scaleX = r * l,
            c.stage.scaleY = r * l,
            e.lastW = i,
            e.lastH = n,
            e.lastS = l,
            c.stage.tickOnUpdate = !1,
            c.stage.update(),
            c.stage.tickOnUpdate = !0)
        },
        resetAllAnim: function() {
            for (var e in this.animGroup)
                this.animGroup[e].reset()
        }
    }
}(createjs, window),
function() {
    this.AniCanvas = {
        GiftElt: null,
        GiftContainerAttribute: "background-color: rgba(102, 255, 0, 0.00); width: 768px; height: 768px;",
        AniManifestList: [],
        AniManifest: {},
        AniPlayer: {},
        IsGiftDomReady: !1,
        GiftTargetDomId: "",
        Init: function(e) {
            this.BuildGiftElt(),
            this.SetAniPlayer(),
            this.AniPlayer && this.AniPlayer.setManifestList(e)
        },
        Load: function(e) {
            for (var t = [], a = 0; a < e.length; a++) {
                var i = e[a]
                  , n = i.id;
                n && this.AniManifestList.indexOf(i.id) < 0 && (this.AniManifestList.push(n),
                this.AniManifest[n] = i,
                t.push(i))
            }
            this.LoadAni(t)
        },
        LoadAni: function(e) {
            this.AniPlayer && 0 < e.length && this.AniPlayer.load(e, function() {
                this.GiftElt = document.getElementById("animation_container"),
                this.GiftElt && (this.GiftElt.parentNode && this.GiftElt.parentNode.removeChild(this.GiftElt),
                this.GiftElt.setAttribute("style", this.GiftContainerAttribute))
            }
            .bind(this), function(e) {}
            .bind(this))
        },
        SetGiftEltToDom: function(e) {
            this.IsGiftDomReady = !1,
            this.GiftTargetDomId = e;
            var t, a = document.getElementById(e);
            a && (this.GiftElt ? ((t = document.getElementById("animation_container")) && t.parentNode.removeChild(t),
            a.insertBefore(this.GiftElt, a.childNodes[0]),
            this.IsGiftDomReady = !0) : setTimeout(function() {
                this.SetGiftEltToDom(e)
            }
            .bind(this), 3e3))
        },
        PlayGift: function(e, t) {
            var a = null;
            return document.getElementById("animation_container") || this.SetGiftEltToDom(this.GiftTargetDomId),
            a = "function" == typeof this.AniPlayer.play ? this.AniPlayer.play(e, t) : a
        },
        StopGift: function(e) {
            "function" == typeof this.AniPlayer.stop && this.AniPlayer.stop(e)
        },
        ClearAni: function() {
            "function" == typeof this.AniPlayer.clear && this.AniPlayer.clear()
        },
        GiftInit: function() {
            this.BuildGiftElt(),
            this.SetGiftPlayer()
        },
        BuildGiftElt: function() {
            var e = document.createElement("div");
            e.id = "animation_container",
            e.classList.add("giftAT"),
            e.setAttribute("style", this.GiftContainerAttribute + "display: none;");
            var t = document.createElement("canvas");
            t.id = "canvas",
            t.setAttribute("width", "768"),
            t.setAttribute("height", "768"),
            t.setAttribute("style", "position: absolute; display: block; background-color: rgba(102, 102, 153, 0);"),
            e.appendChild(t);
            t = document.createElement("div");
            t.id = "dom_overlay_container",
            t.setAttribute("style", "pointer-events: none; overflow: hidden; width: 768px; height: 768px; position: absolute; left: 0px; top: 0px; display: block;"),
            e.appendChild(t),
            document.body.appendChild(e)
        },
        SetAniPlayer: function() {
            this.AniPlayer = new AnimationPlayer({
                giftStg: {
                    canvas: document.getElementById("canvas"),
                    animation_container: document.getElementById("animation_container"),
                    dom_overlay_container: document.getElementById("dom_overlay_container"),
                    width: 768,
                    height: 768
                }
            }),
            this.AniPlayer.log.error = function(e, t) {
                setTimeout(function() {
                    this.AniManifest[t] && this.LoadAni([this.AniManifest[t]])
                }
                .bind(this), 3e3)
            }
            .bind(this)
        }
    }
}();
var BulletAPI = {
    TargetElt: null,
    IsMobile: !1,
    ArtDefault: {
        pc: {
            top: "2%",
            bottom: "2%",
            fontSetting: [{
                h: 0,
                fontSize: 20
            }],
            rowCount: [0, 12, 4]
        },
        mobile: {
            top: "5%",
            bottom: "5%",
            fontSetting: [{
                h: 0,
                fontSize: 15
            }, {
                h: 750,
                fontSize: 18
            }],
            rowCount: [0, 9, 3]
        },
        trackClass: "bulletTrack"
    },
    ChatDefault: {
        baseRegRule: new RegExp(/(\[[^\[|^\]]*\])/),
        emojiClassMapping: {
            face: "icon_face$1"
        },
        stickerClassMapping: {
            sc: "icon_sticker_soccer_$1",
            scx: "icon_sticker_soccer2_$1",
            bb: "icon_sticker_baseball_$1",
            bbx: "icon_sticker_baseball2_$1",
            bk: "icon_sticker_basketball_$1",
            mix: "icon_sticker_mixSports_$1",
            dog: "icon_sticker_browndog_$1",
            dogx: "icon_sticker_dog_$1",
            man: "icon_sticker_boy_$1",
            manx: "icon_sticker_oldman_$1",
            xmas: "icon_sticker_xmas_$1",
            newyear: "icon_sticker_newyear_$1",
            lovingcat: "icon_sticker_lovingcat_$1",
            lovingrabbit: "icon_sticker_lovingrabbit_$1",
            halloween: "icon_sticker_halloween_$1",
            water: "icon_sticker_water_$1"
        }
    },
    Init: function(e, t, a) {
        if (this.Destroy(),
        e && document.getElementById(e)) {
            for (var i = (t ? this.ArtDefault.mobile : this.ArtDefault.pc).top, n = (t ? this.ArtDefault.mobile : this.ArtDefault.pc).bottom, r = 20, s = (t ? this.ArtDefault.mobile : this.ArtDefault.pc).fontSetting, o = 0; o < s.length && !(s[o].h > window.screen.height); o++)
                r = s[o].fontSize;
            a = (t ? this.ArtDefault.mobile : this.ArtDefault.pc).rowCount[a];
            $("#" + e).danmu({
                top: i,
                bottom: n,
                fontSizeSmall: r / 2,
                FontSizeBig: r,
                speed: 8e3,
                positionOptimize: !1,
                trackClass: this.ArtDefault.trackClass,
                rowCount: a,
                zindex: 0,
                sumTime: 65535,
                danmuLoop: !1,
                defaultFontColor: "#FFFFFF",
                opacity: "0.9",
                topBottonDanmuTime: 6e3,
                SubtitleProtection: !1,
                maxCountInScreen: 1e3,
                maxCountPerSec: 1e3
            }),
            this.IsMobile = t,
            this.TargetElt = $("#" + e),
            this.TargetElt.danmu("danmuStart"),
            this.TargetElt.danmu("setRowCount", a)
        }
    },
    Destroy: function() {
        this.TargetElt && this.TargetElt[0] && (this.TargetElt.danmu("danmuStop"),
        this.TargetElt = null)
    },
    Clear: function() {
        this.TargetElt && this.TargetElt[0] && this.TargetElt.danmu("danmuHideAll")
    },
    Send: function(e, t, a, i) {
        if (!this.TargetElt || !this.TargetElt[0])
            return !1;
        e = this.GetParsedContent(e);
        return 0 < e.length && this.TargetElt.danmu("addDanmu", {
            text: this.GetBulletHtml(e, t, i),
            color: "white",
            size: 1,
            position: 0,
            time: this.TargetElt.data("nowTime") + 1,
            user: a
        }),
        !0
    },
    ChangeBulletMode: function(e) {
        this.TargetElt && this.TargetElt[0] && (e = (this.IsMobile ? this.ArtDefault.mobile : this.ArtDefault.pc).rowCount[e] || 0,
        this.TargetElt.danmu("setRowCount", e))
    },
    GetBulletHtml: function(e, t, a) {
        for (var a = t === ChatType.System ? "ad" : t === ChatType.Anchor ? "mc" : a ? "rank" : "", i = "", n = 0; n < e.length; n++) {
            var r = e[n];
            "img" === r.tag ? i += '<img class="' + r.class + '" src="' + r.src + '">' : i += r.character
        }
        return '<div class="bulletTxt ' + a + '">' + i + "</div>"
    },
    GetParsedContent: function(e) {
        if (0 === e.length)
            return [];
        e = e.split(this.ChatDefault.baseRegRule).filter(function(e) {
            return e
        });
        return this.TransformCharacter(e)
    },
    TransformCharacter: function(e) {
        return e.map(function(e) {
            return this.ChkText(e, !1) || this.ChkEmoji(e) || this.ChkSticker(e) || this.ChkTagName(e) || this.ChkText(e, !0)
        }
        .bind(this))
    },
    ChkText: function(e, t) {
        return !(!t && this.ChatDefault.baseRegRule.test(e)) && {
            tag: "span",
            character: e.replaceAll(" ", "&thinsp;"),
            class: ["t_black"]
        }
    },
    ChkEmoji: function(e) {
        if (/(\[face[0-9]+\])/.test(e)) {
            e = e.slice(1, e.length - 1).split(new RegExp(/(\d+)/));
            return {
                tag: "img",
                character: void 0,
                class: [this.ChatDefault.emojiClassMapping[e[0]].replace("$1", e[1])],
                src: "/images/bb/bg_block.png"
            }
        }
        return !1
    },
    ChkSticker: function(e) {
        if (/\[sc[0-9][0-9]\]|\[scx[0-9][0-9]\]|\[bb[0-9][0-9]\]|\[bbx[0-9][0-9]\]|\[bk[0-9][0-9]\]|\[mix[0-9][0-9]\]|\[dog[0-9][0-9]\]|\[man[0-9][0-9]\]|\[manx[0-9][0-9]\]|\[dogx[0-9][0-9]\]|\[newyear[0-9][0-9]\]|\[xmas[0-9][0-9]\]|\[lovingcat[0-9][0-9]\]|\[lovingrabbit[0-9][0-9]|\[halloween[0-9][0-9]\]|\[water[0-9][0-9]\]/.test(e)) {
            e = e.slice(1, e.length - 1).split(new RegExp(/(\d+)/));
            return {
                tag: "img",
                character: void 0,
                class: [this.ChatDefault.stickerClassMapping[e[0]].replace("$1", e[1])],
                src: "/images/bb/bg_block.png",
                isSticker: !0
            }
        }
        return !1
    },
    ChkTagName: function(e) {
        if (/(\[(@[^\]]+)\])/.test(e))
            return {
                tag: "span",
                character: e.replace(/\[(@[^\]]+)\]/g, "$1 "),
                class: ["tagName"],
                isTagName: !0
            }
    }
};
const NumericInputComponent = {
    template: '<input @input="InputEventHandler($event)" :value="value" type="text" :maxlength="maxLength" />',
    props: {
        value: {
            type: String,
            default: ""
        },
        maxLength: {
            type: Number,
            default: 7,
            required: !1
        },
        min: {
            type: Number,
            required: !1
        },
        max: {
            type: Number,
            required: !1
        }
    },
    methods: {
        AmountMonitor: function(e) {
            var t = e.replace(/[^0-9\.]/g, "")
              , a = t.split("")
              , i = a.indexOf(".")
              , e = a[t.length - 1]
              , a = !1;
            return t && ("." == e || t.length > this.maxLength ? a = !0 : !/^\d+(\.\d+)?$/.test(t) || 0 == Number(t) ? t = "" : !(0 <= i && 2 < t.length - (i + 1)) && /^\d+$/.test(e) || (a = !0),
            a && (t = t.substr(0, t.length - 1))),
            t = isNaN(parseFloat(t)) ? "" : parseFloat(t)
        },
        InputEventHandler: function(e) {
            var t = this.AmountMonitor(e.currentTarget.value);
            void 0 !== this.min && t < this.min && "" !== t && (t = this.min),
            void 0 !== this.max && t > this.max && (t = this.max),
            e.currentTarget.value = t,
            this.$emit("input", t)
        }
    }
};
var RankTitleComponent = {
    template: '<div :class="titleArray[0]"><span v-text="titleArray[1]"></span></div>',
    props: {
        rank: {
            type: String,
            default: ""
        }
    },
    computed: {
        titleArray: function() {
            var e = ["", ""];
            if (0 < this.rank.indexOf("_")) {
                var t = this.rank.split("_");
                switch (t[0]) {
                case "dbm":
                    e[0] += "icon_ranking",
                    e[1] += "Font_MonthRank";
                    break;
                case "dbw":
                    e[0] += "icon_ranking",
                    e[1] += "Font_WeekRank"
                }
                t = parseInt(t[1]);
                isNaN(t) || (e[0] += t < 10 ? "0" + t : t,
                e[1] = langFont[e[1] + (3 < t ? "Other" : t)].replace(" X ", t))
            }
            return e
        }
    }
}
  , GiftMsgCanvasComponent = {
    template: '<div id="aniArea" :class="[\'giftATBox\']" :style="isAnimationShow"><div :class="[\'giftAT_text\', {on:status}]" style="display: block;"><img class="talkMsg_LV" :src="getLevelSrc"><rank v-for="(item, idx) in title" :key="idx" :rank="item"></rank><span class="GAT_name">{{nickname}}</span>' + langFont.Font_DonateTo + '<span class="GAT_giftName">{{gift}}</span></div></div>',
    data: function() {
        return {
            isDelay: !1,
            status: !1,
            timer: null,
            preview: "",
            nickname: "",
            gift: "",
            count: 0,
            contain: [],
            showTime: 0,
            delay: 1e3,
            lastAniId: "",
            level: 0,
            title: []
        }
    },
    computed: {
        getLevelSrc: function() {
            return "../images/bb/" + langFont.Font_Langue + "/icon_level" + (this.level + langFont.Font_IconImg) + ".svg"
        },
        isAnimationShow: function() {
            return this.status && this.$store.gift.useAnimationStatus ? "display: flex" : "display: none !important"
        }
    },
    methods: {
        Initial: function() {
            clearTimeout(this.timer),
            this.timer = null,
            this.status = !1,
            this.isDelay = !1,
            this.contain = [],
            this.lastAniId && AniCanvas.StopGift(this.lastAniId),
            GiftWorker.SendCommand({
                action: "stop"
            })
        },
        GiftMsgProcess: function(e) {
            for (var t = 0; t < e.length; t++)
                this.contain.push(e[t]);
            GiftWorker.SendCommand({
                action: "start"
            })
        },
        ShowProcess: function() {
            this.isDelay || (0 < this.contain.length ? (this.isDelay = !0,
            clearTimeout(this.timer),
            this.timer = setTimeout(function() {
                var e = this.contain.splice(0, 1)[0];
                this.nickname = e[0],
                this.gift = e[1],
                this.count = e[3],
                this.level = e[4],
                this.title = e[5];
                e = e[2].replace(/[^0-9]/gi, ""),
                e = this.$chat.GetGiftAnimation(e).src.match(/(ANI[0-9]+|ANI_VN[0-9]+|ANI_TH[0-9]+)/),
                e = e ? e[0] : "";
                AniCanvas.IsGiftDomReady ? (this.lastAniId = e,
                AniCanvas.PlayGift(e, function() {
                    this.isDelay = !1,
                    this.lastAniId = "",
                    this.status = !1
                }
                .bind(this)) ? this.status = !0 : this.isDelay = !1) : this.isDelay = !1
            }
            .bind(this), this.delay)) : GiftWorker.SendCommand({
                action: "stop"
            }))
        }
    },
    mounted: function() {
        GiftWorker.Enable = !0,
        this.$bus.$on("GiftMsgInit", this.Initial),
        this.$bus.$on("GiftMsg", this.GiftMsgProcess),
        this.$bus.$on("GiftShow", this.ShowProcess),
        AniCanvas.SetGiftEltToDom("aniArea")
    },
    components: {
        rank: RankTitleComponent
    },
    beforeDestroy: function() {
        clearTimeout(this.timer),
        this.lastAniId && AniCanvas.StopGift(this.lastAniId)
    },
    destroyed: function() {
        GiftWorker.Enable = !1,
        this.$bus.$off("GiftMsgInit"),
        this.$bus.$off("GiftMsg"),
        this.$bus.$off("GiftShow")
    }
}
  , GiftBoxComponent = {
    template: '<div class="giftBox"><div><div class="btn_giftBox_close" @click="CloseClickEventHandler"></div><vue-scroll :style="giftBoxScrollStyle" ref="scroll" :ops="ops"><ul class="giftList_scroll scrollbar-macosx scroll-content scroll-scrolly_visible"><li class="giftIcon" :ref="\'gift\' + item" v-for="(item, idx) in $store.gift.giftIndex" :key="idx" @click.stop="AddGiftClickEventHandler(item)" @mouseover="GiftTipShowEventHandler(item)" @mouseout="GiftTipHideEventHandler(item)"><img :src="GetGiftSrc($store.gift.gift[item][\'preview\'])" @error="$chat.LoadGiftImageError"><div class="giftList_name" :ref="\'giftT\' + item" v-text="$store.gift.gift[item][\'name\']"></div><div class="giftList_longT" v-text="$store.gift.gift[item][\'name\']" :style="$store.gift.gift[item][\'tip\']"></div><div class="giftList_point" v-text="$chat.ToThousends($store.gift.gift[item][\'num\'])"></div></li></ul></vue-scroll></div><div class="giftBox_footer" :class="{ bg_black: pop.status }"><div class="GBF_IDInfo"><div class="GBF_ID_point" @mouseover="PointTipShowEventHandler(\'point\')" @mouseout="PointTipHideEventHandler(\'point\')">{{$chat.ToThousends($store.user.balance)}}<div class="GBF_prompt" :style="tip.point">' + langFont.Font_KUPoint + '</div></div><div v-if="$store.gift.canFree" class="GBF_ID_giftPoint" @mouseover="PointTipShowEventHandler(\'freePoint\')" @mouseout="PointTipHideEventHandler(\'freePoint\')">{{$chat.ToThousends($store.user.freePoint)}}<div class="GBF_prompt" :style="tip.freePoint">' + langFont.Font_FreeGiftPoint + '</div></div></div><input type="button" value="' + langFont.Font_FastTransfer + '" class="btn_GBF_transfer" @click="TransferClickEventHandler" /></div><GiftPopWindow @GiftPopClose="GiftPopClose" @GiftClose="CloseClickEventHandler" :id="pop.id" :style="popBoxshow" @GiftAlertProcess="GiftAlertProcess"></GiftPopWindow></div>',
    data: function() {
        return {
            ops: {
                scrollPanel: {
                    scrollingX: !1
                },
                vuescroll: {
                    sizeStrategy: "number"
                },
                rail: {
                    size: "1px"
                },
                bar: {
                    background: "#666",
                    opacity: .2,
                    size: "3px"
                }
            },
            pop: {
                id: 0,
                status: !1
            },
            alert: {
                status: !1,
                msg: "",
                timer: 1e3
            },
            tip: {
                point: "",
                freePoint: ""
            }
        }
    },
    methods: {
        GetGiftSrc: function(e) {
            return "../images/" + e
        },
        AddGiftClickEventHandler: function(e) {
            this.pop.id = e,
            this.pop.status = !0
        },
        GiftPopClose: function() {
            this.pop.status = !1,
            this.pop.id = 0
        },
        GiftAlertProcess: function(e) {
            var t = this;
            switch (e) {
            case Args.GE_Success:
                this.alert.msg = langFont.Font_GiftSuccess;
                break;
            case Args.GE_Error:
                this.alert.msg = langFont.Font_GiftFail;
                break;
            case Args.GE_NoEnough:
                this.alert.msg = langFont.Font_InsufficientBalance;
                break;
            case Args.GE_SeriousError:
                this.alert.msg = langFont.Font_PleaseContactCustomerService
            }
            this.alert.status = !0,
            setTimeout(function() {
                t.alert.status = !1
            }, this.alert.timer)
        },
        CloseClickEventHandler: function() {
            this.GiftPopClose(),
            this.$emit("close")
        },
        TransferClickEventHandler: function() {
            Header.ShowOrHideTurnPoint()
        },
        PointTipShowEventHandler: function(e) {
            this.tip[e] = "display:block !important;"
        },
        PointTipHideEventHandler: function(e) {
            this.tip[e] = ""
        },
        GiftTipShowEventHandler: function(e) {
            this.$store.gift.gift[e] && this.$refs["gift" + e] && this.$refs["giftT" + e] && this.$refs["giftT" + e][0].getBoundingClientRect().width.toFixed(2) >= this.$refs["gift" + e][0].offsetWidth - 6 && (this.$store.gift.gift[e].tip = "visibility: visible !important;")
        },
        GiftTipHideEventHandler: function(e) {
            this.$store.gift.gift[e] && (this.$store.gift.gift[e].tip = "")
        }
    },
    computed: {
        popBoxshow: function() {
            return this.pop.status ? "display: flex !important;" : "display: none !important;"
        },
        giftBoxScrollStyle: function() {
            return "width: 100% !important;"
        }
    },
    components: {
        GiftPopWindow: {
            template: '<div class="giftPopup" @click.stop="shadowCount=count"><div class="btn_GP_close" @click="$emit(\'GiftPopClose\')"></div><div class="GP_info"><img :src="GetGiftImg" @error="$chat.LoadGiftImageError"/><div class="GP_infoR"><div class="GP_infoR_row"><div class="GP_infoName" v-text="$store.gift.gift[id] && $store.gift.gift[id][\'name\'] ? $store.gift.gift[id][\'name\'] : \'\'"></div><div class="GP_infoPoint" v-text="GetGiftNum"></div></div><div class="GP_text">' + langFont.Font_Use + ' <span :class="gpMsgClass">{{ GiftBalance }}</span > ' + langFont.Font_DeductionPoints + '</div></div></div><div class="GP_Bottom"><div class="GP_num"><div class="btn_minus" :class="{off:count<=1 || !count}" @click="MinusClickEventHandler"></div><NumericInputComponent @focus.native="FocusEventHandler" @blur.native="BlurEventHandler" :min="1" :max="99" @input="InputEventHandler" :value="count"></NumericInputComponent><div class="btn_plus" :class="{off:count>=99}" @click="PlusClickEventHandler"></div></div><input class="btn_GPSend" type="button" value="' + langFont.Font_Presentation + '" @click="GiftSendClickEventHandler" /></div></div>',
            props: {
                id: {
                    type: Number
                }
            },
            data: function() {
                return {
                    count: "1",
                    lock: !1,
                    gpMsgClass: "",
                    coinType: 1,
                    focusLock: !1,
                    shadowCount: "1"
                }
            },
            methods: {
                GiftParamCheck: function(e, t, a, i, n) {
                    var r = !1;
                    return e = parseInt(a),
                    a = parseInt(a),
                    t = parseInt(t),
                    n = n || "",
                    (isNaN(e) || isNaN(a) || isNaN(t) || a < 1 || 99 < a || t < 0 || "" === i || n.length < 4) && (r = !0),
                    r
                },
                PlusClickEventHandler: function() {
                    "" !== this.shadowCount ? this.count < 99 && (this.count = (parseInt(this.count) + 1).toString()) : this.shadowCount = this.count
                },
                MinusClickEventHandler: function() {
                    1 < this.count && (this.count = (parseInt(this.count) - 1).toString())
                },
                InputEventHandler: function(e) {
                    this.count = e.toString()
                },
                FocusEventHandler: function() {
                    this.count = this.shadowCount = "",
                    this.focusLock = !0
                },
                BlurEventHandler: function() {
                    this.focusLock = !1,
                    this.count = this.count || "1"
                },
                GiftSendClickEventHandler: function() {
                    if ("" !== this.shadowCount) {
                        if (!this.lock) {
                            this.lock = !0;
                            var t = this
                              , a = 2 === this.coinType
                              , e = a ? this.$store.user.freePoint : this.$store.user.balance
                              , i = MainProperty.panelData.anchorId
                              , n = this.$store.gift.gift[this.id] ? this.$store.gift.gift[this.id].num : 0
                              , r = this.count
                              , s = MainProperty.innerPage
                              , o = MainProperty.panelData.girlLive.route;
                            if (this.GiftParamCheck(e, n, r, i, s) && (this.$bus.$emit("GiftAlertProcess", Args.GE_Error),
                            this.lock = !1),
                            e < r * n)
                                return this.lock = !1,
                                void Header.ShowOrHideTurnPoint();
                            this.lock && $.ajax({
                                type: "POST",
                                url: "/ajax/AjaxGift.aspx",
                                data: {
                                    method: "DonateGift",
                                    giftId: this.id,
                                    price: n,
                                    count: r,
                                    liveId: i,
                                    chVal: o,
                                    gId: s,
                                    free: a
                                },
                                dataType: "json",
                                error: function(e) {
                                    1 != LogOutCheck('{"st":"' + e.status + '"}') && (t.$bus.$emit("GiftAlertProcess", Args.GE_Error),
                                    t.lock = !1)
                                },
                                success: function(e) {
                                    if (!0 !== LogOutCheck(e)) {
                                        switch (e.bl && (a ? t.$store.user.freePoint = Tool.TransformMathFloor(e.bl, 0) : Tool.TransformUserBalance(e.bl)),
                                        e.status) {
                                        case 1:
                                            t.$bus.$emit("GiftAlertProcess", Args.GE_Success);
                                            break;
                                        case 2:
                                            t.$bus.$emit("GiftAlertProcess", Args.GE_NoEnough);
                                            break;
                                        case 14:
                                            t.$store.gift.canDonate = !1,
                                            ShowAlert(Args.AlertText, langFont.Font_DonateAlertOff);
                                            break;
                                        default:
                                            t.$bus.$emit("GiftAlertProcess", Args.GE_Error)
                                        }
                                        setTimeout(function() {
                                            t.lock = !1
                                        }, 500)
                                    }
                                }
                            }),
                            this.$emit("GiftClose")
                        }
                    } else
                        this.shadowCount = this.count
                }
            },
            computed: {
                GiftObj: function() {
                    return this.$store.gift.gift[this.id] || {}
                },
                GetGiftImg: function() {
                    return this.GiftObj.preview ? "../images/" + this.GiftObj.preview : ""
                },
                GetGiftNum: function() {
                    return this.GiftObj.num ? this.$chat.ToThousends(this.GiftObj.num * (this.count || 1)) : 0
                },
                GiftBalance: function() {
                    if (this.$store.gift.gift[this.id])
                        return 0 == this.$store.gift.canFree || this.GiftObj.num * (this.count || 1) > this.$store.user.freePoint ? (this.gpMsgClass = "t_yellow",
                        this.coinType = 1,
                        langFont.Font_KUPoint) : (this.gpMsgClass = "t_pink",
                        this.coinType = 2,
                        langFont.Font_FreeGiftPoint)
                }
            },
            watch: {
                count: function() {
                    this.focusLock && (this.shadowCount = this.count)
                },
                id: function() {
                    this.count = "1"
                }
            },
            components: {
                NumericInputComponent: NumericInputComponent
            }
        }
    },
    mounted: function() {
        this.$bus.$on("GiftBoxClose", this.CloseClickEventHandler),
        this.$bus.$on("GiftPopClose", this.GiftPopClose)
    },
    destroyed: function() {
        this.$bus.$off("GiftBoxClose"),
        this.$bus.$off("GiftPopClose")
    }
}
  , GiftAlertComponent = {
    template: '<transition mode="out-in"><div class="giftResult" :style="IsShow" v-text="alert.msg"></div></transition>',
    data: function() {
        return {
            alert: {
                status: !1,
                msg: "",
                timer: 1e3
            }
        }
    },
    methods: {
        GiftAlertProcess: function(e) {
            switch (e) {
            case Args.GE_Success:
                this.alert.msg = langFont.Font_GiftSuccess;
                break;
            case Args.GE_Error:
                this.alert.msg = langFont.Font_GiftFail;
                break;
            case Args.GE_NoEnough:
                this.alert.msg = langFont.Font_InsufficientBalance
            }
            this.$bus.$emit("GiftBoxClose"),
            this.alert.status = !0,
            setTimeout(function() {
                this.alert.status = !1
            }
            .bind(this), this.alert.timer)
        }
    },
    computed: {
        IsShow: function() {
            return this.alert.status ? "display: block !important;" : ""
        }
    },
    mounted: function() {
        this.$bus.$on("GiftAlertProcess", this.GiftAlertProcess)
    },
    destroyed: function() {
        this.$bus.$off("GiftAlertProcess")
    }
}
  , ChatVue = new Vue({
    el: "#innerChatRoom",
    data: {
        ops: {
            rail: {
                size: "1px"
            },
            bar: {
                background: "#666",
                opacity: .2,
                size: "3px"
            }
        },
        hasReceive: !1,
        smId: "",
        gpId: "",
        roomId: "",
        show: !1,
        smMaintain: !1,
        maintain: !1,
        error: !1,
        dormant: !1,
        terminateTimer: null,
        connect: !1,
        status: !1,
        faceIconShow: !1,
        talkStore: [],
        tempTalkStore: [],
        chatBoxData: "",
        lock: !1,
        timeLimit: 2e3,
        chatLimit: 50,
        chatLengthLimit: 50,
        tipShow: {
            visible: !1,
            msg: "",
            timer: null,
            time: 3e3
        },
        removeShieldTip: {
            show: !1,
            timer: 0
        },
        user: {
            id: "",
            guid: "",
            shieldId: [],
            limit: !1,
            limitTime: 0,
            noTalk: !1,
            permission: !0,
            tc: 0
        },
        half: {
            allow: !0,
            tip: !1,
            status: !0
        },
        showReceipt: {
            show: !1,
            store: [],
            status: !1,
            lastTime: null
        },
        quick: {
            show: !1,
            store: []
        },
        gift: {
            status: !1,
            show: !1,
            lastCheckFC: 0
        },
        lastTouchEnd: 0,
        smTime: {
            timer: null,
            ms: 0
        },
        ot: 0,
        chatChange: !0,
        showAnn: 1,
        annLength: 0,
        promptTipType: ChatPrompt.None
    },
    methods: {
        SetSMTime: function() {
            this.smTime.timer = setTimeout(function() {
                this.smTime.ms = this.smTime.ms + 1e3,
                this.SetSMTime()
            }
            .bind(this), 1e3)
        },
        Initial: function() {
            this.hasReceive = !1,
            this.status && this.Close(),
            this.gift.status = this.gift.show = this.connect = this.error = this.lock = this.faceIconShow = !1,
            this.roomId = MainProperty.panelData.roomId,
            this.tempTalkStore = [],
            this.talkStore = [],
            this.chatBoxData = "",
            this.removeShieldTip = {
                show: !1,
                timer: 0
            },
            this.user = {
                id: "",
                guid: "",
                shieldId: [],
                limit: !1,
                limitTime: 0,
                noTalk: !1,
                permission: !0,
                tc: 0
            },
            this.half = {
                allow: !0,
                tip: !1,
                status: !0
            },
            this.showReceipt = {
                show: !1,
                store: [],
                status: !1,
                lastTime: null
            },
            this.quick = {
                show: !1,
                store: []
            },
            this.chatChange || DataAdapter.SendCommand({
                action: "cTalk"
            }),
            this.chatChange = !0,
            this.$bus.$emit("GiftMsgInit")
        },
        SwitchChatType: function(e, t) {
            (e && MainProperty.user.hasEnoughDeposit && (!this.gift.status || this.roomId != MainProperty.panelData.roomId) || !e && this.gift.status || this.SocketConnecting) && (this.Initial(),
            e = e && this.roomId,
            t = t || !1,
            this.half.allow = !t,
            this.gift.status = !!e || (this.gift.show = !1))
        },
        Open: function() {
            this.CanUseChatRoom && (this.SocketConnecting ? this.Close() : (null == this.terminateTimer ? (SMSocket.StartWorker("Web_main", MainProperty.sessionID),
            SMSocket.SocketConnect()) : (clearTimeout(this.terminateTimer),
            this.terminateTimer = null,
            this.chatChange && DataAdapter.SendCommand({
                action: "talk",
                val: this.gift.status ? this.roomId : this.smId,
                cl: this.gift.status ? 0 : 1
            })),
            this.chatChange = !1,
            this.status = !0,
            Inner.OpenChatRoom(),
            this.half.allow || (this.half.status = !1,
            Inner.HalfChatRoom(!1)),
            this.SlideDownClickEventHandler()))
        },
        Close: function() {
            this.SetAlertTips(!1),
            this.$refs.chatRoomScrollBar && this.$refs.chatRoomScrollBar.scrollTo({
                y: this.$refs.chatRoomScrollBar.scrollPanelElm.scrollHeight
            }, 0),
            this.gift.show && this.$bus.$emit("GiftBoxClose", !0),
            Tool.IsTouch && this.$refs.chatBox.$el.blur(),
            this.TerminateSocket(this.SocketConnecting && !this.maintain ? 1 : 0),
            this.chatBoxData = "",
            this.status = !1,
            this.half.status = !0,
            Inner.HalfChatRoom(!0),
            Inner.CloseChatRoom()
        },
        TerminateSocket: function(e) {
            e = e || 6e5,
            this.terminateTimer = setTimeout(function() {
                var t;
                this.connect = !1,
                this.maintain = !1,
                null != SMSocket.SocketWorker && (t = Date.now() + GetRanStr(4),
                SMSocket.TrashQueue[t] = SMSocket.SocketWorker,
                SMSocket.TrashQueue[t].onmessage = function(e) {
                    "onTerminate" == e.data.action && (SMSocket.TrashQueue[t].terminate(),
                    SMSocket.TrashQueue[t] = null,
                    delete SMSocket.TrashQueue[t])
                }
                ,
                SMSocket.TerminateWorker(),
                SMSocket.SocketWorker = null),
                clearTimeout(this.terminateTimer),
                this.terminateTimer = null,
                clearTimeout(this.smTime.timer),
                this.smTime.timer = null,
                this.tempTalkStore = [],
                this.talkStore = []
            }
            .bind(this), e)
        },
        Maintain: function(e) {
            e && this.status && this.Close()
        },
        Error: function() {
            this.error = !0,
            this.status = !1,
            this.TerminateSocket(10),
            "function" == typeof Inner.HalfChatRoom && Inner.HalfChatRoom(!0),
            Inner.CloseChatRoom()
        },
        SendMessage: function() {
            if (this.FaceIconHideEventHandler(),
            !this.IsNoTalk && !this.SocketConnecting) {
                if (0 === this.chatBoxData.replace(/&nbsp;/g, "").trim().length)
                    return this.chatBoxData = "",
                    this.SetAlertTips(!0, langFont.Font_ChatroomSpeakNoSpace, !1),
                    void this.$refs.chatBox.$el.focus();
                var e = "";
                this.user.limit || (e = this.chatBoxData.replace(/<img rel="face" class="icon_(face[0-9][0-9])" src="...images.bb.bg_block.png">/g, "[$1]").replace(/<input class="takeName" type="button" value=\"([^\"]*)\">/g, "[$1]"),
                this.chatBoxData = ""),
                this.SendMessageProcess(e)
            }
        },
        SendMessageOver: function(e) {
            for (var t = this.talkStore.length - 1; 0 <= t; t--) {
                var a = this.talkStore[t];
                if (a[1] === this.user.id && a[7] === this.user.id + "_" + e.tc) {
                    this.talkStore.splice(t, 1, [a[0], a[1], a[2], a[3], a[4], e.val, a[6], e.tc, []]);
                    break
                }
            }
        },
        SendMessageProcess: function(e, t, a) {
            var i;
            if (t = t || ChatType.Normal,
            a = a || {
                action: "addT",
                val: e
            },
            this.SetAlertTips(!1),
            this.user.limit ? this.SetAlertTips(!0, langFont.Font_ChatroomSpeakToFast, !1) : (this.user.tc = this.smTime.ms || Date.now(),
            i = new Date(this.user.tc).Format("yyyy/MM/dd hh:mm:ss"),
            this.user.limit = !0,
            (this.lock ? this.tempTalkStore : this.talkStore).push([t, this.user.id, MainProperty.user.nickName, MainProperty.user.level, e, i, this.user.guid, this.user.id + "_" + this.user.tc, []]),
            setTimeout(function() {
                this.user.limit = !1
            }
            .bind(this), this.timeLimit),
            a.tc = this.user.tc,
            a.cl = this.gift.status ? 0 : 1,
            DataAdapter.SendCommand(a),
            Panel.AddBulletText([[t, this.user.id, MainProperty.user.nickName, MainProperty.user.level, e, i, this.user.guid, this.user.id + "_" + this.user.tc, []]])),
            this.lock)
                for (var n = this.tempTalkStore.length, r = 0; r < n; r++)
                    this.talkStore.push(this.tempTalkStore.splice(0, 1)[0]),
                    this.ChkChatLimitLength();
            else
                this.ChkChatLimitLength();
            this.SlideDownClickEventHandler(),
            Tool.IsTouch ? setTimeout(function() {
                this.$refs.chatBox.$el.blur()
            }
            .bind(this), 50) : this.$refs.chatBox.$el.focus()
        },
        IsNumberMsg: function(e) {
            e = e.replace(/\[face[0-9][0-9]\]/g, "");
            var t = new RegExp("[〇零另０灵①一壹１Ⅰ亿已以衣依医②二贰２Ⅱ儿而尔两俩③三叁３Ⅲ仨④四肆４Ⅳ是事实⑤五伍５Ⅴ无我午舞武⑥六陆６Ⅵ刘⑦七柒７Ⅶ期妻⑧八捌８Ⅷ巴⑨九玖９Ⅸ久就酒]","g")
              , e = (e = e.replace(t, "1")).match(/\d+/g);
            return !!(e && 7 <= e.join("").length)
        },
        ProcessShowReceipt: function(e) {
            this.showReceipt.status = !0,
            this.showReceipt.store = e
        },
        ProcessFirstMessage: function(e, t) {
            this.hasReceive = !0;
            function a(e) {
                var t, a = "";
                return e && 0 < e.length && 0 < (t = e.filter(function(e) {
                    return 0 <= [ChatType.Normal, ChatType.System, ChatType.Anchor, ChatType.Gift].indexOf(e[0])
                })).length && (a = t[t.length - 1][5]),
                a
            }
            var i = $.extend([], this.talkStore).concat($.extend([], this.tempTalkStore)).map(function(e) {
                return e[1] + e[7]
            })
              , n = "";
            0 < this.tempTalkStore.length && (n = a(this.tempTalkStore)),
            !n && 0 < this.talkStore.length && (n = a(this.talkStore)),
            e = (e = this.$chat.ChatMsgProcess(e.map(function(e) {
                return [e[0], e[1], e[2], e[3], e[4], e[5], "", e[6], e[7]]
            }))).filter(function(e) {
                var t = e[1] === this.user.id
                  , a = (this.user.shieldId.indexOf(e[1]) < 0 || e[0] === ChatType.Gift) && i.indexOf(e[1] + e[7]) < 0 && (!this.IsNumberMsg(e[4]) || t || e[0] === ChatType.ShowReceipt || e[0] === ChatType.Gift) && (e[0] !== ChatType.ShowReceipt || e[0] === ChatType.ShowReceipt && e[4].split("|")[12] == this.ot) && e[5] > n;
                return e[0] !== ChatType.Gift && t && (e[8] = []),
                a
            }
            .bind(this)),
            t && Panel.AddBulletText(e),
            this.ReceiveMessage(e),
            this.showAnn && DataAdapter.SendCommand({
                action: "getAnn",
                mode: 1,
                cl: this.gift.status ? 0 : 1
            })
        },
        ProcessUpdateMessage: function(e) {
            var n, r;
            this.hasReceive && (n = $.extend([], this.talkStore).concat($.extend([], this.tempTalkStore)).map(function(e) {
                return e[1] + e[7]
            }),
            r = [],
            e = (e = this.$chat.ChatMsgProcess(e)).filter(function(e) {
                var t = e[4].split("|")
                  , a = e[1] === this.user.id
                  , i = (this.user.shieldId.indexOf(e[1]) < 0 || e[0] === ChatType.Gift) && n.indexOf(e[1] + e[7]) < 0 && (!this.IsNumberMsg(e[4]) || a || e[0] === ChatType.ShowReceipt || e[0] === ChatType.Gift) && (e[0] !== ChatType.ShowReceipt || e[0] === ChatType.ShowReceipt && t[12] == this.ot) && e[6] !== this.user.guid;
                return i && e[0] === ChatType.Gift ? (r.push([e[2], t[0], t[2], "1", e[3], e[8]]),
                a && (this.lock = !1)) : a && (e[8] = []),
                i
            }
            .bind(this)),
            Panel.AddBulletText(e),
            this.ReceiveMessage(e),
            0 < r.length && this.$bus.$emit("GiftMsg", r))
        },
        ReceiveMessage: function(e) {
            if (this.lock)
                this.tempTalkStore = this.tempTalkStore.concat(e),
                this.tempTalkStore.length > this.chatLimit && this.tempTalkStore.splice(0, this.tempTalkStore.length - this.chatLimit);
            else {
                for (var t = e.length, a = 0; a < t; a++)
                    this.talkStore.push(e.splice(0, 1)[0]),
                    this.ChkChatLimitLength();
                this.SlideDownClickEventHandler()
            }
        },
        ChkChatLimitLength: function() {
            var e = 0 < this.annLength ? this.chatLimit + this.annLength - 1 : this.chatLimit;
            this.talkStore.length > e && (e = 1,
            this.talkStore[0][0] == ChatType.Announcement && (e = this.annLength,
            this.annLength = 0),
            this.talkStore.splice(0, e))
        },
        NoTalkProcess: function(t) {
            this.tempTalkStore = this.tempTalkStore.filter(function(e) {
                return t.indexOf(e[1]) < 0 || e[0] === ChatType.Gift
            }),
            this.talkStore = this.talkStore.filter(function(e) {
                return t.indexOf(e[1]) < 0 || e[0] === ChatType.Gift
            }),
            this.$nextTick(function() {
                this.ChatRoomScrollEventHandler()
            })
        },
        ChatBoxKeyPressEventHandler: function(e) {
            this.chatBoxData = e
        },
        FaceIconShowEventHandler: function(e) {
            "string" != typeof e && Outer.CloseBlock($(e.target)),
            this.IsNoTalk || this.SocketConnecting || (this.SetAlertTips(!1),
            this.showReceipt.show = this.quick.show = !1,
            "string" != typeof e && this.faceIconShow ? this.faceIconShow = !this.faceIconShow : (this.$refs.imgbox.SelectChangeClickEventHandler("string" == typeof e ? e : this.$refs.imgbox.select, !0),
            this.faceIconShow = !0),
            Tool.IsTouch ? this.faceIconShow ? (this.$refs.chatBox.$el.blur(),
            this.$bus.$emit("HiddenShieldTip")) : (this.$refs.chatBox.$el.focus(),
            this.$refs.chatBox.KeepLastIndex(),
            $(".CRB_keyIn_Text").scrollLeft(this.$refs.chatBox.$el.scrollWidth)) : this.$refs.chatBox.$el.focus())
        },
        FaceIconHideEventHandler: function(e) {
            e && e.target && ("btnFaceIcon" === e.target.id || e.target.matches("img[class*=icon]")) || (this.faceIconShow = !1)
        },
        ChatRoomScrollEventHandler: function() {
            this.$nextTick(function() {
                this.$refs.chatRoomScrollBar && this.LoadNewest(this.$refs.chatRoomScrollBar.scrollPanelElm.scrollTop < this.$refs.chatRoomScrollBar.scrollPanelElm.scrollHeight - this.$refs.chatRoomScrollBar.scrollPanelElm.clientHeight - 5 && 0 < this.talkStore.length, !1)
            })
        },
        LoadNewest: function(e, t) {
            if (!(this.lock = e)) {
                for (var a = this.tempTalkStore.length, i = 0; i < a; i++)
                    this.talkStore.push(this.tempTalkStore.splice(0, 1)[0]),
                    this.ChkChatLimitLength();
                (0 < a || t) && this.$nextTick(function() {
                    this.$refs.chatRoomScrollBar.scrollTo({
                        y: this.$refs.chatRoomScrollBar.scrollPanelElm.scrollHeight
                    }, 0)
                })
            }
        },
        SlideDownClickEventHandler: function() {
            this.$nextTick(function() {
                this.$refs.chatRoomScrollBar && this.LoadNewest(!1, !0)
            })
        },
        ShieldClickEventHandler: function(e) {
            this.user.shieldId.indexOf(e) < 0 ? this.user.shieldId.push(e) : (clearTimeout(this.removeShieldTip.timer),
            this.removeShieldTip.show = !0,
            this.removeShieldTip.timer = setTimeout(function() {
                this.removeShieldTip.show = !1
            }
            .bind(this), 2500),
            this.user.shieldId.splice(this.user.shieldId.indexOf(e), 1))
        },
        OverMaxLengthEventHandler: function() {
            this.SetAlertTips(!0, langFont.Font_ChatrooLengthmLimit, !0)
        },
        FormShowEventHandler: function(e) {
            Outer.CloseBlock($(e.target)),
            this.IsNoTalk || this.SocketConnecting || (this.SetAlertTips(!1),
            !this.showReceipt.show && (null === this.showReceipt.lastTime || 3e3 < Date.now() - this.showReceipt.lastTime) && (this.showReceipt = {
                show: !1,
                store: [],
                status: !1,
                lastTime: Date.now()
            },
            DataAdapter.SendCommand({
                action: "showR",
                val: this.gpId
            })),
            this.$refs.showbox.Clear(),
            this.showReceipt.show = !this.showReceipt.show,
            this.faceIconShow = this.quick.show = !1,
            Tool.IsTouch ? this.showReceipt.show && (this.$refs.chatBox.$el.blur(),
            this.$bus.$emit("HiddenShieldTip")) : this.showReceipt.show || this.$refs.chatBox.$el.focus())
        },
        FormHideEventHandler: function() {
            this.$refs.showbox.Clear(),
            this.showReceipt.show = !1
        },
        FormSendEventHandler: function(e) {
            this.FormHideEventHandler(),
            this.IsNoTalk || this.SendMessageProcess(e, ChatType.ShowReceipt, {
                action: "addSR",
                val: e
            })
        },
        ProcessQuickMessage: function(e) {
            this.quick.store = e,
            this.quick.show = 0 < this.quick.store.length && this.quick.show
        },
        QuickShowEventHandler: function(e) {
            Outer.CloseBlock($(e.target)),
            this.IsNoTalk || this.SocketConnecting || (this.SetAlertTips(!1),
            this.showReceipt.show = this.faceIconShow = !1,
            this.quick.show = !this.quick.show,
            Tool.IsTouch ? this.quick.show && (this.$refs.chatBox.$el.blur(),
            this.$bus.$emit("HiddenShieldTip")) : this.quick.show || this.$refs.chatBox.$el.focus())
        },
        QuickHideEventHandler: function() {
            this.quick.show = !1
        },
        QuickSendEventHandler: function(e) {
            this.QuickHideEventHandler(),
            this.IsNoTalk || this.SendMessageProcess(e.val, ChatType.Normal, {
                action: "addQT",
                id: e.id,
                val: e.val
            })
        },
        GiftShowEventHandler: function(e) {
            Outer.CloseBlock($(e.target)),
            this.SocketConnecting || (this.SetAlertTips(!1),
            this.quick.show = this.showReceipt.show = this.faceIconShow = !1,
            this.IsNotDonate || ("span" == e.target.tagName.toLowerCase() ? (this.gift.show = !0,
            this.$bus.$emit("GiftPopClose")) : this.gift.show = !this.gift.show),
            Tool.IsTouch && (this.gift.show || this.IsNotDonate) && (this.$refs.chatBox.$el.blur(),
            this.$bus.$emit("HiddenShieldTip")))
        },
        GiftHideEventHandler: function() {
            this.gift.show = !1
        },
        HalfMouseOverEventHandler: function() {
            this.half.allow || this.half.status || (this.half.tip = !0)
        },
        HalfMouseOutEventHandler: function() {
            this.half.tip && (this.half.tip = !1)
        },
        HalfClickEventHandler: function() {
            (this.half.status || this.half.allow) && (this.half.status = !this.half.status,
            Inner.HalfChatRoom(this.half.status),
            this.SlideDownClickEventHandler())
        },
        SendImgEventHandler: function(e) {
            this.faceIconShow = !1,
            this.IsNoTalk || this.SendMessageProcess("[" + e + "]")
        },
        ScreenRotationEventHandler: function() {
            this.show && Tool.IsTouch && (this.CloseChatProcess(),
            setTimeout(function() {
                this.ChatRoomScrollEventHandler()
            }
            .bind(this), 0))
        },
        CloseChatProcess: function() {
            this.FaceIconHideEventHandler(),
            this.QuickHideEventHandler(),
            this.FormHideEventHandler(),
            this.$refs.chatBox.$el.blur(),
            setTimeout(function() {
                this.$refs.chatBox.$el.blur()
            }
            .bind(this), 0)
        },
        AddHashTagEventHandler: function(e) {
            this.$refs.chatBox.AddHashTag(e),
            this.$bus.$emit("GiftBoxClose")
        },
        GetTalkComponent: function(e) {
            var t = "";
            switch (e) {
            case ChatType.Normal:
            case ChatType.System:
            case ChatType.Anchor:
            case ChatType.ShowReceipt:
                t = "talk";
                break;
            case ChatType.Gift:
            case ChatType.SubscrbeAnchor:
                t = "broadcast";
                break;
            case ChatType.Announcement:
                t = "announcement";
                break;
            default:
                t = ""
            }
            return t
        },
        ChkUserGiftStatus: function() {
            var e = this.$store.main.testChannelList && (0 === this.$store.main.testChannelList.length || 0 <= this.$store.main.testChannelList.indexOf(MainProperty.panelData.girlLive.route))
              , t = 0;
            return 1 != MainProperty.user.category && 2 != MainProperty.user.category || (t += 2,
            this.$store.gift.canDonate && (1 == MainProperty.user.category || 2 == MainProperty.user.category && e) && (t += 4)),
            t
        },
        ChkFreePoint: function() {
            var e, t;
            this.$store.gift.canFree && (5e3 < (e = (new Date).getTime()) - (t = this).gift.lastCheckFC && $.ajax({
                type: "POST",
                url: "/ajax/AjaxGift.aspx",
                data: {
                    method: "CheckFreeCoin"
                },
                dataType: "json",
                error: function(e) {
                    LogOutCheck('{"st":"' + e.status + '"}')
                },
                success: function(e) {
                    !0 !== LogOutCheck(e) && (t.$store.user.freePoint = Tool.TransformMathFloor(e.bl, 0),
                    $("#labFreePoint").text(t.$store.user.freePoint))
                }
            }),
            this.gift.lastCheckFC = e)
        },
        ShowChatAnn: function(e) {
            if (this.showAnn && e && 0 < e.length) {
                this.showAnn = 0,
                SetCookie("showChatAnn", 0);
                for (var t = 0; t < e.length; t++)
                    this.talkStore.push([ChatType.Announcement, "ann", void 0, void 0, e[t], void 0, this.user.guid, "ann" + t + "_" + this.user.tc, []]);
                this.annLength = e.length,
                this.ChkChatLimitLength(),
                this.SlideDownClickEventHandler()
            }
        },
        PromptTextProcess: function(e) {
            this.promptTipType = e
        },
        SetAlertTips: function(e, t, a) {
            e && (!a || a && !this.tipShow.visible && this.tipShow.msg !== t) ? (this.tipShow.msg = t,
            this.tipShow.visible = !0,
            clearTimeout(this.tipShow.timer),
            this.tipShow.timer = setTimeout(function() {
                this.tipShow.visible = !1,
                this.tipShow.msg = ""
            }
            .bind(this), this.tipShow.time)) : 0 == e && (clearTimeout(this.tipShow.timer),
            this.tipShow.visible = !1,
            this.tipShow.msg = "")
        }
    },
    computed: {
        IsNoTalk: function() {
            return this.user.noTalk || !this.user.permission
        },
        GetCursorStyle: function() {
            return this.CanUseChatRoom ? "cursor:point;" : "cursor:default;"
        },
        CanUseChatRoom: function() {
            return !(this.error || this.maintain || this.smMaintain || this.dormant)
        },
        SocketConnecting: function() {
            return this.status && !this.connect
        },
        NoTalkText: function() {
            return this.user.permission ? this.UnLimitTime.time.d < 7 ? langFont.Font_LimitTalk + " " + this.UnLimitTimeText : langFont.Font_LimitTalks : langFont.Font_NoTalk
        },
        GetPrompText: function() {
            return this.SocketConnecting ? langFont.Font_ChatConnect : this.gift.status ? langFont.Font_AnchorChatStart : langFont.Font_ChatStart
        },
        GetIconPromptText: function() {
            var e = "";
            switch (this.promptTipType) {
            case ChatPrompt.Chatroom:
                e = this.status ? langFont.Font_ChatroomClose : langFont.Font_ChatroomOpen;
                break;
            case ChatPrompt.Gift:
                e = langFont.Font_GiftOpen;
                break;
            case ChatPrompt.Quick:
                e = this.quick.show ? langFont.Font_QuickClose : langFont.Font_QuickOpen;
                break;
            case ChatPrompt.Form:
                e = langFont.Font_FormOpen;
                break;
            case ChatPrompt.FaceIcon:
                e = this.faceIconShow ? langFont.Font_FaceIconClose : langFont.Font_FaceIconOpen
            }
            return e
        },
        GetErrorText: function() {
            return this.dormant ? langFont.Font_DormantChat : this.error ? this.user.id ? langFont.Font_ConnectError : langFont.Font_ErrorTalk : langFont.Font_ChatRoomMaintain
        },
        UnLimitTime: function() {
            var e, t, a, i, n, r = 0;
            return this.user.limitTime && (e = this.smTime.ms || Date.now(),
            r = 0 < (r = (this.user.limitTime - e) / 1e3) ? r : 0),
            {
                second: r,
                time: (t = r,
                a = Math.floor(t / 86400),
                i = Math.floor((t - 86400 * a) / 3600),
                n = Math.floor((t - 86400 * a - 3600 * i) / 60),
                {
                    d: a,
                    h: s(i),
                    m: s(n),
                    s: s(t - 86400 * a - 3600 * i - 60 * n)
                })
            };
            function s(e) {
                return 0 <= e & e < 10 ? "0" + e : e
            }
        },
        UnLimitTimeText: function() {
            var e, t = "";
            return this.user.limitTime && ((e = this.UnLimitTime.time).d < 7 && 1 <= e.d ? t = '<span class="t_prohibitTime">(' + langFont.Font_LimitTalkDays.replace(" X ", e.d + 1) + ")</span>" : 0 == e.d && 0 < this.UnLimitTime.second && (t = '<span class="t_prohibitTime">(' + e.h + ":" + e.m + ")</span>")),
            t
        },
        IsAnchorLive: function() {
            return this.CanUseChatRoom && this.connect && this.status && this.gift.status
        },
        IsGiftIconShow: function() {
            var e = this.ChkUserGiftStatus();
            return !this.SocketConnecting && this.IsAnchorLive && 2 == (2 & e) ? "display: table-cell !important;" : "display: none !important;"
        },
        IsNotDonate: function() {
            var e = this.ChkUserGiftStatus();
            return !this.SocketConnecting && this.IsAnchorLive && !(4 == (4 & e))
        },
        IsGiftBoxShow: function() {
            return this.IsAnchorLive && this.gift.show ? "display: block !important;" : ""
        }
    },
    watch: {
        IsNoTalk: function() {
            this.IsNoTalk && this.CloseChatProcess()
        },
        smMaintain: function() {
            this.Maintain(this.smMaintain)
        },
        maintain: function() {
            this.Maintain(this.maintain)
        },
        IsGiftBoxShow: function() {
            this.IsGiftBoxShow && this.ChkFreePoint()
        }
    },
    components: {
        talk: {
            template: '<ul :class="[{talk_AD: IsAD, talk_MC: IsMC, rank: IsTitle}, GetTalkClass]"><li class="talk_icon" v-click-outside="HiddenShieldTip"><div v-if="!self" class="btn_CR_level" :class="{off: HasShield}"@click="NoShield && ShieldTipProcess($event)"@mouseover="NoShield && !isTouch && ShieldTipProcess($event)"@mouseout="NoShield && !isTouch && HiddenShieldTip($event)"><img :src="GetLevelSrc"/></div><div@click.prevent="NoShield && ShieldTipProcess($event)"@mouseover="NoShield && !isTouch && ShieldTipProcess($event)"@mouseout="NoShield && !isTouch && HiddenShieldTip($event)"style = "display:block":class="{btn_CR_blockade: !HasShield, btn_CR_remove: HasShield}"v-show="shieldTip" v-text="ShieldTipText"></div></li><li class="talk_box"><div class="talk_T"><rank v-for="(item, idx) in title" :key="idx" :rank="item"></rank><span class="talk_name" v-if="!self" v-text="NickNameText" @click="AddHashTagEventHandler"></span><span class="talk_time" v-text="TimeParse(time)"></span></div> <components :is="GetMsgComponents" :msg="msg" @tag="AddHashTagByMsgEventHandler"></components></li></ul>',
            data: function() {
                return {
                    shieldTip: !1,
                    isTouch: Tool.IsTouch
                }
            },
            props: {
                account: {
                    type: String,
                    default: ""
                },
                type: {
                    type: Number,
                    default: 0
                },
                level: {
                    type: Number,
                    default: 0
                },
                nickname: {
                    type: String,
                    default: ""
                },
                msg: {
                    type: String,
                    default: ""
                },
                time: {
                    type: String,
                    default: ""
                },
                self: {
                    type: Boolean,
                    default: !1
                },
                talk: {
                    type: !0,
                    default: !1
                },
                shield: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                title: {
                    type: Array,
                    default: function() {
                        return []
                    }
                }
            },
            methods: {
                TimeParse: function(e) {
                    return " " + new Date(e).Format("hh:mm")
                },
                ShieldTipProcess: function(e) {
                    "click" === e.type && this.shieldTip ? this.$emit("shieldclick", this.account) : (this.$bus.$emit("HiddenShieldTip"),
                    this.$nextTick(function() {
                        this.shieldTip = !this.shieldTip
                    }))
                },
                HiddenShieldTip: function() {
                    this.shieldTip = !1
                },
                AddHashTagEventHandler: function() {
                    !this.talk || this.IsAD || this.self || this.$emit("tag", this.nickname)
                },
                AddHashTagByMsgEventHandler: function(e) {
                    this.talk && !this.IsAD && e !== MainProperty.user.nickName && this.$emit("tag", e)
                }
            },
            computed: {
                GetTalkClass: function() {
                    return this.self ? "talk_USER" : "talk_LV" + this.level
                },
                GetLevelSrc: function() {
                    var e = "../images/bb/" + langFont.Font_Langue + "/icon_level";
                    return this.IsAD ? e += "AD.svg" : this.IsMC ? e += "MC.svg" : e += this.level + langFont.Font_IconImg + ".svg",
                    e
                },
                IsAD: function() {
                    return this.type === ChatType.System
                },
                IsMC: function() {
                    return this.type === ChatType.Anchor
                },
                IsTitle: function() {
                    return 0 < this.title.length && !this.self && this.type !== ChatType.ShowReceipt
                },
                ShieldTipText: function() {
                    return this.HasShield ? langFont.Font_Remove : langFont.Font_Shield
                },
                NickNameText: function() {
                    return this.IsAD ? langFont.Font_Admin : this.nickname
                },
                HasShield: function() {
                    return 0 <= this.shield.indexOf(this.account)
                },
                GetMsgComponents: function() {
                    return this.type === ChatType.ShowReceipt ? "receipt" : "msg"
                },
                NoShield: function() {
                    return !this.self && !this.IsAD && !this.IsMC
                }
            },
            components: {
                msg: {
                    template: '<div class="talk_In" :class="{ sticker_In: ImgClass }" v-html="TransFormText" @click="TagClickEventHandler"></div>',
                    props: {
                        msg: {
                            type: String,
                            default: ""
                        }
                    },
                    methods: {
                        TagClickEventHandler: function(e) {
                            e.target.matches(".takeName") ? this.$emit("tag", e.target.innerHTML.substring(1)) : e.target.matches("img") && (this.$bus.$emit("GiftBoxClose", !0),
                            this.$bus.$emit("FaceIconShowEventHandler", $(e.target).attr("rel")))
                        }
                    },
                    computed: {
                        ImgClass: function() {
                            return /\[sc[0-9][0-9]\]|\[scx[0-9][0-9]\]|\[bb[0-9][0-9]\]|\[bbx[0-9][0-9]\]|\[bk[0-9][0-9]\]|\[mix[0-9][0-9]\]|\[dog[0-9][0-9]\]|\[man[0-9][0-9]\]|\[manx[0-9][0-9]\]|\[dogx[0-9][0-9]\]|\[newyear[0-9][0-9]\]|\[xmas[0-9][0-9]\]|\[lovingcat[0-9][0-9]\]|\[lovingrabbit[0-9][0-9]\]/g.test(this.msg)
                        },
                        TransFormText: function() {
                            return this.msg.replace(/\[(face[0-9][0-9])\]/g, '<img rel="face" class="icon_$1" src="../images/bb/bg_block.png">').replace(/\[sc([0-9][0-9])\]/g, '<img rel="sc" class="icon_sticker_soccer_$1" src="../images/bb/bg_block.png">').replace(/\[scx([0-9][0-9])\]/g, '<img rel="scx" class="icon_sticker_soccer2_$1" src="../images/bb/bg_block.png">').replace(/\[bb([0-9][0-9])\]/g, '<img rel="bb" class="icon_sticker_baseball_$1" src="../images/bb/bg_block.png">').replace(/\[bbx([0-9][0-9])\]/g, '<img rel="bbx" class="icon_sticker_baseball2_$1" src="../images/bb/bg_block.png">').replace(/\[bk([0-9][0-9])\]/g, '<img rel="bk" class="icon_sticker_basketball_$1" src="../images/bb/bg_block.png">').replace(/\[mix([0-9][0-9])\]/g, '<img rel="mix" class="icon_sticker_mixSports_$1" src="../images/bb/bg_block.png">').replace(/\[dog([0-9][0-9])\]/g, '<img rel="dog" class="icon_sticker_browndog_$1" src="../images/bb/bg_block.png">').replace(/\[man([0-9][0-9])\]/g, '<img rel="man" class="icon_sticker_boy_$1" src="../images/bb/bg_block.png">').replace(/\[manx([0-9][0-9])\]/g, '<img rel="manx" class="icon_sticker_oldman_$1" src="../images/bb/bg_block.png">').replace(/\[dogx([0-9][0-9])\]/g, '<img rel="dogx" class="icon_sticker_dog_$1" src="../images/bb/bg_block.png">').replace(/\[newyear([0-9][0-9])\]/g, '<img rel="newyear" class="icon_sticker_newyear_$1" src="../images/bb/bg_block.png">').replace(/\[xmas([0-9][0-9])\]/g, '<img rel="xmas" class="icon_sticker_xmas_$1" src="../images/bb/bg_block.png">').replace(/\[lovingcat([0-9][0-9])\]/g, '<img rel="lovingcat" class="icon_sticker_lovingcat_$1" src="../images/bb/bg_block.png">').replace(/\[lovingrabbit([0-9][0-9])\]/g, '<img rel="lovingrabbit" class="icon_sticker_lovingrabbit_$1" src="../images/bb/bg_block.png">').replace(/\[halloween([0-9][0-9])\]/g, '<img rel="halloween" class="icon_sticker_halloween_$1" src="../images/bb/bg_block.png">').replace(/\[water([0-9][0-9])\]/g, '<img rel="water" class="icon_sticker_water_$1" src="../images/bb/bg_block.png">').replace(/\[(@[^\]]+)\]/g, '<span class="takeName">$1</span>')
                        }
                    }
                },
                receipt: {
                    template: '<ul class="talk_InForm" @click="AddCartEventHandler"><li>{{GetDetail[4]}}</li><components :is="GetTeamComponents" :teamName="GetTeamName"></components><li class="TIF_bet"><div class="TIF_betName"><span class="t_red" v-if="GetDetail[6]">{{GetDetail[6]}}</span><span class="t_blue">{{GetDetail[7]}}</span> </div><div class="t_inlineBox"><span class="t_red">{{GetDetail[8]}}</span> @ <span class="t_red">{{GetDetail[9]}}</span></div></li><li class="TIF_w50">' + langFont.Font_CartBet + '：<b class="t_blue">{{GetDetail[10]}}</b></li><li class="TIF_w50">' + langFont.Font_CartCanWin + '：<b class="t_red">{{GetDetail[11]}}</b></li></ul>',
                    props: {
                        msg: {
                            type: String,
                            default: ""
                        }
                    },
                    computed: {
                        GetDetail: function() {
                            return this.msg.split("|")
                        },
                        GetTeamName: function() {
                            return this.GetDetail[5].split(" v ")
                        },
                        GetTeamComponents: function() {
                            return 1 === this.GetTeamName.length ? "singleTeamName" : "multiTeamName"
                        }
                    },
                    methods: {
                        AddCartEventHandler: function() {
                            var e, t, a, i, n;
                            MainProperty.isFastTrade || (e = MainProperty.innerPage,
                            t = this.GetDetail[1],
                            a = this.GetDetail[2],
                            i = this.GetDetail[3],
                            n = MainProperty.innerData.gameData && MainProperty.innerData.gameData[e] ? MainProperty.innerData.gameData[e].gpid : "",
                            this.GetDetail[0] === n && MainProperty.innerData.oddData[e] && MainProperty.innerData.oddData[e][t] && MainProperty.innerData.oddData[e][t][a] && MainProperty.innerData.oddData[e][t][a][i] && "" !== MainProperty.innerData.oddData[e][t][a][i].join("") && CartBase.AddCartList(e + "_" + t + "_" + a + "_" + i, !0))
                        }
                    },
                    components: {
                        singleTeamName: {
                            template: '<li class="TIF_teamName_only" v-html="teamName[0]"></li>',
                            props: {
                                teamName: {
                                    type: Array,
                                    default: []
                                }
                            }
                        },
                        multiTeamName: {
                            template: '<li class="TIF_team"><div class="TIF_teamName" v-html="teamName[0]"></div><div class="TIF_teamV">v</div><div class="TIF_teamName" v-html="teamName[1]"></div></li>',
                            props: {
                                teamName: {
                                    type: Array,
                                    default: []
                                }
                            }
                        }
                    }
                },
                rank: RankTitleComponent
            },
            mounted: function() {
                this.$bus.$on("HiddenShieldTip", this.HiddenShieldTip)
            },
            destroyed: function() {
                this.$bus.$off("HiddenShieldTip", this.HiddenShieldTip)
            }
        },
        broadcast: {
            template: '<div :class="GetContainClass" style="display: table;"><img class="talkMsg_LV" :src="GetLevelSrc"><rank v-for="(item, idx) in title" :key="idx" :rank="item"></rank><span class="talkMsg_name" v-text="nickname" @click="TagClickEventHandler"></span><span v-text="GetText"></span><span v-if="IsGift" class="talkMsg_giftImg" @click.prevent.stop="$bus.$emit(\'GiftShowEventHandler\',$event)"><img :src="GetGiftSrc" @error="$chat.LoadGiftImageError"><span v-text="GetInfo[0]"></span></span></div>',
            props: {
                account: {
                    type: String,
                    default: ""
                },
                type: {
                    type: Number,
                    default: 0
                },
                level: {
                    type: Number,
                    default: 0
                },
                nickname: {
                    type: String,
                    default: ""
                },
                msg: {
                    type: String,
                    default: ""
                },
                time: {
                    type: String,
                    default: ""
                },
                self: {
                    type: Boolean,
                    default: !1
                },
                talk: {
                    type: !0,
                    default: !1
                },
                shield: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                title: {
                    type: Array,
                    default: function() {
                        return []
                    }
                }
            },
            computed: {
                IsGift: function() {
                    return this.type === ChatType.Gift
                },
                GetLevelSrc: function() {
                    return "../images/bb/" + langFont.Font_Langue + "/icon_level" + (this.level + langFont.Font_IconImg) + ".svg"
                },
                GetGiftSrc: function() {
                    return "../images/" + this.GetInfo[2]
                },
                GetContainClass: function() {
                    return this.IsGift ? "talkMsg_gift" : "talkMsg_like"
                },
                GetText: function() {
                    return this.IsGift ? langFont.Font_DonateTo : langFont.Font_LikeAnchor
                },
                GetInfo: function() {
                    return this.msg.split("|")
                }
            },
            methods: {
                TagClickEventHandler: function() {
                    this.IsGift && this.nickname != MainProperty.user.nickName && this.$emit("tag", this.nickname)
                }
            },
            components: {
                rank: RankTitleComponent
            }
        },
        chatbox: {
            template: '<div class="CRB_keyIn_Text" oncontextmenu="return false;"v-html="innerText":contenteditable="canedit"@focus="isLocked = true"@blur="isLocked = false;composing = false;"@input="ChangeText"@keydown="EnterSend($event)"@compositionstart="composing = true"@compositionend="ChineseInput"@paste.prevent="PasteLimit($event)" @dragover.prevent="DropLimit($event)" @drop.prevent="DropLimit($event)" ></div>',
            props: {
                value: {
                    type: String,
                    default: ""
                },
                canedit: {
                    type: Boolean,
                    default: !0
                },
                limit: {
                    type: Number,
                    default: 50
                }
            },
            data: function() {
                return {
                    innerText: this.value,
                    isLocked: !1,
                    chatLength: 0,
                    composing: !1,
                    faceIconLock: !1,
                    keyCode: null
                }
            },
            watch: {
                value: function() {
                    this.isLocked && this.innerText && "" !== this.value || (this.innerText = this.value,
                    this.faceIconLock || "" === this.value ? this.faceIconLock = !1 : this.$nextTick(function() {
                        this.KeepLastIndex()
                    }));
                    var e = this.value.replace(/<img rel="face" class="icon_face[0-9][0-9]" src="...images.bb.bg_block.png">/g, "X").replace(/<input class="takeName" type="button" value=\"([^\"]*)\">/g, "$1");
                    this.chatLength = this.HtmlDecode(e).length,
                    this.chatLength > this.limit && this.$emit("overlength")
                },
                canedit: function() {
                    this.$emit("input", "")
                }
            },
            methods: {
                CheckLimitLength: function(e) {
                    var t, a, i, n, r;
                    this.$el.innerHTML !== this.value && (r = this.HtmlDecode(this.$el.innerHTML.replace(/<img rel="face" class="icon_(face[0-9][0-9])" src="...images.bb.bg_block.png">/g, "[$1]").replace(/<input class="takeName" type="button" value=\"([^\"]*)\">/g, "[$1]").replace(/<\/?font[^>]*>/gi, "")),
                    n = this.HtmlDecode(this.$el.innerHTML.replace(/<img rel="face" class="icon_(face[0-9][0-9])" src="...images.bb.bg_block.png">/g, "$").replace(/<input class="takeName" type="button" value=\"([^\"]*)\">/g, "$1").replace(/<\/?font[^>]*>/gi, "")).length,
                    t = 0,
                    n > this.limit && (this.$emit("overlength"),
                    t = n - this.limit,
                    r = e && 0 < e.length ? (a = function(e, t, a, i) {
                        var n = "";
                        /^[\' \'|a-zA-Z|0-9|\.]+$/.test(a) && 1 < a.length && (t += t === a ? "" : a);
                        for (var r = " " == a ? /\s+/ : a, s = e.split(r), o = t.split(r), l = !1, c = 0; c < o.length; c++) {
                            var d = s[c]
                              , u = s[c + 1]
                              , h = o[c];
                            d === h || l ? n += h + (c + 1 !== o.length && (u || "" === u || l) ? a : "") : (n += h + i,
                            l = !0)
                        }
                        for (var p = n.split(/(\[\@.*?\]|\[face[0-9][0-9]\])/), n = "", m = 0, c = 0; c < p.length && m < this.limit; c++) {
                            var g = p[c];
                            /(\[face[0-9][0-9]\])/.test(g) ? (n += g,
                            m += 1) : /(\[\@.*?\])/.test(g) ? (n += g,
                            m = m + g.length - 3) : (n += g.length + m >= this.limit ? g.substring(0, this.limit - m) : g,
                            m += g.length)
                        }
                        return n
                    }
                    .bind(this),
                    i = this.value.replace(/<img rel="face" class="icon_(face[0-9][0-9])" src="...images.bb.bg_block.png">/g, "[$1]").replace(/<input class="takeName" type="button" value=\"([^\"]*)\">/g, "[$1]").replace(/<\/?font[^>]*>/gi, ""),
                    n = this.value.replace(/<img rel="face" class="icon_(face[0-9][0-9])" src="...images.bb.bg_block.png">/g, "$").replace(/<input class="takeName" type="button" value=\"([^\"]*)\">/g, "$1").replace(/<\/?font[^>]*>/gi, "").length,
                    a(i, r, e, e.substring(0, this.limit - n))) : this.value),
                    r = r.replace(/\[(face[0-9][0-9])\]/g, '<img rel="face" class="icon_$1" src="../images/bb/bg_block.png">').replace(/\[(@[^\]]+)\]/g, '<input class="takeName" type="button" value="$1">').replace(/<\/?font[^>]*>/gi, "").replaceAll("<br>", ""),
                    this.$emit("input", r),
                    8 !== this.keyCode && 46 !== this.keyCode && this.$nextTick(function() {
                        try {
                            var e = this.GetCursortPosition();
                            e[1] = e[1] - t,
                            this.$el.innerHTML = r,
                            this.SetCaretPosition(e)
                        } catch (e) {
                            this.KeepLastIndex()
                        }
                    }),
                    this.keyCode = null)
                },
                ChineseInput: function(e) {
                    this.composing = !1,
                    this.CheckLimitLength(e.data || "")
                },
                ChangeText: function(e) {
                    this.composing || this.CheckLimitLength(e.data || "")
                },
                EnterSend: function(e) {
                    var t = e.which || e.keyCode;
                    if (8 !== (this.keyCode = t) && 27 !== t && 37 !== t && 39 !== t) {
                        if (13 === t)
                            return e.preventDefault(),
                            void (Tool.IsTouch || this.$emit("keypress"));
                        this.chatLength > this.limit && (this.$emit("overlength"),
                        e.preventDefault()),
                        e.ctrlKey && (e.preventDefault(),
                        e.altKey && this.$el.blur())
                    }
                },
                GetCursortPosition: function() {
                    var e = 0
                      , t = 0
                      , a = this.$el.ownerDocument || this.$el.document
                      , a = a.defaultView || a.parentWindow;
                    if (void 0 !== a.getSelection && 0 < a.getSelection().rangeCount) {
                        e = a.getSelection().getRangeAt(0).endOffset;
                        for (var i = a.getSelection().focusNode; i.previousSibling; )
                            t++,
                            i = i.previousSibling
                    }
                    return [t, e]
                },
                SetCaretPosition: function(e) {
                    var t;
                    document.createRange && ((t = document.createRange()).selectNodeContents(this.$el),
                    0 < this.$el.innerHTML.length && t.setStart(this.$el.childNodes[e[0]], e[1]),
                    t.collapse(!0),
                    (e = window.getSelection()).removeAllRanges(),
                    e.addRange(t))
                },
                KeepLastIndex: function() {
                    var e;
                    window.getSelection ? (this.$el.focus(),
                    (e = window.getSelection()).selectAllChildren(this.$el),
                    e.collapseToEnd()) : document.selection && ((e = document.selection.createRange()).moveToElementText(this.$el),
                    e.collapse(!1),
                    e.select())
                },
                PasteLimit: function(e) {
                    e.preventDefault()
                },
                DropLimit: function(e) {
                    return e.preventDefault(),
                    !1
                },
                ProcessInsertBefore: function(e, t) {
                    this.composing = !1,
                    Tool.IsTouch && (window.getSelection ? "function" == typeof window.getSelection().empty ? window.getSelection().empty() : "function" == typeof window.getSelection().removeAllRanges && window.getSelection().removeAllRanges() : document.selection && document.selection.empty(),
                    this.faceIconLock = !0),
                    this.chatLength + t <= this.limit ? (this.PasteHtmlAtCaret(e),
                    this.$emit("input", this.$el.innerHTML.replace(/<\/?font[^>]*>/gi, "").replaceAll("<br>", "")),
                    this.$nextTick(function() {
                        $(".CRB_keyIn_Text").scrollLeft(this.$el.scrollWidth)
                    })) : this.$emit("overlength")
                },
                AddFaceIcon: function(e) {
                    this.ProcessInsertBefore('<img rel="face" class="icon_' + e + '" src="../images/bb/bg_block.png"/>', 1)
                },
                AddHashTag: function(e) {
                    this.ProcessInsertBefore('<input class="takeName" type="button" value="@' + e + '"/>', e.length + 1)
                },
                PasteHtmlAtCaret: function(t) {
                    var e, a, i;
                    try {
                        if (window.getSelection && (null !== window.getSelection().anchorNode && null !== window.getSelection().anchorNode.parentNode && window.getSelection().anchorNode.parentNode === this.$el || window.getSelection().anchorNode === this.$el)) {
                            if ((e = window.getSelection()).getRangeAt && e.rangeCount) {
                                (a = e.getRangeAt(0)).deleteContents(),
                                (i = document.createElement("div")).innerHTML = t;
                                for (var n, r, s = document.createDocumentFragment(); n = i.firstChild; )
                                    r = s.appendChild(n);
                                a.insertNode(s),
                                r && ((a = a.cloneRange()).setStartAfter(r),
                                a.collapse(!0),
                                e.removeAllRanges(),
                                e.addRange(a))
                            }
                        } else
                            document.selection && "Control" != document.selection.type && (null !== document.createRange() && document.createRange().parentElement() === this.$el || document.selection === this.$el) ? document.selection.createRange().pasteHTML(t) : ((i = document.createElement("div")).innerHTML = t,
                            this.$el.appendChild(i.firstChild))
                    } catch (e) {
                        (i = document.createElement("div")).innerHTML = t,
                        this.$el.appendChild(i.firstChild)
                    }
                },
                HtmlDecode: function(e) {
                    if (!e || "" == e)
                        return "";
                    var t = document.createElement("div");
                    return t.innerHTML = e,
                    t.childNodes[0] && t.childNodes[0].nodeValue ? t.childNodes[0].nodeValue : ""
                }
            },
            mounted: function() {
                Tool.IsTouch && $(this.$el).on("click touchend", "img, .takeName", function() {
                    this.KeepLastIndex(),
                    $(".CRB_keyIn_Text").scrollLeft(this.$el.scrollWidth)
                }
                .bind(this))
            }
        },
        imgbox: {
            template: '<div class="faceIconBox" style="display: block;"><div class="faceIconBox_T"><div class="btn_faceList_back" :class="{ on: position > 0}" @click="ChangeImgList(-1)"></div><ul class="faceList"><li v-for="key in GetImgList" :key="list[key].name" :class="[list[key].class,{on:select===list[key].name}]" @click="SelectChangeClickEventHandler(list[key].name)"></li></ul><div class="btn_faceList_next" @click="ChangeImgList(1)"></div></div><div class="scroll-wrapper faceIconBox_scroll scrollbar-macosx"><vue-scroll ref="scroll" :ops="ops"><ul :class="GetContainClass" style="display: block;"><li v-for="(item, idx) in GetFaceIcons" :key="idx" @click.prevent="AddFaceIcon(item[1])"><img :class="item[0]" src="../images/bb/bg_block.png"><span v-if="select!==\'face\'">{{GetIconText(item[1])}}</span></li></ul></vue-scroll></div></div>',
            data: function() {
                return {
                    select: "face",
                    position: 0,
                    ops: {
                        rail: {
                            size: "1px"
                        },
                        bar: {
                            background: "#666",
                            opacity: .2,
                            size: "3px"
                        }
                    },
                    list: {
                        face: {
                            name: "face",
                            position: 0,
                            class: "btn_faceIcon_emoji",
                            key: "icon_face",
                            count: 68,
                            filter: []
                        },
                        sc: {
                            name: "sc",
                            position: 0,
                            class: "btn_sticker_soccer",
                            key: "icon_sticker_soccer_",
                            count: 16,
                            filter: []
                        },
                        scx: {
                            name: "scx",
                            position: 0,
                            class: "btn_sticker_soccer2",
                            key: "icon_sticker_soccer2_",
                            count: 17,
                            filter: []
                        },
                        bb: {
                            name: "bb",
                            position: 0,
                            class: "btn_sticker_baseball",
                            key: "icon_sticker_baseball_",
                            count: 23,
                            filter: []
                        },
                        bbx: {
                            name: "bbx",
                            position: 0,
                            class: "btn_sticker_baseball2",
                            key: "icon_sticker_baseball2_",
                            count: 13,
                            filter: []
                        },
                        bk: {
                            name: "bk",
                            position: 0,
                            class: "btn_sticker_basketball",
                            key: "icon_sticker_basketball_",
                            count: 24,
                            filter: []
                        },
                        mix: {
                            name: "mix",
                            position: 0,
                            class: "btn_sticker_mixSports",
                            key: "icon_sticker_mixSports_",
                            count: 26,
                            filter: []
                        },
                        dog: {
                            name: "dog",
                            position: 7,
                            class: "btn_sticker_browndog",
                            key: "icon_sticker_browndog_",
                            count: 19,
                            filter: []
                        },
                        man: {
                            name: "man",
                            position: 7,
                            class: "btn_sticker_boy",
                            key: "icon_sticker_boy_",
                            count: 16,
                            filter: []
                        },
                        manx: {
                            name: "manx",
                            position: 7,
                            class: "btn_sticker_oldman",
                            key: "icon_sticker_oldman_",
                            count: 16,
                            filter: []
                        },
                        dogx: {
                            name: "dogx",
                            position: 7,
                            class: "btn_sticker_dog",
                            key: "icon_sticker_dog_",
                            count: 26,
                            filter: []
                        },
                        newyear: {
                            name: "newyear",
                            position: 7,
                            class: "btn_sticker_newyear",
                            key: "icon_sticker_newyear_",
                            count: 12,
                            filter: []
                        },
                        xmas: {
                            name: "xmas",
                            position: 7,
                            class: "btn_sticker_xmas",
                            key: "icon_sticker_xmas_",
                            count: 24,
                            filter: []
                        },
                        lovingcat: {
                            name: "lovingcat",
                            position: 10,
                            class: "btn_sticker_lovingcat",
                            key: "icon_sticker_lovingcat_",
                            count: 16,
                            filter: []
                        },
                        lovingrabbit: {
                            name: "lovingrabbit",
                            position: 10,
                            class: "btn_sticker_lovingrabbit",
                            key: "icon_sticker_lovingrabbit_",
                            count: 12,
                            filter: []
                        },
                        halloween: {
                            name: "halloween",
                            position: 10,
                            class: "btn_sticker_halloween",
                            key: "icon_sticker_halloween_",
                            count: 16,
                            filter: []
                        },
                        water: {
                            name: "water",
                            position: 11,
                            class: "btn_sticker_water",
                            key: "icon_sticker_water_",
                            count: 28,
                            filter: []
                        }
                    }
                }
            },
            computed: {
                GetImgList: function() {
                    return Object.keys(this.list).slice(this.position, this.position + this.GetListMax)
                },
                GetContainClass: function() {
                    return "face" === this.select ? "FIB_emoji" : "FIB_sticker"
                },
                GetFaceIcons: function() {
                    for (var e = [], t = 1; t <= this.list[this.select].count; t++) {
                        var a = (t < 10 ? "0" : "") + t;
                        0 <= this.list[this.select].filter.indexOf(a) || e.push([this.list[this.select].key + a, this.list[this.select].name + a])
                    }
                    return e
                },
                GetListMax: function() {
                    return 0 === this.position ? 7 : 6
                }
            },
            methods: {
                SelectChangeClickEventHandler: function(e, t) {
                    this.select = e,
                    t && this.list[e] && 0 === $(this.$el).find("." + this.list[e].class + ":visible").length && (this.position = this.list[e].position)
                },
                AddFaceIcon: function(e) {
                    "face" === this.select ? this.$parent.$refs.chatBox.AddFaceIcon(e) : this.$emit("sendimg", e)
                },
                GetIconText: function(e) {
                    return langFont["Font_" + e]
                },
                ChangeImgList: function(e) {
                    (1 === e && this.position < Object.keys(this.list).length - this.GetListMax || -1 === e && 0 < this.position) && ((e = this.position + e * this.GetListMax) <= 1 ? e = 0 : e + this.GetListMax > Object.keys(this.list).length && (e = Object.keys(this.list).length - this.GetListMax),
                    this.position = e)
                }
            },
            watch: {
                select: function() {
                    this.$refs.scroll.scrollTo({
                        y: 0
                    }, 0)
                }
            }
        },
        showbox: {
            template: '<div class="showFormBox" :style="GetShowStyle"><div class="showFormBox_T"><div class="SFBT_nameT">' + langFont.Font_ShowReceipt + '：</div><div class="SFBT_nameIn">' + langFont.Font_ShowReceiptTips + '</div><div class="btn_showForm_send" :class="{on:selected.length!==0}" @click="SendClickEventHandler">' + langFont.Font_Send + '</div><div class="btn_closeSFB" @click="$emit(\'close\')"></div></div><div class="scroll-wrapper showFormBox_scroll scrollbar-macosx"><div class="CR_loading" style="display: block;" v-show="!status"></div><div class="SFBIn_prompt" v-show="status&&list.length===0">' + langFont.Font_NoShowReceipt + '</div><vue-scroll ref="scroll" :ops="ops"><div class="scroll-content"><receipt v-for="(receipt, idx) in GetReceiptList" :key="idx + receipt.wId" :detail="receipt" :class="{on:selected===receipt.wId}" @click.native="ReceiptClickEventHandler(receipt)"></receipt></div></vue-scroll></div></div>',
            data: function() {
                return {
                    ops: {
                        rail: {
                            size: "1px"
                        },
                        bar: {
                            background: "#666",
                            opacity: .2,
                            size: "3px"
                        }
                    },
                    selected: "",
                    msg: ""
                }
            },
            props: {
                show: {
                    type: Boolean,
                    default: !1
                },
                list: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                status: {
                    type: Boolean,
                    default: !1
                }
            },
            methods: {
                Clear: function() {
                    this.selected = "",
                    this.msg = ""
                },
                GetCanWin: function(e) {
                    if (e)
                        return Number.parseFloat(e).toFixed(2)
                },
                GetBenchmarkScore: function(e) {
                    return e = e || {},
                    Cart.RefScoreProcess(e.normA, e.normB, e.h)
                },
                GetOddText: function(e) {
                    return e = e || {},
                    Cart.GetCartBetInfo([e.kT, e.bT], [e.h, [e.ta], [e.tb]], [e.odds, e.line, e.lineAt], !1, !1)
                },
                ReceiptClickEventHandler: function(e) {
                    this.selected = e.wId,
                    this.msg = [e.gpId, e.sT, e.kT, e.bT, e.ballTitle, e.teamTitle, e.benchmarkScore, e.team, e.line, e.odds, e.amount, e.canWin, e.ot].join("|")
                },
                SendClickEventHandler: function() {
                    this.msg && (this.$emit("send", this.msg),
                    this.selected = "",
                    this.msg = "")
                }
            },
            computed: {
                GetReceiptList: function() {
                    return this.list.map(function(e) {
                        var t = 1 < e.mode ? Tool.TransformModeText(1, 2) : ""
                          , a = Tool.TransformGameType(e.gT, Args.WholeLang)
                          , i = t ? Cart.StrBind([a, t], {
                            en: "-",
                            th: "-"
                        }) : a
                          , n = Tool.TransformKTypeDetailInfo([e.kT, e.bT, e.h])
                          , r = Cart.ChkDisplayRefScore(Ball[e.gT].key, 1 < e.mode ? 2 : e.mode, n[3])
                          , s = Cart.GetCartBetInfo([e.kT, e.bT], [e.h, [e.ta], [e.tb]], [e.odds, e.line, e.lineAt], 0, !1)
                          , t = Cart.GetCartShowTeamName([e.h, [e.ta], [e.tb], Ball[e.gT].key], n)
                          , a = 1 == e.ot ? " - " + langFont.Font_OT : "";
                        return {
                            wId: e.wId,
                            gpId: e.gpId,
                            sT: e.sT,
                            kT: e.kT,
                            bT: e.bT,
                            ballTitle: i + a + "-[" + n[0] + "]",
                            benchmarkScore: r ? Cart.RefScoreProcess(e.normA, e.normB, e.h) : "",
                            teamTitle: t,
                            team: s[0],
                            line: s[1],
                            odds: s[2],
                            amount: e.amount,
                            canWin: Number.parseFloat(e.canWin).toFixed(2),
                            ot: e.ot
                        }
                    })
                },
                GetShowStyle: function() {
                    return this.show ? "display: block !important" : ""
                }
            },
            components: {
                receipt: {
                    template: '<div class="SFBIn_list"><div class="icon_SFBIn_checkbox"></div><ul class="SFBIn_listDeta"><li>{{detail.ballTitle}}</li><components :is="GetTeamComponents" :teamName="GetTeamName"></components><li class="SFBInLD_bet"><span class="t_red" v-if="detail.benchmarkScore">{{detail.benchmarkScore}}</span><div class="SFBInLD_betName"><span class="t_blue" v-text="detail.team"></span></div><div class="t_inlineBox"><span class="t_red" v-text="detail.line"></span> @ <span class="t_red" v-text="detail.odds"></span></div></li><li class="SFBInLD_w50">' + langFont.Font_CartBet + '：<b class="t_blue">{{detail.amount}}</b></li><li class="SFBInLD_w50">' + langFont.Font_CartCanWin + '：<b class="t_red">{{detail.canWin}}</b></li></ul></div>',
                    props: {
                        detail: {
                            type: Object,
                            default: function() {
                                return {}
                            }
                        }
                    },
                    computed: {
                        GetTeamName: function() {
                            return this.detail.teamTitle.split(" v ")
                        },
                        GetTeamComponents: function() {
                            return 1 === this.GetTeamName.length ? "singleTeamName" : "multiTeamName"
                        }
                    },
                    components: {
                        singleTeamName: {
                            template: '<li class="SFBInLD_teamName_only" v-html="teamName[0]"></li>',
                            props: {
                                teamName: {
                                    type: Array,
                                    default: []
                                }
                            }
                        },
                        multiTeamName: {
                            template: '<li class="SFBInLD_team"><div class="SFBInLD_teamName" v-html="teamName[0]"></div><div class="SFBInLD_teamV">v</div><div class="SFBInLD_teamName" v-html="teamName[1]"></div></li>',
                            props: {
                                teamName: {
                                    type: Array,
                                    default: []
                                }
                            }
                        }
                    }
                }
            }
        },
        quickbox: {
            template: '<div class="scroll-wrapper quickMsg_scroll scrollbar-macosx" :style="GetShowStyle"><vue-scroll ref="scroll" :ops="ops" ><ul><li v-for="(item, idx) in list" v-text="item.val" :key="idx" @click="QuickSendEventHandler(item)"></li></ul></vue-scroll></div>',
            data: function() {
                return {
                    ops: {
                        rail: {
                            size: "1px"
                        },
                        bar: {
                            background: "#666",
                            opacity: .2,
                            size: "3px"
                        }
                    }
                }
            },
            props: {
                show: {
                    type: Boolean,
                    default: !1
                },
                list: {
                    type: Array,
                    default: function() {
                        return []
                    }
                }
            },
            methods: {
                QuickSendEventHandler: function(e) {
                    this.$emit("send", e)
                }
            },
            computed: {
                GetShowStyle: function() {
                    return this.show ? "display: block !important" : ""
                }
            },
            watch: {
                show: function() {
                    this.show || this.$refs.scroll.scrollTo({
                        y: 0
                    }, 0)
                }
            }
        },
        giftmsgcanvas: GiftMsgCanvasComponent,
        giftbox: GiftBoxComponent,
        giftalert: GiftAlertComponent,
        announcement: {
            template: '<div class="chatAnnounce" v-html="getMsg"></div>',
            props: {
                isNotTalk: Boolean,
                hiddenShieldId: Array,
                chatType: Number,
                account: String,
                level: Number,
                nickname: String,
                msg: {
                    type: String,
                    default: ""
                },
                time: String
            },
            computed: {
                getMsg: function() {
                    return this.msg ? this.msg.replaceAll("\n", "<br />") : ""
                }
            }
        }
    },
    mounted: function() {
        Tool.IsTouch && ($("#innerChatRoom > div.chatroom_btm > ul > li:not(.btn_chatroom)").on("touchstart", function(e) {
            e.preventDefault()
        }).on("touchstart", ".CRB_keyIn_Box,.btn_faceIcon,.faceIconBox,.btn_CRB_submit", function(e) {
            e.stopPropagation()
        }),
        $(".CRB_keyIn, .CRB_btn").on("touchstart", function(e) {
            !this.IsNoTalk && this.CanUseChatRoom || e.preventDefault()
        }
        .bind(this)).on("touchend", function(e) {
            var t = (new Date).getTime();
            "" === e.target.classList.value || /^icon_face[0-9][0-9]$/g.test(e.target.classList.value) || !(t - this.lastTouchEnd <= 300 || this.IsNoTalk) && this.CanUseChatRoom || e.preventDefault(),
            this.lastTouchEnd = t
        }
        .bind(this)).on("gesturestart", function(e) {
            !this.IsNoTalk && this.CanUseChatRoom || e.preventDefault()
        }
        .bind(this)),
        window.addEventListener("orientationchange", this.ScreenRotationEventHandler)),
        this.$bus.$on("FaceIconShowEventHandler", this.FaceIconShowEventHandler),
        this.$bus.$on("GiftShowEventHandler", this.GiftShowEventHandler)
    },
    destroyed: function() {
        this.$bus.$off("FaceIconShowEventHandler", this.FaceIconShowEventHandler),
        this.$bus.$off("GiftShowEventHandler", this.GiftShowEventHandler)
    }
})
  , ExchangeComponent = {
    template: '<div :class="containClass" v-if="isShow"><div :class="msgClass" v-html="msgText" v-if="isSending || isStep3 || isNotExchange"></div><button :class="cancelClass" v-if="(isStep2 || isStep3) && !isSending && !isSuccess && !this.isNotExchange" @click="CancelClickEventHandler" v-text="cancelText"></button><button :class="confirmClass" v-if="(isStep1 || isStep2) && !isSending && !isSuccess && !this.isNotExchange" @click="ConfirmClickEventHandler"><font v-text="confirmText"></font><span v-text="exchangeCash"></span></button></div>',
    props: ["wid"],
    data: function() {
        return {
            isChange: !1
        }
    },
    methods: {
        CancelClickEventHandler: function() {
            this.isStep3 ? 0 <= this.$store.newest.excDelSet.indexOf(this.wid) ? (this.detail.position = Args.Step1,
            this.detail.isCountdown = !0,
            this.detail.timer = setTimeout(function() {
                ReceiptVue.DelExchange(this.wid)
            }
            .bind(this), 1e3)) : (this.detail.position = Args.Step2,
            this.isChange = !0) : (this.detail.position = Args.Step1,
            this.detail.excStatus = 0,
            this.isChange = !1)
        },
        ConfirmClickEventHandler: function() {
            var e, t;
            this.isChange = !1,
            this.isStep1 ? this.detail.position = Args.Step2 : this.isStep2 && this.detail && this.detail.coin && (this.detail.excStatus = 1,
            this.detail.position = Args.Step3,
            e = $.extend({}, this.detail),
            t = $.extend({}, this.receiptDetail),
            this.ExchangeProcess({
                wId: e.wId,
                gId: t.gId,
                kT: t.kT,
                sT: t.sT.replace(t.sId, ""),
                sId: t.sId,
                coin: e.coin,
                line: e.line,
                line2: e.line2,
                odds: e.odds,
                odds2: e.odds2,
                odds3: e.odds3,
                odds4: e.odds4
            }))
        },
        ExchangeProcess: function(e) {
            $.ajax({
                type: "POST",
                url: "/ajax/AjaxCart.aspx",
                data: {
                    method: "ExchangeReceipt",
                    exchange: JSON.stringify(e)
                },
                dataType: "json",
                error: function() {
                    ShowAlert(Args.Reload, langFont.Font_DataLoadFailed)
                },
                success: function(e) {
                    1 != LogOutCheck(e) && (2 == e.st ? ReceiptVue.ExchangeSuccessProcess(this.wid) : 3 == e.st && (this.detail.excStatus = e.st))
                }
                .bind(this)
            })
        }
    },
    computed: {
        isShow: function() {
            return 0 <= this.$store.newest.excSet.indexOf(this.wid)
        },
        containClass: function() {
            return this.isSending ? "BIL_cashLoad" : this.isSuccess ? "BIL_cashOk" : this.isNotExchange ? "" : "BIL_cashBox"
        },
        msgClass: function() {
            return this.isNotExchange ? "BIL_cashStop" : this.isSuccess || this.isSending || !this.isStep3 ? "" : "BIL_cashNo"
        },
        msgText: function() {
            return this.isSending ? langFont.Font_ExchangeWait : this.isSuccess ? langFont.Font_ExchangeSuccess + "<span>" + this.exchangeCash + "</span>" : this.isNotExchange ? langFont.Font_NotExchange : langFont.Font_ExchangeFail
        },
        confirmClass: function() {
            return this.isChange ? "btn_BIL_cashChange" : this.isStep2 ? "btn_BIL_cashConfirm" : "btn_BIL_cash"
        },
        confirmText: function() {
            return this.isChange ? langFont.Font_ExchangeChange : this.isStep2 ? langFont.Font_ConfirmOK : langFont.Font_ExchangeCash
        },
        cancelClass: function() {
            return this.isStep2 ? "btn_BIL_cashCancel" : "btn_BIL_cashBack"
        },
        cancelText: function() {
            return this.isStep2 ? langFont.Font_Cancel : langFont.Font_Return
        },
        isStep1: function() {
            return this.detail.position === Args.Step1
        },
        isStep2: function() {
            return this.detail.position === Args.Step2
        },
        isStep3: function() {
            return this.detail.position === Args.Step3
        },
        isSending: function() {
            return 1 == this.detail.excStatus
        },
        isSuccess: function() {
            return 2 == this.detail.excStatus
        },
        isFail: function() {
            return 3 == this.detail.excStatus
        },
        exchangeCash: function() {
            var e = "0.0";
            return this.detail && this.detail.coin && (e = this.isStep3 && this.isSuccess && !isNaN(parseFloat(this.receipt.win)) && !isNaN(parseFloat(this.receipt.amount)) ? (this.receipt.amount + this.receipt.win).toFixed(2) : Tool.TransformMathFloor(this.detail.coin, 2)),
            e
        },
        detail: function() {
            return this.$store.newest.exchangeInfo[this.wid] || {}
        },
        receipt: function() {
            return this.$store.newest.receiptInfo[this.wid] || {}
        },
        receiptDetail: function() {
            return this.receipt.detail ? this.receipt.detail[this.receipt.detailIndex[0]] : {}
        },
        isNotExchange: function() {
            return this.detail.position == Args.Step1 && this.isFail
        }
    },
    watch: {
        exchangeCash: function() {
            this.isStep2 && (this.isChange = !0)
        }
    }
}
  , SingleReceiptTemplate = {
    template: '<div class="betInfo_List"><div class="BIL_T"><div class="BIL_T_text"><span class="t_red" v-text="GetChildDetail.normal"></span><span class="t_blue" v-text="GetChildDetail.oddText[0]"></span> <div class="t_inlineBox"><span class="t_red" v-text="GetChildDetail.oddText[1]"></span> @ <span class="t_red" v-text="GetChildDetail.odds"></span></div></div></div><div class="BIL_In"><ul class="BIL_InText"><li v-text="GetChildDetail.ballTitle"></li><li v-text="GetChildDetail.al"></li><li :class="{ btn_link: !GetChildDetail.isAllySuffix}" @click.stop="GoToMore"><span class="BIL_name" v-html="GetChildDetail.team"></span></li><slot></slot></ul><ul class="BIL_inputShow" v-if="!pta"><li>' + langFont.Font_CartBet + '：<strong v-text="GetAmount"></strong></li><li>' + langFont.Font_ORCanWin + '：<strong v-text="GetCanWin"></strong></li></ul><component :is="GetStatusComp" :status="GetChildDetail.status" :invalid="GetChildDetail.invalid" :remark="GetChildDetail.remark" :time="GetChildDetail.excTime" /><exchange :wid="wid"></exchange></div></div>',
    props: ["wid", "gpid", "pta"],
    methods: {
        GoToMore: function() {
            this.GetChildDetail.isAllySuffix || DataAdapter.SendCommand({
                action: "gotoMore",
                gpId: this.GetChildDetail.gpId
            })
        }
    },
    computed: {
        GetStatusComp: function() {
            var e = "";
            return this.GetChildDetail.invalid && this.GetChildDetail.remark || 211 == this.GetChildDetail.invalid ? e = "error" : this.GetChildDetail.invalid || 254 == this.GetChildDetail.status || -1 == this.GetChildDetail.status ? e = "sample" : 255 == this.GetChildDetail.status && (e = "wait"),
            e
        },
        GetDetail: function() {
            return this.$store.newest.receiptInfo[this.wid] || {}
        },
        GetChildDetail: function() {
            return this.GetDetail.detail && this.GetDetail.detail[this.gpid] ? this.GetDetail.detail[this.gpid] : {}
        },
        GetAmount: function() {
            return this.GetDetail.amount || 0
        },
        GetCanWin: function() {
            var e = 0;
            return void 0 !== this.GetDetail.canWin && void 0 !== this.GetDetail.amount && (e = (Number.parseFloat(this.GetDetail.canWin) + this.GetAmount).toFixed(2)),
            e
        }
    },
    components: {
        exchange: ExchangeComponent,
        sample: {
            template: '<div :class="GetStatusClass" v-text="GetStatusText"></div>',
            props: ["status", "invalid", "remark"],
            computed: {
                GetStatusText: function() {
                    var e = "";
                    switch (parseInt(this.status)) {
                    case 254:
                        e = Tool.TransformInvalid(parseInt(this.invalid)) || langFont.Font_CartConfirmed;
                        break;
                    case 4:
                    case 1:
                    case 0:
                        e = Tool.TransformInvalid(parseInt(this.invalid));
                        break;
                    case -1:
                        e = langFont.Font_CartBetSettled
                    }
                    return e
                },
                GetStatusClass: function() {
                    var e = "";
                    switch (parseInt(this.status)) {
                    case 254:
                    case -1:
                        e = Tool.TransformInvalid(parseInt(this.invalid)) ? "icon_BIL_no" : "icon_BIL_ok";
                        break;
                    case 4:
                    case 1:
                    case 0:
                        e = "icon_BIL_no"
                    }
                    return e
                }
            }
        },
        wait: {
            template: '<div class="btn_BIL_wait"><div class="BIL_waitT">' + langFont.Font_CartWaiting + '</div><div class="BIL_waitIn"><div class="BIL_waitInBox">' + langFont.Font_CartBetIsBeingProcessed + "</div></div></div>",
            mounted: function() {
                $(this.$el).hoverDelay(function() {
                    $(this).find(".BIL_waitIn").show(),
                    $(this).find(".BIL_waitInBox").slideDown(150)
                }, function() {
                    $(this).find(".BIL_waitIn").fadeOut(150),
                    $(this).find(".BIL_waitInBox").slideUp(150)
                })
            }
        },
        error: {
            template: '<div :class="GetClassArray[0]"><div :class="GetClassArray[1]" v-text="GetStatusText"></div><div :class="GetClassArray[2]"><div :class="GetClassArray[3]" v-text="GetRemark"></div></div></div>',
            props: ["status", "invalid", "remark", "time"],
            computed: {
                GetStatusText: function() {
                    return Tool.TransformInvalid(parseInt(this.invalid))
                },
                GetClassArray: function() {
                    return 210 == this.invalid ? ["btn_BIL_i", "BIL_i_T", "BIL_i_In", "BIL_i_InBox"] : 211 == this.invalid ? ["btn_BIL_iG", "BIL_iG_T", "BIL_iG_In", "BIL_iG_InBox"] : ["btn_BIL_iR", "BIL_iR_T", "BIL_iR_In", "BIL_iR_InBox"]
                },
                GetRemark: function() {
                    var e = this.time ? Tool.TransformDateTime(this.time, langFont.Font_Langue, 30) : ""
                      , t = this.remark || "";
                    return e + (t = "" !== e && "" !== t ? " - " + t : t)
                }
            },
            mounted: function() {
                $(this.$el).hoverDelay(function() {
                    $(this).find(".BIL_iR_In, .BIL_i_In, .BIL_iG_In").show(),
                    $(this).find(".BIL_iR_InBox, .BIL_i_InBox, .BIL_iG_InBox").slideDown(150)
                }, function() {
                    $(this).find(".BIL_iR_In, .BIL_i_In, .BIL_iG_In").fadeOut(150),
                    $(this).find(".BIL_iR_InBox, .BIL_i_InBox, .BIL_iG_InBox").slideUp(150)
                })
            }
        }
    }
}
  , MultiReceiptTemplate = {
    template: '<div class="NB_Complex" :class={on:open} @click.stop="MultiClickEventHandler"><div class="NB_Complex_T"><div class="NBC_list">' + langFont.Font_CartPass + ' <span class="t_blue" v-text="GetDetail.ptaText"></span> <sample :if="GetDetail.fs || GetDetail.status == 4" :text="GetStatusText"/></div><div class="NBC_list"><span>(' + langFont.Font_CartEveryGroup + "{{GetAmount}}" + langFont.Font_CartDollar + " x {{GetDetail.pta[2]}}" + langFont.Font_CartGroup + ') = <strong v-text="GetDetail.amount"></strong></span></div></div><transition name="slide"><div class="NB_Complex_In" style="display:block;" v-show="open"><single v-for="(item, idx) in GetDetail.detailIndex" :wid="wid" :gpid="item" :key="item+idx" pta="true"><li v-if="GetGameResult(item)">' + langFont.Font_ORGameResult + '：<span class="t_green" v-text="GetGameResult(item)"></span></li></single></div></transition></div>',
    data: function() {
        return {
            open: !1
        }
    },
    props: ["wid"],
    methods: {
        MultiClickEventHandler: function() {
            this.open = !this.open
        },
        GetGameResult: function(e) {
            var t = this.GetDetail.detail[e]
              , e = "";
            return t && (e = this.$order.GetGameResult(t.grValue[0], [t.ra, t.rb], t.grValue[1], t.grValue[2], t.result, t.grValue[3], t.grValue[4])),
            e
        }
    },
    computed: {
        GetStatusText: function() {
            var e = "";
            return this.GetDetail.fs ? e = langFont.Font_ORFallingStar : 4 == this.GetDetail.status && (e = Tool.TransformInvalid(1)),
            e
        },
        GetAmount: function() {
            var e = this.GetDetail.amount;
            return this.GetDetail.pta[2] && (e /= this.GetDetail.pta[2]),
            e
        },
        GetDetail: function() {
            return this.$store.newest.receiptInfo[this.wid] || {}
        }
    },
    components: {
        single: SingleReceiptTemplate,
        sample: {
            template: '<span class="t_red">{{text}}</span>',
            props: {
                text: {
                    type: String,
                    default: ""
                }
            }
        }
    }
}
  , ReceiptVue = new Vue({
    el: "#receiptInfo",
    data: {
        ops: {
            rail: {
                size: "1px"
            },
            bar: {
                background: "#666",
                opacity: .2,
                size: "3px"
            }
        },
        type: Args.Unsettlement,
        pageLoad: 20,
        pageSize: 20
    },
    computed: {
        IsUnsettlement: function() {
            return this.type === Args.Unsettlement
        },
        IsExchange: function() {
            return this.type === Args.Exchange
        },
        ReceiptIdxList: function() {
            return this.$store.newest.receiptIndex
        },
        ReceiptList: function() {
            return this.ReceiptIdxList.filter(function(e) {
                return this.IsUnsettlement || this.IsExchange && 0 <= this.$store.newest.excSet.indexOf(e)
            }
            .bind(this))
        },
        GetNoneExchangeStyle: function() {
            return this.IsExchange && 0 == this.$store.newest.excSet.length ? "display:flex" : "display:none"
        }
    },
    methods: {
        TypeSwitchChange: function(e) {
            this.type = e,
            this.$nextTick(function() {
                this.$refs.scroll.scrollPanelElm.scrollTop = 0
            })
        },
        ProcessReceipt: function(e) {
            e.order && (e = this.InitialReceiptData(e.order, !1),
            this.$store.newest.receiptIndex = e.sort(function(e, t) {
                var a = this.$store.newest.receiptInfo[e].pta || [0, 0, 0]
                  , i = this.$store.newest.receiptInfo[t].pta || [0, 0, 0]
                  , n = this.$store.newest.receiptInfo[e].wId.substr(this.$store.newest.receiptInfo[e].wId.length - 1)
                  , r = this.$store.newest.receiptInfo[t].wId.substr(this.$store.newest.receiptInfo[t].wId.length - 1);
                return this.$store.newest.receiptInfo[t].wd !== this.$store.newest.receiptInfo[e].wd ? this.$store.newest.receiptInfo[t].wd > this.$store.newest.receiptInfo[e].wd ? 1 : -1 : i[0] !== a[0] ? a[0] - i[0] : i[1] !== a[1] ? a[1] - i[1] : n < r ? 1 : -1
            }
            .bind(this))),
            this.ChkExchangeInfo()
        },
        AddReceipt: function(e) {
            e.order && (e = this.InitialReceiptData(e.order, !0),
            this.$store.newest.receiptIndex = this.$store.newest.receiptIndex.concat(e).sort(function(e, t) {
                var a = this.$store.newest.receiptInfo[e].pta || [0, 0, 0]
                  , i = this.$store.newest.receiptInfo[t].pta || [0, 0, 0]
                  , n = this.$store.newest.receiptInfo[e].wId.substr(this.$store.newest.receiptInfo[e].wId.length - 1)
                  , r = this.$store.newest.receiptInfo[t].wId.substr(this.$store.newest.receiptInfo[t].wId.length - 1);
                return this.$store.newest.receiptInfo[t].wd !== this.$store.newest.receiptInfo[e].wd ? this.$store.newest.receiptInfo[t].wd > this.$store.newest.receiptInfo[e].wd ? 1 : -1 : i[0] !== a[0] ? a[0] - i[0] : i[1] !== a[1] ? a[1] - i[1] : n < r ? 1 : -1
            }
            .bind(this)))
        },
        InitialReceiptData: function(e, t) {
            for (var a = [], i = 0; i < e.length; i++) {
                for (var n = e[i].wId, r = e[i].detail, s = {}, o = e[i], l = this.$store.newest.exchangeInfo[n], s = {
                    wId: o.wId,
                    wd: o.wd,
                    amount: o.amount,
                    canWin: o.canWin,
                    reward: o.reward,
                    win: o.win,
                    isP: o.isP,
                    fs: o.fs,
                    pta: o.pta,
                    ptaText: o.pta ? ParlaysText(o.pta[0], o.pta[1]) + " x " + o.pta[2] + langFont.Font_CartStringGroup : "",
                    invalid: o.invalid,
                    status: o.status,
                    excStatus: o.excStatus,
                    detailIndex: [],
                    detail: {}
                }, c = 0; c < r.length; c++) {
                    for (var d = r[c], u = ["ta", "tb"], h = 0; h < u.length; h++) {
                        var p = u[h];
                        Array.isArray(d[p]) && (d[p] = d[p].join(" / "))
                    }
                    for (var m = d.gpId, g = Tool.TransformKTypeDetailInfo([d.kT, d.bT, d.h]), f = this.$order.GetOrderInfo(d.kT, d.bT, d.h, [d.ta, d.tb], d.line, d.lineAt, g), v = Cart.ChkDisplayRefScore(Ball[d.gT].key, 1 < d.mode ? 2 : d.mode, g[3]) ? Cart.RefScoreProcess(d.normA, d.normB, d.h) : "", _ = " - [" + g[0] + "]", h = 0; h < langFont.Font_AllySuffix.length; h++)
                        if (0 <= d.al.indexOf(langFont.Font_AllySuffix[h])) {
                            _ = "";
                            break
                        }
                    s.detail[m] = {
                        gpId: m,
                        gId: d.gId,
                        ballTitle: Tool.TransformGameType(d.gT, Args.WholeLang) + (1 < d.mode ? langFont.Font_ORBar + Tool.TransformModeText(1, 2) : "") + _,
                        al: d.al + (1 == d.ot ? " - " + langFont.Font_OT : ""),
                        isAllySuffix: !_,
                        team: Cart.GetCartShowTeamName([d.h, [d.ta], [d.tb], Ball[d.gT].key], g),
                        normal: v,
                        oddText: f,
                        odds: 0 == o.isP ? Tool.TransformPointer(d.kT, d.odds)[0] : Tool.TransformPointer(d.kT, d.odds)[1],
                        kT: d.kT,
                        sT: d.sT,
                        bT: d.bT,
                        sId: d.sId,
                        status: d.status,
                        ra: d.ra,
                        rb: d.rb,
                        invalid: d.invalid,
                        remark: d.remark,
                        result: d.result,
                        grValue: [g[5], [d.ta, d.tb], d.h, g[4], d.gT],
                        excTime: d.excTime
                    },
                    s.detailIndex.push(m),
                    MainProperty.cart.loc.step === Args.Step3 && MainProperty.cart.loc.type !== Args.Fast && (m = o.pta ? Args.Multi : Args.Single,
                    CartBase.ProcessWagerStatusDisplay(m, {
                        wId: n,
                        commId: d.gpId + d.sT + d.kT + d.bT,
                        status: d.status,
                        invalid: d.invalid,
                        remark: d.remark,
                        time: d.excTime
                    })),
                    1 != r.length || l || 1 != o.excStatus || (this.$set(this.$store.newest.exchangeInfo, n, {
                        wId: n,
                        coin: 0,
                        line: 0,
                        line2: 0,
                        odds: 0,
                        odds2: 0,
                        odds3: 0,
                        odds4: 0,
                        position: Args.Step3,
                        timer: null,
                        excStatus: 1,
                        isCountdown: !1,
                        seconds: 3
                    }),
                    this.$store.newest.excSet.indexOf(o.wId) < 0 && this.$store.newest.excSet.push(o.wId))
                }
                this.$set(this.$store.newest.receiptInfo, o.wId, s),
                t ? (this.$store.newest.receiptIndex.indexOf(n) < 0 && a.push(n),
                this.CheckRemoveDelSet(n, !0)) : a.push(n)
            }
            return a
        },
        UpdateReceipt: function(e) {
            var t, a, i = e.wId;
            if (i && this.$store.newest.receiptInfo[i]) {
                for (var n in e)
                    switch (n) {
                    case "win":
                    case "amount":
                    case "canWin":
                    case "reward":
                    case "fs":
                    case "invalid":
                    case "status":
                        this.$store.newest.receiptInfo[i][n] = e[n];
                        break;
                    case "detail":
                        for (var r = 0; r < e.detail.length; r++) {
                            var s, o = (s = e.detail[r]).gpId;
                            if (this.$store.newest.receiptInfo[i].detail[o])
                                for (var l in s)
                                    switch (l) {
                                    case "ra":
                                    case "rb":
                                    case "invalid":
                                    case "status":
                                    case "remark":
                                    case "result":
                                    case "excTime":
                                        this.$store.newest.receiptInfo[i].detail[o][l] = s[l]
                                    }
                            var c, d = this.$store.newest.receiptInfo[i].detail[o];
                            MainProperty.cart.loc.step === Args.Step3 && MainProperty.cart.loc.type !== Args.Fast && (c = this.$store.newest.receiptInfo[i].pta ? Args.Multi : Args.Single,
                            CartBase.ProcessWagerStatusDisplay(c, {
                                wId: i,
                                commId: d.gpId + d.sT + d.kT + d.bT,
                                status: d.status,
                                invalid: d.invalid,
                                remark: d.remark,
                                time: d.excTime
                            }))
                        }
                        break;
                    case "excStatus":
                        if (s = this.$store.newest.exchangeInfo[i])
                            switch (e.excStatus) {
                            case 1:
                                1 != s.excStatus && (s.position = Args.Step3,
                                s.excStatus = 1);
                                break;
                            case 2:
                                this.ExchangeSuccessProcess(i);
                                break;
                            case 3:
                                3 != s.excStatus && s.position == Args.Step3 && (s.excStatus = 3)
                            }
                    }
                2 == e.excStatus && (t = this.$store.newest.exchangeInfo[i],
                (a = this.$store.newest.receiptInfo[i]) && t && 0 == t.coin && (t.coin = a.amount + e.win))
            }
        },
        DelReceipt: function(e) {
            if (e.wId)
                for (var t = 0; t < e.wId.length; t++) {
                    var a = e.wId[t];
                    if (0 <= this.$store.newest.excDelSet.indexOf(a))
                        this.$store.newest.excDelCache.indexOf(a) < 0 && this.$store.newest.excDelCache.push(a);
                    else {
                        if (this.$store.newest.receiptIndex.remove(a),
                        MainProperty.cart.loc.step === Args.Step3 && MainProperty.cart.loc.type !== Args.Fast)
                            for (var i = 0; this.$store.newest.receiptInfo[a] && i < this.$store.newest.receiptInfo[a].detailIndex.length; i++) {
                                var n = this.$store.newest.receiptInfo[a].detailIndex[i]
                                  , r = this.$store.newest.receiptInfo[a].detail[n]
                                  , n = this.$store.newest.receiptInfo[a].pta ? Args.Multi : Args.Single;
                                CartBase.ProcessWagerStatusDisplay(n, {
                                    wId: a,
                                    commId: r.gpId + r.sT + r.kT + r.bT,
                                    status: -1,
                                    invalid: r.invalid,
                                    remark: r.remark,
                                    time: r.excTime
                                })
                            }
                        this.$delete(this.$store.newest.receiptInfo, a),
                        0 <= this.$store.newest.excSet.indexOf(a) && this.$store.newest.exchangeInfo[a] && this.ExchangeRemove(a)
                    }
                }
        },
        SwitchComp: function(e, t) {
            return this.$store.newest.receiptInfo[e] && t < this.pageSize ? this.$store.newest.receiptInfo[e].pta ? "multiwager" : "singlewager" : ""
        },
        ScrollLoadEventHandler: function(e) {
            this.$nextTick(function() {
                (this.$refs.scroll.scrollPanelElm.scrollHeight - this.$refs.scroll.scrollPanelElm.clientHeight) / 2 <= e.scrollTop && this.$store.newest.receiptIndex.length > this.pageSize ? this.pageSize += this.pageLoad : 0 == e.scrollTop && (this.pageSize = this.pageLoad)
            })
        },
        AddExchange: function(e) {
            for (var t = e.map(function(e) {
                return e[0]
            }), a = [].concat(this.$store.newest.excSet), i = 0; i < a.length; i++)
                t.indexOf(a[i]) < 0 && this.$store.newest.excDelSet.indexOf(a[i]) < 0 && this.$store.newest.exchangeInfo[a[i]] && (this.$store.newest.exchangeInfo[a[i]].position == Args.Step3 ? this.$store.newest.excDelSet.push(a[i]) : this.ExchangeRemove(a[i]));
            this.UpdateExchange(e)
        },
        UpdateExchange: function(e) {
            for (var t = 0; Array.isArray(e) && t < e.length; t++) {
                var a, i, n, r, s, o, l, c, d = e[t][0], u = this.$store.newest.exchangeInfo[d];
                1 !== e[t].length ? (a = e[t][1],
                i = e[t][2],
                n = e[t][3],
                r = e[t][4],
                s = e[t][5],
                o = e[t][6],
                l = e[t][7],
                c = this.$store.newest.receiptInfo[d] ? this.$store.newest.receiptInfo[d].excStatus : 0,
                u ? (u.coin = a,
                u.line = i,
                u.line2 = n,
                u.odds = r,
                u.odds2 = s,
                u.odds3 = o,
                u.odds4 = l) : this.$set(this.$store.newest.exchangeInfo, d, {
                    wId: d,
                    coin: a,
                    line: i,
                    line2: n,
                    odds: r,
                    odds2: s,
                    odds3: o,
                    odds4: l,
                    position: 1 == c ? Args.Step3 : Args.Step1,
                    excStatus: c || 0,
                    timer: null,
                    isCountdown: !1,
                    seconds: 3
                }),
                this.$store.newest.excSet.indexOf(d) < 0 && this.$store.newest.excSet.push(d),
                this.CheckRemoveDelSet(d, !1)) : this.$store.newest.excDelSet.indexOf(d) < 0 && u && (this.$store.newest.exchangeInfo[d].position == Args.Step3 ? this.$store.newest.excDelSet.push(d) : this.ExchangeRemove(d))
            }
        },
        ChkExchangeInfo: function() {
            for (var e = [].concat(this.$store.newest.excSet), t = 0; t < e.length; t++) {
                var a = e[t]
                  , i = this.$store.newest.exchangeInfo[a]
                  , n = this.$store.newest.receiptInfo[a];
                i && (this.$store.newest.receiptIndex.indexOf(a) < 0 ? this.ExchangeRemove(a) : 0 == n.excStatus && 1 == i.excStatus && (i.excStatus = 3,
                i.position = Args.Step3))
            }
        },
        ExchangeRemove: function(e) {
            var t = this.$store.newest.exchangeInfo[e];
            this.$store.newest.excSet.remove(e),
            this.$store.newest.excDelSet.remove(e),
            window.clearTimeout(t.timer),
            delete this.$store.newest.exchangeInfo[e],
            0 <= this.$store.newest.excDelCache.indexOf(e) && (this.$store.newest.excDelCache.remove(e),
            this.DelReceipt({
                wId: [e]
            }))
        },
        ExchangeSuccessProcess: function(e) {
            var t = this.$store.newest.exchangeInfo[e];
            2 != t.excStatus && t.position == Args.Step3 && (t.excStatus = 2,
            this.$store.newest.excDelSet.indexOf(e) < 0 && this.$store.newest.excDelSet.push(e),
            t.isCountdown = !0,
            t.timer = setTimeout(function() {
                this.DelExchange(e)
            }
            .bind(this), 1e3))
        },
        DelExchange: function(e) {
            var t = this.$store.newest.exchangeInfo[e];
            t && (t.seconds - 1 < 0 ? (window.clearTimeout(t.timer),
            0 <= this.$store.newest.excDelSet.indexOf(e) ? this.ExchangeRemove(e) : (t.position = Args.Step1,
            t.excStatus = 0,
            t.seconds = 3,
            t.isCountdown = !1)) : (t.seconds = t.seconds - 1,
            t.timer = setTimeout(function() {
                this.DelExchange(e)
            }
            .bind(this), 1e3)))
        },
        CheckRemoveDelSet: function(e, t) {
            var a;
            0 <= this.$store.newest.excDelSet.indexOf(e) && ((a = this.$store.newest.exchangeInfo[e]).position == Args.Step1 && a.isCountdown || a.position == Args.Step3 && 3 == a.excStatus ? this.$store.newest.excDelSet.remove(e) : a.position == Args.Step3 && 2 == a.excStatus && t && (this.$store.newest.excDelSet.remove(e),
            this.$store.newest.excDelCache.remove(e),
            window.clearTimeout(a.timer),
            a.position = Args.Step1,
            a.excStatus = 0,
            a.seconds = 3,
            a.isCountdown = !1))
        }
    },
    components: {
        singlewager: SingleReceiptTemplate,
        multiwager: MultiReceiptTemplate
    },
    watch: {
        ReceiptIdxList: function() {
            $("#receiptTotalNum").text(this.ReceiptIdxList.length),
            0 == this.ReceiptIdxList.length && 0 < $("#receiptInfo:visible").length ? $("#noReceipt").show() : $("#noReceipt").hide()
        }
    }
})
  , PanelBase = {
    Initial: function(e) {
        if (e) {
            var t, a, i;
            if (MainProperty.panelData.game.aId = e.game.aId || "",
            MainProperty.panelData.game.ta = Array.isArray(e.game.ta) ? e.game.ta : [],
            MainProperty.panelData.game.tb = Array.isArray(e.game.tb) ? e.game.tb : [],
            MainProperty.panelData.game.sta = e.game.sta || "",
            MainProperty.panelData.game.stb = e.game.stb || "",
            MainProperty.panelData.game.pa = e.game.pa ? "-" + e.game.pa : "",
            MainProperty.panelData.game.pb = e.game.pb ? "-" + e.game.pb : "",
            MainProperty.panelData.game.h = e.game.h,
            MainProperty.panelData.game.type = Tool.TransformGameType(e.game.aId, Args.ShortEn),
            MainProperty.panelData.game.mode = 1 < parseInt(e.gId.substr(2, 1)) ? 2 : 1,
            MainProperty.gameData[e.gId] && (MainProperty.panelData.game.gpid = MainProperty.gameData[e.gId].gpid),
            e.board && Array.isArray(e.board) && (t = MainProperty.panelData.game.type,
            i = (i = (a = MainProperty.panelData.game.aId).replace("A", "")).replace("B", ""),
            MainProperty.panelData.scoreBoard.rt = Tool.TransformRunTime(t, e.board[0]),
            MainProperty.panelData.scoreBoard.st = isNaN(parseInt(e.board[1], 10)) ? 256 : parseInt(e.board[1], 10),
            MainProperty.panelData.scoreBoard.runsA = PanelBase.SpliceRuns(t, Tool.TransformRuns(t, e.board[2], i, !1), a),
            MainProperty.panelData.scoreBoard.runsB = PanelBase.SpliceRuns(t, Tool.TransformRuns(t, e.board[3], i, !1), a),
            MainProperty.panelData.scoreBoard.rga = PanelBase.TransformRg(t, e.board[4]),
            MainProperty.panelData.scoreBoard.rgb = PanelBase.TransformRg(t, e.board[5]),
            MainProperty.panelData.scoreBoard.pr = isNaN(parseInt(e.board[6], 10)) ? 0 : parseInt(e.board[6], 10),
            MainProperty.panelData.scoreBoard.base = isNaN(parseInt(e.board[7], 10)) ? -1 : parseInt(e.board[7], 10),
            MainProperty.panelData.scoreBoard.o = isNaN(parseInt(e.board[8], 10)) ? -1 : parseInt(e.board[8], 10),
            MainProperty.panelData.scoreBoard.ht = e.board[9] || ""),
            MainProperty.panelData.RDAnimate = 0 <= [0, 1, 2].indexOf(e.rAnimate) ? e.rAnimate : 0,
            null !== e.live && Panel.HasLoadingCompleteVideoElement() ? (MainProperty.panelData.gameLive.domain = Array.isArray(e.live.domain) ? e.live.domain : [],
            MainProperty.panelData.gameLive.route = e.live.route || "",
            MainProperty.panelData.gameLive.rSteamId = e.live.rSteamId || "") : (MainProperty.panelData.gameLive.domain = [],
            MainProperty.panelData.gameLive.route = "",
            MainProperty.panelData.gameLive.rSteamId = ""),
            e.girlLive && null !== e.girlLive && Panel.HasLoadingCompleteVideoElement() ? (MainProperty.panelData.girlLive.domain = Array.isArray(e.girlLive.domain) ? e.girlLive.domain : [],
            MainProperty.panelData.girlLive.anchor = Array.isArray(e.girlLive.anchor) ? e.girlLive.anchor : []) : (MainProperty.panelData.girlLive.domain = [],
            MainProperty.panelData.girlLive.anchor = []),
            e.gift) {
                for (var n = 0; e.gift.item && n < e.gift.item.length; n++) {
                    var r = e.gift.item[n];
                    ChatVue.$set(ChatVue.$store.gift.gift, r[0], {
                        id: r[0],
                        name: r[1],
                        num: r[2],
                        preview: "gift/" + r[0] + ".png",
                        tip: ""
                    })
                }
                ChatVue.$store.gift.giftIndex = e.gift.index || []
            }
            MainProperty.panelData.mId = e.mId || "",
            Array.isArray(e.panelTitle) ? (MainProperty.panelData.panelTitle = e.panelTitle.map(function(e) {
                return Tool.TransformPanelId(e, Args.ShortNum)
            }),
            PanelBase.CheckTitle()) : MainProperty.panelData.panelTitle = []
        }
    },
    UpdateCache: function(e) {
        if (e.game)
            for (var t in e.game)
                switch (t) {
                case "aId":
                case "sta":
                case "stb":
                    MainProperty.panelData.game[t] = e.game[t] || "";
                    break;
                case "ta":
                case "tb":
                    MainProperty.panelData.game[t] = Array.isArray(e.game[t]) ? e.game[t] : [];
                    break;
                case "pa":
                case "pb":
                    MainProperty.panelData.game[t] = e.game[t] ? "-" + e.game[t] : "";
                    break;
                case "h":
                    MainProperty.panelData.game[t] = parseInt(e.game[t]) ? parseInt(e.game[t]) : 0;
                    break;
                default:
                    MainProperty.panelData.game[t] = null === e.game[t] ? [] : e.game[t]
                }
        if (e.board)
            for (var t in e.board)
                switch (t) {
                case "rt":
                    MainProperty.panelData.scoreBoard[t] = Tool.TransformRunTime(MainProperty.panelData.game.type, e.board[t]);
                    break;
                case "st":
                    MainProperty.panelData.scoreBoard[t] = isNaN(parseInt(e.board[t], 10)) ? 256 : parseInt(e.board[t], 10);
                    break;
                case "runsA":
                case "runsB":
                    var a = MainProperty.panelData.game.type
                      , i = MainProperty.panelData.game.aId
                      , n = (n = i.replace("A", "")).replace("B", "");
                    MainProperty.panelData.scoreBoard[t] = PanelBase.SpliceRuns(a, Tool.TransformRuns(a, e.board[t], n, !1), i);
                    break;
                case "rga":
                case "rgb":
                    MainProperty.panelData.scoreBoard[t] = PanelBase.TransformRg(MainProperty.panelData.game.type, e.board[t]);
                    break;
                case "pr":
                    MainProperty.panelData.scoreBoard[t] = isNaN(parseInt(e.board[t], 10)) ? 0 : parseInt(e.board[t], 10);
                    break;
                case "base":
                case "o":
                    MainProperty.panelData.scoreBoard[t] = isNaN(parseInt(e.board[t], 10)) ? -1 : parseInt(e.board[t], 10);
                    break;
                default:
                    MainProperty.panelData.scoreBoard[t] = null === e.board[t] ? [] : e.board[t]
                }
        else
            null === e.board && (MainProperty.panelData.scoreBoard.rt = null,
            MainProperty.panelData.scoreBoard.st = 256,
            MainProperty.panelData.scoreBoard.runsA = [],
            MainProperty.panelData.scoreBoard.runsB = [],
            MainProperty.panelData.scoreBoard.rga = [],
            MainProperty.panelData.scoreBoard.rgb = [],
            MainProperty.panelData.scoreBoard.pr = null,
            MainProperty.panelData.scoreBoard.base = -1,
            MainProperty.panelData.scoreBoard.o = -1,
            MainProperty.panelData.scoreBoard.ht = "");
        if (0 <= [0, 1, 2].indexOf(e.rAnimate) && (MainProperty.panelData.RDAnimate = e.rAnimate),
        !PanelBase.IsPopAndInnerSameLive(Args.GameLive))
            if (e.live && Panel.HasLoadingCompleteVideoElement())
                for (var t in e.live)
                    switch (t) {
                    case "domain":
                        MainProperty.panelData.gameLive[t] = Array.isArray(e.live[t]) ? e.live[t] : [];
                        break;
                    case "route":
                    case "rSteamId":
                        MainProperty.panelData.gameLive[t] = e.live[t] || ""
                    }
            else
                null !== e.live && Panel.HasLoadingCompleteVideoElement() || (MainProperty.panelData.gameLive.domain = [],
                MainProperty.panelData.gameLive.route = "",
                MainProperty.panelData.gameLive.rSteamId = "");
        if (!PanelBase.IsPopAndInnerSameLive(Args.Anchor))
            if (e.girlLive && Panel.HasLoadingCompleteVideoElement())
                for (var t in e.girlLive)
                    switch (t) {
                    case "domain":
                    case "anchor":
                        MainProperty.panelData.girlLive[t] = Array.isArray(e.girlLive[t]) ? e.girlLive[t] : []
                    }
            else
                null !== e.girlLive && Panel.HasLoadingCompleteVideoElement() || (MainProperty.panelData.girlLive.domain = [],
                MainProperty.panelData.girlLive.anchor = []);
        !e.mId && "" != e.mId || (MainProperty.panelData.mId = e.mId,
        PanelBase.CheckTitle()),
        e.panelTitle && (Array.isArray(e.panelTitle) ? (MainProperty.panelData.panelTitle = e.panelTitle.map(function(e) {
            return Tool.TransformPanelId(e, Args.ShortNum)
        }),
        PanelBase.CheckTitle()) : MainProperty.panelData.panelTitle = [])
    },
    CheckTitle: function() {
        "" == MainProperty.panelData.mId && (0 <= MainProperty.panelData.panelTitle.indexOf(Args.RDAnimation) && MainProperty.panelData.panelTitle.splice(MainProperty.panelData.panelTitle.indexOf(Args.RDAnimation), 1),
        0 <= MainProperty.panelData.panelTitle.indexOf(Args.RDHistory) && MainProperty.panelData.panelTitle.splice(MainProperty.panelData.panelTitle.indexOf(Args.RDHistory), 1),
        0 <= MainProperty.panelData.panelTitle.indexOf(Args.RDInfo) && MainProperty.panelData.panelTitle.splice(MainProperty.panelData.panelTitle.indexOf(Args.RDInfo), 1)),
        Panel.HasLoadingCompleteVideoElement() || (0 <= MainProperty.panelData.panelTitle.indexOf(Args.GameLive) && MainProperty.panelData.panelTitle.splice(MainProperty.panelData.panelTitle.indexOf(Args.GameLive), 1),
        0 <= MainProperty.panelData.panelTitle.indexOf(Args.Anchor) && MainProperty.panelData.panelTitle.splice(MainProperty.panelData.panelTitle.indexOf(Args.Anchor), 1))
    },
    GetDefaultPanel: function(e) {
        var t = $.extend([], MainProperty.panelData.panelTitle);
        if (e && (PanelBase.IsPopAndInnerSameLive(Args.Anchor) || PanelBase.IsPopAndInnerSameLive(Args.GameLive)) && (0 <= t.indexOf(Args.GameLive) && t.splice(t.indexOf(Args.GameLive), 1),
        0 <= t.indexOf(Args.Anchor) && t.splice(t.indexOf(Args.Anchor), 1)),
        MainProperty.panelData.panel == Args.NoPanel || t.indexOf(MainProperty.panelData.panel) < 0 || MainProperty.panelData.panel == Args.RDAnimation && 0 == MainProperty.panelData.RDAnimate || MainProperty.panelData.panel == Args.GameLive && 0 == MainProperty.panelData.gameLive.domain.length && MainProperty.user.hasEnoughDeposit || MainProperty.panelData.panel == Args.Anchor && 0 == MainProperty.panelData.girlLive.domain.length && MainProperty.user.hasEnoughDeposit) {
            for (var a = 0; a < t.length; a++) {
                var i = MainProperty.panelData.panelTitle[a];
                if (i == Args.RDAnimation && 0 != MainProperty.panelData.RDAnimate)
                    return Args.RDAnimation;
                if (i == Args.GameLive && (0 < MainProperty.panelData.gameLive.domain.length || !MainProperty.user.hasEnoughDeposit))
                    return Args.GameLive;
                if (i == Args.Anchor && (0 < MainProperty.panelData.girlLive.domain.length || !MainProperty.user.hasEnoughDeposit))
                    return Args.Anchor;
                if (i == Args.ScoreBoard)
                    return Args.ScoreBoard
            }
            return Args.NoPanel
        }
        return MainProperty.panelData.panel
    },
    InitialPopLive: function(e) {
        var t = MainProperty.panelData.game
          , t = {
            game: {
                ta: t.ta,
                tb: t.tb,
                pa: t.pa,
                pb: t.pb,
                h: t.h,
                type: t.type,
                gpid: t.gpid
            }
        };
        switch (e) {
        case Args.GameLive:
            MainProperty.panelData.popGameLive = $.extend(t, MainProperty.panelData.gameLive);
            break;
        case Args.Anchor:
            MainProperty.panelData.popGameLive = $.extend(t, MainProperty.panelData.girlLive),
            MainProperty.panelData.popGameLive.anchorId = MainProperty.panelData.anchorId,
            MainProperty.panelData.popGameLive.roomId = MainProperty.panelData.roomId,
            MainProperty.panelData.popGameLive.anchorLang = MainProperty.panelData.anchorLang
        }
        MainProperty.panelData.popGameLive.gId = MainProperty.innerPage,
        MainProperty.panelData.popGameLive.type = e,
        MainProperty.panelData.popGameLive.aId = MainProperty.gameData[MainProperty.innerPage] ? MainProperty.gameData[MainProperty.innerPage].aId : ""
    },
    InitialInnerLive: function(e) {
        switch (e) {
        case Args.GameLive:
            MainProperty.panelData.gameLive = $.extend({}, MainProperty.panelData.popGameLive),
            delete MainProperty.panelData.gameLive.game,
            delete MainProperty.panelData.gameLive.gId,
            delete MainProperty.panelData.gameLive.type;
            break;
        case Args.Anchor:
            MainProperty.panelData.girlLive = $.extend({}, MainProperty.panelData.popGameLive),
            MainProperty.panelData.anchorId = MainProperty.panelData.popGameLive.anchorId,
            MainProperty.panelData.anchorLang = MainProperty.panelData.popGameLive.anchorLang,
            MainProperty.panelData.roomId = MainProperty.panelData.popGameLive.roomId,
            delete MainProperty.panelData.gameLive.game
        }
    },
    ClearPopLive: function() {
        MainProperty.panelData.popGameLive = {
            domain: [],
            route: "",
            rSteamId: "",
            gId: "",
            game: {},
            type: null,
            anchor: []
        }
    },
    ClearInnerLive: function(e) {
        switch (e) {
        case Args.GameLive:
            MainProperty.panelData.gameLive = {
                domain: [],
                route: "",
                rSteamId: ""
            };
            break;
        case Args.Anchor:
            MainProperty.panelData.girlLive = {
                domain: [],
                route: "",
                anchor: []
            }
        }
    },
    IsPopAndInnerSameLive: function(e) {
        return MainProperty.panelData.popGameLive.gId === MainProperty.innerPage && MainProperty.panelData.popGameLive.type == e
    },
    SpliceRuns: function(e, t, a) {
        t = Array.isArray(t) ? t : [],
        a = 0 <= a.indexOf("A") ? "A" : 0 <= a.indexOf("B") ? "B" : "";
        return t = t.splice({
            sc: 0,
            bk: 2,
            bkA: 2,
            bkB: 0,
            bb: 0,
            tn: 1,
            vl: 1,
            bm: 1,
            af: 2,
            tt: 1,
            es: 0,
            hb: 0,
            ih: 0,
            op: 0,
            ot: 0,
            wp: 0
        }[e + a], {
            sc: 0,
            bk: 5,
            bkA: 3,
            bkB: 0,
            bb: 10,
            tn: 5,
            vl: 7,
            bm: 5,
            af: 5,
            tt: 7,
            es: 7,
            hb: 2,
            ih: 4,
            op: 0,
            ot: 0,
            wp: 5
        }[e + a])
    },
    TransformRg: function(e, t) {
        var a = Array.isArray(t) ? t : []
          , t = {
            sc: 3,
            bk: 1,
            bb: 2,
            tn: 3,
            vl: 2,
            bm: 2,
            af: 1,
            tt: 2,
            es: 1,
            hb: 1,
            ih: 1,
            op: 1,
            ot: 1,
            wp: 1
        };
        if (t[e]) {
            var i = t[e] - a.length;
            if (0 < i)
                for (var n = 0; n < i; n++)
                    a.push("");
            else
                i < 0 && (a = a.splice(0, t[e]));
            "tn" === e && "255" == a[0] && (a[0] = "A")
        }
        return a
    },
    TransformStatus: function(e, t) {
        return e = Tool.IsSC(e) ? Ball.sc.key : e,
        0 <= ["sc_0", "sc_1", "sc_2", "sc_3", "sc_4", "sc_60", "bk_5", "bk_6", "bk_60", "bk_61", "bb_20", "bb_60", "tn_20", "tn_60", "tn_61", "ih_5", "ih_6", "ih_60", "ih_61", "vl_20", "vl_60", "vl_61", "bm_20", "bm_60", "bm_61", "es_20", "es_60", "es_61", "af_6", "af_20", "af_60", "af_61", "pb_20", "tt_20", "tt_60", "tt_61", "hb_12", "hb_20", "hb_60", "hb_61", "wp_10", "wp_12", "wp_20", "wp_60", "wp_61", "op_20", "ot_20"].indexOf(e + "_" + t) ? t : 256
    },
    TransformBaseballStatus: function(e) {
        var t = ""
          , a = !0;
        return 1 <= e && e <= 18 ? (t = Math.ceil(e / 2).toString(),
        a = e % 2 != 0) : 31 <= e && e <= 32 ? (t = "OT",
        a = e % 2 != 0) : 70 <= e && e <= 151 && (t = Math.ceil((e - 51) / 2).toString(),
        a = e % 2 == 0),
        [t, a]
    },
    HasRDAnimate: function() {
        return 0 <= ["tn", "bk"].indexOf(MainProperty.panelData.game.type) || Tool.IsSC(MainProperty.panelData.game.type)
    },
    HasRDAnimateMomentum: function() {
        return PanelBase.HasRDAnimate() && 2 == MainProperty.panelData.game.mode
    },
    TransformRadarUrlLang: function() {
        return "zh" == langFont.Font_Langue ? "zht" : "cn" == langFont.Font_Langue ? "zh" : langFont.Font_Langue
    },
    TransformRadarUrlSport: function() {
        var e = "";
        switch (MainProperty.panelData.game.type) {
        case "sc":
        case "eu":
        case "wd":
        case "ch":
        case "fi":
            e = "zq";
            break;
        case "bk":
            e = "lq";
            break;
        case "tn":
            e = "wq";
            break;
        default:
            e = MainProperty.ballType
        }
        return e
    }
}
  , Cart = {
    GetSameKTGroup: function(e, t) {
        var a = []
          , e = e.split("_")
          , i = e[0]
          , n = e[1]
          , r = e[2]
          , s = e[3]
          , o = Tool.TransformKTypeDetailInfo([r, s, t]);
        if (o[2] != Args.NoChkBT)
            for (var l = 0; l < MainProperty.cart.list.length; l++) {
                var c = MainProperty.cart.list[l]
                  , d = c.split("_")
                  , u = d[0]
                  , h = d[1]
                  , p = d[2]
                  , d = d[3];
                i == u && r == p && (s == d && n != h || o[2] == Args.ChkLongBT && s.substr(0, s.length - 1) != d.substr(0, d.length - 1) || a.push(c))
            }
        return a
    },
    AddCartStep1: function(e, t, a) {
        var i = t[1]
          , n = MainProperty.cart.cartLimit
          , r = [];
        if (a ? r.push(a) : r = Cart.GetSameKTGroup(e, i.h),
        0 < r.length) {
            n = MainProperty.cart.list.indexOf(r[0]);
            for (var s = 0; s < r.length; s++) {
                var o = r[s].split("_");
                CartBase.Remove(o[0], o[1], o[2], o[3])
            }
        }
        MainProperty.cart.returnMax = {},
        Cart.AddCartCache(e, t, n),
        CartBase.DrawCartStep1Process(e),
        MainProperty.funcSetting.defMulti && 1 < MainProperty.cart.list.length && CartBase.ChangeCartInfoDisplayClickEvent(Args.Multi),
        MainProperty.cart.loc.step = Args.Step1
    },
    AddCartCache: function(e, t, a) {
        clearInterval(MainProperty.cartTimer.scanner),
        MainProperty.cartTimer.time.send || Cart.SetCarTimeList(Args.BaseList, null);
        var i = e.split("_")[0]
          , n = t[0]
          , r = t[1]
          , t = t[2];
        MainProperty.cart.list.splice(a, 0, e),
        MainProperty.cart.allyData[r.aId] = $.extend({}, n),
        MainProperty.cart.gameData[i] = $.extend({}, r),
        MainProperty.cart.oddData[e] = $.extend({}, t),
        Cart.SetCarTimeList(Args.SaveList, e),
        MainProperty.cartTimer.scanner = setInterval(Cart.ChkCartTimer, 200)
    },
    GetMultiNGInfo: function() {
        for (var e = {
            list: [],
            diffAcDate: 0,
            theSameGame: 0
        }, t = $.extend([], MainProperty.cart.list), a = $.extend({}, MainProperty.cart.gameData), i = $.extend({}, MainProperty.cart.oddData), n = 0; n < t.length; n++) {
            var r = t[n]
              , s = r.split("_");
            if (a[s[0]] && i[r]) {
                var o = !!i[r].isParlay
                  , l = a[s[0]].cd
                  , c = 0 <= ["ih", "es"].indexOf(a[s[0]].type)
                  , d = a[s[0]].ta && a[s[0]].ta[0] ? a[s[0]].ta[0] : ""
                  , u = a[s[0]].tb && a[s[0]].tb[0] ? a[s[0]].tb[0] : "";
                if (o)
                    for (var h = 0; h < t.length; h++) {
                        var p = t[h]
                          , m = p.split("_");
                        if (a[m[0]] && i[p] && r != p) {
                            if (l != a[m[0]].cd) {
                                e.list.push(r),
                                e.diffAcDate += 1;
                                break
                            }
                            if (s[0] == m[0] || s[0].substr(0, 2) == m[0].substr(0, 2) && s[0].substr(3) == m[0].substr(3)) {
                                e.list.push(r),
                                e.theSameGame += 1;
                                break
                            }
                            var g = 0 <= ["ih", "es"].indexOf(a[m[0]].type)
                              , p = a[m[0]].ta[0]
                              , m = a[m[0]].tb[0];
                            if (c && g && (d == p && u == m || d == m && u == p)) {
                                e.list.push(r),
                                e.theSameGame += 1;
                                break
                            }
                        }
                    }
                else
                    e.list.push(r)
            }
        }
        return e
    },
    GetSingleBetLimit: function(e, t, a, i, n) {
        var r, s, o, l, c, d, u, h, p = [0, 0, 0];
        return n = n || MainProperty.cart.gameData[e],
        isNaN(parseInt(MainProperty.coin)) || (i = i.map(function(e) {
            return e * MainProperty.coin
        })),
        n && (r = Cart.GetModeType(n.type, n.mode),
        u = [],
        h = (d = s = 0) < n.mp && n.mp < 255 ? n.mp : 1,
        MainProperty.user.modeData && MainProperty.user.modeData[r] && MainProperty.user.modeData[r][t] && (o = parseInt(MainProperty.user.modeData[r][t].obl),
        l = parseInt(MainProperty.user.modeData[r][t].obm),
        c = parseInt(MainProperty.user.modeData[r][t].gbm),
        e = parseInt(MainProperty.user.modeData[r][t].cwm),
        s = MainProperty.user.modeData[r][t].enable,
        d = Tool.TransformMathFloor(CalcDecimal("/", e, a), 0)),
        1 == s && (p[0] = isNaN(o) ? MainProperty.user.defaultObl : o,
        255 == n.mp ? p[2] = 0 : (u = [c * h, i[1], d],
        p[2] = u.reduce(function(e, t) {
            return e && !isNaN(e) && 0 != e && (!t || isNaN(t) || 0 == t || e < t) ? e : t
        })),
        u = Cart.GetSCOtherKType().indexOf(t) < 0 ? [l * h, i[0]] : [l * h, i[0], p[2]],
        p[1] = u.reduce(function(e, t) {
            return e && !isNaN(e) && 0 != e && (!t || isNaN(t) || 0 == t || e < t) ? e : t
        }),
        0 == p[1] ? p[1] = langFont.Font_CartNoLimit : p[1] = p[1] > p[0] ? p[1] : p[0],
        0 == p[2] && (p[2] = langFont.Font_CartNoLimit))),
        p
    },
    GetModeType: function(e, t) {
        return e = Tool.IsCHorFI(e) ? "sc" : "op" == e ? "ot" : e,
        Tool.TransformGameType(e, Args.ShortNum) + (2 == t ? "2" : "1")
    },
    GetMultiBetLimit: function(e) {
        var t, a, i, n, r, s = [0, 0], o = 0, l = [];
        return MainProperty.user.modeData && MainProperty.user.modeData[101] && MainProperty.user.modeData[101][10001] && (t = parseInt(MainProperty.user.modeData[101][10001].obl),
        a = parseInt(MainProperty.user.modeData[101][10001].gbm),
        i = parseInt(MainProperty.user.modeData[101][10001].cwm),
        o = MainProperty.user.modeData[101][10001].enable,
        n = Cart.TransformCanWinMax(e, i)),
        MainProperty.cart.returnMax[101] && (r = MainProperty.cart.returnMax[101][e]),
        1 == o && (s[0] = isNaN(t) ? MainProperty.user.defaultPassOblm[0] : t,
        a = isNaN(a) ? MainProperty.user.defaultPassOblm[1] : a,
        0 == r ? (s[0] = 0,
        s[1] = 0) : (0 < a && l.push(a),
        0 < i && l.push(n),
        0 < r && l.push(r),
        0 < l.length && (s[1] = l.reduce(function(e, t) {
            return e < t ? e : t
        }))),
        0 == s[1] && isNaN(parseInt(r)) && 0 == a && 0 == i ? s[1] = langFont.Font_CartNoLimit : s[1] = s[1] > s[0] ? s[1] : s[0]),
        s
    },
    TransformCanWinMax: function(e, t) {
        for (var e = e.split("x")[0], a = [], i = 1, n = 0; n < MainProperty.cart.list.length; n++) {
            var r = MainProperty.cart.list[n]
              , s = r.split("_")
              , s = MainProperty.cart.oddData[r] && MainProperty.cart.oddData[r][s[3]] ? MainProperty.cart.oddData[r][s[3]][0] : 0;
            a.push(s)
        }
        a = a.sort(function(e, t) {
            return t - e
        }).splice(0, e);
        for (n = 0; n < a.length; n++)
            i = CalcDecimal("*", i, CalcDecimal("+", 1, parseFloat(a[n])));
        return Tool.TransformMathFloor(CalcDecimal("/", t, CalcDecimal("+", i, -1)), 0)
    },
    ChkCanUsePass: function() {
        return MainProperty.user.modeData && MainProperty.user.modeData[101] && MainProperty.user.modeData[101][10001] && 1 == MainProperty.user.modeData[101][10001].enable
    },
    GetCartShowTeamName: function(e, t) {
        var a = e[0]
          , i = [e[1], e[2]]
          , n = e[3]
          , r = Cart.GetCartTeamName(i, t)
          , i = ""
          , r = 2 == a ? [r[1], r[0]] : [r[0], r[1]]
          , e = 0 == a ? '<font class="t_red"> (' + langFont.Font_NeutralMark + ")</font>" : Tool.IsShowHomeRemark(n) && 4 != a && 1 == e[1].length && 1 == e[2].length ? '<span class="t_orange"> (' + langFont.Font_Home + ")</span>" : "";
        switch (t[4]) {
        case Args.TeamA:
            i = "<span>" + r[0] + "</span>" + e;
            break;
        case Args.TeamB:
            i = "<span>" + r[1] + "</span>";
            break;
        default:
            i = n == Ball.bb.key ? "<span>" + r[1] + "</span> v <span>" + r[0] + "</span>" + e : "<span>" + r[0] + "</span>" + e + " v <span>" + r[1] + "</span>"
        }
        return i
    },
    GetCartTeamName: function(e, t) {
        var a = e[0]
          , i = e[1]
          , n = ["", ""];
        if (t[4] == Args.TeamHSGS)
            n[0] = langFont.Font_IHHTTotalScore,
            n[1] = langFont.Font_IHGTTotalScore;
        else if (a && i) {
            for (var r = 0; r < a.length && (n[0] += a[r],
            r != a.length - 1); r++)
                n[0] += " / ";
            for (r = 0; r < i.length && (n[1] += i[r],
            r != i.length - 1); r++)
                n[1] += " / "
        }
        return n
    },
    GetCartBetInfo: function(e, t, a, i, n) {
        var r = e[0]
          , s = e[1]
          , o = t[0]
          , l = [t[1], t[2]]
          , c = Tool.TransformPointer(r, a[0])[i]
          , e = Tool.TransformNumToPk(r, a[1])
          , t = a[2]
          , i = Tool.TransformKTypeDetailInfo([r, s, o])
          , a = Cart.GetCartTeamName(l, i)
          , l = ""
          , c = ["", "", c];
        switch (i[1]) {
        case Args.PlayWin:
            switch (l = s.substr(s.length - 1, 1)) {
            case "1":
                c[0] = a[0];
                break;
            case "2":
                c[0] = a[1];
                break;
            case "3":
                c[0] = langFont.Font_Dauce
            }
            n ? c[1] = e : parseInt(l) < 3 && (c[1] = "PK");
            break;
        case Args.PlayHDP:
            switch (l = s.substr(s.length - 1, 1)) {
            case "1":
                c[0] = a[0];
                break;
            case "2":
                c[0] = a[1];
                break;
            case "3":
                c[0] = langFont.Font_Dauce
            }
            "" != e && 0 != e && (i = s.split(""),
            c[1] = 0 < t ? 1 == i[i.length - 1] ? "-" : "+" : 2 == i[i.length - 1] ? "-" : "+"),
            c[1] += e;
            break;
        case Args.PlayOU:
            switch (l = s.substr(s.length - 1, 1),
            c[0] = "",
            l) {
            case "1":
                c[0] = 0 <= ["180191", "180291", "180391", "180491", "180591", "180691", "180791"].indexOf(r) ? langFont.Font_MoreThan : langFont.Font_Big,
                c[1] = e;
                break;
            case "2":
                c[0] = 0 <= ["180191", "180291", "180391", "180491", "180591", "180691", "180791"].indexOf(r) ? langFont.Font_LessThan : langFont.Font_Small,
                c[1] = e
            }
            break;
        case Args.PlayOE:
            switch (l = s.substr(s.length - 1, 1)) {
            case "1":
                c[0] = langFont.Font_Single;
                break;
            case "2":
                c[0] = langFont.Font_Pair
            }
            n && (c[1] = e);
            break;
        case Args.PlayShowPK:
            switch (l = s.substr(s.length - 1, 1)) {
            case "1":
                c[0] = a[0];
                break;
            case "2":
                c[0] = a[1]
            }
            n && (c[1] = e);
            break;
        case Args.PlayYN:
            switch (l = s.substr(s.length - 1, 1)) {
            case "1":
                c[0] = langFont.Font_Yes;
                break;
            case "2":
                c[0] = langFont.Font_No
            }
            n && (c[1] = e);
            break;
        case Args.PlayHT:
            switch (l = s) {
            case "1":
                c[0] = langFont.Font_1stHalf;
                break;
            case "2":
                c[0] = langFont.Font_2ndHalf;
                break;
            case "3":
                c[0] = langFont.Font_Dauce
            }
            n && (c[1] = e);
            break;
        case Args.PlayTeamTS:
            switch (l = s.substr(s.length - 2, 1)) {
            case "1":
                c[0] = a[0];
                break;
            case "2":
                c[0] = a[1]
            }
            switch (l = s.substr(s.length - 1, 1)) {
            case "1":
                c[0] += " " + langFont.Font_Big,
                c[1] = e;
                break;
            case "2":
                c[0] += " " + langFont.Font_Small,
                c[1] = e
            }
            break;
        case Args.PlayCS:
            l = s,
            c[0] = "99" == l ? langFont.Font_Else : 2 == o ? l.split("")[1] + ":" + l.split("")[0] : l.split("")[0] + ":" + l.split("")[1],
            n && e && (c[1] = e);
            break;
        case Args.PlayTS:
            if (1 == (l = s).length)
                c[0] = "3" == l ? langFont.Font_3orMore : l;
            else if ("9" == l.split("")[1])
                switch (l.split("")[0]) {
                case "3":
                    c[0] = langFont.Font_3orMore;
                    break;
                case "7":
                    c[0] = langFont.Font_7orMore
                }
            else
                c[0] = l.split("")[0] + "-" + l.split("")[1];
            n && e && (c[1] = e);
            break;
        case Args.PlayHF:
            o = [a[0], a[1], langFont.Font_Peace],
            l = s;
            c[0] = o[parseInt(l.split("")[0]) - 1] + "/" + o[parseInt(l.split("")[1]) - 1],
            n && (c[1] = e);
            break;
        case Args.PlayPSO:
            switch (l = s.substr(s.length - 1, 1)) {
            case "1":
                c[0] = langFont.Font_Goal;
                break;
            case "2":
                c[0] = langFont.Font_NoGoal
            }
            n && (c[1] = e);
            break;
        case Args.PlayGoalWin:
            switch (l = s.substr(s.length - 1, 1)) {
            case "1":
                c[0] = a[0];
                break;
            case "2":
                c[0] = a[1];
                break;
            case "3":
                c[0] = langFont.Font_GRNoGoal
            }
            n ? c[1] = e : parseInt(l) < 3 && (c[1] = "PK")
        }
        return c
    },
    ChkDisplayRefScore: function(e, t, a) {
        return Tool.IsSC(e) && 2 == t && a
    },
    RefScoreProcess: function(e, t, a) {
        return e = e || 0,
        t = t || 0,
        1 < a ? "(" + t + ":" + e + ")" : "(" + e + ":" + t + ")"
    },
    GetSCOtherKType: function() {
        return ["11061", "11062", "11063", "11161", "11162", "26061", "26062", "26063", "26161", "26162", "27061", "27062", "27063", "27161", "27162"]
    },
    CalcMultiConsist: function(e, t, a) {
        var i = 0;
        if (e == Args.CalcPassNum) {
            for (var n = 1, r = 0; r < a; r++)
                n *= t - r;
            for (r = 0; r < a; r++)
                n /= a - r;
            i = n
        } else
            e == Args.CalcTotalPassNum && (i = [0, 0, 4, 11, 26, 57, 120, 247, 502, 1013][t - 1]);
        return i
    },
    AmountMonitor: function(e) {
        var t = e.toString().replace(/[^0-9\.]/g, "")
          , a = t.split("")
          , i = a.indexOf(".")
          , e = a[t.length - 1]
          , a = !1;
        return t && ("." == e || t.length > MainProperty.cart.maxInputLength ? a = !0 : !/^\d+(\.\d+)?$/.test(t) || 0 == Number(t) ? t = "" : !(0 <= i && 2 < t.length - (i + 1)) && /^\d+$/.test(e) || (a = !0),
        a && (t = t.substr(0, t.length - 1))),
        t = isNaN(parseFloat(t)) ? "" : parseFloat(t)
    },
    CalcKeyOrNum: function(e, t, a) {
        var i = 0
          , n = 0;
        return t = parseFloat(t),
        a = parseFloat(a),
        e == Args.CalcKeyNum ? (n = t,
        i = a && n / a ? Math.ceil(CalcDecimal("/", n, a)) : "") : e == Args.CalcShowNum ? n = (i = t) * a ? Tool.TransformMathFloor(CalcDecimal("*", i, a), 2) : "" : void 0
    },
    GetPassOddList: function() {
        for (var e = [], t = 0; t < MainProperty.cart.list.length; t++) {
            var a = MainProperty.cart.list[t]
              , i = a.split("_")
              , i = MainProperty.cart.oddData[a] && MainProperty.cart.oddData[a][i[3]] ? MainProperty.cart.oddData[a][i[3]][0] : 0;
            e.push(parseFloat(i))
        }
        return e
    },
    CalcPassKeyOrNum: function(e, t, a) {
        var i = Number(t.split("x")[0])
          , t = Number(t.split("x")[1])
          , n = 0
          , r = 0
          , s = Cart.GetPassOddList()
          , o = MainProperty.cart.list.length;
        if (MainProperty.cart.multiPassCount = [0, 0],
        a = parseFloat(a),
        e == Args.CalcKeyNum) {
            if (r = a,
            1 < t) {
                for (var l = 2; l <= o; l++) {
                    MainProperty.cart.multiPassCount = [0, 0];
                    for (var c = 0; c <= o - l; c++)
                        (d = Array(o))[c] = 1,
                        Cart.CalcCombination(c + 1, l - 1, o, d, s);
                    n = CalcDecimal("+", n, CalcDecimal("+", MainProperty.cart.multiPassCount[0], -MainProperty.cart.multiPassCount[1]))
                }
                return n = Math.ceil(CalcDecimal("/", a, n)),
                n = isNaN(n) ? "" : n
            }
            if (0 < i) {
                for (l = 0; l <= o - i; l++)
                    (d = Array(o))[l] = 1,
                    Cart.CalcCombination(l + 1, i - 1, o, d, s);
                return n = Math.ceil(CalcDecimal("/", a, CalcDecimal("+", MainProperty.cart.multiPassCount[0], -MainProperty.cart.multiPassCount[1]))),
                n = isNaN(n) ? "" : n
            }
        } else if (e == Args.CalcShowNum) {
            if (n = a,
            1 < t) {
                for (l = 2; l <= o; l++) {
                    MainProperty.cart.multiPassCount = [0, 0];
                    for (c = 0; c <= o - l; c++)
                        (d = Array(o))[c] = 1,
                        Cart.CalcCombination(c + 1, l - 1, o, d, s);
                    r = CalcDecimal("+", r, CalcDecimal("*", CalcDecimal("+", MainProperty.cart.multiPassCount[0], -MainProperty.cart.multiPassCount[1]), a))
                }
                return r = parseFloat(r),
                r = isNaN(r) ? "" : Tool.TransformMathFloor(r, 2)
            }
            if (0 < i) {
                for (var d, l = 0; l <= o - i; l++)
                    (d = Array(o))[l] = 1,
                    Cart.CalcCombination(l + 1, i - 1, o, d, s);
                return r = CalcDecimal("*", CalcDecimal("+", MainProperty.cart.multiPassCount[0], -MainProperty.cart.multiPassCount[1]), a),
                r = parseFloat(r),
                r = isNaN(r) ? "" : Tool.TransformMathFloor(r, 2)
            }
        }
    },
    CalcCombination: function(e, t, a, i, n) {
        var r = $.extend([], i);
        if (r[e - 1] = 1,
        0 < t)
            for (var s = e; s <= a - t; s++)
                Cart.CalcCombination(s + 1, t - 1, a, r, n);
        else {
            for (var o = 1, s = 0; s < r.length; s++)
                r[s] && (o = CalcDecimal("*", o, CalcDecimal("+", n[s], 1)));
            MainProperty.cart.multiPassCount[0] = CalcDecimal("+", MainProperty.cart.multiPassCount[0], o),
            MainProperty.cart.multiPassCount[1] += 1
        }
    },
    ChkErrorMsg: function(e, t, a, i, n, r) {
        var s = Args[t].toLowerCase()
          , o = Cart.GetErrorGroup(e)
          , l = 0
          , c = {
            top: "",
            mask: ""
        }
          , d = ""
          , u = {
            isMatch: !1,
            changeNum: ""
        };
        if (a && 4 == a.length && (d = a[0] + "_" + a[1] + "_" + a[2] + "_" + a[3]),
        d && Cart.GetErrorGroup(MainProperty.cart.step1ErrorMsg[s].item[d]) == Args.MaskError && o == Args.TopError)
            return u;
        if (o == Args.TopError) {
            o = i || "";
            if (/^[\d]*$/.test(o))
                switch (o = parseInt(o) ? parseInt(o) : "",
                e) {
                case Args.CE_ClearTop:
                    l = 0;
                    break;
                case Args.CE_ChkLimit:
                    o ? (h = parseInt(n[0]),
                    p = isNaN(parseInt(n[1])) ? o : parseInt(n[1]),
                    h <= o && o <= p ? l = 0 : (l = e,
                    c.top = langFont.Font_CartPointNotMatchLimit,
                    u.isMatch = !0)) : l = 0;
                    break;
                case Args.CE_ChkCombLimit:
                    o ? (p = isNaN(parseInt(n[0])) ? o : parseInt(n[0]),
                    0 < o && o <= p ? l = 0 : (l = e,
                    c.top = langFont.Font_CartPointNotMatchLimit,
                    u.isMatch = !0)) : l = 0;
                    break;
                case Args.CE_ChkLTGTLimit:
                    var h = parseInt(n[0])
                      , p = isNaN(parseInt(n[1])) ? o : parseInt(n[1])
                      , m = parseInt(MainProperty.user.balance);
                    m = isNaN(m) || m < 0 ? 0 : m,
                    1 === MainProperty.cart.list.length && m < o && !MainProperty.isFastTrade ? o != h || 0 == m || !MainProperty.cart.step1ErrorMsg.single.btmBl && 0 == MainProperty.cart.step1ErrorMsg.single.btm.length && !MainProperty.cart.step1ErrorMsg.single.btmChange ? (l = e,
                    c.top = langFont.Font_CartPointNotEnough,
                    u.isMatch = !0,
                    u.changeNum = m,
                    MainProperty.cart.step1ErrorMsg.single.btmBl = m < h) : (l = e,
                    c.top = langFont.Font_CartPointTooLow,
                    u.isMatch = !0,
                    u.changeNum = h) : o < h ? (l = e,
                    c.top = langFont.Font_CartPointTooLow,
                    u.isMatch = !0,
                    u.changeNum = h) : p < o ? (l = e,
                    c.top = langFont.Font_CartPointTooHigh,
                    u.isMatch = !0,
                    u.changeNum = p) : l = 0;
                    break;
                case Args.CE_ChkEmpty:
                    o ? l = 0 : (l = e,
                    c.top = langFont.Font_CartPleaseEnterPoint,
                    u.isMatch = !0);
                    break;
                case Args.CE_GTAvlBl:
                    l = e,
                    c.top = langFont.Font_CartHaveReachedLimit,
                    u.isMatch = !0,
                    u.changeNum = o;
                    break;
                case Args.CE_ChkLTLimit:
                    o < (h = parseInt(n[0])) ? (l = e,
                    c.top = langFont.Font_CartPointTooLow,
                    u.isMatch = !0,
                    u.changeNum = h) : l = 0;
                    break;
                case Args.CE_ChkGTLimit:
                    h = parseInt(n[0]),
                    p = isNaN(parseInt(n[1])) ? o : parseInt(n[1]),
                    m = parseInt(MainProperty.user.balance);
                    m = isNaN(m) || m < 0 ? 0 : m,
                    1 === MainProperty.cart.list.length && m < o && m < p && !MainProperty.isFastTrade ? (l = e,
                    c.top = langFont.Font_CartPointNotEnough,
                    MainProperty.cart.step1ErrorMsg.single.btmBl = m < h,
                    u.isMatch = !0,
                    u.changeNum = m) : p < o ? (l = e,
                    c.top = langFont.Font_CartPointTooHigh,
                    u.isMatch = !0,
                    u.changeNum = p) : l = 0;
                    break;
                case Args.CE_LTLimit:
                    l = e,
                    c.top = langFont.Font_CartPointTooLow,
                    u.isMatch = !0,
                    u.changeNum = o;
                    break;
                case Args.CE_GTLimit:
                    l = e,
                    c.top = langFont.Font_CartPointTooHigh,
                    u.isMatch = !0,
                    u.changeNum = o;
                    break;
                case Args.CE_AvlBl:
                    l = e,
                    c.top = langFont.Font_CartRemainingAmountX.replace("X", i),
                    u.isMatch = !0,
                    u.changeNum = o;
                    break;
                case Args.CE_GTCombLimit:
                    l = e,
                    c.top = langFont.Font_CartOverPointLimit,
                    u.isMatch = !0,
                    u.changeNum = o;
                    break;
                case Args.CE_LTCombLimit:
                    l = e,
                    c.top = langFont.Font_CartFewerPointLimit,
                    u.isMatch = !0,
                    u.changeNum = o;
                    break;
                case Args.CE_GTCombWin:
                    l = e,
                    c.top = langFont.Font_CartOverCanWin,
                    u.isMatch = !0,
                    u.changeNum = o
                }
            else
                l = Args.CE_ChkEmpty,
                c.top = langFont.Font_CartPleaseEnterPoint,
                u.isMatch = !0
        } else
            switch (e) {
            case Args.CE_ClearMask:
                l = 0;
                break;
            case Args.CE_ClosePK:
                l = e,
                c.mask = langFont.Font_CartPkIsClosed,
                u.isMatch = !0;
                break;
            case Args.CE_Ban:
                l = e,
                c.mask = langFont.Font_CartUnableToBet,
                u.isMatch = !0;
                break;
            case Args.CE_IF:
                n && 0 < n[0] && !(parseFloat(i) > parseFloat(n[0])) ? (0 <= MainProperty.cart.step1ErrorMsg[s].btm.indexOf(e) && MainProperty.cart.step1ErrorMsg[s].btm.splice(MainProperty.cart.step1ErrorMsg[s].btm.indexOf(e), 1),
                l = 0) : (MainProperty.cart.step1ErrorMsg[s].btm.indexOf(e) < 0 && MainProperty.cart.step1ErrorMsg[s].btm.push(e),
                l = e,
                u.isMatch = !0);
                break;
            case Args.CE_MultiEmpty:
                n && n[0] ? (0 <= MainProperty.cart.step1ErrorMsg[s].btm.indexOf(e) && MainProperty.cart.step1ErrorMsg[s].btm.splice(MainProperty.cart.step1ErrorMsg[s].btm.indexOf(e), 1),
                l = 0) : (MainProperty.cart.step1ErrorMsg[s].btm.indexOf(e) < 0 && MainProperty.cart.step1ErrorMsg[s].btm.push(e),
                l = e,
                u.isMatch = !0)
            }
        return !1 !== r && CartBase.SetErrorMsgDisplay(l, t, a, c),
        u
    },
    GetErrorGroup: function(e) {
        var t = "";
        switch (parseInt(e)) {
        case Args.CE_ClearTop:
        case Args.CE_ChkLimit:
        case Args.CE_ChkCombLimit:
        case Args.CE_ChkLTGTLimit:
        case Args.CE_ChkEmpty:
        case Args.CE_GTAvlBl:
        case Args.CE_ChkLTLimit:
        case Args.CE_ChkGTLimit:
        case Args.CE_LTLimit:
        case Args.CE_GTLimit:
        case Args.CE_AvlBl:
        case Args.CE_GTCombLimit:
        case Args.CE_LTCombLimit:
        case Args.CE_GTCombWin:
            t = Args.TopError;
            break;
        case Args.CE_ClearMask:
        case Args.CE_ClosePK:
        case Args.CE_Ban:
            t = Args.MaskError;
            break;
        case Args.CE_IF:
        case Args.CE_MultiEmpty:
            t = Args.BtmError;
            break;
        default:
            t = ""
        }
        return t
    },
    GetStep1BtmErrorGroup: function() {
        var e = {};
        return e[Args.CBE_IF] = Args.CE_IF,
        e[Args.CBE_MultiNoPoint] = Args.CE_MultiEmpty,
        e[Args.CBE_Change] = [Args.CE_ChkLTGTLimit, Args.CE_GTAvlBl, Args.CE_ChkLTLimit, Args.CE_ChkGTLimit, Args.CE_LTLimit, Args.CE_GTLimit, Args.CE_AvlBl, Args.CE_GTCombLimit, Args.CE_LTCombLimit, Args.CE_GTCombWin, Args.CE_ClosePK, Args.CE_Ban],
        e[Args.CBE_NoPoint] = [Args.CE_ChkEmpty, Args.CE_MultiEmpty],
        e
    },
    ClearBtmErrorPrompt: function(e, t) {
        var a = Args[e].toLowerCase();
        if (t)
            MainProperty.cart.step1ErrorMsg[a] = {
                btm: [],
                item: {}
            },
            e == Args.Single && (MainProperty.cart.step1ErrorMsg[a].btmChange = MainProperty.cart.step1ErrorMsg[a].btmBl = !1);
        else
            for (var i in MainProperty.cart.step1ErrorMsg[a].btm = [],
            MainProperty.cart.step1ErrorMsg[a].item)
                Cart.GetErrorGroup(MainProperty.cart.step1ErrorMsg[a].item[i]) == Args.TopError && delete MainProperty.cart.step1ErrorMsg[a].item[i];
        CartBase.ChkBtmErrorPrompt(e)
    },
    ChkSetp3AlwaysConfirmed: function(e, t, a, i) {
        return 2 == t && (Tool.IsSC(e) && 2 == a || "ih" == e && 6 == a || 0 <= ["sc", "eu", "wd", "ch", "fi", "ih"].indexOf(e) && 0 == i)
    },
    ChkAlwaysWaitModeDisplay: function(e, t) {
        return 0 <= ["sc", "eu", "wd", "ch", "fi", "ih"].indexOf(e) && 2 == t
    },
    CheckGameReturnStatus: function(e) {
        var t = {
            processType: Args.OtherError,
            errorType: 0,
            msg: "",
            needReplaceNum: !1,
            needChangeInput: !1
        };
        switch (e) {
        case 2:
        case 1:
            t.processType = Args.Success;
            break;
        case 0:
            t.msg = langFont.Font_CartBetFailPkIsClosed2;
            break;
        case -1:
            t.errorType = Args.CE_IF,
            t.msg = langFont.Font_CartBetFailInsufficientRemainingAmount;
            break;
        case -9:
            t.msg = langFont.Font_CartBetFailPkIsClosed1;
            break;
        case -10:
            t.msg = langFont.Font_CartBetFailPkIsClosed3;
            break;
        case -11:
        case -31:
            t.errorType = Args.CE_GTLimit,
            t.msg = langFont.Font_CartBetFailPointMoreThanLimit,
            t.needChangeInput = !0;
            break;
        case -12:
        case -14:
        case -32:
            t.errorType = Args.CE_AvlBl,
            t.msg = langFont.Font_CartBetFailRemainingAmountX,
            t.needReplaceNum = !0,
            t.needChangeInput = !0;
            break;
        case -13:
            t.errorType = Args.CE_LTLimit,
            t.msg = langFont.Font_CartBetFailPointLessThanLimit,
            t.needChangeInput = !0;
            break;
        case -20:
        case -23:
        case -30:
        case -33:
        case -36:
            t.errorType = Args.CE_ClosePK,
            t.msg = langFont.Font_CartBetFailPkIsClosed;
            break;
        case -24:
            t.processType = Args.PKChange,
            t.msg = langFont.Font_CartBetFailPkIsClosed;
            break;
        case -34:
            t.processType = Args.PKChange,
            t.msg = langFont.Font_CartBetFailPkChanged;
            break;
        case -35:
            t.processType = Args.PKChange,
            t.msg = langFont.Font_CartBetFailPlChanged;
            break;
        case -38:
            t.msg = langFont.Font_ListCanNotComplexMulti;
            break;
        case -97:
            t.processType = Args.ShowAlert,
            t.msg = langFont.Font_CartHeavyBusiness;
            break;
        case -98:
            t.msg = langFont.Font_CartBetFailPkIsClosed4;
            break;
        default:
            t.msg = langFont.Font_CartBetFail
        }
        return t
    },
    CheckModeReturnStatus: function(e) {
        var t = {
            processType: Args.OtherError,
            errorType: 0,
            needChangeInput: !1
        };
        switch (e) {
        case 1:
            t.processType = Args.Success;
            break;
        case -1:
            t.errorType = Args.CE_IF;
            break;
        case -12:
            t.errorType = Args.CE_GTCombLimit,
            t.needChangeInput = !0;
            break;
        case -13:
            t.errorType = Args.CE_LTCombLimit,
            t.needChangeInput = !0;
            break;
        case -14:
            t.errorType = Args.CE_GTCombWin,
            t.needChangeInput = !0
        }
        return t
    },
    AddReturnMax: function(e, t, a) {
        var i = {
            single: [-11, -12, -14, -31, -32],
            multi: [-12, -14]
        };
        e == Args.Multi ? 0 <= i.multi.indexOf(t) && (MainProperty.cart.returnMax[101] || (MainProperty.cart.returnMax[101] = {}),
        MainProperty.cart.returnMax[101][a[0]] = a[1]) : 0 <= i.single.indexOf(t) && (MainProperty.cart.returnMax[a[0]] = a[1])
    },
    ClearStep3Status: function() {
        MainProperty.cart.step3Status = []
    },
    AddStep3Status: function(e) {
        MainProperty.cart.step3Status.push(e)
    },
    GetStep3StatusCount: function() {
        for (var e = [-1, -11, -12, -13, -14, -20, -23, -24, -30, -31, -32, -33, -34, -35, -36], t = 0, a = 0; a < MainProperty.cart.step3Status.length; a++)
            t += 0 <= e.indexOf(MainProperty.cart.step3Status[a]) ? 1 : 0;
        return t
    },
    GetMultiStep3StatusCount: function() {
        for (var e = [0, -9, -10, -20, -23, -24, -30, -33, -34, -35, -37, -38, -98], t = [0, 0, 0, 0, 0], a = 0; a < MainProperty.cart.step3Status.length; a++) {
            var i = MainProperty.cart.step3Status[a];
            t[0] += Number(0 <= e.indexOf(i)),
            t[1] += Number(-12 == i),
            t[2] += Number(-13 == i),
            t[3] += Number(-14 == i),
            t[4] += Number(-1 == i)
        }
        return 0 < t[1] + t[2] + t[3] + t[4] && (t[0] = 0),
        t
    },
    UpdateSingleReceiptData: function(e, t, a, i) {
        var n = t.gId
          , r = t.sT
          , s = t.kT
          , o = t.bT
          , l = n + "_" + r + "_" + s + "_" + o
          , c = MainProperty.cart.gameData[n] || {}
          , d = MainProperty.cart.oddData[l] || {}
          , u = MainProperty.cart.allyData[c.aId] || {}
          , h = 255
          , p = []
          , m = {};
        a.indexOf(e) < 0 && (h = Cart.ChkSetp3AlwaysConfirmed(c.type, c.mode, c.st, d.wt) ? 254 : 0),
        m = {
            gId: n,
            gpId: c.gpid,
            gT: t.gT,
            sT: r,
            kT: s,
            bT: o,
            sId: t.sId,
            odds: t.odds,
            line: t.line,
            lineAt: t.lineAt,
            normA: t.sA,
            normB: t.sB,
            status: h,
            invalid: "",
            remark: "",
            al: u.an,
            h: c.h,
            mode: c.mode,
            ta: c.ta,
            tb: c.tb
        },
        p.push(m);
        m = {};
        return (m = {}).wId = e,
        m.wd = new Date(Date.now()).Format("yyyy/MM/dd hh:mm:ss.F"),
        m.amount = t.coin,
        m.isP = i,
        m.canWin = parseFloat(Cart.CalcKeyOrNum(Args.CalcShowNum, t.coin, t.odds)),
        m.detail = p,
        MainProperty.receiptKeepList.push(l),
        CartBase.RemoveKeepListBgColor(n, r, s, o),
        m
    },
    UpdateMultiReceiptData: function(e, t, a) {
        for (var i, n, r = t.delayModeData, s = t.sendData.game, o = t.sendData.mode, l = !1, c = [], d = 0; d < o.length; d++) {
            var u = o[d];
            if (r.Asmb == u.asmb) {
                u.status = r.Status,
                l = !0,
                i = u;
                break
            }
        }
        if (l) {
            var h = i.asmb.split("x")
              , p = {};
            p.wId = e,
            p.wd = new Date(Date.now()).Format("yyyy/MM/dd hh:mm:ss.F"),
            p.pta = [parseInt(h[0]), parseInt(h[1])],
            p.pta[2] = 1 < h[1] ? Cart.CalcMultiConsist(Args.CalcTotalPassNum, s.length, null) : Cart.CalcMultiConsist(Args.CalcPassNum, s.length, h[0]),
            p.amount = i.coin * p.pta[2],
            p.status = i.status,
            p.invalid = i.reason,
            p.remark = i.describe,
            p.isP = t.isP;
            for (d = 0; d < s.length; d++) {
                var m = s[d]
                  , g = m.gId
                  , f = m.gT
                  , v = m.sT
                  , _ = m.kT
                  , y = m.bT
                  , P = g + "_" + v + "_" + _ + "_" + y
                  , S = MainProperty.cart.gameData[g] || {}
                  , b = MainProperty.cart.oddData[P] || {}
                  , T = MainProperty.cart.allyData[S.aId] || {}
                  , C = 255;
                a.indexOf(P) < 0 && (C = Cart.ChkSetp3AlwaysConfirmed(S.type, S.mode, S.st, b.wt) ? 254 : 0),
                n = {
                    gId: g,
                    gpId: S.gpid,
                    gT: f,
                    sT: v,
                    kT: _,
                    bT: y,
                    odds: m.odds,
                    line: m.line,
                    lineAt: m.lineAt,
                    normA: m.sA,
                    normB: m.sB,
                    status: C,
                    invalid: "",
                    remark: "",
                    al: T.an,
                    h: S.h,
                    mode: S.mode,
                    ta: S.ta,
                    tb: S.tb
                },
                c.push(n),
                MainProperty.receiptKeepList.indexOf(P) < 0 && MainProperty.receiptKeepList.push(P)
            }
            return p.detail = c,
            p
        }
    },
    KeepSuccessStep3: function(e) {
        if (0 < MainProperty.receiptKeepList.length) {
            var t = $.extend([], MainProperty.receiptKeepList);
            if (0 == e)
                for (var a = 0; a < t.length; a++) {
                    var i = t[a].split("_");
                    CartBase.Remove(i[0], i[1], i[2], i[3], !0)
                }
            else {
                var n = {};
                $.isEmptyObject(MainProperty.cart.step1ErrorMsg.single.item) || (n = $.extend({}, MainProperty.cart.step1ErrorMsg.single.item));
                for (a = 0; a < t.length; a++) {
                    var r = t[a]
                      , i = r.split("_");
                    Cart.AddCartStep1(r, [MainProperty.cart.allyData[MainProperty.cart.gameData[i[0]].aId], MainProperty.cart.gameData[i[0]], MainProperty.cart.oddData[r]], r),
                    0 <= Object.keys(n).indexOf(r) && Cart.GetErrorGroup(n[r]) == Args.MaskError && (Cart.ChkErrorMsg(n[r], Args.Single, i, null, null),
                    Cart.ChkErrorMsg(n[r], Args.Multi, i, null, null),
                    1 == t.length && MainProperty.cart.loc.step == Args.Step3 && Cart.ChkErrorMsg(n[r], Args.Mini, i, null, null))
                }
            }
            MainProperty.receiptKeepList = []
        }
    },
    ChkScheduleBgColor: function(e) {
        return 0 <= MainProperty.cart.list.indexOf(e) && MainProperty.receiptKeepList.indexOf(e) < 0
    },
    StrBind: function(e, t) {
        var a = langFont.Font_Langue
          , i = ["cn", "zh"].indexOf(a) < 0 ? " " : "";
        return "object" == typeof t && (a in t == 1 ? i = t[a] : "all"in t == 1 && (i = t.all)),
        1 == Array.isArray(e) ? e.join(i) : e
    },
    SetCarTimeList: function(e, t) {
        var a = "";
        switch (e) {
        case Args.BaseList:
            for (var i = 0; i < MainProperty.cart.list.length; i++) {
                var n = MainProperty.cart.list[i].split("_")
                  , r = n[0] + n[1] + n[2];
                MainProperty.cartTimer.baseList[r] || (MainProperty.cartTimer.baseList[r] = 0),
                MainProperty.cartTimer.baseList[r] += 1
            }
            break;
        case Args.SaveList:
            t && (a = t,
            0 <= MainProperty.cartTimer.removeList.indexOf(a) ? MainProperty.cartTimer.removeList.splice(MainProperty.cartTimer.removeList.indexOf(a), 1) : MainProperty.cartTimer.saveList.indexOf(a) < 0 && MainProperty.cartTimer.saveList.push(a));
            break;
        case Args.RemoveList:
            t && (a = t,
            0 <= MainProperty.cartTimer.saveList.indexOf(a) ? MainProperty.cartTimer.saveList.splice(MainProperty.cartTimer.saveList.indexOf(a), 1) : MainProperty.cartTimer.removeList.indexOf(a) < 0 && MainProperty.cartTimer.removeList.push(a))
        }
        MainProperty.cartTimer.time.send = Date.now()
    },
    ChkCartTimer: function() {
        var e = Date.now();
        if (MainProperty.cartTimer.time.send && 1e3 < e - MainProperty.cartTimer.time.send) {
            for (var t = [], a = [], i = 0; i < MainProperty.cartTimer.saveList.length; i++) {
                var n = (r = MainProperty.cartTimer.saveList[i].split("_"))[0] + r[1] + r[2];
                MainProperty.cartTimer.baseList[n] || (MainProperty.cartTimer.baseList[n] = 0,
                t.push([r[0], r[1], r[2]])),
                MainProperty.cartTimer.baseList[n] += 1
            }
            for (i = 0; i < MainProperty.cartTimer.removeList.length; i++) {
                var r, n = (r = MainProperty.cartTimer.removeList[i].split("_"))[0] + r[1] + r[2];
                --MainProperty.cartTimer.baseList[n],
                MainProperty.cartTimer.baseList[n] < 1 && a.push([r[0], r[1], r[2]])
            }
            0 < t.length && DataAdapter.SendCommand({
                action: "sc",
                value: t
            }),
            0 < a.length && DataAdapter.SendCommand({
                action: "rc",
                value: a
            }),
            MainProperty.cartTimer.time.send = null,
            MainProperty.cartTimer.baseList = {},
            MainProperty.cartTimer.saveList = [],
            MainProperty.cartTimer.removeList = [],
            clearInterval(MainProperty.cartTimer.scanner)
        }
    },
    InitialCartOddDataCache: function(e) {
        var t = null;
        if (e && 0 < e.length) {
            for (var a = e[0], i = e[1], t = {
                path: [a, i[3], i[0]],
                ra: i[1],
                rb: i[2],
                sId: i[4],
                isParlay: i[5],
                dt: i[6],
                wt: i[7],
                l: i[8],
                la: i[9],
                obm: i[10],
                gbm: i[11]
            }, n = [], r = 12; r < i.length; r++)
                n.push(i[r]),
                n.push(i[r + 1]),
                r += 1;
            t.o = n
        }
        return t
    },
    UpdateCartLimit: function(e) {
        for (var t, a = MainProperty.cart.list.length, i = 0; i < a; i++)
            e || (t = MainProperty.cart.list[i].split("_"),
            CartS1.UpdateLimit(t[0], t[1], t[2], t[3])),
            1 <= i && CartM1.UpdateLimit(!0, i + 1 + "x1");
        e && (t = e.split("_"),
        CartS1.UpdateLimit(t[0], t[1], t[2], t[3])),
        window.CartMN1 && "function" == typeof CartMN1.UpdateLimit && CartMN1.UpdateLimit(),
        2 < a && CartM1.UpdateLimit(!0, a + "x" + Cart.CalcMultiConsist(Args.CalcTotalPassNum, a, null)),
        2 <= a && CartM1.UpdateLimit(!1, a + "x1")
    },
    GetDefaultPoint: function(e) {
        var t = e === Args.Multi ? MainProperty.funcSetting.defPassPoint : MainProperty.funcSetting.defPoint
          , a = t[0]
          , i = "";
        return 1 == a ? i = e === Args.Multi ? MainProperty.cart.defPassPoint : MainProperty.cart.defPoint : 2 == a && t[1] && (i = t[1].toString()),
        i
    },
    GetCommonTitle: function(e, t, a, i) {
        for (var e = Tool.TransformGameType(e, Args.WholeLang), t = 2 == t ? Tool.TransformModeText(1, t) : "", e = t ? Cart.StrBind([e, t], {
            en: " - ",
            th: " - "
        }) : e, n = " - [" + i + "]", r = 0; r < langFont.Font_AllySuffix.length; r++)
            if (0 <= a.indexOf(langFont.Font_AllySuffix[r])) {
                n = "";
                break
            }
        return e + n
    }
};
!function(a, e) {
    this.WebGLPlayer = function(e, t) {
        t = t || {};
        var a, i = {
            autoplay: !0,
            initialVol: .5,
            volume: 1,
            muted: !0,
            style: {
                height: "100%",
                width: "100%",
                "object-fit": "fill"
            },
            classList: []
        };
        for (a in this.finalOpt = {},
        i)
            i.hasOwnProperty(a) && (this.finalOpt[a] = i[a]);
        for (a in t)
            t.hasOwnProperty(a) && (this.finalOpt[a] = t[a]);
        this.Container = e
    }
    ,
    this.WebGLPlayer.prototype = {
        Player: null,
        URL: "",
        Canvas: null,
        IsSupport: !1,
        IsCreated: !1,
        DecodeCount: 0,
        LastDecodeTime: 0,
        CheckTimer: null,
        CachedContext: null,
        Ready: !1,
        Unlocked: !(/iPhone|iPad|iPod/i.test(navigator.platform) || 0 <= navigator.userAgent.indexOf("Mac") && "ontouchend"in e),
        isReallyUnMuted: !1,
        isDestroyed: !1,
        OnCanPlay: function() {},
        OnSwitchChange: function() {},
        OnError: function() {},
        NeedsUnlocking: function() {
            return /iPhone|iPad|iPod/i.test(navigator.platform) || 0 <= navigator.userAgent.indexOf("Mac") && "ontouchend"in e
        },
        Initial: function(e) {
            if (this.isDestroyed)
                this.Destroy();
            else {
                a.AudioOutput.WebAudio.CachedContext = a.AudioOutput.WebAudio.CachedContext || (window.AudioContext || window.webkitAudioContext ? new (window.AudioContext || window.webkitAudioContext) : null);
                try {
                    null === a.AudioOutput.WebAudio.CachedContext || this.IsSupport || (this.CachedContext = a.AudioOutput.WebAudio.CachedContext,
                    this.Canvas || this.CreateCanvas(),
                    this.IsSupport = !0)
                } catch (e) {}
                "function" == typeof e && e()
            }
        },
        Destroy: function() {
            for (this.StopTimerCheckLast(),
            this.Close(),
            this.IsSupport = !1; this.Container.lastChild; )
                this.Container.removeChild(this.Container.lastChild);
            this.Player && (this.Player.audioOut && this.Player.audioOut.context && "function" == typeof this.Player.audioOut.context.suspend && this.Player.audioOut.context.suspend(),
            this.CachedContext = null,
            this.Player.audio = null,
            this.Player.audioOut = null),
            this.Unlocked = !this.NeedsUnlocking(),
            this.URL = ""
        },
        Play: function() {
            this.isDestroyed ? this.Destroy() : this.Player && (this.Player.play(),
            this.StartTimerCheckLast())
        },
        Pause: function() {
            this.Player && (this.StopTimerCheckLast(),
            this.Player.pause())
        },
        GetVolume: function() {
            return this.Player ? this.Player.volume : this.finalOpt.initialVol
        },
        SetVolume: function(e) {
            this.Player && (this.finalOpt.volume = e,
            this.Player.volume = e)
        },
        SwitchChange: function(e) {
            this.isDestroyed ? this.Destroy() : 0 === e.indexOf("wss://") && (this.Close(),
            this.URL = e,
            this.Start())
        },
        CreateCanvas: function() {
            this.Container.innerHTML = '<canvas width="0" height="0"></canvas>',
            this.Canvas = this.Container ? this.Container.querySelector("canvas") : null,
            this.SetStyle(this.finalOpt.style, this.finalOpt.classList)
        },
        CreateInitVideoSource: function() {
            var e = this;
            this.Player = new a.Player(this.URL,{
                canvas: this.Canvas,
                videoBufferSize: 1048576,
                audioBufferSize: 1048576,
                maxAudioLag: 1,
                audio: !this.finalOpt.muted,
                autoplay: this.finalOpt.autoplay,
                pauseWhenHidden: 1,
                reconnectInterval: 0,
                disableGl: !(this.Canvas.getContext("webgl") || this.Canvas.getContext("experimental-webgl"))
            }),
            this.Player.volume = 0,
            this.Player.options.onmessage = function() {
                30 === e.DecodeCount && (e.Ready = !0,
                e.Player.volume = e.finalOpt.volume,
                e.OnCanPlay(),
                e.Unlocked && !e.finalOpt.muted ? e.Player.audioOut && e.Player.audioOut.context && "running" !== e.Player.audioOut.context.state && "function" == typeof e.Player.audioOut.context.resume && e.Player.audioOut.context.resume() : e.Unlocked || e.finalOpt.muted || e.UnLocking(function() {
                    e.Player && e.Player.audioOut && e.Player.audioOut.context && "running" !== e.Player.audioOut.context.state && "function" == typeof e.Player.audioOut.context.resume && e.Player.audioOut.context.resume()
                }, e.finalOpt.muted)),
                e.LastDecodeTime = Date.now(),
                e.DecodeCount++
            }
            ,
            this.Player.options.onclose = function() {
                e.Ready = !1,
                e.Player.volume = 0,
                e.DecodeCount = 0
            }
        },
        SetStyle: function(e, t) {
            for (var a in e)
                this.Canvas.style[a] = e[a];
            for (var i = 0; i < t.length; i++)
                this.Canvas.className += t[i] + " "
        },
        Close: function() {
            this.IsSupport && this.IsCreated && this.Player && (this.Pause(),
            this.Player.volume = 0,
            this.Player.audioOut && this.Player.audioOut.context && "function" == typeof this.Player.audioOut.context.suspend && this.Player.audioOut.context.suspend(),
            this.Player.stop(),
            this.Player.source.socket && this.Player.source.socket.close(),
            this.IsCreated = !1)
        },
        Start: function() {
            this.isDestroyed ? this.Destroy() : this.IsCreated || (this.StartTimerCheckLast(),
            this.IsSupport && (this.IsCreated = !0,
            this.Player ? (this.Player.source.url = this.URL,
            this.Player.source.start(),
            this.Unlocked && this.AudioReconnect({
                audio: !1
            }, this.finalOpt.muted)) : this.CreateInitVideoSource(),
            this.finalOpt.autoplay ? this.Player.play() : this.Player.pause()))
        },
        UnLocking: function(e, t) {
            var a, i, n = this;
            n.AudioReconnect({
                audio: !0
            }, t),
            this.Unlocked ? e && e() : n.CachedContext && (a = n.CachedContext.createBuffer(1, 1, 22050),
            (i = n.CachedContext.createBufferSource()).buffer = a,
            i.connect(n.CachedContext.destination),
            i.start ? i.start(0) : i.noteOn(0),
            i.onended = function() {
                n.CachedContext && i.disconnect(n.CachedContext.destination)
            }
            ,
            n.Player.audioOut.unlock(function() {
                !this.isReallyUnMuted && e && e(),
                this.isReallyUnMuted = !0
            }
            .bind(this)),
            this.isReallyUnMuted || setTimeout(function() {
                this.isReallyUnMuted || this.UnLocking(e, t)
            }
            .bind(this), 0))
        },
        AudioReconnect: function(e, t) {
            this.Player && (this.Player.audioOut && this.Player.audioOut.context && "function" == typeof this.Player.audioOut.context.suspend && this.Player.audioOut.context.suspend(),
            t || (!e.audio && this.Player.audioOut || ((e = e || {}).streaming = !0,
            e.maxAudioLag = 1,
            e.reconnectInterval = 0,
            this.Player.audio = new a.Decoder.MP2Audio(e),
            this.Player.audioOut = new a.AudioOutput.WebAudio(e),
            this.Player.demuxer.connect(a.Demuxer.TS.STREAM.AUDIO_1, this.Player.audio),
            this.Player.audio.connect(this.Player.audioOut)),
            !t && this.Ready && this.Player.audioOut && this.Player.audioOut.context && "function" == typeof this.Player.audioOut.context.resume && this.Player.audioOut.context.resume()))
        },
        SetMuted: function(e) {
            this.Player && (e ? (this.isReallyUnMuted = !1,
            this.Player.volume = 0) : this.UnLocking(function() {
                this.Ready && (this.Player.volume = this.finalOpt.volume),
                this.Ready && this.Player.audioOut && this.Player.audioOut.context && "function" == typeof this.Player.audioOut.context.resume && this.Player.audioOut.context.resume()
            }
            .bind(this), !1),
            this.finalOpt.muted = e)
        },
        StartTimerCheckLast: function() {
            this.isDestroyed ? this.Destroy() : (this.StopTimerCheckLast(),
            this.LastDecodeTime = Date.now(),
            this.TimerCheck())
        },
        TimerCheck: function() {
            this.isDestroyed ? this.Destroy() : ((5e3 < Date.now() - this.LastDecodeTime && null !== this.Player || 1e4 < Date.now() - this.LastDecodeTime) && (this.StopTimerCheckLast(),
            this.OnError()),
            this.CheckTimer = setTimeout(function() {
                this.isDestroyed ? this.Destroy() : this.TimerCheck()
            }
            .bind(this), 1e3))
        },
        StopTimerCheckLast: function() {
            null !== this.CheckTimer && (clearTimeout(this.CheckTimer),
            this.CheckTimer = null)
        }
    }
}(JSMpeg, document),
function(r) {
    this.SldpVideoPlayer = function(e, t) {
        t = t || {};
        var a, i = {
            src: "",
            autoplay: !0,
            muted: !0,
            width: "parent",
            height: "parent",
            buffering: 500,
            offset: 900,
            pause_timeout: 5,
            controls: !1,
            keepSldpMuted: !1,
            initialVol: .5,
            volume: 1,
            style: {
                height: "100%",
                width: "100%",
                "object-fit": "fill"
            },
            classList: []
        };
        for (a in this.finalOpt = {},
        i)
            i.hasOwnProperty(a) && (this.finalOpt[a] = i[a]);
        for (a in t)
            t.hasOwnProperty(a) && (this.finalOpt[a] = t[a]);
        this.Container = e
    }
    ,
    this.SldpVideoPlayer.prototype = {
        Player: null,
        Video: null,
        LastDecodeTime: 0,
        SuckStatus: 0,
        CheckTimer: null,
        FastSrc: "",
        isDestroyed: !1,
        OnCanPlay: function() {},
        OnError: function() {},
        OnPause: function() {},
        TestSpeed: function(e, t) {
            var a = []
              , i = !1
              , n = "";
            e.forEach(function(e) {
                var t;
                i || (t = r.init({
                    container: this.Container.id,
                    stream_url: e,
                    autoplay: !0,
                    width: 0,
                    height: 0,
                    buffering: 100,
                    latency_tolerance: 400,
                    controls: !1,
                    onPlay: function() {
                        n = e,
                        i = !0,
                        a.forEach(function(e) {
                            e.player.destroy()
                        })
                    }
                }),
                a.push({
                    player: t,
                    url: e
                }))
            }
            .bind(this)),
            setTimeout(function() {
                i || (n = e[0]),
                this.FastSrc = n,
                i = !0,
                a.forEach(function(e) {
                    e.player.destroy()
                }),
                "function" == typeof t && t()
            }
            .bind(this), 1e3)
        },
        Initial: function(e) {
            var t;
            this.isDestroyed ? this.Destroy() : (t = {
                container: this.Container.id,
                stream_url: this.finalOpt.src,
                autoplay: this.finalOpt.autoplay,
                muted: this.finalOpt.keepSldpMuted,
                buffering: this.finalOpt.buffering,
                offset: this.finalOpt.offset,
                pause_timeout: this.finalOpt.pause_timeout,
                controls: this.finalOpt.controls
            },
            this.Player ? this.Player.initialize(t) : this.Player = r.init(t),
            this.Video = this.Container ? this.Container.querySelector("video") : null,
            this.Video && (this.SetStyle(this.finalOpt.style, this.finalOpt.classList),
            this.Video.volume = this.finalOpt.volume,
            this.Video.muted = this.finalOpt.muted,
            this.Video.play(),
            this.Video.addEventListener("canplay", this.OnCanPlay),
            this.Video.addEventListener("error", function(e) {
                this.StopTimerCheckLast(),
                this.SuckStatus = 0,
                this.OnError(e)
            }
            .bind(this)),
            this.StartTimerCheckLast()),
            "function" == typeof e && e())
        },
        Destroy: function() {
            this.StopTimerCheckLast(),
            this.Player && this.Player.destroy(),
            this.Video = null
        },
        SetStyle: function(e, t) {
            if (this.Video) {
                for (var a in e)
                    this.Video.style[a] = e[a];
                this.Video.className += " ";
                for (var i = 0; i < t.length; i++)
                    this.Video.className += t[i] + " "
            }
        },
        SwitchChange: function(e, t) {
            this.Destroy(),
            this.finalOpt.src = e,
            this.Initial(t)
        },
        StartTimerCheckLast: function() {
            this.isDestroyed ? this.Destroy() : null !== this.Video && (this.StopTimerCheckLast(),
            this.LastDecodeTime = Date.now(),
            this.CheckTimer = setInterval(function() {
                this.isDestroyed ? this.Destroy() : (2 < this.Video.readyState && 0 === this.SuckStatus ? (this.LastDecodeTime = Date.now(),
                this.Video.paused && this.OnPause()) : this.Video.readyState < 3 && this.SuckStatus++,
                5e3 < Date.now() - this.LastDecodeTime && (4 <= this.SuckStatus ? (this.StopTimerCheckLast(),
                this.OnError()) : this.LastDecodeTime = Date.now(),
                this.SuckStatus = 0))
            }
            .bind(this), 1e3))
        },
        StopTimerCheckLast: function() {
            null !== this.CheckTimer && (clearInterval(this.CheckTimer),
            this.CheckTimer = null)
        },
        SetVolume: function(e) {
            e = parseFloat(e),
            !isNaN(e) && 0 <= e && e <= 1 && (this.finalOpt.volume = e,
            this.Video && (this.Video.volume = e))
        },
        GetVolume: function() {
            return this.Video ? this.Video.volume : this.finalOpt.initialVol
        },
        TriggerMuted: function() {
            this.Video.muted ? this.finalOpt.muted = !1 : this.finalOpt.muted = !0,
            this.Video && (this.Video.muted = this.finalOpt.muted)
        },
        SetMuted: function(e) {
            this.finalOpt.muted = e,
            this.Video && (this.Video.muted = e)
        }
    }
}(SLDP, document),
function(t) {
    this.HlsPlayer = function(e, t) {
        t = t || {};
        var a, i = {
            src: "",
            autoplay: !0,
            initialVol: .5,
            volume: 1,
            muted: !0,
            isHls: !0,
            noSupportHtml5Tip: "",
            style: {
                height: "100%",
                width: "100%",
                "object-fit": "fill"
            },
            classList: []
        };
        for (a in this.finalOpt = {},
        i)
            i.hasOwnProperty(a) && (this.finalOpt[a] = i[a]);
        for (a in t)
            t.hasOwnProperty(a) && (this.finalOpt[a] = t[a]);
        this.Container = e
    }
    ,
    this.HlsPlayer.prototype = {
        Video: null,
        HLS: null,
        LastDecodeTime: 0,
        SuckStatus: 0,
        CheckTimer: null,
        PlayTimer: null,
        SuckPlay: !1,
        isDestroyed: !1,
        OnCanPlay: function() {},
        OnError: function() {},
        OnPause: function() {},
        OnVideoError: function(e) {
            this.StopTimerCheckLast && this.StopTimerCheckLast(),
            this.SuckStatus && (this.SuckStatus = 0),
            this.OnError && this.OnError(e)
        },
        UseHls: function() {
            return t.isSupported() && this.finalOpt.isHls && !/OnePlusBrowser/i.test(navigator.userAgent) && !/MiuiBrowser/i.test(navigator.userAgent) && !(/Safari/i.test(navigator.userAgent) && !/Chrome/i.test(navigator.userAgent))
        },
        Initial: function(e) {
            this.isDestroyed ? this.Destroy() : this.Container && (BBWebAudio && BBWebAudio.Video && BBWebAudio.IsIOS ? this.Container.appendChild(BBWebAudio.Video) : this.Container.innerHTML = '<video playsinline="true" webkit-playsinline="true" x5-playsinline="true" x5-video-player-fullscreen="false" autoplay>' + this.finalOpt.noSupportHtml5Tip + "</video>",
            this.Video = this.Container ? this.Container.querySelector("video") : null,
            this.Video && (this.SetStyle(this.finalOpt.style, this.finalOpt.classList),
            this.UseHls() ? (this.HLS = new t({
                autoStartLoad: !1,
                maxBufferLength: 15,
                maxMaxBufferLength: 16,
                maxBufferSize: 14e6,
                backBufferLength: 90
            }),
            this.InitialHLS()) : ("" !== this.finalOpt.src && (this.Video.src = this.finalOpt.src),
            this.Video.addEventListener("error", this.OnVideoError.bind(this))),
            this.Video.addEventListener("canplay", this.OnCanPlay),
            this.Video.autoplay = this.finalOpt.autoplay,
            this.Video.muted = this.finalOpt.muted,
            this.Video.volume = this.finalOpt.volume,
            "" !== this.finalOpt.src && this.SwitchChange(this.finalOpt.src)),
            "function" == typeof e && e())
        },
        InitialHLS: function() {
            "" !== this.finalOpt.src && (this.HLS.loadSource(this.finalOpt.src),
            this.HLS.attachMedia(this.Video),
            this.HLS.on(t.Events.ERROR, this.OnVideoError.bind(this)))
        },
        SetStyle: function(e, t) {
            for (var a in e)
                this.Video.style[a] = e[a];
            for (var i = 0; i < t.length; i++)
                this.Video.className += t[i] + " "
        },
        SwitchChange: function(e) {
            this.isDestroyed ? this.Destroy() : (this.Pause(),
            this.finalOpt.src = e,
            clearTimeout(this.PlayTimer),
            this.PlayTimer = null,
            this.Video && (this.UseHls() ? (this.HLS && this.HLS.stopLoad(),
            this.HLS && this.HLS.destroy(),
            this.HLS = new t({
                autoStartLoad: !1,
                maxBufferLength: 15,
                maxMaxBufferLength: 16,
                maxBufferSize: 14e6,
                backBufferLength: 90
            }),
            this.InitialHLS()) : (this.Video.src = e,
            this.Video.load()),
            this.finalOpt.autoplay && this.Play()))
        },
        StartTimerCheckLast: function() {
            this.isDestroyed ? this.Destroy() : null !== this.Video && (this.StopTimerCheckLast(),
            this.LastDecodeTime = Date.now(),
            this.CheckTimer = setInterval(function() {
                this.isDestroyed ? this.Destroy() : (2 < this.Video.readyState && 0 === this.SuckStatus ? (this.LastDecodeTime = Date.now(),
                this.Video.paused && this.OnPause()) : this.Video.readyState < 3 && this.SuckStatus++,
                5e3 < Date.now() - this.LastDecodeTime && (3 <= this.SuckStatus ? (this.StopTimerCheckLast(),
                this.OnError()) : this.LastDecodeTime = Date.now(),
                this.SuckStatus = 0))
            }
            .bind(this), 1e3))
        },
        StopTimerCheckLast: function() {
            null !== this.CheckTimer && (clearInterval(this.CheckTimer),
            this.CheckTimer = null)
        },
        SetVolume: function(e) {
            e = parseFloat(e),
            this.Video && !isNaN(e) && 0 <= e && e <= 1 && (this.finalOpt.volume = e,
            this.Video.volume = e)
        },
        GetVolume: function() {
            return this.Video ? this.Video.volume : this.finalOpt.initialVol
        },
        TriggerMuted: function() {
            this.Video && (this.Video.muted ? (this.finalOpt.muted = !1,
            this.Video.muted = !1) : (this.finalOpt.muted = !0,
            this.Video.muted = !0))
        },
        SetMuted: function(e) {
            this.Video && (this.finalOpt.muted = e,
            this.Video.muted = e)
        },
        Play: function() {
            var e;
            this.isDestroyed ? this.Destroy() : this.Video && "" !== this.finalOpt.src && (this.SuckPlay = !1,
            this.StartTimerCheckLast(),
            this.UseHls() && this.HLS.startLoad(),
            e = this.Video.play(),
            !this.UseHls() && e && e.catch(function(e) {
                switch (e.message) {
                case "Failed to load because no supported source was found.":
                case "The operation is not supported.":
                    this.StopTimerCheckLast(),
                    this.SuckPlay = !0;
                    break;
                case "The operation was aborted.":
                    break;
                default:
                    this.StopTimerCheckLast(),
                    this.OnError(e)
                }
            }
            .bind(this)))
        },
        Pause: function() {
            this.Video && (this.Video.pause(),
            this.StopTimerCheckLast(),
            this.UseHls() && this.HLS && (this.HLS.stopLoad(),
            this.HLS.detachMedia()),
            this.Video.removeAttribute("src"))
        },
        Clear: function() {
            this.Video && (this.Video.pause(),
            this.finalOpt.src = "",
            this.UseHls() && this.HLS ? (this.HLS.stopLoad(),
            this.HLS.detachMedia(),
            this.HLS.destroy()) : (this.Video.removeAttribute("src"),
            this.Video.load()),
            this.StopTimerCheckLast())
        },
        Destroy: function() {
            this.Video && (this.Video.removeEventListener("canplay", this.OnCanPlay),
            this.Video.removeEventListener("error", this.OnVideoError)),
            this.Clear(),
            this.Video = null,
            this.HLS = null,
            this.Container && (this.Container.innerHTML = "")
        }
    }
}(Hls, document);
var BBWebAudio = {
    Init: !1,
    UnLocked: !1,
    IsIOS: Tool.IsIOS,
    WebAudioContext: null,
    Video: null,
    WebAudioIsSupported: function() {
        return !(!window.AudioContext && !window.webkitAudioContext)
    },
    WebAudioTouchUnlock: function(i) {
        return new Promise(function(e, t) {
            var a;
            "suspended" === i.state && "ontouchstart"in window ? (a = function() {
                i.resume().then(function() {
                    document.body.removeEventListener("touchstart", a),
                    document.body.removeEventListener("click", a),
                    document.body.removeEventListener("touchend", a),
                    e(!0)
                }, function(e) {
                    t(e)
                })
            }
            ,
            document.body.addEventListener("touchstart", a, !1),
            document.body.addEventListener("click", a, !1),
            document.body.addEventListener("touchend", a, !1)) : e(!1)
        }
        )
    },
    UnlockProcess: function() {
        var e, t, a, i = BBWebAudio;
        i.Init || (i.Init = !0,
        (e = document.createElement("audio")).controls = !1,
        e.preload = "auto",
        e.loop = !1,
        e.src = "data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAADAAAGhgBVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr///////////////////////////////////////////8AAAA5TEFNRTMuOThyAc0AAAAAAAAAABSAJAiqQgAAgAAABobxtI73AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQxAACFEII9ACZ/sJZwWEoEb8w/////N//////JcxjHjf+7/v/H2PzCCFAiDtGeyBCIx7bJJ1mmEEMy6g8mm2c8nrGABB4h2Mkmn//4z/73u773R5qHHu/j/w7Kxkzh5lWRWdsifCkNAnY9Zc1HvDAhjhSHdFkHFzLmabt/AQxSg2wwzLhHIJOBnAWwVY4zrhIYhhc2kvhYDfQ4hDi2Gmh5KyFn8EcGIrHAngNgIwVIEMf5bzbAiTRoAD///8z/KVhkkWEle6IX+d/z4fvH3BShK1e5kmjkCMoxVmXhd4ROlTKo3iipasvTilY21q19ta30/v/0/idPX1v8PNxJL6ramnOVsdvMv2akO0iSYIzdJFirtzWXCZicS9vHqvSKyqm5XJBdqBwPxyfJdykhWTZ0G0ZyTZGpLKxsNwwoRhsx3tZfhwmeOBVISm3impAC/IT/8hP/EKEM1KMdVdVKM2rHV4x7HVXZvbVVKN/qq8CiV9VL9jjH/6l6qf7MBCjZmOqsAibjcP+qqqv0oxqpa/NVW286hPo1nz2L/h8+jXt//uSxCmDU2IK/ECN98KKtE5IYzNoCfbw+u9i5r8PoadUMFPKqWL4LK3T/LCraMSHGkW4bpLXR/E6LlHOVQxmslKVJ8IULktMN06N0FKCpHCoYsjC4F+Z0NVqdNFoGSTjSiyjzLdnZ2fNqTi2eHKONONKLMPMKLONKLMPQRJGlFxZRoKcJFAYEeIFiRQkUWUeYfef//Ko04soswso40UJAgMw8wosososy0EalnZyjQUGBRQGIFggOWUacWUeYmuadrZziQKKEgQsQLAhQkUJAgMQDghltLO1onp0cpkNInSFMqlYeSEJ5AHsqFdOwy1DA2sRmRJKxdKRfLhfLw5BzUxBTUUzLjk4LjJVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUxBTUUzLjk4LjJVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/7ksRRA8AAAaQAAAAgAAA0g
        document.addEventListener("visibilitychange", function() {
            "visible" == document.visibilityState && e.play()
        }),
        e.play(),
        i.WebAudioContext && (t = i.WebAudioContext.createBuffer(1, 1, 22050),
        (a = i.WebAudioContext.createBufferSource()).buffer = t,
        a.connect(i.WebAudioContext.destination),
        a.start ? a.start(0) : a.noteOn(0),
        a.onended = function() {
            a.disconnect(i.WebAudioContext.destination)
        }
        ),
        i.Video = document.createElement("video"),
        i.Video.id = "videoPlayer",
        i.Video.setAttribute("playsinline", !0),
        i.Video.setAttribute("webkit-playsinline", !0),
        i.Video.setAttribute("x5-playsinline", !0),
        i.Video.setAttribute("x5-video-player-fullscreen", !0),
        i.Video.autoplay = !0,
        i.Video.innerText = langFont.Font_DoesnotSupportTag,
        i.Video.play()),
        i.UnLocked = !0,
        window.removeEventListener("click", i.UnlockProcess, !1),
        window.removeEventListener("touchstart", i.UnlockProcess, !1),
        window.removeEventListener("touchend", i.UnlockProcess, !1)
    }
};
try {
    BBWebAudio.WebAudioContext = BBWebAudio.WebAudioIsSupported() ? new (window.AudioContext || window.webkitAudioContext) : null,
    BBWebAudio.WebAudioContext && BBWebAudio.WebAudioTouchUnlock(BBWebAudio.WebAudioContext).then(function(e) {
        JSMpeg.AudioOutput.WebAudio.CachedContext = BBWebAudio.WebAudioContext
    }),
    window.addEventListener("click", BBWebAudio.UnlockProcess, !1),
    window.addEventListener("touchstart", BBWebAudio.UnlockProcess, !1),
    window.addEventListener("touchend", BBWebAudio.UnlockProcess, !1)
} catch (e) {}
var PlayerFactroy = function(e, t) {
    this.player = null,
    this.position = e,
    this.container = t,
    this.chVal = "",
    this.domain = [],
    this.radarId = "",
    this.channelUrl = [],
    this.nowSrc = Array(3),
    this.videoSource = null,
    this.options = null,
    this.sldpErrorMsgTimer = null,
    this.consoleTimer = null,
    this.consoleShow = !1,
    this.freshLock = !1,
    this.RedirectPool = {},
    this.InitPlayer = function(e, t, a, i) {
        if (0 != DataAdapter.PageVisibility.status || 1 != MainProperty.IsIosBagOrAndroidApp) {
            if (this.RedirectPool = {},
            !this.player) {
                t = (this.options = t) || {};
                var n, r = {
                    position: this.position,
                    container: this.container,
                    InitialVol: PlayerAPI.InitialVol,
                    volume: PlayerAPI.Volume,
                    muted: PlayerAPI.Muted
                };
                for (n in t)
                    t.hasOwnProperty(n) && (r[n] = t[n]);
                e === VideoSource.Hls ? (this.videoSource = VideoSource.Hls,
                this.player = new M3u8Player) : e !== VideoSource.Sldp && e !== VideoSource.WebGL || (PlayerAPI.IsSupportSldp() && 0 < this.GetDomain("sldp").length && PlayerAPI.SldpUse ? (this.videoSource = VideoSource.Sldp,
                this.player = new SldpPlayer,
                this.DoSldpErrorMsgTimer(!0)) : (this.videoSource = VideoSource.WebGL,
                this.player = new WebSocketPlayer)),
                this.player && this.player.Init(r)
            }
            i && PlayerAPI.IsAndroidAPP() && this.videoSource === VideoSource.WebGL ? this.WebSocketFirstTestSpeed() : this.StartPlayer(a)
        }
    }
    ,
    this.StartPlayer = function(e) {
        Panel.DisplayMessage(this.position, Args.LiveTvLoading, !0),
        null != this.player && (this.chVal || this.radarId) && this.player.Start(this.chVal, this.domain, this.radarId, e)
    }
    ,
    this.DestroyPlayer = function() {
        this.DoSldpErrorMsgTimer(!1),
        this.player && (this.player && this.player.player && !1 === this.player.player.isDestroyed && (this.player.player.isDestroyed = !0),
        Panel.DisplayMessage(this.position, Args.LiveTvLoading, !0),
        this.player.Destroy(),
        this.player = null,
        this.videoSource = null)
    }
    ,
    this.ResetPlayer = function() {
        this.DestroyPlayer(),
        this.InitPlayer(this.videoSource, this.options, !1, !0)
    }
    ,
    this.RefreshPlayer = function() {
        this.player && !this.freshLock && (this.freshLock = !0,
        setTimeout(function() {
            this.freshLock = !1
        }
        .bind(this), 1e3),
        this.player.RefreshLine())
    }
    ,
    this.SetMuted = function(e, t) {
        this.player && (t && (PlayerAPI.Muted = e),
        this.player.SetMuted(e))
    }
    ,
    this.SetVolume = function(e, t) {
        this.player && (t && (PlayerAPI.Volume = e),
        this.player.SetVolume(e))
    }
    ,
    this.SetChannel = function(e, t, a, i) {
        var n = !0;
        return this.chVal = e,
        this.domain = t,
        this.radarId = a,
        this.player && (this.chVal || this.radarId ? n = this.player.SetChannel(this.chVal, this.domain, this.radarId) : BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\nchaVal與雷達ID為空\r\n觸發來源:" + i + "\r\ntoken: " + MainProperty.sessionID + "\r\n內頁gId: " + MainProperty.innerPage + "\r\npanel: " + MainProperty.panelData.panel + "\r\nposition: " + this.position + "\r\nsource: VideoInfoError\r\ntype:Factory\r\ngameLive:" + JSON.stringify(MainProperty.panelData.gameLive) + "\r\ngirlLive:" + JSON.stringify(MainProperty.panelData.girlLive) + "\r\npopGameLive:" + JSON.stringify(MainProperty.panelData.popGameLive) + "\r\nvideoSource: " + this.videoSource + "\r\ndomain:" + this.domain + "\r\nchVal: " + this.chVal + ", radarId: " + this.radarId + "\r\n")),
        n
    }
    ,
    this.Play = function() {
        this.player && this.player.Play()
    }
    ,
    this.DoSldpErrorMsgTimer = function(e) {
        e ? null == this.sldpErrorMsgTimer && this.SldpErrorMsgProcess() : (clearTimeout(this.sldpErrorMsgTimer),
        this.sldpErrorMsgTimer = null)
    }
    ,
    this.SldpErrorMsgProcess = function() {
        this.sldpErrorMsgTimer = setTimeout(function() {
            var e;
            PlayerAPI.SldpUse ? (0 < (e = document.getElementsByClassName("sldp_message")).length && (0 <= (e = e[0].innerText).indexOf("[#]") || 0 <= e.indexOf("[＃]") || (PlayerAPI.SldpUse = !1,
            BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\nsource: SldpVideoMessage\r\ndevice: " + MainProperty.userDevice + "\r\nbrowser: " + GetBrowserType() + "\r\nmsg: " + e + "\r\n"))),
            this.SldpErrorMsgProcess()) : (this.DoSldpErrorMsgTimer(!1),
            this.ResetPlayer())
        }
        .bind(this), 3e3)
    }
    ,
    this.GetDomain = function(e) {
        for (var t = [], a = 0; a < this.domain.length; a++) {
            var i = this.domain[a];
            i && ("sldp" === e ? 1 == i[3] && t.push([i[0], i[1], i[2]]) : 2 == i[3] && t.push([i[0], i[1], i[2]]))
        }
        return t
    }
    ,
    this.WebSocketFirstTestSpeed = function() {
        var t, a, i = this.GetDomain(), e = GetCookie("domain"), e = e && "string" == typeof e ? JSON.parse(e) : {
            domain: []
        };
        0 < e.domain.length && e.domain.length === i.length ? this.StartPlayer() : (t = this,
        a = Date.now() + GetRanStr(4),
        this.RedirectPool[a] = function(e) {
            SetCookie("domain", JSON.stringify({
                domain: e
            })),
            t.domain = e,
            t.StartPlayer(),
            delete t.RedirectPool[a]
        }
        ,
        MainProperty.serverTime.ms - PlayerAPI.KStreamTimer >= PlayerAPI.StreamTime ? $.ajax({
            type: "post",
            url: "/ajax/AjaxInfo.aspx",
            data: {
                method: "GetAnchorPath"
            },
            dataType: "text",
            error: function(e) {
                1 != LogOutCheck('{"st":"' + e.status + '"}') && "function" == typeof t.RedirectPool[a] && t.RedirectPool[a](i)
            },
            success: function(e) {
                1 != LogOutCheck(e) && (e = JSON.parse(GetUnZip(e)),
                t.GetAnchorPathProcess(e.token, e.expireTime, i, a),
                PlayerAPI.KStreamTimer = MainProperty.serverTime.ms,
                PlayerAPI.KStreamToken = e.token,
                PlayerAPI.KStreamExpireTime = e.expireTime)
            }
        }) : this.GetAnchorPathProcess(PlayerAPI.KStreamToken, PlayerAPI.KStreamExpireTime, i, a))
    }
    ,
    this.GetAnchorPathProcess = function(e, t, a, i) {
        for (var n = this, r = this.chVal, s = [], o = {}, l = 0; l < a.length; l++) {
            var c = a[l]
              , d = c[0].replace("wss://", "");
            s.push(d.replace("/{token}", "/" + e).replace("/{expire-time}", "/" + t).replace("/{streamId}", "/" + r)),
            o[d.split("/")[0]] = [c[1], c[2]]
        }
        var u = null;
        WebGLPlayerWorker.GetFastestUrl(s, function(e, t) {
            clearTimeout(u);
            t = [e].concat(t).map(function(e) {
                return ["wss://" + (e = e.split("/")[0]) + "/apps/{token}/{expire-time}/{streamId}", o[e][0], o[e][1]]
            });
            "function" == typeof n.RedirectPool[i] && n.RedirectPool[i](t)
        }),
        u = setTimeout(function() {
            "function" == typeof n.RedirectPool[i] && n.RedirectPool[i](a)
        }, 3e3)
    }
}
  , PlayerAPI = {
    InitialVol: Tool.IsTouch ? 1 : .5,
    Volume: Tool.IsTouch ? 1 : .5,
    Muted: !1,
    SldpUse: !0,
    BestSldpSrc: "",
    BestSldpIdx: -1,
    CanFullScreen: {},
    KidnapTimer: null,
    StreamTime: 3e4,
    KStreamTimer: null,
    KStreamToken: "",
    KStreamExpireTime: "",
    TStreamToken: {},
    IsAndroidAPP: function() {
        return MainProperty.isApp && window.JBS
    },
    IsMobileNotVisibility: function() {
        return Tool.IsTouch && (1 == document.hidden || "hidden" == document.visibilityState) && (0 == MainProperty.IsIosBagOrAndroidApp || MainProperty.IsIosBagOrAndroidApp && 0 == DataAdapter.PageVisibility.status)
    },
    CannotUseSldpBrowser: function() {
        var e = GetBrowserType();
        return 0 <= ["Safari"].indexOf(e) || "pc" != MainProperty.webDevice && 0 <= ["UC", "QQ", "OnePlusBrowser", "HeyTapBrowser", "OppoBrowser", "SamsungBrowser", "Baidu", "MiuiBrowser", "VivoBrowser"].indexOf(e)
    },
    IsSupportSldp: function() {
        return !this.CannotUseSldpBrowser() && !Tool.IsIOS
    },
    IsKidnapPlayerBrowser: function() {
        return "mobile" == MainProperty.webDevice && 0 <= ["UC", "QQ", "OnePlusBrowser", "HeyTapBrowser", "OppoBrowser", "Baidu"].indexOf(GetBrowserType())
    },
    IsKidnapPlayerFullScreenBrowser: function() {
        return "mobile" == MainProperty.webDevice && (!Tool.IsIOS && 0 <= ["OppoBrowser"].indexOf(GetBrowserType()) || Tool.IsIOS && 0 <= ["UC"].indexOf(GetBrowserType()))
    },
    StartTimerCheckKidnap: function(e, t) {
        clearTimeout(this.KidnapTimer),
        this.IsKidnapPlayerBrowser() && 0 <= [Args.GameLive, Args.Anchor].indexOf(MainProperty.panelData.panel) && (0 < $(t).length ? (this[e].DestroyPlayer(),
        Panel.DisplayMessage(Args.LiveTv, Args.LiveTvPlayMask, !0)) : (!this[e].player || this[e].player && this[e].player.player && this[e].player.player.Video && this[e].player.player.Video.paused) && (PlayerAPI.IsKidnapPlayerFullScreenBrowser() ? Panel.DisplayMessage(Args.LiveTv, Args.LiveTvPlayMask, !0) : MainProperty.panelData.panel == Args.GameLive && (MainProperty.panelData.gameLive.route || MainProperty.panelData.gameLive.rSteamId) && MainProperty.panelData.gameLive.domain ? PlayerAPI[e].SetChannel(MainProperty.panelData.gameLive.route, MainProperty.panelData.gameLive.domain, MainProperty.panelData.gameLive.rSteamId, "StartTimerCheckKidnap gameLive") ? PlayerAPI[Args.LiveTv].InitPlayer(VideoSource.Hls, null, !0) : PlayerAPI[Args.LiveTv].Play() : MainProperty.panelData.panel == Args.Anchor && MainProperty.panelData.girlLive.route && MainProperty.panelData.girlLive.domain && (PlayerAPI[e].SetChannel(MainProperty.panelData.girlLive.route, MainProperty.panelData.girlLive.domain, null, "StartTimerCheckKidnap girlLive") ? PlayerAPI[Args.LiveTv].InitPlayer(VideoSource.Sldp, null, !0) : PlayerAPI[Args.LiveTv].Play())),
        this.KidnapTimer = setTimeout(function() {
            this.StartTimerCheckKidnap(e, t)
        }
        .bind(this), 1e3))
    },
    StopTimerCheckKidnap: function() {
        null !== this.KidnapTimer && (clearTimeout(this.KidnapTimer),
        this.KidnapTimer = null)
    },
    IsFullScreen: function() {
        var e = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
        return "pc" == MainProperty.webDevice ? null != e || null != e : $("#innerGameLive").hasClass("full")
    },
    SetFullScreen: function(e, t) {
        (this.CanFullScreen[t] || PlayerAPI.IsFullScreen()) && ("pc" == MainProperty.webDevice ? this.IsFullScreen() ? this.ExitFullScreen() : this.FullScreen(e) : "function" == typeof Panel.SetFullScreenStyle && Panel.SetFullScreenStyle(!0))
    },
    FullScreen: function(e) {
        !this.IsFullScreen() && e && (e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen ? e.msRequestFullscreen() : e.webkitEnterFullScreen && e.webkitEnterFullScreen(),
        requestAnimationFrame(function() {
            $("#innerGameLive").add("#popGameLive").addClass("full")
        }))
    },
    ExitFullScreen: function() {
        this.IsFullScreen() && ("pc" == MainProperty.webDevice ? document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.msExitFullscreen ? document.msExitFullscreen() : (this[Args.LiveTv] && this[Args.LiveTv].videoSource === VideoSource.Hls && this[Args.LiveTv].player && this[Args.LiveTv].player.Video && this[Args.LiveTv].player.Video.webkitExitFullscreen(),
        this[Args.PopLiveTv] && this[Args.PopLiveTv].videoSource === VideoSource.Hls && this[Args.PopLiveTv].player && this[Args.PopLiveTv].player.Video && this[Args.PopLiveTv].player.Video.webkitExitFullscreen()) : "function" == typeof Panel.SetFullScreenStyle && Panel.SetFullScreenStyle(!1))
    },
    SetLine: function(e, t) {
        Panel.SetLineText(e, t)
    },
    DisplayMessage: function(e, t, a) {
        this.CanFullScreen[e] = !a,
        Panel.DisplayMessage(e, t, a)
    }
}
  , M3u8Player = function() {
    this.speedLock = !1,
    this.type = "m3u8",
    this.chSign = "※",
    this.rdId = "",
    this.rdSt = "",
    this.rdSort = 0,
    this.rdUse = !1,
    this.rdBan = !1,
    this.rdFirst = !1,
    this.rdXhrUrl = "",
    this.rdXhrTimer = 0,
    this.bUrlSt = !1,
    this.rdUrlSt = !1,
    this.rdErrorCount = 0,
    this.errorProxyUrl = [],
    this.radarUrl = [],
    this.failTimer = 0,
    this.chVal = [],
    this.channelUrl = [],
    this.domain = "",
    this.rdId = "",
    this.ApiProcess = function() {}
    ,
    this.Init = function(e) {
        this.muted = e.muted,
        this.position = e.position,
        this.ApiProcess = function(e, t, a) {
            switch (e) {
            case "DisplayMessage":
                PlayerAPI.DisplayMessage(this.position, t, a);
                break;
            case "SetLine":
                PlayerAPI.SetLine(this.position, a)
            }
        }
        .bind(this);
        try {
            this.player = new HlsPlayer(e.container,{
                muted: e.muted,
                InitialVol: e.InitialVol,
                volume: e.volume,
                noSupportHtml5Tip: e.tip || "",
                style: e.style,
                classList: e.classList || ["liveTv_view"]
            }),
            this.player.OnCanPlay = function() {
                this.player && this.player.Video && this.player.Video.paused ? (PlayerAPI.IsKidnapPlayerBrowser() && this.Reset(),
                this.ApiProcess("DisplayMessage", Args.LiveTvPlayMask, !0)) : 3 == this.player.Video.readyState && 0 < this.player.Video.currentTime || 3 < this.player.Video.readyState ? this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !1) : this.player.OnError()
            }
            .bind(this),
            this.player.OnError = function(e) {
                e = e && e.message ? e.message : "none";
                this.player && (this.player.StopTimerCheckLast(),
                e = 0 <= e.indexOf("gesture"),
                !0 === this.player.SuckPlay ? this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0) : PlayerAPI.IsKidnapPlayerBrowser() || e ? (PlayerAPI.IsKidnapPlayerBrowser() || e) && this.ApiProcess("DisplayMessage", Args.LiveTvPlayMask, !0) : this.TestSpeedProcess())
            }
            .bind(this),
            this.player.OnPause = function() {
                PlayerAPI.IsKidnapPlayerBrowser() && this.Reset(),
                this.ApiProcess("DisplayMessage", Args.LiveTvPlayMask, !0)
            }
            .bind(this),
            this.player.Initial()
        } catch (e) {
            BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\nsource: VideoInitialError\r\ntype: " + this.type + "\r\nmsg: " + e + "\r\n")
        }
    }
    ,
    this.Start = function(e, t, a, i) {
        i = i || !1,
        !PlayerAPI.IsKidnapPlayerBrowser() || i ? (this.Reset(),
        this.chVal = e,
        a && (this.rdId = a,
        this.rdUse = !0,
        this.rdFirst = !0),
        this.domain = this.SetDomain(t),
        this.chVal || this.rdUse && this.rdId ? this.TestSpeedProcess() : BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\npanel: " + MainProperty.panelData.panel + "\r\nposition: " + this.position + "\r\napiVideoSource: " + (PlayerAPI[this.position] ? PlayerAPI[this.position].videoSource : "none") + "\r\napiPlayerType: " + (PlayerAPI[this.position] && PlayerAPI[this.position].player ? PlayerAPI[this.position].player.type : "none") + "\r\n劫持全螢幕: " + PlayerAPI.IsKidnapPlayerFullScreenBrowser() + "\r\n劫持瀏覽器: " + PlayerAPI.IsKidnapPlayerBrowser() + "\r\nsource: VideoInfoError\r\ntype: " + this.type + "\r\ndomain:" + this.domain + "\r\nchVal: " + this.chVal + ", rdUse: " + this.rdUse + ", rdId: " + this.rdId + "\r\n")) : PlayerAPI.IsKidnapPlayerBrowser() && (this.player && this.player.Video && !this.player.Video.paused && this.Reset(),
        this.ApiProcess("DisplayMessage", Args.LiveTvPlayMask, !0))
    }
    ,
    this.Reset = function() {
        this.chVal = "",
        this.domain.length = 0,
        this.channelUrl.length = 0,
        this.nowSrc = Array(3),
        this.rdId = "",
        this.rdSt = "",
        this.rdSort = 0,
        this.rdUse = !1,
        this.rdFirst = !1,
        this.player && this.player.Clear(),
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.ApiProcess("SetLine", null, this.nowSrc[2]),
        clearTimeout(this.rdXhrTimer),
        clearTimeout(this.failTimer),
        this.errorProxyUrl.length = 0,
        this.ProxyTestSpeedSuccess = function(e, t) {
            clearTimeout(this.rdXhrTimer),
            this.rdXhrUrl = e,
            this.RadarTestSpeedProcess()
        }
        .bind(this)
    }
    ,
    this.Destroy = function() {
        this.ApiProcess = function() {}
        ,
        this.player && this.player.Destroy(),
        this.player = null
    }
    ,
    this.SetDomain = function(e) {
        var t = [];
        if (this.chVal)
            for (var a = 0; a < e.length; a++) {
                var i = e[a];
                t.push([i[0].replace(this.chSign, this.chVal), i[1], i[2]])
            }
        return this.rdId && (this.rdSort = function(e) {
            for (var t = e.length, a = 0; t--; )
                e[t][2] && e[t][2] > a && (a = e[t][2]);
            return a
        }(e) + 1,
        t.push(["", 99, this.rdSort])),
        t
    }
    ,
    this.TransformRdStatus = function(e) {
        return "0" == e ? Args.LiveRdSuccess : "1" == e ? Args.LiveTvRegionalRestriction : "2" == e ? Args.LiveTvNoSignal : Args.LiveRdOtherError
    }
    ,
    this.ProxyTestSpeedSuccess = function(e, t) {}
    ,
    this.ProxyTestSpeed = function() {
        var e = MainProperty.RDXHRUrl.filter(function(e) {
            return this.errorProxyUrl.indexOf(e) < 0
        }
        .bind(this));
        BBXHR.GetFastestUrl(0 < e.length ? e : MainProperty.RDXHRUrl, this.ProxyTestSpeedSuccess);
        var t = this.rdId;
        this.rdXhrTimer = setTimeout(function() {
            this.rdId === t && null != this.player && (this.ProxyTestSpeedSuccess = function() {}
            ,
            this.rdUrlSt = !0,
            this.rdSt = Args.LiveRdOtherError,
            this.DomainProcess())
        }
        .bind(this), 3e3)
    }
    ,
    this.RadarRequestError = function(e) {
        this.rdErrorCount++,
        this.rdErrorCount < 5 && 1 == this.domain.length ? (this.errorProxyUrl.indexOf(this.rdXhrUrl) < 0 && this.errorProxyUrl.push(this.rdXhrUrl),
        this.ProxyTestSpeed()) : (this.rdSt = Args.LiveRdOtherError,
        this.rdUrlSt = !0,
        this.DomainProcess())
    }
    ,
    this.RadarRequestSuccess = function(e) {
        this.radarUrl.length = 0,
        this.rdSt = this.TransformRdStatus(e.rdStatus),
        this.rdSt != Args.LiveRdSuccess ? this.rdSt == Args.LiveTvRegionalRestriction && (this.rdBan = !0) : this.radarUrl.push([e.url, 99, this.rdSort]),
        this.rdUrlSt = !0,
        this.DomainProcess()
    }
    ,
    this.RadarTestSpeedProcess = function() {
        var e = {
            action: "GetLivePath",
            rSteamId: this.rdId,
            ip: MainProperty.user.ip
        };
        $.ajax({
            type: "POST",
            url: "/ajax/AjaxInfo.aspx",
            dataType: "text",
            error: function(e) {
                LogOutCheck('{"st":"' + e.status + '"}')
            },
            success: function(e) {
                1 == LogOutCheck(e) && this.Destroy()
            }
            .bind(this)
        });
        e = {
            id: "radar",
            type: "POST",
            contenttype: "application/json; charset=UTF-8",
            url: this.rdXhrUrl + MainProperty.RadarService + MainProperty.RadarUrlSearch,
            Authorization: "HOBA " + MainProperty.RadarProtocol,
            data: e,
            dataType: "text",
            timeout: 3e3
        };
        BBXHR.GetRadarUrl(e, function(e) {
            this.rdId === e.rSteamId && (e.result ? this.RadarRequestSuccess(e.result) : this.RadarRequestError(e.errorCode))
        }
        .bind(this))
    }
    ,
    this.TestSpeedProcess = function() {
        var t;
        this.player && this.player.StopTimerCheckLast(),
        !this.chVal && this.rdUse && this.rdSt && this.rdSt != Args.LiveRdSuccess ? this.ApiProcess("DisplayMessage", this.rdSt, !0) : (this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.ApiProcess("SetLine", null, ""),
        this.Pause(),
        this.bUrlSt = !1,
        this.rdUrlSt = !1,
        this.channelUrl.length = 0,
        this.radarUrl.length = 0,
        this.rdErrorCount = 0,
        t = this.GatTestSpeedDomain(),
        this.rdUse && 0 < t.radar.length ? this.rdXhrUrl ? this.RadarTestSpeedProcess() : this.ProxyTestSpeed() : this.rdUrlSt = !0,
        0 < t.domain.length ? !PlayerAPI.TStreamToken[this.chVal] || MainProperty.serverTime.ms - PlayerAPI.TStreamToken[this.chVal].TStreamTimer >= PlayerAPI.StreamTime ? $.ajax({
            type: "post",
            url: "/ajax/AjaxInfo.aspx",
            data: {
                method: "GetLivePath",
                route: this.chVal,
                cdn: t.domain.map(function(e) {
                    return e[1]
                }).join("÷")
            },
            dataType: "text",
            error: function(e) {
                LogOutCheck('{"st":"' + e.status + '"}')
            },
            success: function(e) {
                1 != LogOutCheck(e) && (e = JSON.parse(GetUnZip(e)),
                this.GetLivePathProcess(e.url, t),
                PlayerAPI.TStreamToken[this.chVal] = {
                    TStreamTimer: MainProperty.serverTime.ms,
                    TStreamUrl: e.url
                })
            }
            .bind(this)
        }) : this.GetLivePathProcess(PlayerAPI.TStreamToken[this.chVal].TStreamUrl, t) : this.bUrlSt = !0)
    }
    ,
    this.GetLivePathProcess = function(e, t) {
        for (var a = this.channelUrl.length = 0; a < t.domain.length; a++) {
            var i = t.domain[a]
              , n = i[0] + (e ? e[a] : "");
            this.channelUrl.push([n, i[1], i[2]])
        }
        this.bUrlSt = !0,
        this.DomainProcess()
    }
    ,
    this.DomainProcess = function() {
        var e;
        this.bUrlSt && this.rdUrlSt && (e = [],
        e = this.rdUse && this.rdFirst ? (this.rdFirst = !1,
        0 < this.radarUrl.length ? [].concat(this.radarUrl) : [].concat(this.channelUrl)) : this.rdUse ? this.channelUrl.concat(this.radarUrl) : [].concat(this.channelUrl),
        this.TestSpeed(e))
    }
    ,
    this.GatTestSpeedDomain = function() {
        var e = {
            domain: [],
            radar: []
        };
        if (this.nowSrc[0])
            for (var t = 0; t < this.domain.length; t++) {
                var a = this.domain[t];
                this.nowSrc[0].split("?")[0] != a[0] && (99 != a[1] ? e.domain.push(a) : this.rdSt && this.rdSt != Args.LiveRdSuccess || e.radar.push(a))
            }
        if (0 == e.domain.length && 0 == e.radar.length)
            for (t = 0; t < this.domain.length; t++)
                99 != (a = this.domain[t])[1] ? e.domain.push(a) : this.rdSt && this.rdSt != Args.LiveRdSuccess || e.radar.push(a);
        return e
    }
    ,
    this.TestSpeed = function(i) {
        var e;
        null != this.player && (1 < i.length ? (e = i.map(function(e) {
            return e[0]
        }),
        BBXHR.GetFastestUrl(e, function(e, t) {
            if (null != e || null != t) {
                for (var a = 0; a < i.length; a++)
                    if (i[a][0] == e) {
                        this.nowSrc = [].concat(i[a]);
                        break
                    }
                this.Play(),
                this.ApiProcess("SetLine", null, this.nowSrc[2])
            } else
                this.failTimer = setTimeout(function() {
                    this.ApiProcess("DisplayMessage", Args.LiveTvPlayMask, !0)
                }
                .bind(this), 2e3)
        }
        .bind(this))) : 1 == i.length ? (this.nowSrc = [].concat(i[0]),
        this.Play(),
        this.ApiProcess("SetLine", null, this.nowSrc[2])) : this.TestSpeedProcess())
    }
    ,
    this.Play = function() {
        this.speedLock = !1,
        PlayerAPI.IsMobileNotVisibility() || this.nowSrc[0] && (this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.player && this.player.SwitchChange(this.nowSrc[0]))
    }
    ,
    this.Pause = function() {
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.player && this.player.Pause()
    }
    ,
    this.RefreshLine = function() {
        this.nowSrc && this.nowSrc[0] && !this.speedLock && (this.speedLock = !0,
        this.TestSpeedProcess())
    }
    ,
    this.SetChannel = function(e, t, a) {
        var i = !0
          , n = this.rdId != (a || "");
        if (this.chVal = e,
        this.rdId = a || this.rdId,
        this.domain = this.SetDomain(t),
        this.nowSrc && this.nowSrc[0])
            for (var r = 0; r < this.domain.length; r++) {
                var s = this.domain[r];
                if (99 == this.nowSrc[1]) {
                    this.nowSrc[2] = this.rdSort,
                    i = n,
                    this.ApiProcess("SetLine", null, this.nowSrc[2]),
                    n && (this.rdErrorCount = 0);
                    break
                }
                if (0 <= this.nowSrc[0].indexOf(s[0])) {
                    this.nowSrc[2] = s[2],
                    i = this.nowSrc[0].indexOf(e) < 0 || !e,
                    this.ApiProcess("SetLine", null, this.nowSrc[2]);
                    break
                }
            }
        return i
    }
    ,
    this.SetVolume = function(e) {
        this.player && "function" == typeof this.player.SetVolume && this.player.SetVolume(e)
    }
    ,
    this.SetMuted = function(e) {
        this.muted = e,
        this.player && "function" == typeof this.player.SetMuted && this.player.SetMuted(e)
    }
}
  , WebSocketPlayer = function() {
    this.speedLock = !1,
    this.type = "ws",
    this.tokenSign = "/{token}",
    this.expireTimeSign = "/{expire-time}",
    this.chSign = "/{streamId}",
    this.domainSign = "/apps",
    this.wssTestSpeedUrlList = [],
    this.chVal = "",
    this.domain = [],
    this.channelUrl = [],
    this.ApiProcess = function() {}
    ,
    this.Init = function(e) {
        this.muted = e.muted,
        this.position = e.position,
        this.ApiProcess = function(e, t, a) {
            switch (e) {
            case "DisplayMessage":
                PlayerAPI.DisplayMessage(this.position, t, a);
                break;
            case "SetLine":
                PlayerAPI.SetLine(this.position, a)
            }
        }
        .bind(this);
        try {
            this.player = new WebGLPlayer(e.container,{
                muted: e.muted,
                InitialVol: e.InitialVol,
                volume: e.volume,
                style: e.style || "",
                classList: e.classList || ["liveMc_view"]
            }),
            this.player.OnCanPlay = function() {
                this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !1)
            }
            .bind(this),
            this.player.OnError = function() {
                this.player && this.player.StopTimerCheckLast(),
                PlayerAPI.IsAndroidAPP() ? this.APPProcess() : this.TestSpeedProcess()
            }
            .bind(this),
            this.player.Initial()
        } catch (e) {
            BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\nsource: VideoInitialError\r\ntype: " + this.type + "\r\nmsg: " + e + "\r\n")
        }
    }
    ,
    this.Start = function(e, t) {
        this.Reset(),
        this.chVal = e,
        this.domain = this.SetDomain(t),
        this.chVal ? PlayerAPI.IsAndroidAPP() ? this.APPProcess() : this.TestSpeedProcess() : BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\npanel: " + MainProperty.panelData.panel + "\r\nposition: " + this.position + "\r\napiVideoSource: " + (PlayerAPI[this.position] ? PlayerAPI[this.position].videoSource : "none") + "\r\napiPlayerType: " + (PlayerAPI[this.position] && PlayerAPI[this.position].player ? PlayerAPI[this.position].player.type : "none") + "\r\n劫持全螢幕: " + PlayerAPI.IsKidnapPlayerFullScreenBrowser() + "\r\n劫持瀏覽器: " + PlayerAPI.IsKidnapPlayerBrowser() + "\r\nsource: VideoInfoError\r\ntype: " + this.type + "\r\ndomain: " + this.domain + "\r\nchVal: " + this.chVal + "\r\n")
    }
    ,
    this.Reset = function() {
        this.chVal = "",
        this.domain.length = 0,
        this.channelUrl.length = 0,
        this.nowSrc = Array(3),
        this.player && this.player.Close(),
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.ApiProcess("SetLine", null, this.nowSrc[2])
    }
    ,
    this.Destroy = function() {
        this.ApiProcess = function() {}
        ,
        this.player && this.player.Destroy(),
        this.player = null
    }
    ,
    this.SetDomain = function(e) {
        var t = [];
        if (this.chVal)
            if (PlayerAPI.IsAndroidAPP())
                for (var a = GetCookie("domain"), i = a && "string" == typeof a ? JSON.parse(a) : {
                    domain: []
                }, n = 0; n < i.domain.length; n++) {
                    var r = i.domain[n];
                    t.push([r[0].replace(this.chSign, "/" + this.chVal), r[1], r[2]])
                }
            else
                for (var n = 0; n < e.length; n++) {
                    var s = e[n];
                    2 == s[3] && t.push([s[0].replace(this.chSign, "/" + this.chVal), s[1], s[2]])
                }
        return t
    }
    ,
    this.TestSpeedProcess = function() {
        this.player && this.player.StopTimerCheckLast(),
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.ApiProcess("SetLine", null, ""),
        this.Pause(),
        this.channelUrl.length = 0;
        var t = this.GatTestSpeedDomain();
        0 < t.domain.length && (MainProperty.serverTime.ms - PlayerAPI.KStreamTimer >= PlayerAPI.StreamTime ? $.ajax({
            type: "post",
            url: "/ajax/AjaxInfo.aspx",
            data: {
                method: "GetAnchorPath"
            },
            dataType: "text",
            error: function(e) {
                LogOutCheck('{"st":"' + e.status + '"}')
            },
            success: function(e) {
                1 != LogOutCheck(e) && (e = JSON.parse(GetUnZip(e)),
                this.GetAnchorPathProcess(e.token, e.expireTime, t),
                PlayerAPI.KStreamTimer = MainProperty.serverTime.ms,
                PlayerAPI.KStreamToken = e.token,
                PlayerAPI.KStreamExpireTime = e.expireTime)
            }
            .bind(this)
        }) : this.GetAnchorPathProcess(PlayerAPI.KStreamToken, PlayerAPI.KStreamExpireTime, t))
    }
    ,
    this.GetAnchorPathProcess = function(e, t, a) {
        for (var i = this.channelUrl.length = 0; i < a.domain.length; i++) {
            var n = a.domain[i];
            this.channelUrl.push([n[0].replace(this.tokenSign, "/" + e).replace(this.expireTimeSign, "/" + t), n[1], n[2]])
        }
        this.TestSpeed(this.channelUrl)
    }
    ,
    this.GatTestSpeedDomain = function() {
        var e = {
            domain: [],
            radar: []
        };
        if (this.nowSrc[0])
            for (var t = 0; t < this.domain.length; t++) {
                var a = this.domain[t];
                this.nowSrc[0].split(this.domainSign)[0] != a[0].split(this.domainSign)[0] && e.domain.push(a)
            }
        if (0 == e.domain.length)
            for (t = 0; t < this.domain.length; t++) {
                a = this.domain[t];
                e.domain.push(a)
            }
        return e
    }
    ,
    this.TestSpeed = function(n) {
        var e;
        null != this.player && (this.wssTestSpeedUrlList = [],
        1 < n.length ? (e = n.map(function(e) {
            return this.TransformWssUrl(e[0])
        }
        .bind(this)),
        WebGLPlayerWorker.GetFastestUrl(e, function(e, t) {
            for (var a = this.ReduceWssUrl(e), i = 0; i < n.length; i++)
                if (n[i][0] == a) {
                    this.nowSrc = [].concat(n[i]);
                    break
                }
            this.Play(),
            this.ApiProcess("SetLine", null, this.nowSrc[2])
        }
        .bind(this))) : 1 == n.length ? (this.nowSrc = [].concat(n[0]),
        this.Play(),
        this.ApiProcess("SetLine", null, this.nowSrc[2])) : this.TestSpeedProcess())
    }
    ,
    this.TransformWssUrl = function(e) {
        return 0 <= e.indexOf("wss://") && (e = e.replace("wss://", ""),
        this.wssTestSpeedUrlList.push(e)),
        e
    }
    ,
    this.ReduceWssUrl = function(e) {
        return 0 <= this.wssTestSpeedUrlList.indexOf(e) && (e = "wss://" + e),
        e
    }
    ,
    this.APPProcess = function() {
        this.player && this.player.StopTimerCheckLast(),
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.Pause(),
        0 < this.domain.length && (this.nowDomainIndex < this.domain.length - 1 ? this.nowDomainIndex += 1 : this.nowDomainIndex = 0,
        MainProperty.serverTime.ms - PlayerAPI.KStreamTimer >= PlayerAPI.StreamTime ? $.ajax({
            type: "post",
            url: "/ajax/AjaxInfo.aspx",
            data: {
                method: "GetAnchorPath"
            },
            dataType: "text",
            error: function(e) {
                LogOutCheck('{"st":"' + e.status + '"}')
            },
            success: function(e) {
                1 != LogOutCheck(e) && (e = JSON.parse(GetUnZip(e)),
                this.GetAPPAnchorPathProcess(e.token, e.expireTime),
                PlayerAPI.KStreamTimer = MainProperty.serverTime.ms,
                PlayerAPI.KStreamToken = e.token,
                PlayerAPI.KStreamExpireTime = e.expireTime)
            }
            .bind(this)
        }) : this.GetAPPAnchorPathProcess(PlayerAPI.KStreamToken, PlayerAPI.KStreamExpireTime))
    }
    ,
    this.GetAPPAnchorPathProcess = function(e, t) {
        var a = this.domain[this.nowDomainIndex]
          , a = [a[0].replace(this.tokenSign, "/" + e).replace(this.expireTimeSign, "/" + t), a[1], a[2]];
        this.nowSrc = [].concat(a),
        this.Play(),
        this.ApiProcess("SetLine", null, this.nowSrc[2])
    }
    ,
    this.Play = function() {
        this.speedLock = !1,
        PlayerAPI.IsMobileNotVisibility() || this.nowSrc[0] && this.player && (this.player.SwitchChange(this.nowSrc[0]),
        this.player.AudioReconnect({
            audio: !0
        }, this.muted))
    }
    ,
    this.Pause = function() {
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.player && this.player.Close()
    }
    ,
    this.RefreshLine = function() {
        this.nowSrc && this.nowSrc[0] && !this.speedLock && (this.speedLock = !0,
        PlayerAPI.IsAndroidAPP() ? this.APPProcess() : this.TestSpeedProcess())
    }
    ,
    this.SetChannel = function(e, t) {
        var a = this.chVal != (e || "");
        if (this.chVal = e,
        this.domain = this.SetDomain(t),
        this.nowSrc && this.nowSrc[0])
            for (var i = 0; i < this.domain.length; i++) {
                var n = this.domain[i];
                if (0 <= this.nowSrc[0].indexOf(n[0])) {
                    this.nowSrc[2] = n[2],
                    this.ApiProcess("SetLine", null, this.nowSrc[2]),
                    a = !1;
                    break
                }
            }
        return a
    }
    ,
    this.SetVolume = function(e) {
        this.player && "function" == typeof this.player.SetVolume && this.player.SetVolume(e)
    }
    ,
    this.SetMuted = function(e) {
        this.muted = e,
        this.player && "function" == typeof this.player.SetMuted && this.player.SetMuted(e)
    }
}
  , SldpPlayer = function() {
    this.speedLock = !1,
    this.type = "sldp",
    this.tokenSign = "/{token}",
    this.expireTimeSign = "/{expire-time}",
    this.chSign = "/{streamId}",
    this.domainSign = "/apps",
    this.wssTestSpeedUrlList = [],
    this.chVal = "",
    this.domain = [],
    this.channelUrl = [],
    this.ApiProcess = function() {}
    ,
    this.Init = function(e) {
        this.muted = e.muted,
        this.position = e.position,
        this.ApiProcess = function(e, t, a) {
            switch (e) {
            case "DisplayMessage":
                PlayerAPI.DisplayMessage(this.position, t, a);
                break;
            case "SetLine":
                PlayerAPI.SetLine(this.position, a)
            }
        }
        .bind(this);
        try {
            this.player = new SldpVideoPlayer(e.container,{
                muted: e.muted,
                InitialVol: e.InitialVol,
                volume: e.volume,
                style: e.style,
                classList: e.classList || ["liveMc_view"].concat(MainProperty.isApp ? ["app"] : [])
            }),
            this.player.OnCanPlay = function() {
                this.player && this.player.Video && this.player.Video.paused ? this.ApiProcess("DisplayMessage", Args.LiveTvPlayMask, !0) : this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !1)
            }
            .bind(this),
            this.player.OnError = function() {
                this.player && this.player.StopTimerCheckLast(),
                this.TestSpeedProcess(!0)
            }
            .bind(this)
        } catch (e) {
            BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\nsource: VideoInitialError\r\ntype: " + this.type + "\r\nmsg: " + e + "\r\n")
        }
    }
    ,
    this.Start = function(e, t) {
        this.Reset(),
        this.chVal = e,
        this.domain = this.SetDomain(t),
        this.chVal ? this.TestSpeedProcess() : BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\npanel: " + MainProperty.panelData.panel + "\r\nposition: " + this.position + "\r\napiVideoSource: " + (PlayerAPI[this.position] ? PlayerAPI[this.position].videoSource : "none") + "\r\napiPlayerType: " + (PlayerAPI[this.position] && PlayerAPI[this.position].player ? PlayerAPI[this.position].player.type : "none") + "\r\n劫持全螢幕: " + PlayerAPI.IsKidnapPlayerFullScreenBrowser() + "\r\n劫持瀏覽器: " + PlayerAPI.IsKidnapPlayerBrowser() + "\r\nsource: VideoInfoError\r\ntype: " + this.type + "\r\ndomain: " + this.domain + "\r\nchVal: " + this.chVal + "\r\n")
    }
    ,
    this.Reset = function() {
        this.chVal = "",
        this.domain.length = 0,
        this.channelUrl.length = 0,
        this.nowSrc = Array(3),
        this.player && this.player.Destroy(),
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.ApiProcess("SetLine", null, this.nowSrc[2])
    }
    ,
    this.Destroy = function() {
        this.ApiProcess = function() {}
        ,
        this.player && this.player.Destroy(),
        this.player = null
    }
    ,
    this.SetDomain = function(e) {
        var t = [];
        if (this.chVal)
            for (var a = 0; a < e.length; a++) {
                var i = e[a];
                1 == i[3] && t.push([i[0].replace(this.chSign, "/" + this.chVal), i[1], i[2]])
            }
        return t
    }
    ,
    this.TestSpeedProcess = function(e) {
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.ApiProcess("SetLine", null, ""),
        this.Pause(),
        this.channelUrl = [];
        var t = this.GatTestSpeedDomain(e);
        0 < t.domain.length && (MainProperty.serverTime.ms - PlayerAPI.KStreamTimer >= PlayerAPI.StreamTime ? $.ajax({
            type: "post",
            url: "/ajax/AjaxInfo.aspx",
            data: {
                method: "GetAnchorPath"
            },
            dataType: "text",
            error: function(e) {
                LogOutCheck('{"st":"' + e.status + '"}')
            },
            success: function(e) {
                1 != LogOutCheck(e) && (e = JSON.parse(GetUnZip(e)),
                this.GetAnchorPathProcess(e.token, e.expireTime, t),
                PlayerAPI.KStreamTimer = MainProperty.serverTime.ms,
                PlayerAPI.KStreamToken = e.token,
                PlayerAPI.KStreamExpireTime = e.expireTime)
            }
            .bind(this)
        }) : this.GetAnchorPathProcess(PlayerAPI.KStreamToken, PlayerAPI.KStreamExpireTime, t))
    }
    ,
    this.GetAnchorPathProcess = function(e, t, a) {
        for (var i = this.channelUrl.length = 0; i < a.domain.length; i++) {
            var n = a.domain[i];
            this.channelUrl.push([n[0].replace(this.tokenSign, "/" + e).replace(this.expireTimeSign, "/" + t), n[1], n[2]])
        }
        this.TestSpeed(this.channelUrl)
    }
    ,
    this.GatTestSpeedDomain = function(e) {
        var t = {
            domain: [],
            radar: []
        };
        if (PlayerAPI.BestSldpSrc && 0 <= PlayerAPI.BestSldpIdx && (e && (PlayerAPI.BestSldpIdx < this.domain.length - 1 ? PlayerAPI.BestSldpIdx += 1 : PlayerAPI.BestSldpIdx = 0),
        this.domain[PlayerAPI.BestSldpIdx] && t.domain.push(this.domain[PlayerAPI.BestSldpIdx])),
        0 == t.domain.length)
            for (var a = 0; a < this.domain.length; a++) {
                var i = this.domain[a];
                t.domain.push(i)
            }
        return t
    }
    ,
    this.TestSpeed = function(t) {
        var e;
        null != this.player && (this.wssTestSpeedUrlList = [],
        1 < t.length ? (e = t.map(function(e) {
            return e[0]
        }),
        this.player && this.player.TestSpeed(e, function() {
            if (this.player) {
                PlayerAPI.BestSldpSrc = this.player.FastSrc;
                for (var e = 0; e < t.length; e++)
                    if (t[e][0] == PlayerAPI.BestSldpSrc) {
                        PlayerAPI.BestSldpIdx = e,
                        this.nowSrc = [].concat(t[e]);
                        break
                    }
                this.Play(),
                this.ApiProcess("SetLine", null, this.nowSrc[2])
            }
        }
        .bind(this))) : 1 == t.length ? (this.nowSrc = [].concat(t[0]),
        this.Play(),
        this.ApiProcess("SetLine", null, this.nowSrc[2])) : this.TestSpeedProcess())
    }
    ,
    this.Play = function() {
        this.speedLock = !1,
        PlayerAPI.IsMobileNotVisibility() || this.nowSrc[0] && this.player && this.player.SwitchChange(this.nowSrc[0])
    }
    ,
    this.Pause = function() {
        this.ApiProcess("DisplayMessage", Args.LiveTvLoading, !0),
        this.player && this.player.Destroy()
    }
    ,
    this.RefreshLine = function() {
        this.nowSrc && this.nowSrc[0] && !this.speedLock && (this.speedLock = !0,
        this.TestSpeedProcess(!0))
    }
    ,
    this.SetChannel = function(e, t) {
        var a = this.chVal != (e || "");
        if (this.chVal = e,
        this.domain = this.SetDomain(t),
        this.nowSrc && this.nowSrc[0])
            for (var i = 0; i < this.domain.length; i++) {
                var n = this.domain[i];
                if (0 <= this.nowSrc[0].indexOf(n[0])) {
                    this.nowSrc[2] = n[2],
                    this.ApiProcess("SetLine", null, this.nowSrc[2]),
                    a = !1;
                    break
                }
            }
        return a
    }
    ,
    this.SetVolume = function(e) {
        this.player && "function" == typeof this.player.SetVolume && this.player.SetVolume(e)
    }
    ,
    this.SetMuted = function(e) {
        this.muted = e,
        this.player && "function" == typeof this.player.SetMuted && this.player.SetMuted(e)
    }
}
  , Outer = {
    DrawSchedule: function(e) {
        var t, a = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll" : "#outerPage > div.gamePanelL_In", i = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox:last" : "#outerPage > div.gamePanelL_In > div.gameList_scroll";
        if ($("#outerPage > div.gamePanelL_In > table.gameTitle").remove(),
        $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").empty(),
        0 == e.length)
            $("#outerPage").hide(),
            $("#scheduleNoData").show();
        else {
            $("#outerPage").show(),
            $("#scheduleNoData").hide(),
            Tool.IsMultiSport(MainProperty.ballType) ? ($("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").removeClass("gameList_scroll"),
            $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").removeAttr("rel")) : $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").addClass("gameList_scroll");
            for (var n = !0, r = [], s = "", o = "", l = "", c = 0; c < e.length; c++) {
                var d, u, h, p = e[c], m = p.type;
                MainProperty.gameData[p.gId] && (l = p.aId,
                d = "",
                u = (p.mode < 2 ? "DS" : "ZD") + m,
                r.indexOf(u) < 0 && (d = Outer.DrawSportHeader(m, p.mode),
                Tool.IsMultiSport(MainProperty.ballType) && (d += '<div class="gameFAVbox" rel="' + u + '"></div>')),
                p.aId != o && 0 < s.length && (s = '<div class="gameList' + (2 <= parseInt(o.split("_")[3]) ? " rollLive" : "") + '" rel="' + o + '"><ul class="btn_GLT"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[o].an + '</li></ul><div class="GLIn">' + s,
                Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx || (h = Tool.IsOuterSingleTeam() ? " GLInBoxPcgame" + ("es" != MainProperty.ballType ? " cell7" : "") : "",
                s = s.replace('<div class="GLIn">', '<div class="GLIn"><table class="GLInBox' + h + '">') + "</table>"),
                s += "</div></div>",
                $(i).append(s),
                s = "",
                Outer.BindTeamNameHover(i + " > div.gameList:last > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_T> ul.GLInTBox > li.GLInTBox_Name > div.GLInTBox_row > div.GLInTBox_nameBox > div.GLInTBox_nameT.notBind"),
                Outer.BindShowFloatText(i + " > div.gameList:last > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_More > div.GLIL_MoreRow > div.GLIL_MoreStatus.noBind"),
                Outer.BindShowFloatText(i + " > div.gameList:last > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_T > ul.GLInTBox > li.GLInTBox_star > div.GLIL_MoreStatus.noBind"),
                Outer.BindShowFloatText(i + " > div.gameList:last > div.GLIn > table.GLInBox > tbody > tr > th.GLInBoxT > div.GLIL_MoreStatus.noBind")),
                o = p.aId,
                0 < d.length && (n ? (Tool.IsMultiSport(MainProperty.ballType) ? $(a).html(d) : ($(a).prepend(d),
                $(i).attr("rel", u)),
                n = !1) : $(a).append(d),
                Outer.BindBallArrowHover(a + ' > table.gameTitle[rel="' + u + '"] > tbody > tr > td.GT_T.notBind'),
                Outer.BindShowHeaderOption(a + " > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel.notBind"),
                $(a + " > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.notBind").click(function(e) {
                    Outer.FixedDefaultKT($(e.currentTarget))
                }),
                $(a + " > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.notBind").removeClass("notBind"),
                Outer.BindGameTitleHover(a + ' > table.gameTitle[rel="' + u + '"] > tbody > tr > td[class^="screenOff_"].notBind'),
                Outer.BindBallNameHover(a + ' > table.gameTitle[rel="' + u + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.GT_T_name > div.GT_T_nameIn.notBind'),
                r.push(u)),
                s += Outer.DrawGame(m, p, 0 < c ? e[c - 1].gId : ""))
            }
            0 < s.length && (s = '<div class="gameList' + (2 <= parseInt(l.split("_")[3]) ? " rollLive" : "") + '" rel="' + l + '"><ul class="btn_GLT"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[l].an + '</li></ul><div class="GLIn">' + s,
            Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx || (h = Tool.IsOuterSingleTeam() ? " GLInBoxPcgame" + ("es" != MainProperty.ballType ? " cell7" : "") : "",
            s = s.replace('<div class="GLIn">', '<div class="GLIn"><table class="GLInBox' + h + '">') + "</table>"),
            s += "</div></div>",
            $(i + ":last").append(s),
            Outer.BindTeamNameHover(i + " > div.gameList:last > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_T> ul.GLInTBox > li.GLInTBox_Name > div.GLInTBox_row > div.GLInTBox_nameBox > div.GLInTBox_nameT.notBind"),
            Outer.BindShowFloatText(i + " > div.gameList:last > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_More > div.GLIL_MoreRow > div.GLIL_MoreStatus.noBind"),
            Outer.BindShowFloatText(i + " > div.gameList:last > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_T > ul.GLInTBox > li.GLInTBox_star > div.GLIL_MoreStatus.noBind"),
            Outer.BindShowFloatText(i + " > div.gameList:last > div.GLIn > table.GLInBox > tbody > tr > th.GLInBoxT > div.GLIL_MoreStatus.noBind"))
        }
        (MainProperty.innerPage || $(window).width() <= 1400 && !$("#sportMenu").hasClass("ZoomOut") && (0 == MainProperty.sortOption.kind || Mapping.TransformMenuType(MainProperty.ballType, MainProperty.playMode, null)[0][1] == MainProperty.sortOption.kind)) && Outer.FixedDefaultKT($(a + " > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel")),
        0 == $(i + " > div").length ? Tool.IsSC(MainProperty.ballType) && 0 <= [2, 4].indexOf(MainProperty.sortOption.kind) && 0 < $("#outerPage > div.gamePanelL_In > table.gameTitle").length ? (t = '<div class="noGmae" style="margin-top: 325px"><img src="/images/' + MainProperty.user.theme.imgPath + '/icon_noGame.svg">' + langFont.Font_NoGame + "</div>",
        $(i).html(t)) : ($("#outerPage").hide(),
        $("#scheduleNoData").show()) : ($("#outerPage").show(),
        $("#scheduleNoData").hide())
    },
    DrawSportHeader: function(e, t) {
        var a = 0 == MainProperty.sortOption.kind ? Mapping.TransformMenuType(e, t, null)[0][1] : MainProperty.sortOption.kind
          , i = t < 2 ? "DS" + e : "ZD" + e
          , n = 0 == MainProperty.sortOption.kind || Mapping.TransformMenuType(e, t, null)[0][1] == MainProperty.sortOption.kind
          , r = Tool.IsMultiSport(MainProperty.ballType) ? Outer.GetFVColor(e) : ""
          , s = '<table class="gameTitle ' + r + '" rel="' + Tool.TransformModeText(0, t < 2 ? 1 : 2) + e + '"><tr>'
          , o = Tool.TransformGameType(e, Args.WholeLang)
          , l = o + ("fv" == MainProperty.ballType && 2 == t ? " - " + Tool.TransformModeText(1, 2) : "");
        0 == r.length && Mapping.TransformMenuType(e, t, null)[0][1] != MainProperty.sortOption.kind && (l = 0 <= ["th", "vi"].indexOf(langFont.Font_Langue) ? Mapping.TransformMenuType(e, t, MainProperty.sortOption.kind) : o + " - " + Mapping.TransformMenuType(e, t, MainProperty.sortOption.kind)),
        s += '<td class="GT_T notBind"><div class="GT_TBox"><div class="btn_gameList_all"></div><div class="GT_T_name"><div class="GT_T_nameIn notBind">' + l + "</div></div>";
        var c = Mapping.GetOuterDropOption(e, a);
        if (0 < c.length) {
            var d = "";
            n && !MainProperty.innerPage && (d = ' style="display: none;"'),
            $(window).width() <= 1400 && !$("#sportMenu").hasClass("ZoomOut") && n && (d = "");
            for (var u = Tool.IsMultiQtr(), h = "", p = 0; p < c.length; p++) {
                var m = u && !Tool.HasKindSubGame(p) && 0 == MainProperty.kindSub[p] ? " none" : "";
                p + 1 == MainProperty.sortOption.kindSub[i] && (h = '<div class="GT_selT"' + d + ">" + c[p] + '</div><div class="GT_selIn"><div ' + (n ? "" : 'id="dropOption"') + ' class="GT_selInBox">' + h),
                h += '<a class="ZoomOutShow notBind' + (p + 1 == MainProperty.sortOption.kindSub[i] ? " on" : "") + m + '" set="' + (p + 1) + '">' + c[p] + (n ? "" : '<span class="GT_Num">' + MainProperty.kindSub[p] + "</span>") + "</a>"
            }
            s += '<div class="btn_GT_sel notBind">' + h + "</div></div></div>"
        } else
            s += '<div class="btn_GT_sel"></div>';
        s += "</div></td>";
        for (var g = Mapping.GetOuterHeaderText(e, a, MainProperty.sortOption.kindSub[i]), f = 2, v = 1; f < g.length; f++) {
            var _ = [];
            "X" == g[0] && "X" == g[1] ? _ = ["", ""] : (_.push(' class="screenOff_' + v + ' notBind"'),
            _.push(f - 1 > g[0] ? ' style="display:none;"' : ""),
            v = v < 2 && f - 1 >= g[1] ? 2 : v),
            "bk" == e && 7 == a || "af" == e && 6 == a || (s += "<td" + _[0] + _[1] + '><div class="GT_nameT">' + g[f] + "</div></td>")
        }
        return n && (s += '<td class="GT_more">' + langFont.Font_More + "</td>"),
        s += "</tr></table>"
    },
    DrawGame: function(e, t, a) {
        for (var i = t.gId, n = 2 == t.h ? ["b", "a"] : ["a", "b"], r = a == i, s = 0 == MainProperty.sortOption.kind ? Mapping.TransformMenuType(e, t.mode, null)[0][1] : MainProperty.sortOption.kind, o = 0 == MainProperty.sortOption.kind || Mapping.TransformMenuType(e, t.mode, null)[0][1] == MainProperty.sortOption.kind, l = !!(!r && Tool.IsSC(e) && 0 <= [0, 1, 2].indexOf(parseInt(MainProperty.sortOption.kind, 10))), c = Tool.TransformGdOrSt(e, t.mode, s, t.st, t.gd, t.rt, t.ht), d = ["A", "B", "C", "D", "E", "F", "G", "H", "I"], u = "bk" == e && 4 == s || "bb" == e && 0 <= [5, 10].indexOf(s) || "ih" == e && 3 == s || "tn" == e && 5 == s || "vl" == e && 5 == s || "bm" == e && 5 == s || "tt" == e && 5 == s, h = "bk" == e && 7 == s || "af" == e && 6 == s, p = 0 != t.hasInner, m = "", g = t.mode < 2 ? "DS" + e : "ZD" + e, f = Mapping.GetOuterKT(e, s, MainProperty.sortOption.kindSub[g], null, t.h < 2), v = 0; v < f.length; v++) {
            for (var _ = "", y = !1, P = e + s + (o ? "1" : MainProperty.sortOption.kindSub[g]) + v, S = "", b = "", T = "", C = f[v][2], M = 0, I = 1; M < C.length; M++) {
                var A = [];
                A.push(M + 1 > f[v][0] ? ' style="display:none;"' : ""),
                A.push(' class="screenOff_' + I + '"'),
                I = I < 2 && M + 1 >= f[v][1] ? 2 : I;
                var L = MainProperty.oddData[i] && MainProperty.oddData[i][t.sT] ? MainProperty.oddData[i][t.sT][C[M][0]] : null
                  , L = GameDrawer.OuterOddFunc(A, L, i, t.sT, C[M][0], C[M][1], l);
                T += L.html,
                y = !(!L.hasContent && !y);
                L = C[M][0].split("#")[0].split(",")[0],
                S = Mapping.GetOuterScore(e, s, MainProperty.sortOption.kindSub[g], L)
            }
            var x = t["rcn" + n[0]] ? " show" : ""
              , D = t["rcn" + n[1]] ? " show" : "";
            if (Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx) {
                if (0 == y)
                    continue;
                _ += '<table class="GLInBox" rel="' + t.gId + '" sT="' + t.sT + '" rIdx="' + P + '">',
                _ += '<tr><th class="GLInBoxT">';
                var w = 0 == t.h ? '<font class="t_pink"> (' + langFont.Font_NeutralMark + ")</font>" : ""
                  , k = '<font rel="ot' + n[0] + i + '">' + t["t" + n[0]][0] + "</font>" + w
                  , $ = '<font rel="ot' + n[1] + i + '">' + t["t" + n[1]][0] + "</font>";
                _ += '<span rel="ogd' + i + '" class="GLInBoxT_time">' + (2 == t.mode ? '<span class="t_yellow">' + c[0] + "</span> <font>" + c[1] + "</font></span>" : c[0] + " " + c[1] + "</span>") + k,
                2 == t.mode ? (V = ' <span rel="orcn' + n[0] + i + '" class="GLInBoxT_redCard' + x + '">' + t["rcn" + n[0]] + "</span>",
                j = ' <span rel="orcn' + n[1] + i + '" class="GLInBoxT_redCard' + D + '">' + t["rcn" + n[1]] + "</span>",
                H = {
                    a: t.ra,
                    b: t.rb
                },
                W = ["", ""],
                parseInt(H[n[0]], 10) > parseInt(H[n[1]], 10) ? W = ["t_yellow", ""] : parseInt(H[n[0]], 10) < parseInt(H[n[1]], 10) && (W = ["", "t_yellow"]),
                _ += '<span class="GLInBoxT_score">' + V + '<span id="or' + n[0] + i + '" class="' + W[0] + '">' + H[n[0]] + '</span> - <span id="or' + n[1] + i + '" class="' + W[1] + '">' + H[n[1]] + "</span>" + j + "</span>") : _ += '<span class="GLInBoxT_vs">vs</span>',
                _ += $,
                _ += '<div class="GLIL_MoreStatus noBind"><a rel="' + i + '" class="btn_GLIn_star' + (0 <= MainProperty.favoriteData.indexOf(i) ? " on" : "") + '"></a><div class="MS_prompt">' + (0 <= MainProperty.favoriteData.indexOf(i) ? langFont.Font_Cancel : langFont.Font_MyGame) + "</div></div>",
                _ += "</th></tr>"
            } else {
                if (0 == y && (Tool.IsSC(MainProperty.ballType) && 0 <= [2, 3, 7].indexOf(s) || "bk" == MainProperty.ballType && 0 <= [3, 4, 5].indexOf(s) || "bb" == MainProperty.ballType && 0 <= [5, 9].indexOf(s) || "tn" == MainProperty.ballType && 0 <= [2, 4].indexOf(s) || "ih" == MainProperty.ballType && 0 <= [2, 3].indexOf(s) || "vl" == MainProperty.ballType && 4 == s || "tt" == MainProperty.ballType && 4 == s || "bm" == MainProperty.ballType && 4 == s || "es" == MainProperty.ballType && 0 <= [2, 3].indexOf(s) || "af" == MainProperty.ballType && 0 <= [3, 5].indexOf(s) || u || h))
                    continue;
                if (_ += '<tr class="GLInList" rel="' + t.gId + '" sT="' + t.sT + '" rIdx="' + P + '"><td class="GLIL_T">',
                _ += '<ul class="GLInTBox' + (!r && o && p ? "" : " noCursor") + '">',
                r)
                    _ += '<li class="GLInTBox_round"></li>';
                else {
                    var B = ""
                      , G = 0 <= ["tn", "vl", "bm", "tt"].indexOf(e) && 2 == t.mode && 1 <= t.st && t.st <= 7 && !u;
                    if (0 <= ["tn", "vl", "bm", "tt"].indexOf(e) && 2 == t.mode) {
                        var P = '<div class="t_score"><font rel="or' + n[0] + i + '">' + t["r" + n[0]] + '</font> <font rel="or' + n[1] + i + '">' + t["r" + n[1]] + "</font></div>"
                          , O = 0 == t.pr ? ["", ""] : 1 == t.pr ? [" show", ""] : ["", " show"]
                          , O = '<div class="t_score"><span class="Ball_green' + O[0] + '" rel="opr' + n[0] + i + '"></span><span class="Ball_green' + O[1] + '" rel="opr' + n[1] + i + '"></span></div>'
                          , E = "";
                        if ("tn" == e) {
                            E = {
                                a: "",
                                b: ""
                            };
                            if (isNaN(parseInt(S)))
                                for (M = 0; M < t.sa.length; M++) {
                                    var F = t.sa[M]
                                      , R = t.sb[M];
                                    isNaN(parseInt(F, 10)) || (E.a = F),
                                    isNaN(parseInt(R, 10)) || (E.b = R)
                                }
                            else
                                E.a = t.sa[S],
                                E.b = t.sb[S],
                                b = d[S];
                            E = '<div class="t_score"><font id="os' + n[0] + i + b + '">' + E[n[0]] + '</font> <font id="os' + n[1] + i + b + '">' + E[n[1]] + "</font></div>"
                        }
                        B = u ? "" : '<li class="GLInTBox_round' + (G ? "" : " none") + ' notBind" rel="' + i + '">' + P + E + O + '<div class="roundScore" style="display: none;"></div></li>'
                    }
                    _ += '<li class="GLInTBox_round' + (G ? " none" : "") + '" rel="ogd' + i + '"><div class="GLInTBox_row st"><span' + (2 == t.mode ? ' class="t_yellow"' : "") + ">" + c[0] + '</span></div><div class="GLInTBox_row rt"><font>' + c[1] + "</font></div></li>",
                    _ += B
                }
                for (var N, k = "", $ = "", M = 0; M < t.ta.length; M++)
                    t.ta[M] && t.tb[M] && (k += (N = 0 < M ? " / " : "") + "<font>" + t["t" + n[0]][M] + '</font><span class="t_gray"> ' + (t["co" + n[0]][M] || "") + "</span>",
                    $ += N + "<font>" + t["t" + n[1]][M] + '</font><span class="t_gray"> ' + (t["co" + n[1]][M] || "") + "</span>");
                var O = 1 == t.isScore || 0 <= ["tn", "vl", "bm", "tt"].indexOf(e) && 60 == t.st ? " none" : ""
                  , G = '<span class="t_gray"> ' + t["p" + n[0]] + "</span>"
                  , B = '<span class="t_gray"> ' + t["p" + n[1]] + "</span>"
                  , V = 0 == r && 2 == t.mode && Tool.IsSC(t.type) ? ' <div rel="orcn' + n[0] + i + '" class="GLInTBox_redCard' + x + O + '">' + t["rcn" + n[0]] + "</div>" : ""
                  , j = 0 == r && 2 == t.mode && Tool.IsSC(t.type) ? ' <div rel="orcn' + n[1] + i + '" class="GLInTBox_redCard' + D + O + '">' + t["rcn" + n[1]] + "</div>" : ""
                  , w = "";
                if (["tn", "bm", "tt", "pb", "es", "bv"].indexOf(t.type) < 0 && 0 == t.h && (w = '<span class="t_pink"> (' + langFont.Font_NeutralMark + ")</span>"),
                _ += '<li class="GLInTBox_Name">',
                u || h ? _ += "bb" == e ? '<div class="GLInTBox_row"><div class="GLInTBox_nameBox"><div rel="' + (v % 2 == 0 ? "ot" + n[1] : "ot" + n[0]) + i + '" class="GLInTBox_nameT notBind">' + (v % 2 == 0 ? $ + B : k + w + G) + '</div><div class="GLInTBox_nameShow"></div></div></div>' : '<div class="GLInTBox_row"><div class="GLInTBox_nameBox"><div rel="' + (v % 2 == 0 ? "ot" + n[0] : "ot" + n[1]) + i + '" class="GLInTBox_nameT notBind">' + (v % 2 == 0 ? k + w + G : $ + B) + '</div><div class="GLInTBox_nameShow"></div></div></div>' : "bb" == e ? (_ += '<div class="GLInTBox_row"><div class="GLInTBox_nameBox"><div rel="ot' + n[1] + i + '" class="GLInTBox_nameT notBind">' + $ + B + '</div><div class="GLInTBox_nameShow"></div></div></div>',
                _ += '<div class="GLInTBox_row"><div class="GLInTBox_nameBox"><div rel="ot' + n[0] + i + '" class="GLInTBox_nameT notBind">' + k + w + G + '</div><div class="GLInTBox_nameShow"></div></div></div>') : (_ += '<div class="GLInTBox_row"><div class="GLInTBox_nameBox"><div rel="ot' + n[0] + i + '" class="GLInTBox_nameT notBind">' + k + w + G + '</div><div class="GLInTBox_nameShow"></div>' + V + "</div></div>",
                _ += '<div class="GLInTBox_row"><div class="GLInTBox_nameBox"><div rel="ot' + n[1] + i + '" class="GLInTBox_nameT notBind">' + $ + B + '</div><div class="GLInTBox_nameShow"></div>' + j + "</div></div>"),
                l && (_ += '<div class="GLInTBox_row">' + langFont.Font_Dauce + "</div>"),
                !r) {
                    if (2 == t.mode && p) {
                        var U = ""
                          , H = {
                            a: "",
                            b: ""
                        }
                          , G = "id";
                        if ("tn" != e || u)
                            if (0 <= ["tn", "vl", "bm", "tt"].indexOf(e))
                                if (U = "os",
                                isNaN(parseInt(S)))
                                    for (M = 0; M < t.sa.length; M++)
                                        isNaN(parseInt(t.sa[M], 10)) || (H.a = t.sa[M]),
                                        isNaN(parseInt(t.sb[M], 10)) || (H.b = t.sb[M]);
                                else
                                    H.a = t.sa[S],
                                    H.b = t.sb[S],
                                    b = d[S];
                            else
                                U = "or",
                                isNaN(parseInt(S)) ? (H.a = t.ra,
                                H.b = t.rb) : (H.a = t.runsA[S],
                                H.b = t.runsB[S],
                                b = d[S]);
                        else
                            U = "on",
                            H.a = t.na,
                            H.b = t.nb,
                            G = "rel";
                        var W = ["", ""];
                        parseInt(H[n[0]], 10) > parseInt(H[n[1]], 10) ? W = ["t_yellow", ""] : parseInt(H[n[0]], 10) < parseInt(H[n[1]], 10) && (W = ["", "t_yellow"]),
                        "tn" == e && (H.a = 255 == H.a ? "A" : H.a,
                        H.b = 255 == H.b ? "A" : H.b);
                        B = "<div " + G + '="' + U + n[0] + i + b + '" class="GLInTBox_row ' + W[0] + '">' + H[n[0]] + "</div>",
                        U = "<div " + G + '="' + U + n[1] + i + b + '" class="GLInTBox_row ' + W[1] + '">' + H[n[1]] + "</div>";
                        u ? _ += "bb" == e ? '<li class="GLInTBox_Score' + O + '">' + (0 == v ? U : B) + "</li>" : '<li class="GLInTBox_Score' + O + '">' + (0 == v ? B : U) + "</li>" : "bb" == e ? _ += '<li class="GLInTBox_Score' + O + '">' + U + B + "</li>" : "es" == e && 0 <= [2, 3].indexOf(s) || h ? _ += "" : _ += '<li class="GLInTBox_Score' + O + '">' + B + U + "</li>"
                    }
                    U = 0 <= ["sc", "eu", "wd", "ch", "fi", "bk", "tn"].indexOf(t.type) ? "icon_court_" + Tool.TransformGameType(Tool.IsSC(t.type) ? "sc" : t.type, Args.WholeEn) + (t.mode < 2 ? "_gray" : "") : "";
                    _ += '<li class="GLInTBox_star">',
                    p && (_ += '<div id="oplaymId' + i + '" class="GLIL_MoreStatus noBind off icon_GLIn_court' + (Tool.TransformRadar(!1, t.type, t.mId, !0) ? "" : " none") + '"><a class="' + U + ' openRDAnimate cursor"></a><div class="MS_prompt">' + langFont.Font_ZDData + "</div></div>"),
                    _ += '<div class="GLIL_MoreStatus noBind"><a rel="' + i + '" class="btn_GLIn_star' + (0 <= MainProperty.favoriteData.indexOf(i) ? " on" : "") + '"></a><div class="MS_prompt">' + (0 <= MainProperty.favoriteData.indexOf(i) ? langFont.Font_Cancel : langFont.Font_MyGame) + "</div></div></li>"
                }
                _ += "</ul>"
            }
            _ += "</td>",
            _ += T,
            o && (r ? _ += '<td class="GLIL_More noCursor">' : (_ += '<td class="GLIL_More' + (MainProperty.innerPage == i ? " on" : p ? "" : " noCursor") + '">',
            _ += '<div class="GLIL_MoreRow">',
            p && (_ += '<div id="olive' + i + '" class="GLIL_MoreStatus noBind' + (t.live && ["1", "2", "4", "5"].indexOf(t.live) < 0 ? "" : " none") + '"><a class="icon_liveTv openLiveTv cursor"></a><div class="MS_prompt">' + (2 == t.mode || 0 == t.zd ? langFont.Font_LiveBroadcast : langFont.Font_OpenZDAndLiveBroadcast) + "</div></div>",
            _ += '<div id="oys' + i + '" class="GLIL_MoreStatus noBind off' + ("1" == t.live ? "" : " none") + '"><img src="/images/bb/icon_live_rain_20210329.svg" class="openLiveTv openInnerPage cursor"><div class="MS_prompt">' + langFont.Font_DelayedByRain + "</div></div>",
            _ += '<div id="onoLive' + i + '" class="GLIL_MoreStatus noBind off' + ("2" == t.live ? "" : " none") + '"><img src="/images/bb/icon_live_satellite.svg" class="openInnerPage cursor"><div class="MS_prompt">' + langFont.Font_Interrupt + "</div></div>",
            _ += '<div id="obeauty' + i + '" class="GLIL_MoreStatus noBind' + ("4" == t.live ? "" : " none") + '"><a class="icon_liveMc openInnerPage cursor"></a><div class="MS_prompt">' + langFont.Font_BeautyLive + "</div></div>",
            _ += '<div id="odelayed' + i + '" class="GLIL_MoreStatus noBind off' + ("5" == t.live ? "" : " none") + '"><img src="/images/bb/icon_live_warning.svg" class="openLiveTv openInnerPage cursor"><div class="MS_prompt">' + langFont.Font_DelayedGame + "</div></div>"),
            _ += '<div id="ozd' + i + '" class="GLIL_MoreStatus noBind' + (0 == t.zd || t.live ? " none" : "") + (t.mode < 2 ? " off" : "") + '"><img src="/images/bb/icon_live_running.svg" class="openInnerPage' + (p ? " cursor" : " noCursor") + '"><div class="MS_prompt">' + langFont.Font_OpenZD + "</div></div>",
            p && (_ += '<div id="omId' + i + '" class="GLIL_MoreStatus noBind' + (Tool.TransformRadar(!1, t.type, t.mId, !1) ? "" : " none") + '"><a class="icon_liveData openRDData cursor"></a><div class="MS_prompt">' + langFont.Font_GameData + "</div></div>"),
            _ += "</div>",
            p && (_ += '<div id="o' + i + '" class="GLIL_MoreRow">',
            _ += '<span class="GLIL_MoreNum">' + t.tc + '</span><img src="/images/' + MainProperty.user.theme.imgPath + '/icon_moreCount.svg">',
            _ += "</div>"))),
            Tool.IsSC(e) && 4 == s ? _ += "</table>" : _ += "</td></tr>",
            m += _
        }
        return m
    },
    DrawBallShell: function(e) {
        for (var t = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll" : "#outerPage > div.gamePanelL_In", a = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll", i = $(t + " > table").toArray().map(function(e) {
            return $(e).attr("rel")
        }), n = 0; n < e.length; n++) {
            var r = ""
              , s = e[n]
              , o = MainProperty.gameData[s].type
              , l = $.extend({}, MainProperty.gameData[s])
              , s = (l.mode < 2 ? "DS" : "ZD") + o;
            i.indexOf(s) < 0 && (r += Outer.DrawSportHeader(o, l.mode),
            Tool.IsMultiSport(MainProperty.ballType) && (r += '<div class="gameFAVbox" rel="' + s + '"></div>'),
            0 == i.length ? (i.push(s),
            Tool.IsMultiSport(MainProperty.ballType) ? $(t).html(r) : ($(t).prepend(r),
            $(a).attr("rel", s))) : (i.push(s),
            l = 0 <= (o = (i = $.extend([], i).sort(function(e, t) {
                return MainProperty.ballSequence.indexOf(e) > MainProperty.ballSequence.indexOf(t) ? 1 : -1
            })).indexOf(s)) - 1 ? i[o - 1] : 0,
            o = o + 1 <= i.length - 1 ? i[o + 1] : 0,
            0 != l ? $(t + ' > table[rel="' + l + '"]').next("div").after(r) : 0 != o && $(t + ' > table[rel="' + o + '"]').before(r)),
            Outer.BindBallArrowHover(t + ' > table.gameTitle[rel="' + s + '"] > tbody > tr > td.GT_T.notBind'),
            Outer.BindShowHeaderOption(t + ' > table.gameTitle[rel="' + s + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel.notBind'),
            $(t + ' > table.gameTitle[rel="' + s + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.notBind').click(function(e) {
                Outer.FixedDefaultKT($(e.currentTarget))
            }),
            $(t + ' > table.gameTitle[rel="' + s + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.notBind').removeClass("notBind"),
            $(t + ' > table.gameTitle[rel="' + s + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_gameList_all').addClass("off"),
            Outer.BindGameTitleHover(t + ' > table.gameTitle[rel="' + s + '"] > tbody > tr > td[class^="screenOff_"].notBind'),
            Outer.BindBallNameHover(t + ' > table.gameTitle[rel="' + s + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.GT_T_name > div.GT_T_nameIn.notBind'),
            Outer.DrawAllyShell(s))
        }
        $("#scheduleNoData").hide(),
        $("#outerPage").show()
    },
    DrawAllyShell: function(t) {
        for (var e = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox[rel=" + t + "]" : "#outerPage > div.gamePanelL_In > div.gameList_scroll", a = "", i = MainProperty.gameSequence.filter(function(e) {
            e = MainProperty.gameData[e];
            return !!e && (e.mode < 2 ? "DS" : "ZD") + e.type == t
        }).map(function(e) {
            return MainProperty.gameData[e].aId
        }).filter(function(e, t, a) {
            return a.indexOf(e) === t
        }), n = 0; n < i.length; n++) {
            var r, s = i[n];
            Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? a += '<div class="gameList shell' + (2 <= parseInt(s.split("_")[3]) ? " rollLive" : "") + '" rel="' + s + '"><ul class="btn_GLT off"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[s].an + '</li></ul><div class="GLIn" style="display:none"></div></div>' : (r = Tool.IsOuterSingleTeam() ? " GLInBoxPcgame" + ("es" != MainProperty.ballType ? " cell7" : "") : "",
            a += '<div class="gameList shell' + (2 <= parseInt(s.split("_")[3]) ? " rollLive" : "") + '" rel="' + s + '"><ul class="btn_GLT off"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[s].an + '</li></ul><div class="GLIn" style="display:none"><table class="GLInBox' + r + '"></table></div></div>')
        }
        $(e).html(a),
        MainProperty.sortOption.sort == Args.SortHot ? ($("#ddlSort > div.SUM_In > .SUM_InBox > a:last-child").removeClass("on"),
        $("#ddlSort > div.SUM_In > .SUM_InBox > a:first-child").addClass("on")) : ($("#ddlSort > div.SUM_In > .SUM_InBox > a:first-child").removeClass("on"),
        $("#ddlSort > div.SUM_In > .SUM_InBox > a:last-child").addClass("on"))
    },
    InsertAllyShell: function(e) {
        for (var t = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll", a = MainProperty.gameSequence.map(function(e) {
            return MainProperty.gameData[e].aId
        }).filter(function(e, t, a) {
            return a.indexOf(e) == t
        }), i = "", n = 0; n < e.length; n++) {
            var r = e[n]
              , s = MainProperty.allyData[r].type
              , o = a.indexOf(r)
              , l = MainProperty.playMode < 2 ? "DS" + s : "ZD" + s
              , c = Args.Insert;
            i = Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? '<div class="gameList shell' + (2 <= parseInt(r.split("_")[3]) ? " rollLive" : "") + '" rel="' + r + '"><ul class="btn_GLT off"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[r].an + '</li></ul><div class="GLIn" style="display:none"></div></div>' : (s = Tool.IsOuterSingleTeam() ? " GLInBoxPcgame" + ("es" != MainProperty.ballType ? " cell7" : "") : "",
            '<div class="gameList shell' + (2 <= parseInt(r.split("_")[3]) ? " rollLive" : "") + '" rel="' + r + '"><ul class="btn_GLT off"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[r].an + '</li></ul><div class="GLIn" style="display:none"><table class="GLInBox' + s + '"></table></div></div>');
            for (var d = $(t + "[rel=" + l + "] > div.gameList").toArray().map(function(e) {
                return $(e).attr("rel")
            }), u = 0, h = o - 1; 0 <= h; h--)
                if (0 <= d.indexOf(a[h])) {
                    u = a[h],
                    c = Args.InsertAfter;
                    break
                }
            var p = 0;
            if (0 == u)
                for (h = o + 1; h < a.length; h++)
                    if (0 <= d.indexOf(a[h])) {
                        p = a[h],
                        c = Args.InsertBefore;
                        break
                    }
            c == Args.InsertAfter ? $(t + "[rel=" + l + "] > div.gameList[rel=" + u + "]").after(i) : c == Args.InsertBefore ? $(t + "[rel=" + l + "] > div.gameList[rel=" + p + "]").before(i) : $(t + "[rel=" + l + "]").append(i)
        }
        $("#scheduleNoData").hide(),
        $("#outerPage").show()
    },
    RemoveAllyShell: function(e) {
        for (var t = "#outerPage > div.gamePanelL_In > " + (Tool.IsMultiSport(MainProperty.ballType) ? "div.gameListAll_scroll > div.gameFAVbox" : "div.gameList_scroll"), a = 0; a < e.length; a++) {
            var i = e[a].aId
              , n = e[a].modeBall;
            $(t + ' > div.gameList[rel="' + i + '"]').remove(),
            Tool.IsMultiSport(MainProperty.ballType) && 0 == $(t + '[rel="' + n + '"] > div').length && ($(t).parent("div").find('[rel="' + n + '"]').remove(),
            MainProperty.BallAllyClosure[n] = !0)
        }
    },
    GetFVColor: function(e) {
        switch (e) {
        case "sc":
            return "bg_FAV_soccer";
        case "bk":
            return "bg_FAV_basketball";
        case "bb":
            return "bg_FAV_baseball";
        case "tn":
            return "bg_FAV_tennis";
        case "ih":
            return "bg_FAV_hockey";
        case "af":
            return "bg_FAV_football";
        case "vl":
            return "bg_FAV_volleyball";
        case "bm":
            return "bg_FAV_badminton";
        case "hb":
            return "bg_FAV_handball";
        case "wp":
            return "bg_FAV_waterpolo";
        case "tt":
            return "bg_FAV_pingpong";
        case "pb":
            return "bg_FAV_billiard";
        case "es":
            return "bg_FAV_pcgame";
        case "eu":
            return "bg_FAV_UEFA";
        case "wd":
            return "bg_FAV_worldCup";
        case "ch":
            return "bg_FAV_champion";
        case "fi":
            return "bg_FAV_fives";
        case "op":
            return "bg_FAV_olympic";
        case "ot":
            return "bg_FAV_other";
        case "bx":
            return "bg_FAV_boxing"
        }
    },
    FixedDefaultKT: function(e) {
        if (0 != e.length) {
            function t(e) {
                var t = 1
                  , a = 0 < (a = $(e).find("a.ZoomOutShow.on")).length ? a : $(e).closest("a.ZoomOutShow")
                  , e = $(e).closest("table.gameTitle")
                  , e = $(e).attr("rel");
                return 0 < a.length && (t = parseInt(a.attr("set"), 10),
                MainProperty.sortOption.kindSub[e] = t,
                a.siblings("a").removeClass("on"),
                a.addClass("on"),
                a.closest("div.btn_GT_sel").children("div.GT_selT").text(a.text())),
                t
            }
            var a = function(e) {
                e = $(e).closest("table.gameTitle"),
                e = $(e).attr("rel");
                return ["ZD" == e.substr(0, 2) ? 2 : 1, e.substr(2)]
            }(e[0]);
            if (1 == e.length && 0 != MainProperty.sortOption.kind && Mapping.TransformMenuType(a[1], a[0], null)[0][1] != MainProperty.sortOption.kind) {
                t(e[0]);
                a = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn);
                Outer.BatchProcess(a, !0, !1),
                MainProperty.BallAllyClosure[(MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType] = !0
            } else
                for (var i = 0; i < e.length; i++) {
                    var n = t(e[i])
                      , r = $(e[i]).closest("table.gameTitle")
                      , s = $(r).attr("rel")
                      , r = Tool.IsMultiSport(MainProperty.ballType) ? '#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle[rel="' + s + '"] > tbody > tr' : '#outerPage > div.gamePanelL_In > table.gameTitle[rel="' + s + '"] > tbody > tr'
                      , s = Tool.IsMultiSport(MainProperty.ballType) ? '#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox[rel="' + s + '"] > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList' : '#outerPage > div.gamePanelL_In > div.gameList_scroll[rel="' + s + '"] > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList';
                    if (1400 < $(window).width())
                        $(r + ' > td[class^="screenOff_"]:not([class="screenOff_' + n + '"])').add(s + ' > td[class^="screenOff_"]:not([class="screenOff_' + n + '"])').hide(),
                        $(r + ' > td[class^="screenOff_' + n + '"]').add(s + ' > td[class^="screenOff_' + n + '"]').show();
                    else {
                        $(r + ' > td[class^="screenOff_"]').add(s + ' > td[class^="screenOff_"]').hide();
                        for (var o = $(r), l = 0; l < o.length; l++)
                            (0 < $("#innerPage:visible").length ? $(o[l]).find("td.screenOff_" + n + ":first") : $(o[l]).find("td.screenOff_" + n)).show();
                        for (var c = $(s), l = 0; l < c.length; l++)
                            (0 < $("#innerPage:visible").length ? $(c[l]).find("td.screenOff_" + n + ":first") : $(c[l]).find("td.screenOff_" + n)).show()
                    }
                }
        }
    },
    BindShowHeaderOption: function(e) {
        $(e).click(function(e) {
            var t = $(e.currentTarget).closest("div.btn_GT_sel")
              , e = t.children("div.GT_selIn");
            t.hasClass("on") ? (t.removeClass("on"),
            e.hide(),
            e.children("div.GT_selInBox").hide()) : ($("#settings > .btn_setUpMenu_list").removeClass("on"),
            $("#settings > .btn_setUpMenu_list > .SUM_In").hide(),
            $("#settings > .btn_setUpMenu_list > .SUM_In > .SUM_InBox").hide(),
            Tool.IsMultiSport(MainProperty.ballType) && ($("#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel.on > div.GT_selIn").hide(),
            $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel.on > div.GT_selIn > div.GT_selInBox").hide(),
            $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel.on").removeClass("on")),
            t.addClass("on"),
            e.show(),
            e.children("div.GT_selInBox").show())
        }),
        $(e).removeClass("notBind")
    },
    BindBallArrowHover: function(e) {
        $(e).mouseover(function(e) {
            0 == $(e.target).closest("div.btn_GT_sel").length && $(this).addClass("hover")
        }),
        $(e).mouseout(function() {
            $(this).removeClass("hover")
        }),
        $(e).removeClass("notBind")
    },
    BallShrink: function(t) {
        var e, a = t.parents("table").next("div").children("div.gameList"), i = t.closest(".gameTitle").attr("rel");
        0 != a.length && (Tool.IsMultiSport(MainProperty.ballType) || MainProperty.sortOption.sort != Args.SortTime || (MainProperty.sortOption.sort = Args.SortHot,
        $("#ddlSort > div.SUM_T").html(langFont.Font_SortHot),
        $("#ddlSort > div.SUM_In > .SUM_InBox > a").removeClass("on"),
        $("#ddlSort > div.SUM_In > .SUM_InBox > a:first-child").addClass("on")),
        t.hasClass("off") ? (Tool.IsMultiSport(MainProperty.ballType) ? (t.removeClass("off"),
        0 < (e = MainProperty.gameSequence.filter(function(e) {
            e = MainProperty.gameData[e];
            return !(!e || !t.parents("table").next("div").children('div.gameList[rel="' + e.aId + '"]').hasClass("shell")) && (e.mode < 2 ? "DS" : "ZD") + e.type == i
        })).length && ($('#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox[rel="' + i + '"] > div.gameList').remove(),
        Outer.InsertGame(e, !0),
        Outer.RecycleSchedule(Args.UnloadFV, Args.FVAndCS, e.length)),
        a.removeClass("shell"),
        a.children(".btn_GLT").removeClass("off"),
        a.children(".GLIn").show()) : (e = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn),
        Outer.BatchProcess(e, !0, !1)),
        MainProperty.BallAllyClosure[i] = !0) : (t.addClass("off"),
        MainProperty.BallAllyClosure[i] = !1,
        Tool.IsMultiSport(MainProperty.ballType) && Outer.RecycleSchedule(Args.LoadFV, Args.FVAndCS, a.length),
        FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverNoReturn),
        Outer.DrawAllyShell(i),
        Outer.IsAllShrink()))
    },
    AllyShrink: function(e) {
        e = $(e).closest("div.gameList");
        if ($(e).hasClass("shell")) {
            var t = $(e).attr("rel")
              , a = MainProperty.allyData[t] ? MainProperty.allyData[t].gidSet : [];
            if (0 < a.length) {
                for (var i = "", n = 0; n < a.length; n++) {
                    var r = a[n];
                    if (0 <= MainProperty.gameSequence.indexOf(r)) {
                        var s = $.extend({}, MainProperty.gameData[r])
                          , o = GetGameST(s[r], MainProperty.oddData[r], !0);
                        if (Mapping.TransformMenuType(s.type, s.mode, null)[0][1] != MainProperty.sortOption.kind && 0 != MainProperty.sortOption.kind || 0 != o.length)
                            for (var l = 0; l < o.length; l++) {
                                var c = $.extend({}, s);
                                if (c.sT = o[l],
                                i += Outer.DrawGame(c.type, c, 0 == l ? null : r),
                                "mobile" == MainProperty.webDevice || "es" == s.type && 2 == MainProperty.sortOption.kind)
                                    break
                            }
                        else
                            s.sT = "0101",
                            i += Outer.DrawGame(s.type, s, null)
                    }
                }
                Outer.RecycleSchedule(Args.Unload, Tool.IsMultiSport(MainProperty.ballType) ? Args.FVAndCS : MainProperty.ballType, a.length),
                $(e).removeClass("shell"),
                $(e).children("ul.btn_GLT").removeClass("off"),
                (Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? $(e).children("div.GLIn") : $(e).children("div.GLIn").children("table.GLInBox")).html(i);
                t = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll";
                Outer.BindTeamNameHover(t + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_T> ul.GLInTBox > li.GLInTBox_Name > div.GLInTBox_row > div.GLInTBox_nameBox > div.GLInTBox_nameT.notBind"),
                Outer.BindShowFloatText(t + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_More > div.GLIL_MoreRow > div.GLIL_MoreStatus.noBind"),
                Outer.BindShowFloatText(t + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_T > ul.GLInTBox > li.GLInTBox_star > div.GLIL_MoreStatus.noBind"),
                Outer.BindShowFloatText(t + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr > th.GLInBoxT > div.GLIL_MoreStatus.noBind"),
                (MainProperty.innerPage || $(window).width() <= 1400 && !$("#sportMenu").hasClass("ZoomOut") && (0 == MainProperty.sortOption.kind || Mapping.TransformMenuType(MainProperty.ballType, MainProperty.playMode, null)[0][1] == MainProperty.sortOption.kind)) && (d = Tool.IsMultiSport(MainProperty.ballType) ? "div.gameFAVbox" : "div.gameListAll_scroll",
                Outer.FixedDefaultKT($(e).closest(d).prev("table.gameTitle ").children("tbody").children("tr").children("td.GT_T").children("div.GT_TBox").children("div.btn_GT_sel"))),
                $(e).children("div.GLIn").show()
            }
        } else {
            var d = $(e).children("div.GLIn").children("table.GLInBox").children("tbody").children("tr").length;
            $(e).children("ul.btn_GLT").hasClass("off") ? Outer.RecycleSchedule(Args.Unload, Tool.IsMultiSport(MainProperty.ballType) ? Args.FVAndCS : MainProperty.ballType, d) : Outer.RecycleSchedule(Tool.IsMultiSport(MainProperty.ballType) ? Args.LoadFV : Args.Load, Tool.IsMultiSport(MainProperty.ballType) ? Args.FVAndCS : MainProperty.ballType, d),
            $(e).children("ul.btn_GLT").toggleClass("off"),
            $(e).children("div.GLIn").toggle()
        }
        Outer.IsAllShrink()
    },
    IsAllShrink: function() {
        var e = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll";
        $(e).each(function() {
            for (var e = 0, t = $(this).children("div.gameList"), a = 0; a < t.length; a++)
                $(t[a]).children("ul.btn_GLT").hasClass("off") && e++;
            var i = $(this).attr("rel");
            0 != t.length && (e == t.length ? ($(this).closest(Tool.IsMultiSport(MainProperty.ballType) ? "div.gameFAVbox" : "div.gameList_scroll").prev("table").children("tbody").children("tr").children("td.GT_T").children("div.GT_TBox").children("div.btn_gameList_all").addClass("off"),
            MainProperty.BallAllyClosure[i] = !1) : $(this).closest(Tool.IsMultiSport(MainProperty.ballType) ? "div.gameFAVbox" : "div.gameList_scroll").prev("table").children("tbody").children("tr").children("td.GT_T").children("div.GT_TBox").children("div.btn_gameList_all").removeClass("off")),
            0 == e && (MainProperty.BallAllyClosure[i] = !0)
        })
    },
    BindGameTitleHover: function(e) {
        Tool.IsTouch ? $(e).click(function() {
            var e, t;
            $(this).children("div.GT_nameT").innerWidth() > $(this).width() && (t = $(this).text(),
            e = $(this).offset().left - 5 + $("#mainStruc").scrollLeft() + "px",
            t = $(this).offset().top - $("#mainStruc > div.GT_nameShow").html(t).height() - 3 + "px",
            $("#mainStruc > div.GT_nameShow").css({
                left: e,
                top: t
            }).fadeIn(200))
        }) : $(e).hoverDelay(function() {
            var e = $(this).text()
              , t = $(this).offset().left - 5 + $("#mainStruc").scrollLeft() + "px"
              , e = $(this).offset().top - $("#mainStruc > div.GT_nameShow").html(e).height() - 3 + "px";
            $(this).children("div.GT_nameT").innerWidth() > $(this).width() && $("#mainStruc > div.GT_nameShow").css({
                left: t,
                top: e
            }).fadeIn(200)
        }, function() {
            $("#mainStruc > div.GT_nameShow").hide()
        }),
        $(e).removeClass("notBind")
    },
    BindBallNameHover: function(e) {
        Tool.IsTouch ? $(e).click(function() {
            var e, t;
            $(this).innerWidth() >= $(this).parent("div.GT_T_name").width() && (t = $(this).text(),
            e = $(this).offset().left - 5 + $("#mainStruc").scrollLeft() + "px",
            t = $(this).offset().top - $("#mainStruc > div.GT_nameShow").html(t).height() - 3 + "px",
            $("#mainStruc > div.GT_nameShow").css({
                left: e,
                top: t
            }).fadeIn(200))
        }) : $(e).hoverDelay(function() {
            var e = $(this).text()
              , t = $(this).offset().left - 5 + $("#mainStruc").scrollLeft() + "px"
              , e = $(this).offset().top - $("#mainStruc > div.GT_nameShow").html(e).height() - 3 + "px";
            $(this).innerWidth() >= $(this).parent("div.GT_T_name").width() && $("#mainStruc > div.GT_nameShow").css({
                left: t,
                top: e
            }).fadeIn(200)
        }, function() {
            $("#mainStruc > div.GT_nameShow").hide()
        }),
        $(e).removeClass("notBind")
    },
    BindTeamNameHover: function(e) {
        var t = "div.GLInTBox_nameBox"
          , a = "div.GLInTBox_nameShow";
        Tool.IsTouch ? $(e).click(function() {
            var e = $(this).html();
            $(this).width() >= $(this).closest(t).width() - 15 ? $(this).next(a).show().html(e) : $(this).next(a).hide()
        }) : $(e).hoverDelay(function() {
            var e = $(this).html();
            $(this).width() >= $(this).closest(t).width() - 15 ? $(this).next(a).show().html(e) : $(this).next(a).hide()
        }, function() {
            $(this).next(a).hide()
        }),
        $(e).removeClass("notBind")
    },
    AddOrRemoveFV: function(e) {
        var t, a, i;
        MainProperty.gameData[e] && (t = $('#outerPage  a.btn_GLIn_star[rel="' + e + '"]'),
        0 <= (a = MainProperty.favoriteData.indexOf(e)) ? (MainProperty.favoriteData.splice(a, 1),
        $("#fvMsg").finish().fadeIn(800).delay(800).fadeOut(800),
        $("#fvMsg > div.popFavMsg_In").text(langFont.Font_FavoritesFailed),
        "fv" == MainProperty.ballType ? (i = MainProperty.gameData[e].aId,
        MainProperty.allyData[i].gidSet.remove(e),
        delete MainProperty.gameData[e],
        delete MainProperty.oddData[e],
        MainProperty.gameSequence.remove(e),
        Outer.RemoveGame([{
            gId: e,
            sT: "*"
        }], Args.RealDel),
        Outer.AddOrRemoveBallTable(Args.RemoveBallTable),
        0 == MainProperty.allyData[i].gidSet.length && (delete MainProperty.allyData[i],
        MainProperty.allySequence.pin.remove(i),
        MainProperty.allySequence.pop.remove(i),
        MainProperty.alOption.fvAlly.remove(i),
        a = MainProperty.alOption.cacheName,
        MainProperty.alOption.cache[a].list.remove(i),
        (0 == MainProperty.alOption.cache[a].list.length || "All" != MainProperty.alOption.cache[a].list && MainProperty.allySequence.pin.length == MainProperty.alOption.cache[a].list.length) && (MainProperty.alOption.cache[a].list = ["All"],
        a = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn),
        Outer.BatchProcess(a, !0, !1)),
        Ally.DrawAllyList())) : (t.removeClass("on"),
        t.next("div.MS_prompt").text(langFont.Font_MyGame),
        Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? ($(t).closest("table").siblings('[rel="' + e + '"]').children("tbody").children("tr").children("th").find("a.btn_GLIn_star").removeClass("on"),
        $(t).closest("table").siblings('[rel="' + e + '"]').children("tbody").children("tr").children("th").find("div.MS_prompt").text(langFont.Font_MyGame)) : ($(t).closest("tr").siblings('[rel="' + e + '"]').children("td.GLIL_T").find("a.btn_GLIn_star").removeClass("on"),
        $(t).closest("tr").siblings('[rel="' + e + '"]').children("td.GLIL_T").find("div.MS_prompt").text(langFont.Font_MyGame))),
        DataAdapter.SendCommand({
            action: "rf",
            value: [e]
        })) : MainProperty.favoriteData.length < MainProperty.favoriteLimit ? ($("#fvMsg").finish().fadeIn(800).delay(800).fadeOut(800),
        $("#fvMsg > div.popFavMsg_In").text(langFont.Font_FavoritesSuccess),
        i = MainProperty.gameData[e].aId,
        MainProperty.alOption.cache.fv && MainProperty.alOption.cache.fv.list.indexOf("All") < 0 && MainProperty.alOption.cache.fv.list.push(i),
        MainProperty.alOption.fvAlly.indexOf(i) < 0 && MainProperty.alOption.fvAlly.push(i),
        MainProperty.favoriteData.push(e),
        t.addClass("on"),
        t.next("div.MS_prompt").text(langFont.Font_Cancel),
        Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? ($(t).closest("table").siblings('[rel="' + e + '"]').children("tbody").children("tr").children("th").find("a.btn_GLIn_star").addClass("on"),
        $(t).closest("table").siblings('[rel="' + e + '"]').children("tbody").children("tr").children("th").find("div.MS_prompt").text(langFont.Font_Cancel)) : ($(t).closest("tr").siblings('[rel="' + e + '"]').children("td.GLIL_T").find("a.btn_GLIn_star").addClass("on"),
        $(t).closest("tr").siblings('[rel="' + e + '"]').children("td.GLIL_T").find("div.MS_prompt").text(langFont.Font_Cancel)),
        DataAdapter.SendCommand({
            action: "sf",
            value: [e]
        })) : ShowAlert(Alert.AlertText, langFont.Font_FavoriteOverLimit),
        $("#btnFV > div > div").text(MainProperty.favoriteData.length),
        SetCookie("fvpk", JSON.stringify(MainProperty.favoriteData)))
    },
    BindShowFloatText: function(e) {
        Tool.IsTouch ? $(e).click(function() {
            $(this).children("div.MS_prompt").show()
        }) : $(e).hoverDelay(function() {
            $(this).children("div.MS_prompt").show()
        }, function() {
            $(this).children("div.MS_prompt").hide()
        }),
        $(e).removeClass("noBind")
    },
    AddCartClick: function(e) {
        0 < $("#delayInfo:visible").length || (e = e.closest(".btn_GLOdds"),
        CartBase.AddCartList(e, !1))
    },
    RadarLink: function(e) {
        var t = e.closest("tr.GLInList").attr("rel")
          , e = "zh";
        "zh" == langFont.Font_Langue ? e = "zht" : "cn" == langFont.Font_Langue ? e = "zh" : "en" == langFont.Font_Langue ? e = "en" : "vi" == langFont.Font_Langue && (e = "vi");
        t = MainProperty.gameData[t].mId.replaceAll("A", "").replaceAll("B", "").replaceAll("C", "").replaceAll("D", "").replaceAll("E", "").replaceAll("F", "").replaceAll("H", "");
        NewWindow(MainProperty.RadarData + "?language=" + e + "&matchid=" + t + "&reqtype=1", null)
    },
    RadarAnimation: function(e) {
        var t = e.closest("tr.GLInList").attr("rel")
          , a = "zh";
        "zh" == langFont.Font_Langue ? a = "zht" : "cn" == langFont.Font_Langue ? a = "zh" : "en" == langFont.Font_Langue ? a = "en" : "vi" == langFont.Font_Langue && (a = "vi");
        e = "";
        switch (MainProperty.gameData[t].type) {
        case "sc":
        case "eu":
        case "wd":
        case "ch":
        case "fi":
            e = "zq";
            break;
        case "bk":
            e = "lq";
            break;
        case "tn":
            e = "wq";
            break;
        default:
            e = MainProperty.ballType
        }
        t = MainProperty.gameData[t].mId.replaceAll("A", "").replaceAll("B", "").replaceAll("C", "").replaceAll("D", "").replaceAll("E", "").replaceAll("F", "").replaceAll("H", "");
        NewWindow(MainProperty.RadarAnimation + "?language=" + a + "&matchid=" + t + "&reqtype=1&ball=" + e, null)
    },
    UpdateGame: function(e, t) {
        var a = MainProperty.gameData[e]
          , i = Tool.IsMultiSport(MainProperty.ballType) ? '#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList > div.GLIn > table.GLInBox > tbody > tr[rel="' + e + '"] ' : '#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox > tbody > tr[rel="' + e + '"] ';
        Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx && (i = '#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox[rel="' + e + '"] ');
        for (var n = 0; n < t.length; n++)
            switch (t[n]) {
            case "h":
                if (MainProperty.innerPage == e) {
                    Inner.DrawHeaderBattleInfo();
                    var r, s = [];
                    for (r in MainProperty.innerData.oddData[e])
                        for (var o in MainProperty.innerData.oddData[e][r])
                            s.indexOf(o) < 0 && s.push({
                                kT: o,
                                sT: r
                            });
                    Inner.InsertMore(s)
                }
                break;
            case "gd":
            case "st":
            case "rt":
                0 <= ["tn", "vl", "bm", "tt"].indexOf(a.type) && 2 == a.mode && 1 <= a.st && a.st <= 7 && 5 != MainProperty.sortOption.kind ? ($(i + 'li.GLInTBox_round[rel="ogd' + e + '"]').addClass("none"),
                $(i + 'li.GLInTBox_round[rel="' + e + '"]').removeClass("none")) : ($(i + 'li.GLInTBox_round[rel="' + e + '"]').addClass("none"),
                $(i + 'li.GLInTBox_round[rel="ogd' + e + '"]').removeClass("none")),
                0 <= ["tn", "vl", "bm", "tt"].indexOf(a.type) && (60 == a.st ? $(i + "li.GLInTBox_Score").addClass("none") : 1 != a.isScore && $(i + "li.GLInTBox_Score").removeClass("none"));
                var l = Tool.TransformGdOrSt(a.type, a.mode, MainProperty.sortOption.kind, a.st, a.gd, a.rt, a.ht);
                Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? $(i + 'span.GLInBoxT_time[rel="ogd' + e + '"]').html('<span class="t_yellow">' + l[0] + "</span> <font>" + l[1] + "</font>") : ($(i + 'li.GLInTBox_round[rel="ogd' + e + '"] > div.st').html("<span" + (2 == a.mode ? ' class="t_yellow"' : "") + ">" + l[0] + "</span>"),
                $(i + 'li.GLInTBox_round[rel="ogd' + e + '"] > div.rt').html("<font>" + l[1] + "</font>")),
                e == MainProperty.innerPage && (m = Tool.TransformGdOrSt(a.type, a.mode, null, a.st, a.gd, a.rt, a.ht),
                $("#igd").text(m[0] + " " + m[1]));
                break;
            case "ra":
            case "rb":
                0 <= ["tn", "vl", "bm", "tt"].indexOf(a.type) ? $(i + 'ul.GLInTBox font[rel="o' + t[n] + e + '"]').text(a[t[n]]) : ($("#o" + t[n] + e).text(a[t[n]]),
                parseInt(a.ra, 10) > parseInt(a.rb, 10) ? ($("#ora" + e).addClass("t_yellow"),
                $("#orb" + e).removeClass("t_yellow")) : parseInt(a.ra, 10) < parseInt(a.rb, 10) ? ($("#orb" + e).addClass("t_yellow"),
                $("#ora" + e).removeClass("t_yellow")) : $("#ora" + e).add("#orb" + e).removeClass("t_yellow"));
                break;
            case "fra":
            case "frb":
                e == MainProperty.innerPage && (parseInt(a.fra, 10) > parseInt(a.frb, 10) ? ($("#ifra").addClass("t_yellow"),
                $("#ifrb").removeClass("t_yellow")) : parseInt(a.fra, 10) < parseInt(a.frb, 10) ? ($("#ifrb").addClass("t_yellow"),
                $("#ifra").removeClass("t_yellow")) : $("#ifra").add("#ifrb").removeClass("t_yellow"),
                $("#i" + t[n]).text(a[t[n]]));
                break;
            case "sa":
            case "sb":
                for (var c = ["A", "B", "C", "D", "E", "F", "G", "H", "I"], d = "", u = 0; u < a[t[n]].length; u++) {
                    var h = c[u];
                    isNaN(parseInt(a[t[n]][u], 10)) || (d = a[t[n]][u],
                    parseInt(a.sa[u], 10) > parseInt(a.sb[u], 10) ? ($("#osa" + e + h).add("#osa" + e).addClass("t_yellow"),
                    $("#osb" + e + h).add("#osb" + e).removeClass("t_yellow")) : parseInt(a.sa[u], 10) < parseInt(a.sb[u], 10) ? ($("#osb" + e + h).add("#osb" + e).addClass("t_yellow"),
                    $("#osa" + e + h).add("#osa" + e).removeClass("t_yellow")) : $("#osa" + e + h).add("#osb" + e + h).add("#osa" + e).add("#osb" + e).removeClass("t_yellow")),
                    $("#o" + t[n] + e + h).html(a[t[n]][u])
                }
                $("#o" + t[n] + e).html(d);
                break;
            case "na":
            case "nb":
                parseInt(a.na, 10) > parseInt(a.nb, 10) ? ($(i + '> td.GLIL_T > ul.GLInTBox > li.GLInTBox_Score > div[rel="ona' + e + '"]').addClass("t_yellow"),
                $(i + '> td.GLIL_T > ul.GLInTBox > li.GLInTBox_Score > div[rel="onb' + e + '"]').removeClass("t_yellow")) : parseInt(a.na, 10) < parseInt(a.nb, 10) ? ($(i + '> td.GLIL_T > ul.GLInTBox > li.GLInTBox_Score > div[rel="onb' + e + '"]').addClass("t_yellow"),
                $(i + '> td.GLIL_T > ul.GLInTBox > li.GLInTBox_Score > div[rel="ona' + e + '"]').removeClass("t_yellow")) : $(i + '> td.GLIL_T > ul.GLInTBox > li.GLInTBox_Score > div[rel="ona' + e + '"]').add(i + '> td.GLIL_T > ul.GLInTBox > li.GLInTBox_Score > div[rel="onb' + e + '"]').removeClass("t_yellow");
                d = 255 == a[t[n]] ? "A" : a[t[n]];
                $(i + '> td.GLIL_T > ul.GLInTBox > li.GLInTBox_Score > div[rel="o' + t[n] + e + '"]').text(d);
                break;
            case "runsA":
            case "runsB":
                for (var c = ["A", "B", "C", "D", "E", "F", "G", "H", "I"], p = "runsA" == t[n] ? "ra" : "rb", u = 0; u < a[t[n]].length; u++) {
                    h = c[u];
                    $("#o" + p + e + h).text(a[t[n]][u]),
                    parseInt(a.runsA[u], 10) > parseInt(a.runsB[u], 10) ? ($("#ora" + e + h).addClass("t_yellow"),
                    $("#orb" + e + h).removeClass("t_yellow")) : parseInt(a.runsA[u], 10) < parseInt(a.runsB[u], 10) ? ($("#orb" + e + h).addClass("t_yellow"),
                    $("#ora" + e + h).removeClass("t_yellow")) : $("#ora" + e + h).add("#orb" + e + h).removeClass("t_yellow")
                }
                break;
            case "rcna":
            case "rcnb":
                var m = Tool.IsSC(a.type) && 4 == MainProperty.sortOption.kind ? "span.GLInBoxT_score > span.GLInBoxT_redCard" : "div.GLInTBox_nameBox > div.GLInTBox_redCard";
                a[t[n]] ? ($(i + m + '[rel="o' + t[n] + e + '"]').addClass("show").text(a[t[n]]),
                e == MainProperty.innerPage && $("#i" + t[n]).addClass("show").text(a[t[n]])) : ($(i + m + '[rel="o' + t[n] + e + '"]').removeClass("show").text(""),
                e == MainProperty.innerPage && $("#i" + t[n]).removeClass("show").text(""));
                break;
            case "pr":
                switch (a.pr) {
                case 0:
                    $(i + 'li.GLInTBox_round > div.t_score > span.Ball_green[rel="opra' + e + '"]').removeClass("show"),
                    $(i + 'li.GLInTBox_round > div.t_score > span.Ball_green[rel="oprb' + e + '"]').removeClass("show");
                    break;
                case 1:
                    $(i + 'li.GLInTBox_round > div.t_score > span.Ball_green[rel="opra' + e + '"]').addClass("show"),
                    $(i + 'li.GLInTBox_round > div.t_score > span.Ball_green[rel="oprb' + e + '"]').removeClass("show");
                    break;
                case 2:
                    $(i + 'li.GLInTBox_round > div.t_score > span.Ball_green[rel="opra' + e + '"]').removeClass("show"),
                    $(i + 'li.GLInTBox_round > div.t_score > span.Ball_green[rel="oprb' + e + '"]').addClass("show")
                }
                break;
            case "mId":
                Tool.TransformRadar(!1, a.type, a.mId, !1) ? $("#omId" + e).removeClass("none") : $("#omId" + e).addClass("none"),
                Tool.TransformRadar(!1, a.type, a.mId, !0) ? $("#oplaymId" + e).removeClass("none") : $("#oplaymId" + e).addClass("none");
                break;
            case "live":
                switch (a.live) {
                case "1":
                    $("#oys" + e).removeClass("none"),
                    $("#olive" + e).add("#onoLive" + e).add("#obeauty" + e).add("#odelayed" + e).add("#ozd" + e).addClass("none");
                    break;
                case "2":
                    $("#onoLive" + e).removeClass("none"),
                    $("#olive" + e).add("#oys" + e).add("#obeauty" + e).add("#odelayed" + e).add("#ozd" + e).addClass("none");
                    break;
                case "4":
                    $("#obeauty" + e).removeClass("none"),
                    $("#olive" + e).add("#oys" + e).add("#onoLive" + e).add("#odelayed" + e).add("#ozd" + e).addClass("none");
                    break;
                case "5":
                    $("#odelayed" + e).removeClass("none"),
                    $("#olive" + e).add("#oys" + e).add("#obeauty" + e).add("#onoLive" + e).add("#ozd" + e).addClass("none");
                    break;
                default:
                    a.live ? ($("#olive" + e).removeClass("none"),
                    $("#oys" + e).add("#onoLive" + e).add("#ozd" + e).add("#obeauty" + e).add("#odelayed" + e).addClass("none"),
                    $("#olive" + e + " > div.MS_prompt").text(2 == a.mode || 0 == a.zd ? langFont.Font_LiveBroadcast : langFont.Font_OpenZDAndLiveBroadcast)) : ($("#olive" + e).add("#oys" + e).add("#onoLive" + e).add("#obeauty" + e).add("#odelayed" + e).addClass("none"),
                    a.zd && a.mode < 2 && $("#ozd" + e).removeClass("none"))
                }
                break;
            case "zd":
                0 == a.zd ? ($("#ozd" + e).addClass("none"),
                $("#olive" + e + " > div.MS_prompt").text(langFont.Font_LiveBroadcast)) : a.live ? 2 != a.mode && $("#olive" + e + " > div.MS_prompt").text(langFont.Font_OpenZDAndLiveBroadcast) : $("#ozd" + e).removeClass("none");
                break;
            case "tc":
                (0 == MainProperty.sortOption.kind || Mapping.TransformMenuType(a.type, a.mode, null)[0][1] == MainProperty.sortOption.kind) && MainProperty.gameSequence.indexOf(e) < 0 && 0 < a.tc ? (FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverNoReturn),
                Outer.InsertGame([e], !0),
                Ally.DrawAllyList()) : $("#o" + e + " > span").text(a.tc);
                break;
            case "pa":
            case "ta":
            case "coa":
                if (Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx)
                    $(i + 'font[rel="ota' + e + '"]').text(a.ta);
                else {
                    for (var g = "", u = 0; u < a.ta.length; u++)
                        a.ta[u] && (g += (0 < u ? " / " : "") + "<font>" + a.ta[u] + '</font><span class="t_gray"> ' + (a.coa[u] || "") + "</span>");
                    ["tn", "bm", "tt", "pb", "es", "bv"].indexOf(a.type) < 0 && 0 == a.h && (g += '<span class="t_pink"> (' + langFont.Font_NeutralMark + ")</span>"),
                    g += '<span class="t_gray"> ' + a.pa + "</span>",
                    $(i + 'div.GLInTBox_nameT[rel="ota' + e + '"]').html(g)
                }
                e == MainProperty.innerPage && ($("#innerTeamA > font").text(a.ta.join(" / ")),
                $("#innerTeamA > span.t_gray").text(a.pa));
                break;
            case "pb":
            case "tb":
            case "cob":
                if (Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx)
                    $(i + 'font[rel="otb' + e + '"]').text(a.tb);
                else {
                    for (g = "",
                    u = 0; u < a.tb.length; u++)
                        a.tb[u] && (g += (0 < u ? " / " : "") + "<font>" + a.tb[u] + '</font><span class="t_gray"> ' + (a.cob[u] || "") + "</span>");
                    g += '<span class="t_gray"> ' + a.pb + "</span>",
                    $(i + 'div.GLInTBox_nameT[rel="otb' + e + '"]').html(g)
                }
                e == MainProperty.innerPage && ($("#innerTeamB > font").text(a.tb.join(" / ")),
                $("#innerTeamB > span.t_gray").text(a.pb));
                break;
            case "isScore":
                1 == a.isScore ? $(i + "li.GLInTBox_Score").add(i + 'div.GLInTBox_nameBox > div.GLInTBox_redCard[rel="orcna' + e + '"]').add(i + 'div.GLInTBox_nameBox > div.GLInTBox_redCard[rel="orcnb' + e + '"]').addClass("none") : 0 <= ["tn", "vl", "bm", "tt"].indexOf(a.type) && 60 == a.st || $(i + "li.GLInTBox_Score").add(i + 'div.GLInTBox_nameBox > div.GLInTBox_redCard[rel="orcna' + e + '"]').add(i + 'div.GLInTBox_nameBox > div.GLInTBox_redCard[rel="orcnb' + e + '"]').removeClass("none"),
                e == MainProperty.innerPage && (1 == a.isScore ? $("#innerScore > span").add("#innerScore > div.GDT_round > text").add("#innerScore > div.GDT_round > span").addClass("none") : $("#innerScore > span").add("#innerScore > div.GDT_round > text").add("#innerScore > div.GDT_round > span").removeClass("none"))
            }
    },
    UpdateOdd: function(e, t, a, i) {
        function n(e, t, a) {
            e.hasClass("animate1") ? (e.addClass("paused"),
            e.removeClass("animate1 paused"),
            e.removeClass(a).addClass(t + " animate2")) : (e.hasClass("animate2") && (e.addClass("paused"),
            e.removeClass("animate2 paused")),
            e.removeClass(a).addClass(t + " animate1"))
        }
        for (var r = MainProperty.oddData[e][t][a], s = MainProperty.gameData[e], o = Tool.IsMultiSport(MainProperty.ballType) ? '#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList > div.GLIn > table.GLInBox > tbody > tr[rel="' + e + '"] ' : Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? '#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox[rel="' + e + '"] > tbody > tr ' : '#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox > tbody > tr[rel="' + e + '"] ', l = 0; l < i.length; l++)
            if ("pk" === i[l]) {
                var c = (m = $(o + ' ul.GLOdds > li[rel^="' + e + "_" + t + "_" + a + '_"]:first').closest("ul.GLOdds")).attr("pkType")
                  , d = ["", ""];
                if ("es" == s.type && 2 == MainProperty.sortOption.kind)
                    if (c == Args.PKPL)
                        d = [langFont.Font_Home, langFont.Font_Guest];
                    else if (c == Args.BigSmallPL)
                        d = 0 <= ["180191", "180291", "180391", "180491", "180591", "180691", "180791"].indexOf(a) ? [langFont.Font_MoreThan + " " + r.pk, langFont.Font_LessThan + " " + r.pk] : [langFont.Font_Big + " " + r.pk, langFont.Font_Small + " " + r.pk];
                    else {
                        if (c != Args.OddPairPL)
                            continue;
                        d = [langFont.Font_Single, langFont.Font_Pair]
                    }
                else {
                    if (c == Args.PKPL)
                        d = "bb" == s.type ? ["", r.pk] : [r.pk, ""];
                    else if (c == Args.BigSmallPL)
                        d = [r.pk, langFont.Font_Small];
                    else {
                        if (c != Args.OddPairPL)
                            continue;
                        d = [langFont.Font_Single, langFont.Font_Pair]
                    }
                    c == Args.PKPL && (1 == r.lineAt && 2 == s.h || 0 == r.lineAt && s.h <= 1) && (d = d.reverse())
                }
                for (var u = m.find('div[id^="opk"]'), h = 0; h < 2; h++) {
                    var p = d[h] || ""
                      , p = c == Args.OddPairPL ? r[h + 1][0] ? p : "" : r.pk ? p : "";
                    $(u[h]).text() && p && $(u[h]).text() != p && n($(u[h]), "oddsText", ""),
                    $(u[h]).text(p)
                }
            } else {
                var m = $("#opl" + e + i[l] + a + t)
                  , g = Cart.ChkScheduleBgColor(e + "_" + t + "_" + a + "_" + i[l]) ? "btn_GLOdds on" : "btn_GLOdds";
                r[i[l]][MainProperty.isPrincipal] && m.text() && (m.text() > r[i[l]][MainProperty.isPrincipal] ? n(m, "oddsDown", "oddsUp") : m.text() < r[i[l]][MainProperty.isPrincipal] && n(m, "oddsUp", "oddsDown")),
                m.text(r[i[l]][MainProperty.isPrincipal]),
                r[i[l]][MainProperty.isPrincipal] && 0 < m.closest(".noneOdds").length ? m.closest(".noneOdds").addClass(g).removeClass("noneOdds") : !r[i[l]][MainProperty.isPrincipal] && 0 < m.closest(".btn_GLOdds").length && m.closest(".btn_GLOdds").addClass("noneOdds").removeClass("btn_GLOdds on")
            }
    },
    UpdateKindSubOption: function() {
        var e = (MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType
          , t = MainProperty.sortOption.kindSub[e] - 1;
        if (Tool.IsMultiQtr() && 0 == MainProperty.kindSub[t] && !Tool.HasKindSubGame(t)) {
            for (var a = 0; a < MainProperty.kindSub.length; a++)
                if (0 < MainProperty.kindSub[a] || Tool.HasKindSubGame(a))
                    return MainProperty.sortOption.kindSub[e] = a + 1,
                    !0
        } else
            for (a = 0; a < MainProperty.kindSub.length; a++)
                Tool.IsMultiQtr() && (0 < MainProperty.kindSub[a] || Tool.HasKindSubGame(a) ? $('#dropOption > a[set="' + (a + 1) + '"]').removeClass("none") : $('#dropOption > a[set="' + (a + 1) + '"]').addClass("none")),
                $('#dropOption > a[set="' + (a + 1) + '"] > span').text(MainProperty.kindSub[a]);
        return !1
    },
    InsertGame: function(e, t, a) {
        0 < e.length && t && (e = $.extend([], e).sort(function(e, t) {
            return MainProperty.gameSequence.indexOf(e) >= MainProperty.gameSequence.indexOf(t) ? 1 : -1
        })),
        a = a || {
            open: [],
            close: []
        };
        for (var i = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll" : "#outerPage > div.gamePanelL_In", n = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll", r = Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? " > div.gameList > div.GLIn > table.GLInBox" : " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList", s = 0; s < e.length; s++) {
            var o = ""
              , l = e[s]
              , c = MainProperty.gameData[l].type
              , d = $.extend({}, MainProperty.gameData[l])
              , u = d.mode < 2 ? "DS" : "ZD"
              , h = u + c
              , p = Args.Insert
              , m = MainProperty.gameSequence.indexOf(l);
            if (!(m < 0)) {
                for (var g = $(n + '[rel="' + h + '"] > div.gameList').toArray().map(function(e) {
                    return $(e).attr("rel")
                }), f = $(n + '[rel="' + h + '"]' + r).toArray().map(function(e) {
                    return $(e).attr("rel")
                }), v = 0, _ = "", y = m - 1; 0 <= y; y--)
                    if (0 <= f.indexOf(MainProperty.gameSequence[y])) {
                        v = MainProperty.gameSequence[y],
                        _ = MainProperty.gameData[v].mode < 2 ? "DS" : "ZD",
                        d.aId == MainProperty.gameData[v].aId && u == _ && (p = Args.InsertAfter);
                        break
                    }
                for (var P = 0, S = "", y = m + 1; y < MainProperty.gameSequence.length; y++)
                    if (0 <= f.indexOf(MainProperty.gameSequence[y])) {
                        P = MainProperty.gameSequence[y],
                        S = MainProperty.gameData[P].mode < 2 ? "DS" : "ZD",
                        d.aId == MainProperty.gameData[P].aId && u == S && (p = Args.InsertBefore);
                        break
                    }
                p == Args.Insert && 0 != v && 0 != P && (p = MainProperty.gameData[v].aId == MainProperty.gameData[P].aId && _ == S ? Args.InsertMiddle : p);
                var b = GetGameST(MainProperty.gameData[l], MainProperty.oddData[l], !0);
                Mapping.TransformMenuType(c, MainProperty.playMode, null)[0][1] != MainProperty.sortOption.kind && 0 != MainProperty.sortOption.kind || 0 != b.length ? "es" == MainProperty.ballType && 2 == MainProperty.sortOption.kind && 0 < b.length && (b = [b[0]]) : b = ["0101"];
                for (var T = "", y = 0; y < b.length; y++)
                    d.sT = b[y],
                    T += Outer.DrawGame(c, d, 0 < y ? l : "");
                if (!(T.length <= 0))
                    switch (p) {
                    case Args.Insert:
                        var C = $(i + " > table").toArray().map(function(e) {
                            return $(e).attr("rel")
                        })
                          , M = !1;
                        C.indexOf(h) < 0 && (M = !0,
                        o += Outer.DrawSportHeader(c, d.mode),
                        Tool.IsMultiSport(MainProperty.ballType) && (o += '<div class="gameFAVbox" rel="' + h + '"></div>'),
                        0 == C.length ? (C.push(h),
                        Tool.IsMultiSport(MainProperty.ballType) ? $(i).html(o) : ($(i).prepend(o),
                        $(n).attr("rel", h))) : (C.push(h),
                        A = 0 <= (L = (C = $.extend([], C).sort(function(e, t) {
                            return MainProperty.ballSequence.indexOf(e) > MainProperty.ballSequence.indexOf(t) ? 1 : -1
                        })).indexOf(h)) - 1 ? C[L - 1] : 0,
                        I = L + 1 <= C.length - 1 ? C[L + 1] : 0,
                        0 != A ? $(i + ' > table[rel="' + A + '"]').next("div").after(o) : 0 != I && $(i + ' > table[rel="' + I + '"]').before(o)),
                        Outer.BindBallArrowHover(i + ' > table.gameTitle[rel="' + h + '"] > tbody > tr > td.GT_T.notBind'),
                        Outer.BindShowHeaderOption(i + ' > table.gameTitle[rel="' + h + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel.notBind'),
                        $(i + ' > table.gameTitle[rel="' + h + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.notBind').click(function(e) {
                            Outer.FixedDefaultKT($(e.currentTarget))
                        }),
                        $(i + ' > table.gameTitle[rel="' + h + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.notBind').removeClass("notBind"),
                        Outer.BindGameTitleHover(i + ' > table.gameTitle[rel="' + h + '"] > tbody > tr > td[class^="screenOff_"].notBind'),
                        Outer.BindBallNameHover(i + ' > table.gameTitle[rel="' + h + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.GT_T_name > div.GT_T_nameIn.notBind'));
                        var I, A, L = 0 == $(i + ' > div[rel="' + h + '"] > div.gameList > ul.btn_GLT.off').length ? "" : ' style="display: none;"';
                        0 <= a.open.indexOf(l) ? L = "" : 0 <= a.close.indexOf(l) && (L = ' style="display: none;"'),
                        o = '<div class="gameList' + (2 <= parseInt(d.aId.split("_")[3]) ? " rollLive" : "") + '" rel="' + d.aId + '"><ul class="btn_GLT notBind' + (L ? " off" : "") + '"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[d.aId].an + '</li></ul><div class="GLIn"' + L + ">" + T,
                        Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx || (G = Tool.IsOuterSingleTeam() ? " GLInBoxPcgame" + ("es" != MainProperty.ballType ? " cell7" : "") : "",
                        o = o.replace('<div class="GLIn"' + L + ">", '<div class="GLIn"' + L + '><table class="GLInBox' + G + '">') + "</table>"),
                        o += "</div></div>",
                        0 == v && 0 == P && 0 == g.length ? ($("#scheduleNoData").hide(),
                        $("#outerPage").show(),
                        $(n + '[rel="' + h + '"]').html(o),
                        $("#outerPage > div.gamePanelL_In > div.gameList_scroll").show()) : M ? $('#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div > table[rel="' + h + '"]').next("div.gameFAVbox").append(o) : (A = 0 != v ? v : P,
                        I = MainProperty.gameSequence.indexOf(A),
                        D = $(n + r + '[rel="' + A + '"]').closest("div.gameList"),
                        x = (M = MainProperty.gameSequence.map(function(e) {
                            return MainProperty.gameData[e].aId
                        }).filter(function(e, t, a) {
                            return a.indexOf(e) === t && Tool.TransformAIdToModeBall(e) == h
                        })).indexOf(MainProperty.gameData[l].aId),
                        A = MainProperty.gameData[A] ? M.indexOf(MainProperty.gameData[A].aId) : -99,
                        0 == v || I != m - 1 && A != x - 1 ? I == m + 1 || A == x + 1 ? D.before(o) : MainProperty.sortOption.sort == Args.SortHot && M[x + 1] && 0 <= g.indexOf(M[x + 1]) ? $(n + '[rel="' + h + '"] > div.gameList[rel="' + M[x + 1] + '"]').before(o) : MainProperty.sortOption.sort == Args.SortHot && M[x - 1] && 0 <= g.indexOf(M[x - 1]) ? $(n + '[rel="' + h + '"] > div.gameList[rel="' + M[x - 1] + '"]').after(o) : D.before(o) : D.after(o));
                        break;
                    case Args.InsertAfter:
                        $(n + r + '[rel="' + v + '"]:last').after(T);
                        break;
                    case Args.InsertBefore:
                        $(n + r + '[rel="' + P + '"]:first').before(T);
                        break;
                    case Args.InsertMiddle:
                        L = 0 == $(i + ' > div[rel="' + h + '"] > div.gameList > ul.btn_GLT.off').length ? "" : ' style="display: none;"';
                        0 <= a.open.indexOf(l) ? L = "" : 0 <= a.close.indexOf(l) && (L = ' style="display: none;"'),
                        o = '<div class="gameList' + (2 <= parseInt(d.aId.split("_")[3]) ? " rollLive" : "") + '" rel="' + d.aId + '"><ul class="btn_GLT notBind' + (L ? " off" : "") + '"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[d.aId].an + '</li></ul><div class="GLIn"' + L + ">" + T,
                        Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx || (G = Tool.IsOuterSingleTeam() ? " GLInBoxPcgame" + ("es" != MainProperty.ballType ? " cell7" : "") : "",
                        o = o.replace('<div class="GLIn"' + L + ">", '<div class="GLIn"' + L + '><table class="GLInBox' + G + '">') + "</table>"),
                        o += "</div></div>";
                        var x = MainProperty.gameData[v].aId
                          , D = $(n + r + '[rel="' + v + '"]').closest("div.gameList")
                          , w = [];
                        $(n + r + '[rel="' + v + '"]:last').nextAll().each(function() {
                            w.push([$(this).attr("rel"), $(this).attr("sT")])
                        });
                        for (var k = "", y = 0; y < w.length; y++) {
                            var B = $.extend({}, MainProperty.gameData[w[y][0]]);
                            B.sT = w[y][1],
                            k += Outer.DrawGame(c, B, 0 < y ? w[y - 1][0] : "")
                        }
                        var G, L = $(D).children("ul.btn_GLT").hasClass("off") ? ' style="display: none;"' : "", x = '<div class="gameList' + (2 <= parseInt(x.split("_")[3]) ? " rollLive" : "") + '" rel="' + x + '"><ul class="btn_GLT notBind' + (L ? " off" : "") + '"><li class="icon_gameList_list"></li><li>' + MainProperty.allyData[x].an + '</li></ul><div class="GLIn"' + L + ">" + k;
                        Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx || (G = Tool.IsOuterSingleTeam() ? " GLInBoxPcgame" + ("es" != MainProperty.ballType ? " cell7" : "") : "",
                        x = x.replace('<div class="GLIn"' + L + ">", '<div class="GLIn"' + L + '><table class="GLInBox' + G + '">') + "</table>"),
                        x += "</div></div>",
                        $(n + r + '[rel="' + v + '"]:last').nextAll().remove(),
                        $(D).after(o + x)
                    }
            }
        }
        Outer.IsAllShrink(),
        (MainProperty.innerPage || $(window).width() <= 1400 && !$("#sportMenu").hasClass("ZoomOut") && (0 == MainProperty.sortOption.kind || Mapping.TransformMenuType(MainProperty.ballType, MainProperty.playMode, null)[0][1] == MainProperty.sortOption.kind)) && Outer.FixedDefaultKT($(i + " > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel")),
        Outer.BindTeamNameHover(n + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_T> ul.GLInTBox > li.GLInTBox_Name > div.GLInTBox_row > div.GLInTBox_nameBox > div.GLInTBox_nameT.notBind"),
        Outer.BindShowFloatText(n + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_More > div.GLIL_MoreRow > div.GLIL_MoreStatus.noBind"),
        Outer.BindShowFloatText(n + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_T > ul.GLInTBox > li.GLInTBox_star > div.GLIL_MoreStatus.noBind"),
        Outer.BindShowFloatText(n + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr > th.GLInBoxT > div.GLIL_MoreStatus.noBind")
    },
    RemoveGame: function(e, t) {
        for (var a = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList" : Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList", i = 0; i < e.length; i++) {
            var n = e[i].gId
              , r = $(a + '[rel="' + n + '"]').closest("div.gameList")
              , s = Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? r.children("div.GLIn") : r.children("div.GLIn").children("table.GLInBox").children("tbody")
              , o = Tool.TransformGameType(parseInt(n.substr(0, 2), 10), Args.ShortEn);
            if ("*" == e[i].sT)
                $(a + '[rel="' + n + '"]').remove();
            else
                for (var l = $(a + '[rel="' + n + '"][sT="' + e[i].sT + '"][rIdx="' + e[i].rIdx + '"]'), c = 0; c < l.length; c++)
                    $(l[c]).remove();
            if (0 == s.children().length) {
                if (r.prev("div").attr("rel") == r.next("div").attr("rel")) {
                    var d = Tool.IsSC(MainProperty.ballType) && 4 == MainProperty.sortOption.kind ? r.next("div").children("div.GLIn").children("table.GLInBox") : r.next("div").children("div.GLIn").children("table.GLInBox").children("tbody").children("tr.GLInList")
                      , s = Tool.IsSC(MainProperty.ballType) && 4 == MainProperty.sortOption.kind ? r.prev("div").children("div.GLIn") : r.prev("div").children("div.GLIn").children("table.GLInBox").children("tbody")
                      , u = [];
                    d.each(function() {
                        var e = $(this).attr("rel");
                        0 <= MainProperty.gameSequence.indexOf(e) && u.push([e, $(this).attr("sT")])
                    });
                    for (var h = "", c = 0; c < u.length; c++) {
                        var p = $.extend({}, MainProperty.gameData[u[c][0]]);
                        p.sT = u[c][1],
                        h += Outer.DrawGame(o, p, 0 < c ? u[c - 1][0] : "")
                    }
                    s.append(h),
                    r.next("div").remove(),
                    Outer.BindTeamNameHover(a + " > td.GLIL_T > ul.GLInTBox > li.GLInTBox_Name > div.GLInTBox_row > div.GLInTBox_nameBox > div.GLInTBox_nameT.notBind"),
                    Outer.BindShowFloatText(a + " > td.GLIL_More > div.GLIL_MoreRow > div.GLIL_MoreStatus.noBind"),
                    Outer.BindShowFloatText(a + " > td.GLIL_T > ul.GLInTBox > li.GLInTBox_star > div.GLIL_MoreStatus.noBind"),
                    Outer.BindShowFloatText(a + " > tbody > tr > th.GLInBoxT > div.GLIL_MoreStatus.noBind")
                }
                r.remove(),
                t != Args.FakeDel && Outer.IsAllShrink()
            }
            MainProperty.innerPage == n && t == Args.RealDel && "*" == e[i].sT && Inner.Close()
        }
    },
    AddOrRemoveBallTable: function(e) {
        var t, a = Tool.IsSC(MainProperty.ballType) && 0 <= [2, 4].indexOf(MainProperty.sortOption.kind);
        switch (e) {
        case Args.AddBallTable:
            a && (t = Outer.DrawSportHeader(MainProperty.ballType, MainProperty.playMode),
            e = (MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType,
            $("#outerPage > div.gamePanelL_In").prepend(t),
            $("#outerPage > div.gamePanelL_In > div.gameList_scroll").attr("rel", $("#outerPage > div.gamePanelL_In > table.gameTitle").attr("rel")),
            r = '<div class="noGmae" style="margin-top: 325px"><img src="/images/' + MainProperty.user.theme.imgPath + '/icon_noGame.svg">' + langFont.Font_NoGame + "</div>",
            $("#outerPage > div.gamePanelL_In > div.gameList_scroll").html(r),
            Outer.BindBallArrowHover('#outerPage > div.gamePanelL_In > table.gameTitle[rel="' + e + '"] > tbody > tr > td.GT_T.notBind'),
            Outer.BindShowHeaderOption("#outerPage > div.gamePanelL_In > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel.notBind"),
            $("#outerPage > div.gamePanelL_In > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.notBind").click(function(e) {
                Outer.FixedDefaultKT($(e.currentTarget))
            }),
            $("#outerPage > div.gamePanelL_In > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.notBind").removeClass("notBind"),
            Outer.BindGameTitleHover('#outerPage > div.gamePanelL_In > table.gameTitle[rel="' + e + '"] > tbody > tr > td[class^="screenOff_"].notBind'),
            Outer.BindBallNameHover('#outerPage > div.gamePanelL_In > table.gameTitle[rel="' + e + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.GT_T_name > div.GT_T_nameIn.notBind'),
            $("#scheduleNoData").hide(),
            $("#outerPage").show());
            break;
        case Args.RemoveBallTable:
            if (Tool.IsMultiSport(MainProperty.ballType))
                $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle").each(function() {
                    0 == $(this).next("div").find("div.gameList").length && ($(this).next("div").remove(),
                    $(this).remove())
                });
            else if (0 == $("#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList").length) {
                var i = !0;
                if (a)
                    for (var n = 0; n < MainProperty.kindSub.length; n++)
                        if (Tool.HasKindSubGame(n)) {
                            i = !1;
                            var r = '<div class="noGmae" style="margin-top: 325px"><img src="/images/' + MainProperty.user.theme.imgPath + '/icon_noGame.svg">' + langFont.Font_NoGame + "</div>";
                            $("#outerPage > div.gamePanelL_In > div.gameList_scroll").html(r);
                            break
                        }
                i && ($("#outerPage > div.gamePanelL_In > div.gameList_scroll").empty().removeAttr("rel"),
                $("#outerPage > div.gamePanelL_In > table.gameTitle").remove())
            }
            0 == $("#outerPage > div.gamePanelL_In > div.gameList_scroll > div").length && 0 == $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox").length && (a = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle" : "#outerPage > div.gamePanelL_In > table.gameTitle",
            (a = $(a + " > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel")).hasClass("on") && (a.removeClass("on"),
            a.find("div.GT_selIn").hide(),
            a.find("div.GT_selInBox").hide()),
            $("#scheduleNoData").show(),
            $("#outerPage").hide())
        }
    },
    RemoveOdd: function(e) {
        for (var t, a = {}, i = 0; i < e.length; i++) {
            var n, r = e[i];
            if (MainProperty.gameData[r.gId])
                for (var s = 0; s < r.item.length; s++) {
                    if (n = r.gId + r.item[s] + r.kT + r.sT,
                    $("#opl" + n).text(""),
                    $("#opk" + n).text(""),
                    0 < $("#opl" + n).closest(".btn_GLOdds").length && ($("#opl" + n).closest(".btn_GLOdds").addClass("noneOdds").removeClass("btn_GLOdds on"),
                    $("#opl" + n).closest(".noneOdds").off("click")),
                    Tool.IsSC(MainProperty.ballType) && 3 == MainProperty.sortOption.kind || "bk" == MainProperty.ballType && 0 <= [3, 4].indexOf(MainProperty.sortOption.kind) || "tn" == MainProperty.ballType && 2 == MainProperty.sortOption.kind || "ih" == MainProperty.ballType && 2 == MainProperty.sortOption.kind || "vl" == MainProperty.ballType && 4 == MainProperty.sortOption.kind || "tt" == MainProperty.ballType && 4 == MainProperty.sortOption.kind || "bm" == MainProperty.ballType && 4 == MainProperty.sortOption.kind || "es" == MainProperty.ballType && 3 == MainProperty.sortOption.kind || "af" == MainProperty.ballType && 3 == MainProperty.sortOption.kind) {
                        for (var o = Tool.IsSC(MainProperty.ballType) && 3 == MainProperty.sortOption.kind ? "div.GLOdds15mins" : "div.GLOddsSingle", l = $("#opl" + n).closest(o).find("div.GLOdds_R"), c = !0, d = 0; d < l.length; d++)
                            if ("" != l[d].innerText) {
                                c = !1;
                                break
                            }
                        c && (a[r.gId] || (a[r.gId] = []),
                        a[r.gId].push($("#opl" + n).closest("tr.GLInList")),
                        $("#opl" + n).closest(o).prev(o + "_T").remove(),
                        $("#opl" + n).closest(o).remove())
                    } else
                        Tool.IsOuterSingleTeam() && $("#opl" + n).closest("div.GLOddsPcgame").removeClass("show");
                    0 < $("#opl" + n).length && (a[r.gId] || (a[r.gId] = []),
                    a[r.gId].push("#opl" + n))
                }
        }
        for (t in a)
            for (var u = a[t], i = 0; i < u.length; i++) {
                var h = Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? $(u[i]).closest("table.GLInBox") : $(u[i]).closest("tr.GLInList");
                if (0 != h.length && 0 == h.find(".btn_GLOdds").length) {
                    for (var p = !1, m = h.find(".noneOdds"), s = 0; s < m.length; s++) {
                        var g = $(m[s]).attr("rel").split("_");
                        if (MainProperty.oddData[g[0]] && MainProperty.oddData[g[0]][g[1]] && MainProperty.oddData[g[0]][g[1]][g[2]]) {
                            p = !0;
                            break
                        }
                    }
                    0 == p && (0 < h.children("td.GLIL_More").children("div.GLIL_MoreRow").length && !$.isEmptyObject(MainProperty.oddData[t]) ? (Outer.RemoveGame([{
                        gId: t,
                        sT: "*"
                    }], Args.FakeDel),
                    Outer.InsertGame([t], !0)) : 0 == h.children("td.GLIL_More").children("div.GLIL_MoreRow").length && h.children("td.GLIL_More.noCursor").length <= 1 && Outer.RemoveGame([{
                        gId: t,
                        sT: h.attr("sT"),
                        rIdx: h.attr("rIdx")
                    }], Args.RealDel))
                }
            }
    },
    CalculateRunTimer: function() {
        if (2 == MainProperty.playMode && Tool.IsSC(MainProperty.ballType) || Tool.IsMultiSport(MainProperty.ballType)) {
            var e, t = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox " : "#outerPage > div.gamePanelL_In > div.gameList_scroll ";
            for (e in MainProperty.gameData) {
                var a, i = MainProperty.gameData[e];
                Tool.IsSC(i.type) && (a = Tool.TransformGdOrSt(i.type, i.mode, MainProperty.sortOption.kind, i.st, i.gd, i.rt, i.ht),
                4 == MainProperty.sortOption.kind ? $(t + 'span.GLInBoxT_time[rel="ogd' + e + '"]').html("<span" + (2 == i.mode ? ' class="t_yellow"' : "") + '">' + a[0] + "</span> <font>" + a[1] + "</font>") : ($(t + 'li.GLInTBox_round[rel="ogd' + e + '"] > div.st').html("<span" + (2 == i.mode ? ' class="t_yellow"' : "") + ">" + a[0] + "</span>"),
                $(t + 'li.GLInTBox_round[rel="ogd' + e + '"] > div.rt').html("<font>" + a[1] + "</font>")),
                e == MainProperty.innerPage && (i = Tool.TransformGdOrSt(i.type, i.mode, null, i.st, i.gd, i.rt, i.ht),
                $("#igd").text(i[0] + " " + i[1])))
            }
        }
    },
    ChangeSort: function(e) {
        if (e != MainProperty.sortOption.sort) {
            switch (e) {
            case Args.SortHot:
                MainProperty.sortOption.sort = Args.SortHot,
                $("#ddlSort > div.SUM_T").html(langFont.Font_SortHot),
                $("#ddlSort > div.SUM_In > .SUM_InBox > a").removeClass("on"),
                $("#ddlSort > div.SUM_In > .SUM_InBox > a:first-child").addClass("on");
                break;
            case Args.SortTime:
                MainProperty.sortOption.sort = Args.SortTime,
                $("#ddlSort > div.SUM_T").html(langFont.Font_SortTime),
                $("#ddlSort > div.SUM_In > .SUM_InBox > a").removeClass("on"),
                $("#ddlSort > div.SUM_In > .SUM_InBox > a:last-child").addClass("on")
            }
            MainProperty.BallAllyClosure[(MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType] = !0,
            Inner.Close();
            e = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn);
            Outer.BatchProcess(e, !0, !1)
        }
    },
    RecycleSchedule: function(e, t, a) {
        if (Tool.IsMultiSport(MainProperty.ballType) || MainProperty.BallAllyClosure[(MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType]) {
            var i = "#outerPage > div.gamePanelL_In > " + (t == Args.FVAndCS ? "div.gameListAll_scroll > div.gameFAVbox" : "div.gameList_scroll")
              , n = "table.GLInBox"
              , r = " > div.gameList > div.GLIn > table.GLInBox";
            Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx || (r += " > tbody > tr",
            n = "tr.GLInList");
            var s = []
              , o = $.extend([], MainProperty.gameSequence);
            switch (e) {
            case Args.UpScroll:
                if ((_ = $(i + r + ":first").attr("rel")) && _ != o[0]) {
                    for (var l = [], c = $(i + r).toArray().map(function(e) {
                        return $(e).attr("rel")
                    }).filter(function(e, t, a) {
                        return a.indexOf(e) === t
                    }), d = o.indexOf(_) - 1, u = 0; u < a && 0 <= d; d--) {
                        var h = ((m = MainProperty.gameData[o[d]] || {}).mode == PlayMode.ZD ? "ZD" : "DS") + m.type;
                        1 == MainProperty.BallAllyClosure[h] && c.indexOf(o[d]) < 0 && (s.push(o[d]),
                        u++)
                    }
                    0 < s.length && (Outer.InsertGame(s, !1),
                    e = $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").scrollTop(),
                    $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").scrollTop(e + 1)),
                    a = s.length;
                    for (d = c.length - 1; a > l.length && 0 <= d; d--) {
                        var p = c[d]
                          , m = MainProperty.gameData[p] || {}
                          , g = Tool.TransformModeText(0, 2 == m.mode ? 2 : 1) + m.type;
                        if (0 == MainProperty.BallAllyClosure[g])
                            break;
                        l.indexOf(p) < 0 && l.push(p);
                        var f = $(i + r + '[rel="' + c[d] + '"]');
                        0 == $(f).siblings(n + '[rel!="' + c[d] + '"]').length ? t == Args.FVAndCS && 0 == $(f).closest("div.gameList").siblings("div.gameList").length ? ($(f).closest("div.gameFAVbox").prev("table.gameTitle").remove(),
                        $(f).closest("div.gameFAVbox").remove()) : $(f).closest("div.gameList").remove() : $(f).remove()
                    }
                }
                break;
            case Args.DownScroll:
                if ((v = $(i + r + ":last").attr("rel")) && v != o[o.length - 1]) {
                    for (l = [],
                    c = $(i + r).toArray().map(function(e) {
                        return $(e).attr("rel")
                    }).filter(function(e, t, a) {
                        return a.indexOf(e) === t
                    }),
                    d = o.indexOf(v) + 1,
                    u = 0; u < a && d < o.length; d++) {
                        h = ((m = MainProperty.gameData[o[d]] || {}).mode == PlayMode.ZD ? "ZD" : "DS") + m.type;
                        MainProperty.BallAllyClosure[h] && c.indexOf(o[d]) < 0 && (s.push(o[d]),
                        u++)
                    }
                    a = s.length;
                    for (d = 0; a > l.length && d < c.length; d++) {
                        p = c[d],
                        m = MainProperty.gameData[p] || {},
                        g = Tool.TransformModeText(0, 2 == m.mode ? 2 : 1) + m.type;
                        if (0 == MainProperty.BallAllyClosure[g])
                            break;
                        l.indexOf(p) < 0 && l.push(p);
                        f = $(i + r + '[rel="' + c[d] + '"]');
                        0 == $(f).siblings(n + '[rel!="' + c[d] + '"]').length ? t == Args.FVAndCS && 0 == $(f).closest("div.gameList").siblings("div.gameList").length ? ($(f).closest("div.gameFAVbox").prev("table.gameTitle").remove(),
                        $(f).closest("div.gameFAVbox").remove()) : $(f).closest("div.gameList").remove() : $(f).remove()
                    }
                    0 < s.length && Outer.InsertGame(s, !0)
                }
                break;
            case Args.Load:
                var v = $(i + r + ":last").attr("rel")
                  , _ = $(i + r + ":first").attr("rel")
                  , y = o.length
                  , m = {}
                  , P = !0;
                if (v == o[o.length - 1] && _ == o[0])
                    return;
                v == o[o.length - 1] ? (y = (o = o.reverse()).indexOf(_),
                m = MainProperty.gameData[_] || {},
                P = !1) : (y = o.indexOf(v),
                m = MainProperty.gameData[v] || {});
                var g = Tool.TransformModeText(0, 2 == m.mode ? 2 : 1) + m.type
                  , S = m.aId;
                if (1 == MainProperty.BallAllyClosure[g] && !$(i + ' div.gameList[rel="' + S + '"]').hasClass("shell")) {
                    for (d = y + 1; 0 < d && d < o.length; d++) {
                        var p = o[d]
                          , b = o[d + 1];
                        s.push(p),
                        a--;
                        var T = MainProperty.gameData[p] ? MainProperty.gameData[p].aId : ""
                          , C = MainProperty.gameData[b] ? MainProperty.gameData[b].aId : "";
                        if (a <= 0 && T != C)
                            break
                    }
                    0 < s.length && Outer.InsertGame(s, P)
                }
                break;
            case Args.UnloadFV:
            case Args.Unload:
                for (var v = $(i + r + ":last").attr("rel"), M = null, u = o.length - 1; 0 <= u; u--) {
                    M = v;
                    var I = o[u]
                      , g = (2 == (m = MainProperty.gameData[I] || {}).mode ? "ZD" : "DS") + m.type;
                    if (0 == MainProperty.BallAllyClosure[g]) {
                        M = u < o.length - 1 ? o[u - 1] : null;
                        break
                    }
                }
                if ((!M || o.indexOf(M) > o.indexOf(v)) && (v = null),
                v && v != o[o.length - 1])
                    for (var A = $(i + r).toArray().map(function(e) {
                        return $(e).attr("rel")
                    }).filter(function(e, t, a) {
                        return a.indexOf(e) === t
                    }), d = A.length - 1, u = 0; 0 <= d && u < a && 50 < A.length - u; d--,
                    u++) {
                        f = $(i + r + '[rel="' + A[d] + '"]');
                        0 == $(f).siblings(n + '[rel!="' + A[d] + '"]').length ? t == Args.FVAndCS && 0 == $(f).closest("div.gameList").siblings("div.gameList").length ? ($(f).closest("div.gameFAVbox").prev("table.gameTitle").remove(),
                        $(f).closest("div.gameFAVbox").remove()) : $(f).closest("div.gameList").remove() : $(f).remove()
                    }
                break;
            case Args.LoadFV:
                v = $(i + r + ":last").attr("rel"),
                _ = $(i + r + ":first").attr("rel"),
                y = o.length,
                P = !0;
                if (v == o[o.length - 1] && _ == o[0])
                    return;
                v == o[o.length - 1] ? (y = (o = o.reverse()).indexOf(_),
                P = !1) : y = o.indexOf(v);
                for (d = y + 1; d < o.length; d++) {
                    p = o[d],
                    b = o[d + 1],
                    g = Tool.TransformModeText(0, 2 == MainProperty.gameData[p].mode ? 2 : 1) + MainProperty.gameData[p].type,
                    S = MainProperty.gameData[p].aId;
                    if (0 == $(i + r + '[rel="' + p + '"]').length && 0 != MainProperty.BallAllyClosure[g] && !$(i + ' div.gameList[rel="' + S + '"]').hasClass("shell")) {
                        s.push(p),
                        a--;
                        T = MainProperty.gameData[p] ? MainProperty.gameData[p].aId : "",
                        C = MainProperty.gameData[b] ? MainProperty.gameData[b].aId : "";
                        if (a <= 0 && T != C)
                            break
                    }
                }
                0 < s.length && Outer.InsertGame(s, P)
            }
        }
    },
    BatchProcess: function(e, t, i, a) {
        a = a || [],
        cancelAnimationFrame(MainProperty.waitToDraw);
        var n = [];
        if (i && 0 < a.length && 50 < MainProperty.gameSequence.length) {
            n = $.extend([], MainProperty.gameSequence);
            for (var r = a.length, s = r - 1; 0 <= s; s--) {
                var o = MainProperty.gameSequence.indexOf(a[s]);
                if (0 <= o) {
                    n = 50 <= o ? n.splice(o + 1 - r, r) : n.splice(0, 50);
                    break
                }
            }
        }
        for (var l = [], c = [], d = [], u = !1, h = [], p = {}, s = 0, m = 0, g = !1; s < e.length; s++) {
            var f = e[s]
              , v = e[s + 1] || {}
              , _ = (2 == f.mode ? "ZD" : "DS") + f.type;
            m < 50 && (0 <= MainProperty.gameSequence.indexOf(f.gId) ? (l.push(Tool.DeepClone(f)),
            c.indexOf(f.gId) < 0 && f.gId != v.gId && (m++,
            c.push(f.gId))) : 0 == g && (l.push(Tool.DeepClone(f)),
            g = !0,
            m++)),
            i && !MainProperty.BallAllyClosure[_] && (u = !0),
            h.indexOf(_) < 0 && (h.push(_),
            p[_] = [f.gId]),
            0 < n.length && 0 <= n.indexOf(f.gId) && d.push(Tool.DeepClone(f))
        }
        function y() {
            if (i || Mask(),
            u) {
                $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").empty();
                for (var e = 0; e < h.length; e++) {
                    var t = h[e];
                    Tool.IsMultiSport(MainProperty.ballType) ? (Outer.DrawBallShell(p[t]),
                    MainProperty.BallAllyClosure[t] ? (MainProperty.BallAllyClosure[t] = !1,
                    $('#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox[rel="' + t + '"] > div.gameList').each(function() {
                        Outer.AllyShrink($(this))
                    })) : (MainProperty.innerPage || $(window).width() <= 1400 && !$("#sportMenu").hasClass("ZoomOut") && (0 == MainProperty.sortOption.kind || Mapping.TransformMenuType(MainProperty.ballType, MainProperty.playMode, null)[0][1] == MainProperty.sortOption.kind)) && Outer.FixedDefaultKT($("#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel"))) : Outer.DrawAllyShell(t)
                }
                var a = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox:last" : "#outerPage > div.gamePanelL_In > div.gameList_scroll";
                0 == $(a + " > div").length ? ($("#scheduleNoData").show(),
                $("#outerPage").hide()) : ($("#scheduleNoData").hide(),
                $("#outerPage").show())
            } else
                0 < d.length ? Outer.DrawSchedule(d) : (Outer.DrawSchedule(l),
                $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").scrollTop(0));
            RecoverSetting(!1, Args.Outer),
            UnMask(500)
        }
        t ? MainProperty.waitToDraw = requestAnimationFrame(y) : y()
    },
    CloseBlock: function(e) {
        var t = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle" : "#outerPage > div.gamePanelL_In > table.gameTitle";
        0 == e.closest("#settings > .btn_setUpMenu_list").length && ($("#settings > .btn_setUpMenu_list").removeClass("on"),
        $("#settings > .btn_setUpMenu_list > .SUM_In").hide(),
        $("#settings > .btn_setUpMenu_list > .SUM_In > .SUM_InBox").hide()),
        0 == e.closest("#tradePrompt").length && ($("#tradePrompt > div.FBP_In").fadeOut(200),
        $("#tradePrompt > div.FBP_In > div.FBP_InBox").slideUp(200)),
        0 < $("#sportMenu.ZoomOut").length && (0 == e.closest("#playMode > div").length && $("#modeOption").hide(),
        0 == e.closest("#sportList .SM_list").length && $("#sportList .SM_list > .SM_listIn").hide());
        t = $(t + " > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel");
        0 == e.closest("div.btn_GT_sel").length && t.hasClass("on") && (t.removeClass("on"),
        t.find("div.GT_selIn").hide(),
        t.find("div.GT_selInBox").hide()),
        0 == e.closest(".GDView_T li").length && $(".GDV_prompt").fadeOut("fast"),
        0 == e.closest("div.GLIL_MoreStatus").length && $(".MS_prompt").hide(),
        0 == e.closest("div.btn_GST_i").length && ($("div.btn_GST_i").removeClass("on"),
        $("div.GST_InBox").slideUp(200)),
        Tool.IsTouch && 0 == e.closest(".btn_count").length && $("#btnCalculator > div.count_prompt").fadeOut(150),
        0 == e.closest("#innerMenu > li.btn_GDListT_menu").length && ($("#innerMenu > li.btn_GDListT_menu").removeClass("on"),
        $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In").hide(),
        $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox").hide()),
        0 == e.closest('input[type="text"]').length && document.activeElement && !document.activeElement.classList.contains("enter") && $('input[type="text"]').removeClass("focus"),
        window.ChatVue && ChatVue.gift.show && 0 < $("#fastTransfer:hidden").length && 0 == e.closest("div.giftBox").length && ChatVue.$bus.$emit("GiftBoxClose"),
        0 < $("#calcTable:visible").length && $("#calcTable > tbody > tr.calcList > td > div.calcPassCount_select").removeClass("on")
    },
    ScrollSolid: function() {
        $(".gameList_scroll,.gameListAll_scroll").addClass("solid"),
        $(".gameDetail_scroll,.gameStyle_scroll").each(function() {
            0 == $(this).hasClass("scroll_off") && $(this).addClass("solid")
        })
    },
    RemoveSolid: function() {
        $(".gameList_scroll,.gameListAll_scroll,.gameDetail_scroll,.gameStyle_scroll").removeClass("solid")
    }
}
  , Inner = {
    InitialPage: function(e) {
        var t = $(e.target).closest("tr.GLInList").children("td.GLIL_More").closest("tr.GLInList").children("td.GLIL_More").parent("tr").attr("rel")
          , a = MainProperty.gameData[t] ? MainProperty.gameData[t].gpid : null
          , i = 0 < $("#innerPage:visible").length;
        t && a && (i || !i && MainProperty.innerPage != t) && (i && MainProperty.innerPage == t ? Inner.Close() : (i && (Panel.Close(),
        ChatVue.Initial(),
        Inner.CloseChatRoom(),
        ChatVue.show = !1),
        $(e.target).hasClass("openRDAnimate") ? MainProperty.panelData.panel = Args.RDAnimation : $(e.target).hasClass("openLiveTv") ? MainProperty.panelData.panel = Args.GameLive : $(e.target).hasClass("icon_liveMc") ? MainProperty.panelData.panel = Args.Anchor : MainProperty.panelData.panel = Args.NoPanel,
        DataAdapter.SendCommand({
            action: "more",
            gId: t
        }),
        MainProperty.innerPage = t),
        $("#innerNoData").hide(),
        $(".gameDetail_scroll").addClass("noChatroom"))
    },
    ShowPage: function() {
        var e = MainProperty.innerPage
          , o = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle" : "#outerPage > div.gamePanelL_In > table.gameTitle"
          , l = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList";
        $(window).width() <= 1400 && !$("#sportMenu").hasClass("ZoomOut") && Menu.MenuShrink(!0),
        $("#innerMenu").addClass("none"),
        Inner.DrawHeaderBattleInfo(),
        $(l + " > td.GLIL_More").removeClass("on"),
        $(l + '[rel="' + e + '"] > td.GLIL_More:first').addClass("on"),
        $("#innerSchedule").empty(),
        $("#innerMenu").empty(),
        $(o).each(function() {
            var e = $(this).attr("rel")
              , t = MainProperty.sortOption.kindSub[e];
            if (l = Tool.IsMultiSport(MainProperty.ballType) ? '#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox[rel="' + e + '"] > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList' : l,
            1400 < $(window).width())
                $(o + '[rel="' + e + '"] > tbody > tr > td[class^="screenOff_"]:not([class="screenOff_' + t + '"])').add(l + ' > td[class^="screenOff_"]:not([class="screenOff_' + t + '"])').hide();
            else {
                $(o + '[rel="' + e + '"] > tbody > tr > td[class^="screenOff_"]').add(l + ' > td[class^="screenOff_"]').hide();
                for (var a = $(o + '[rel="' + e + '"] > tbody > tr'), i = 0; i < a.length; i++)
                    $(a[i]).find("td.screenOff_" + t + ":first").show();
                for (var n = $(l), i = 0; i < n.length; i++)
                    $(n[i]).find("td.screenOff_" + t + ":first").show()
            }
            $(o + '[rel="' + e + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.ZoomOutShow.on').removeClass("on");
            for (var r = $(o + '[rel="' + e + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel'), i = 0; i < r.length; i++) {
                var s = $(r[i]).find('div.GT_selIn > div.GT_selInBox > a.ZoomOutShow[set="' + t + '"]').addClass("on").text();
                $(r[i]).children("div.GT_selT").text(s).show()
            }
        }),
        $("#innerPage").show(),
        $("#innerPage > div.gamePanelR_In").addClass("open"),
        $("#outerPage").addClass("ZoomOut"),
        $("#scheduleNoData").width($("#outerPage").width())
    },
    HidePage: function() {
        $("#innerSchedule").scrollTop(0);
        var e = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle > tbody > tr" : "#outerPage > div.gamePanelL_In > table.gameTitle > tbody > tr"
          , t = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList";
        $(e + " > td").add(t + " > td").show(),
        $(e + " > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selT").hide(),
        $(e + ' > td[class!="GT_T"] > span').show(),
        $(t + " > td.GLIL_More.on").removeClass("on"),
        $("#innerPage > div.gamePanelR_In").removeClass("open"),
        $("#outerPage").removeClass("ZoomOut"),
        $("#innerPage").hide(),
        $("#scheduleNoData").width($("#outerPage").width())
    },
    DrawHeaderBattleInfo: function() {
        var e, t, a, i, n = MainProperty.innerPage, r = MainProperty.gameData[n], s = 2 == r.h ? ["b", "a"] : ["a", "b"];
        "bb" == r.type && (s = 2 == r.h ? ["a", "b"] : ["b", "a"]),
        $("#innerPage > div.gamePanelR_In > div.gameDetail > div.gameDetail_T > div.GDT_name > div.GDT_textL > div.GDT_textBox").attr("id", "innerTeam" + s[0].toUpperCase()),
        $("#innerPage > div.gamePanelR_In > div.gameDetail > div.gameDetail_T > div.GDT_name > div.GDT_textR > div.GDT_textBox").attr("id", "innerTeam" + s[1].toUpperCase()),
        $("#innerTeamA > font").html(r.ta.join(" / ")),
        $("#innerTeamB > font").html(r.tb.join(" / ")),
        $("#innerTeamA > span.t_gray").html(r.pa),
        $("#innerTeamB > span.t_gray").html(r.pb),
        2 == r.mode ? (e = 1 == r.isScore ? " none" : "",
        a = '<span id="ircn' + s[0] + '" class="GDT_redCard' + (r["rcn" + s[0]] ? " show" : "") + e + '">' + r["rcn" + s[0]] + "</span>",
        i = '<span id="ircn' + s[1] + '" class="GDT_redCard' + (r["rcn" + s[1]] ? " show" : "") + e + '">' + r["rcn" + s[1]] + "</span>",
        t = parseInt(r["fr" + s[0]], 10) > parseInt(r["fr" + s[1]], 10) ? " t_yellow " : "",
        n = parseInt(r["fr" + s[1]], 10) > parseInt(r["fr" + s[0]], 10) ? " t_yellow " : "",
        t = '<span id="ifr' + s[0] + '" class="' + t + e + '">' + r["fr" + s[0]] + "</span>",
        n = '<span id="ifr' + s[1] + '" class="' + n + e + '">' + r["fr" + s[1]] + "</span>",
        i = a + '<div class="GDT_round"><div id="igd" class="GDT_round_text">' + (a = Tool.TransformGdOrSt(r.type, r.mode, null, r.st, r.gd, r.rt, r.ht))[0] + " " + a[1] + "</div>" + t + '<text class="' + e + '"> - </text>' + n + "</div>" + i,
        $("#innerScore").removeClass("noScore").html(i)) : $("#innerScore").addClass("noScore").html("vs"),
        0 == r.h ? "bb" == r.type ? ($("#innerTeam" + s[0].toUpperCase() + " > span.t_pink").text(""),
        $("#innerTeam" + s[1].toUpperCase() + " > span.t_pink").text("(" + langFont.Font_NeutralMark + ")")) : ($("#innerTeam" + s[0].toUpperCase() + " > span.t_pink").text("(" + langFont.Font_NeutralMark + ")"),
        $("#innerTeam" + s[1].toUpperCase() + " > span.t_pink").text("")) : ($("#innerTeam" + s[0].toUpperCase() + " > span.t_pink").text(""),
        $("#innerTeam" + s[1].toUpperCase() + " > span.t_pink").text(""))
    },
    DrawSchedule: function(e, t) {
        var c = function(e, t, a, i) {
            for (var n = !1, r = t ? $.extend([], e).splice(1) : e, s = 0; s < r.length; s++) {
                var o, l = r[s];
                if (Array.isArray(l) && Array.isArray(l[0]) ? n = c(l[0], !1, a, i) : 0 <= (o = i.indexOf(l[0])) && ("*" == l[1][0] || "X" == l[1][0] || l[1][0] == a[o].substr(2)) && (n = !0),
                n)
                    break
            }
            return n
        }
          , a = []
          , i = []
          , n = $.extend({}, MainProperty.innerData.gameData[e])
          , r = $.extend({}, MainProperty.innerData.oddData[e]);
        if ($.isEmptyObject(n))
            return [];
        if (null == t) {
            $("#innerSchedule").empty(),
            $("#innerMenu").empty();
            for (var s = "", o = Mapping.GetInnerTitle(n.type, n.mode), l = 0; l < o.length; l++) {
                for (var d = Mapping.GetInnerGroupSet(n.type, o[l][1], n.h < 2), u = "", h = !1, p = 0; p < d.length; p++) {
                    for (var m = "", g = {}, f = {
                        a: "",
                        b: ""
                    }, v = 1; v < d[p].length; v++)
                        m += (g = GameDrawer.InnerOddFunc(r, e, d[p][v][1][1], d[p][v][1][0], d[p][v][0], d[p][v][2])).html,
                        f = g.score || f;
                    var _, y = ' page="' + (l + 1) + '"', P = ' ck="' + (l + 1) + p + '"', S = 0 < m.length ? "" : ' style="display: none;"', b = "";
                    Array.isArray(d[p][0]) ? (b = d[p][0][0].replace("*", ""),
                    d[p][0][1] && n.mode == PlayMode.ZD && (_ = 2 == n.h ? ["b", "a"] : ["a", "b"],
                    b == langFont.Font_SCFTCorner && (f.a = 255 == f.a ? 0 : f.a,
                    f.b = 255 == f.b ? 0 : f.b),
                    b += '　<span class="t_yellow">' + (f ? '(<font rel="ir' + _[0] + '">' + f[_[0]] + '</font>:<font rel="ir' + _[1] + '">' + f[_[1]] + "</font>)" : "") + "</span>"),
                    d[p][0][2] && (b += ' <div class="btn_GST_i notBind"><div class="GST_InBox">' + d[p][0][2] + "</div></div>")) : b = d[p][0].replace("*", ""),
                    u += '<div class="gameStyle_list"' + y + P + S + ">",
                    u += '<div class="gameStyle_T notBind' + (0 < m.length ? " on" : "") + '">' + b + '</div><div class="gameStyle_In">',
                    u += '<table class="gameStyle_Table">' + m + "</table>",
                    u += "</div></div>",
                    0 == h && 0 < m.length && (h = !0)
                }
                s += u,
                i.push([l + 1, o[l][0], h])
            }
            $("#innerSchedule").append(s)
        } else {
            if (!(t && 0 < t.length))
                return [];
            for (var T = [], C = t.map(function(e) {
                return T.push(e.sT),
                e.kT
            }), o = Mapping.GetInnerTitle(n.type, n.mode), l = 0; l < o.length; l++) {
                for (d = Mapping.GetInnerGroupSet(n.type, o[l][1], n.h < 2),
                p = 0; p < d.length; p++)
                    if (c(d[p], !0, T, C)) {
                        for (m = "",
                        g = {},
                        f = {
                            a: "",
                            b: ""
                        },
                        v = 1; v < d[p].length; v++)
                            m += (g = GameDrawer.InnerOddFunc(r, e, d[p][v][1][1], d[p][v][1][0], d[p][v][0], d[p][v][2])).html,
                            f = g.score || f;
                        a.push(l + 1 + "" + p),
                        $('#innerSchedule > div.gameStyle_list[ck="' + (l + 1) + p + '"] > div.gameStyle_In > table.gameStyle_Table').html(m),
                        Array.isArray(d[p][0]) && d[p][0][1] && n.mode == PlayMode.ZD && (d[p][0][0] == langFont.Font_SCFTCorner && (f.a = 255 == f.a ? 0 : f.a,
                        f.b = 255 == f.b ? 0 : f.b),
                        $('#innerSchedule > div.gameStyle_list[ck="' + (l + 1) + p + '"] > div.gameStyle_T > span > font[rel="ira"]').text(f.a),
                        $('#innerSchedule > div.gameStyle_list[ck="' + (l + 1) + p + '"] > div.gameStyle_T > span > font[rel="irb"]').text(f.b))
                    }
                var M = 0 < $('#innerSchedule > div.gameStyle_list[page="' + (l + 1) + '"] > div.gameStyle_In > table.gameStyle_Table > tbody > tr').length;
                i.push([l + 1, o[l][0], M])
            }
        }
        i = $.extend([], i).sort(function(e, t) {
            return e[2] != t[2] ? e[2] ? -1 : 1 : e[0] > t[0] ? 1 : -1
        });
        var I = 2 == n.mode ? " roll" : ""
          , A = '<li class="btn_gameStyle_all notBind"></li>'
          , L = 0 <= ["th", "vi"].indexOf(langFont.Font_Langue) ? 2 : 3;
        A += '<li class="btn_GDListT notBind show' + I + '" page="0"><a>' + langFont.Font_All + "</a></li>";
        for (l = 0; l < i.length; l++) {
            S = 1 == i[l][2] ? " show" : "";
            L <= l ? (l == L && (A += '<li class="btn_GDListT_menu notBind"><div class="icon_GDLT"></div><div class="GDLT_In"><div class="GDLT_InBox">'),
            A += '<a class="notBind' + S + '" page="' + i[l][0] + '">' + i[l][1] + " </a>") : A += '<li class="btn_GDListT notBind' + I + S + '" page="' + i[l][0] + '"><a>' + i[l][1] + "</a></li>"
        }
        return i.length >= L && (A += "</div></div></li>"),
        $("#innerMenu").html(A),
        a
    },
    BindClickEvent: function() {
        Inner.BindAddCartClick("#innerSchedule > div.gameStyle_list > div.gameStyle_In > table.gameStyle_Table > tbody > tr > td > div.GSOddsBox > div.btn_GSOdds.notBind"),
        $("#innerMenu > li.btn_GDListT_menu.notBind").click(function() {
            "none" == $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In").css("display") ? ($(this).addClass("on"),
            $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In").show(),
            $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox").show()) : ($(this).removeClass("on"),
            $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In").hide(),
            $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox").hide())
        }),
        $("#innerMenu > li.btn_GDListT_menu.notBind").removeClass("notBind"),
        $("#innerMenu > li.btn_GDListT.notBind").add("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.notBind").click(function() {
            var e = $(this).attr("page");
            $("#innerMenu > li.btn_GDListT").add("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a").removeClass("on"),
            $(this).addClass("on"),
            $("#innerSchedule").add("#innerScrollBar").scrollTop(0),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_T").addClass("on"),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_In").show();
            for (var t = $("#innerSchedule > div.gameStyle_list"), a = 0; a < t.length; a++) {
                var i = $(t[a]).attr("page")
                  , n = $(t[a]).children("div.gameStyle_In").children("table.gameStyle_Table").children("tbody").children().length;
                (0 == e || i == e) && 0 < n ? $(t[a]).show() : $(t[a]).hide()
            }
            $("#innerMenu > li.btn_gameStyle_all").removeClass("off")
        }),
        $("#innerMenu > li.btn_GDListT.notBind").add("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.notBind").removeClass("notBind"),
        $("#innerMenu > li.btn_gameStyle_all.notBind").click(function() {
            $(this).hasClass("off") ? ($(this).removeClass("off"),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_T").addClass("on"),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_In").show()) : ($(this).addClass("off"),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_T").removeClass("on"),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_In").hide())
        }),
        $("#innerMenu > li.btn_gameStyle_all.notBind").removeClass("notBind"),
        $("#innerSchedule > div.gameStyle_list > div.gameStyle_T.notBind").click(function() {
            "none" == $(this).next(".gameStyle_In").css("display") ? ($(this).next(".gameStyle_In").show(),
            $(this).addClass("on"),
            $("#innerMenu > li.btn_gameStyle_all").removeClass("off")) : ($(this).next(".gameStyle_In").hide(),
            $(this).removeClass("on"),
            0 == $("#innerSchedule > div.gameStyle_list > div.gameStyle_T.on:visible").length && $("#innerMenu > li.btn_gameStyle_all").addClass("off"))
        }),
        $("#innerSchedule > div.gameStyle_list > div.gameStyle_T.notBind").removeClass("notBind"),
        Tool.IsTouch ? $("#innerSchedule > div.gameStyle_list > div.gameStyle_T > div.btn_GST_i.notBind").click(function(e) {
            var t = .37 * $("#innerSchedule").closest("div.GDList_In").width()
              , a = .6 * $("#innerSchedule").closest("div.GDList_In").width()
              , i = $(this).position().left;
            t <= i && i <= a ? $(this).children("div.GST_InBox").removeClass("boxRight").addClass("boxCenter") : a < i ? $(this).children("div.GST_InBox").removeClass("boxCenter").addClass("boxRight") : $(this).children("div.GST_InBox").removeClass("boxCenter boxRight"),
            $(this).hasClass("on") ? ($(this).removeClass("on"),
            $(this).children("div.GST_InBox").slideUp(200)) : ($("#innerSchedule > div.gameStyle_list > div.gameStyle_T > div.btn_GST_i").removeClass("on"),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_T > div.btn_GST_i > div.GST_InBox").hide(),
            i = $("#innerMenu").offset().top + $("#innerMenu").outerHeight(!0),
            $(this).closest("div.gameStyle_T").offset().top - 5 - $(this).children("div.GST_InBox").outerHeight(!0) < i ? $(this).addClass("boxBottom") : $(this).removeClass("boxBottom"),
            $(this).addClass("on"),
            $(this).children("div.GST_InBox").slideDown(200)),
            e.stopPropagation()
        }) : ($("#innerSchedule > div.gameStyle_list > div.gameStyle_T > div.btn_GST_i.notBind").hoverDelay(function() {
            var e = .37 * $("#innerSchedule").closest("div.GDList_In").width()
              , t = .6 * $("#innerSchedule").closest("div.GDList_In").width()
              , a = $(this).position().left;
            e <= a && a <= t ? $(this).children("div.GST_InBox").removeClass("boxRight").addClass("boxCenter") : t < a ? $(this).children("div.GST_InBox").removeClass("boxCenter").addClass("boxRight") : $(this).children("div.GST_InBox").removeClass("boxCenter boxRight");
            a = $("#innerMenu").offset().top + $("#innerMenu").outerHeight(!0);
            $(this).closest("div.gameStyle_T").offset().top - 5 - $(this).children("div.GST_InBox").outerHeight(!0) < a ? $(this).addClass("boxBottom") : $(this).removeClass("boxBottom"),
            $(this).addClass("on"),
            $(this).children("div.GST_InBox").slideDown(200)
        }, function() {
            $(this).removeClass("on"),
            $(this).children("div.GST_InBox").slideUp(200)
        }),
        $("#innerSchedule > div.gameStyle_list > div.gameStyle_T > div.btn_GST_i.notBind").click(function(e) {
            e.stopPropagation()
        })),
        $("#innerSchedule > div.gameStyle_list > div.gameStyle_T > div.btn_GST_i.notBind").removeClass("notBind")
    },
    BindTeamNameHover: function(e) {
        var t = "div.GDT_textL,div.GDT_textR"
          , a = "div.GDT_textShow";
        Tool.IsTouch ? $(e).click(function() {
            var e = $(this).html();
            $(this)[0].getBoundingClientRect().width >= $(this).closest(t)[0].getBoundingClientRect().width ? $(this).next(a).show().html(e) : $(this).next(a).hide()
        }) : $(e).hoverDelay(function() {
            var e = $(this).html();
            $(this)[0].getBoundingClientRect().width >= $(this).closest(t)[0].getBoundingClientRect().width ? $(this).next(a).show().html(e) : $(this).next(a).hide()
        }, function() {
            $(this).next(a).hide()
        }),
        $(e).removeClass("notBind")
    },
    BindAddCartClick: function(e) {
        $(e).click(function(e) {
            0 < $("#delayInfo:visible").length || (e = $(e.currentTarget).closest(".btn_GSOdds"),
            CartBase.AddCartList(e, !0))
        }),
        $(e).removeClass("notBind")
    },
    Close: function(e) {
        !MainProperty.innerPage && $.isEmptyObject(MainProperty.innerData.oddData) || (MainProperty.innerPage = "",
        MainProperty.innerData = {
            gameData: {},
            allyData: {},
            oddData: {}
        },
        e || DataAdapter.SendCommand({
            action: "cMore"
        })),
        ChatVue.Initial(),
        ChatVue.smId = "",
        ChatVue.show = !1,
        Panel.Close(),
        Inner.HidePage()
    },
    UpdateOdd: function(e, t, a, i) {
        function n(e, t, a) {
            e.hasClass("animate1") ? (e.addClass("paused"),
            e.removeClass("animate1 paused"),
            e.removeClass(a).addClass(t + " animate2")) : (e.hasClass("animate2") && (e.addClass("paused"),
            e.removeClass("animate2 paused")),
            e.removeClass(a).addClass(t + " animate1"))
        }
        for (var r = MainProperty.innerData.oddData[e][t][a], s = 0; s < i.length; s++)
            switch (i[s]) {
            case "ra":
            case "rb":
                var o = $('#innerSchedule > div.gameStyle_list > div.gameStyle_In > table.gameStyle_Table > tbody > tr > td > div.GSOddsBox > div[rel^="' + e + "_" + t + "_" + a + '_"]:first').closest("div.gameStyle_list")
                  , l = MainProperty.playMode == PlayMode.ZD && 0 <= o.children("div.gameStyle_T").text().indexOf(langFont.Font_SCFTCorner) && 255 == r[i[s]] ? 0 : r[i[s]];
                o.children("div.gameStyle_T").children("span.t_yellow").children('font[rel="i' + i[s] + '"]').text(l);
                break;
            case "pk":
                var c = '#innerSchedule > div.gameStyle_list > div.gameStyle_In > table.gameStyle_Table > tbody > tr > td > div.GSOddsBox > div[rel^="' + e + "_" + t + "_" + a + '_"]'
                  , l = $(c + ":first").attr("type")
                  , d = ["pk", "pk"];
                if (l == Args.PKPL)
                    d = "bb" == MainProperty.innerData.gameData[e].type ? [langFont.Font_Guest + " +pk", langFont.Font_Home + " -pk"] : [langFont.Font_Home + " -pk", langFont.Font_Guest + " +pk"];
                else {
                    if (l != Args.BigSmallPL)
                        continue;
                    d = 0 <= ["180191", "180291", "180391", "180491", "180591", "180691", "180791"].indexOf(a) ? [langFont.Font_MoreThan + " pk", langFont.Font_LessThan + " pk"] : [langFont.Font_Big + " pk", langFont.Font_Small + " pk"]
                }
                (1 == r.lineAt && 2 == MainProperty.innerData.gameData[e].h || 0 == r.lineAt && MainProperty.innerData.gameData[e].h <= 1) && (d[0] = "bb" == MainProperty.innerData.gameData[e].type ? d[0].replace("+", "-") : d[0].replace("-", "+"),
                d[1] = "bb" == MainProperty.innerData.gameData[e].type ? d[1].replace("-", "+") : d[1].replace("+", "-"));
                for (var u = $(c + ' > div[id^="ipk"]'), h = 0; h < u.length; h++) {
                    var p = d[h].replace("pk", r.pk);
                    r.pk && "0" != r.pk || (p = (p = (p = d[h].replace("+", "")).replace("-", "")).replace("pk", r.pk)),
                    $(u[h]).text() && p && $(u[h]).text() != p && n($(u[h]), "oddsText", ""),
                    $(u[h]).text(p)
                }
                break;
            default:
                var m, o = $("#ipl" + e + i[s] + a + t);
                r[i[s]][MainProperty.isPrincipal] && o.text() && (o.text() > r[i[s]][MainProperty.isPrincipal] ? n(o, "oddsDown", "oddsUp") : o.text() < r[i[s]][MainProperty.isPrincipal] && n(o, "oddsUp", "oddsDown")),
                o.text(r[i[s]][MainProperty.isPrincipal]),
                0 < o.closest("div.btn_GSOdds").length && "" == r[i[s]][MainProperty.isPrincipal] ? ((m = o.closest("div.btn_GSOdds")).removeClass("btn_GSOdds").addClass("noneOdds"),
                m.off("click"),
                ["11061", "11062", "11063", "11161", "11162", "26061", "26062", "26063", "26161", "26162", "27061", "27062", "27063", "27161", "27162"].indexOf(a) < 0 && $("#ipk" + e + i[s] + a + t).addClass("none")) : 0 < o.closest("div.noneOdds").length && "" != r[i[s]][MainProperty.isPrincipal] && ((m = o.closest("div.noneOdds")).removeClass("noneOdds").addClass("btn_GSOdds"),
                m.click(function(e) {
                    0 < $("#delayInfo:visible").length || (e = $(e.currentTarget).closest(".btn_GSOdds"),
                    CartBase.AddCartList(e, !0))
                }),
                $("#ipk" + e + i[s] + a + t).removeClass("none"))
            }
    },
    InsertMore: function(s) {
        requestAnimationFrame(function() {
            var e = (e = $("#innerMenu .show.on").attr("page")) || "0"
              , t = Inner.DrawSchedule(MainProperty.innerPage, s);
            Inner.BindClickEvent();
            var a = !1;
            0 < $('#innerSchedule > div.gameStyle_list:not([style*="display: none"])').length && 0 == $('#innerSchedule > div.gameStyle_list:not([style*="display: none"]) > div.gameStyle_In:not([style*="display: none"])').length ? $("#innerMenu > li.btn_gameStyle_all").addClass("off") : $('#innerSchedule > div.gameStyle_list:not([style*="display: none"])').length == $('#innerSchedule > div.gameStyle_list:not([style*="display: none"]) > div.gameStyle_In:not([style*="display: none"])').length && (a = !0);
            for (var i = 0; i < t.length; i++) {
                var n = $('#innerSchedule > div.gameStyle_list[ck="' + t[i] + '"]')
                  , r = $(n).attr("page");
                0 != e && r != e || (0 == $("#innerMenu:visible").length && ($("#innerMenu").removeClass("none"),
                $("#innerMenu").next("div.GDList_In").show(),
                $("#innerNoData").hide(),
                ChatVue.half.allow = !0),
                0 == $('#innerSchedule > div.gameStyle_list:not([style*="display: none"])').length && ($('#innerMenu > li.btn_GDListT[page="0"]').addClass("on").addClass("show"),
                $(n).children("div.gameStyle_T").addClass("on"),
                $(n).children("div.gameStyle_In").show()),
                0 < $(n).children("div.gameStyle_In").children("table.gameStyle_Table").children("tbody").children("tr").length ? (a && ($(n).children("div.gameStyle_T").addClass("on"),
                $(n).children("div.gameStyle_In").show(),
                $("#innerMenu > li.btn_gameStyle_all").removeClass("off")),
                $(n).show()) : ($(n).children("div.gameStyle_T").removeClass("on"),
                $(n).children("div.gameStyle_In").hide(),
                $(n).hide()))
            }
            $('#innerMenu .show[page="' + e + '"]').addClass("on"),
            0 < $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.show").length ? $("#innerMenu > li.btn_GDListT_menu").show() : $("#innerMenu > li.btn_GDListT_menu").hide()
        })
    },
    RemoveMore: function(r) {
        requestAnimationFrame(function() {
            var e = $("#innerMenu .show.on").attr("page")
              , t = $("#innerSchedule").scrollTop()
              , a = Inner.DrawSchedule(MainProperty.innerPage, r);
            Inner.BindClickEvent();
            for (var i = 0; i < a.length; i++) {
                var n = $('#innerSchedule > div.gameStyle_list[ck="' + a[i] + '"]');
                0 == $(n).children("div.gameStyle_In").children("table.gameStyle_Table").children("tbody").children("tr").length && ($(n).hide(),
                $(n).children("div.gameStyle_T").removeClass("on"),
                $(n).children("div.gameStyle_In").hide())
            }
            if (0 < $('#innerSchedule > div.gameStyle_list:not([style*="display: none"])').length && 0 == $('#innerSchedule > div.gameStyle_list:not([style*="display: none"]) > div.gameStyle_In:not([style*="display: none"])').length && $("#innerMenu > li.btn_gameStyle_all").addClass("off"),
            0 == $('#innerMenu .show[page="' + e + '"]').length ? (t = 0,
            $("#innerMenu .show").removeClass("on"),
            $("#innerMenu .show:first").addClass("on"),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_In > table.gameStyle_Table > tbody").closest("div.gameStyle_list").show(),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_In > table.gameStyle_Table > tbody").closest("div.gameStyle_list").children("div.gameStyle_T").addClass("on"),
            $("#innerSchedule > div.gameStyle_list > div.gameStyle_In > table.gameStyle_Table > tbody").closest("div.gameStyle_In").show()) : $('#innerMenu .show[page="' + e + '"]').addClass("on"),
            0 < $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.show").length ? $("#innerMenu > li.btn_GDListT_menu").show() : $("#innerMenu > li.btn_GDListT_menu").hide(),
            0 == $('#innerSchedule > div.gameStyle_list:not([style*="display: none"])').length)
                return $("#innerMenu .show").removeClass("on").removeClass("show"),
                $("#innerMenu > li.btn_GDListT_menu").hide(),
                $("#innerMenu").addClass("none"),
                $("#innerMenu").next("div.GDList_In").hide(),
                $("#innerNoData").show(),
                ChatVue.status && ChatVue.half.status && ChatVue.HalfClickEventHandler(),
                void (ChatVue.half.allow = !1);
            $("#innerSchedule").scrollTop(t)
        })
    },
    OpenChatRoom: function() {
        $("#innerPage").addClass("chatroomOpen"),
        ChatVue.gift.status ? $("#innerChatRoom").addClass("chatroomMc") : $("#innerChatRoom").removeClass("chatroomMc"),
        $("#btnSourceBar > li.btn_bulletScreen").css("display", ""),
        PanelBase.IsPopAndInnerSameLive(Args.Anchor) || PanelBase.IsPopAndInnerSameLive(Args.GameLive) ? (Panel.ChangeBulletMode(Args.PopLiveTv, MainProperty.panelData.bulletMode),
        $("#popBtnSourceBar > li.btn_bulletScreen").css("display", "")) : Panel.ChangeBulletMode(Args.LiveTv, MainProperty.panelData.bulletMode)
    },
    CloseChatRoom: function() {
        $("#innerPage").removeClass("chatroomOpen chatroomOpenAll"),
        $("#innerView > ul.GDView_T > li.btn_fixed").show(),
        $("#innerGameBox").parent("ul").show(),
        BulletAPI.Destroy(),
        MainProperty.panelData.bulletPosition = null,
        $("#btnSourceBar > li.btn_bulletScreen").add("#popBtnSourceBar > li.btn_bulletScreen").css("display", "none")
    },
    HalfChatRoom: function(e) {
        e ? ($("#innerPage").removeClass("chatroomOpenAll").addClass("chatroomOpen"),
        $("#innerView > ul.GDView_T > li.btn_fixed").show(),
        0 == $("#innerView > ul.GDView_T > li.btn_fixed.on").length ? ($("#innerScrollBar").removeClass("scroll_off"),
        $("#innerSchedule").addClass("scroll_off")) : ($("#innerScrollBar").addClass("scroll_off"),
        $("#innerSchedule").removeClass("scroll_off")),
        $("#innerGameBox").parent("ul").show(),
        $("#innerChatRoom").removeAttr("style")) : (e = $("#innerPage > div.gamePanelR_In > div.gameDetail").height() - $("#innerPage > div.gamePanelR_In > div.gameDetail > div.gameDetail_T").outerHeight() - $("#innerView").height(),
        $("#innerPage").removeClass("chatroomOpen").addClass("chatroomOpenAll"),
        0 == $("#innerView > ul.GDView_T > li.btn_fixed.on").length && ($("#innerScrollBar").addClass("scroll_off"),
        $("#innerSchedule").removeClass("scroll_off")),
        $("#innerView > ul.GDView_T > li.btn_fixed").hide(),
        $("#innerGameBox").parent("ul").hide(),
        $("#innerChatRoom").css("height", e))
    }
}
  , Panel = {
    SetTitle: function(e) {
        $("#innerView > ul.GDView_T > li:not(.btn_fixed)").removeClass("on").hide(),
        MainProperty.panelData.panelTitle && 0 != MainProperty.panelData.panelTitle.length ? (0 <= MainProperty.panelData.panelTitle.indexOf(Args.ScoreBoard) && (MainProperty.panelData.panel == Args.ScoreBoard ? $("#innerView > ul.GDView_T > li.btn_GDV_scoreBoard").addClass("on") : $("#innerView > ul.GDView_T > li.btn_GDV_scoreBoard").removeClass("on")).show(),
        (0 <= MainProperty.panelData.panelTitle.indexOf(Args.RDHistory) || 0 <= MainProperty.panelData.panelTitle.indexOf(Args.RDInfo)) && 0 != MainProperty.panelData.mId.length && $("#innerView > ul.GDView_T > li.btn_GDV_gameData").show(),
        0 <= MainProperty.panelData.panelTitle.indexOf(Args.RDAnimation) && 0 != MainProperty.panelData.mId.length && (MainProperty.panelData.panel == Args.RDAnimation && 0 != MainProperty.panelData.RDAnimate ? $("#innerView > ul.GDView_T > li.btn_GDV_runData").addClass("on") : $("#innerView > ul.GDView_T > li.btn_GDV_runData").removeClass("on")).show(),
        0 <= MainProperty.panelData.panelTitle.indexOf(Args.GameLive) && (MainProperty.panelData.panel != Args.GameLive || PanelBase.IsPopAndInnerSameLive(Args.GameLive) ? $("#innerView > ul.GDView_T > li.btn_GDV_liveTv").removeClass("on") : $("#innerView > ul.GDView_T > li.btn_GDV_liveTv").addClass("on")).show(),
        0 <= MainProperty.panelData.panelTitle.indexOf(Args.Anchor) && (MainProperty.panelData.panel != Args.Anchor || PanelBase.IsPopAndInnerSameLive(Args.Anchor) ? $("#innerView > ul.GDView_T > li.btn_GDV_liveMc").removeClass("on") : $("#innerView > ul.GDView_T > li.btn_GDV_liveMc").addClass("on")).show(),
        $("#innerView > ul.GDView_T").show()) : $("#innerView > ul.GDView_T").hide(),
        ChatVue.status && e && ($("#innerPage").hasClass("chatroomOpenAll") && (e = $("#innerPage > div.gamePanelR_In > div.gameDetail").height() - $("#innerPage > div.gamePanelR_In > div.gameDetail > div.gameDetail_T").outerHeight() - $("#innerView").height(),
        $("#innerChatRoom").css("height", e)),
        ChatVue.SlideDownClickEventHandler())
    },
    BindShowFloatText: function(e) {
        Tool.IsTouch ? $(e).click(function() {
            $(this).children("div.GDV_prompt").show()
        }) : $(e).hoverDelay(function() {
            $(this).children("div.GDV_prompt").show()
        }, function() {
            $(this).children("div.GDV_prompt").hide()
        })
    },
    SwitchActive: function(e) {
        (MainProperty.panelData.panel != e || e == Args.GameLive && PanelBase.IsPopAndInnerSameLive(Args.GameLive) || e == Args.Anchor && PanelBase.IsPopAndInnerSameLive(Args.Anchor)) && (e == Args.RDHistory || e == Args.RDInfo ? Panel.ToRDHistoryUrl() : e == Args.GameLive ? (MainProperty.panelData.panel = e,
        (PanelBase.IsPopAndInnerSameLive(Args.GameLive) || PanelBase.IsPopAndInnerSameLive(Args.Anchor)) && Panel.ClosePopLiveTV(!1, !1, !0),
        Panel.SetActiveHtml(!0, "SwitchActive(GameLive)")) : e == Args.Anchor ? (MainProperty.panelData.panel = e,
        PanelBase.IsPopAndInnerSameLive(Args.GameLive) || PanelBase.IsPopAndInnerSameLive(Args.Anchor) ? Panel.ClosePopLiveTV(!1, !1, !0) : Panel.SetAnchor(Args.LiveTv, !0),
        Panel.SetActiveHtml(!0, "SwitchActive(Anchor)")) : e == Args.RDAnimation ? 0 != MainProperty.panelData.RDAnimate ? (MainProperty.panelData.panel = e,
        Panel.DrawRDAnimate(),
        Panel.SetActiveHtml(!0, "SwitchActive(RDAnimation)")) : Panel.ToRDAnimationUrl() : (MainProperty.panelData.panel = e,
        Panel.SetActiveHtml(!0, "SwitchActive(" + e + ")")),
        Panel.SetChatRoomType(),
        Panel.SetTitle(!0))
    },
    SetLiveTvConsoleAnimation: function(e) {
        $("#" + e + " > div.liveTv_console").hasClass("slideUp") && $("#" + e + " > div.liveTv_console").removeClass("slideUp"),
        $("#" + e + " > div.btn_popUpTv_close").hasClass("fadeOut") && ($("#" + e + " > div.btn_popUpTv_close").removeClass("fadeOut"),
        $("#" + e + " > div.liveTv_team").removeClass("fadeOut")),
        !0 !== PlayerAPI.lock && ($("#" + e + " > div.liveTv_console").slideDown(300),
        $("#" + e + " > div.liveTv_console").addClass("slideUp"),
        $("#" + e + " > div.btn_popUpTv_close").add("#" + e + " > div.liveTv_team").fadeIn(300),
        $("#" + e + " > div.btn_popUpTv_close").add("#" + e + " > div.liveTv_team").addClass("fadeOut"),
        $("#innerGameLive").add("#popGameLive").css("cursor", "auto"))
    },
    SetEvent: function() {
        var e;
        Panel.HasLoadingCompleteVideoElement() ? MainProperty.user.hasEnoughDeposit ? (PlayerAPI[Args.LiveTv] = new PlayerFactroy(Args.LiveTv,document.getElementById("innerVideoDiv")),
        PlayerAPI[Args.PopLiveTv] = new PlayerFactroy(Args.PopLiveTv,document.getElementById("popVideoDiv")),
        e = Panel.ChangeBulletMode(Args.LiveTv, BulletMode.Half),
        Panel.SetBulletText(e),
        Tool.IsTouch ? ($("#innerGameLive").click(function() {
            clearTimeout(PlayerAPI[Args.LiveTv].consoleTimer),
            PlayerAPI[Args.LiveTv].consoleShow = !PlayerAPI[Args.LiveTv].consoleShow,
            $("#innerGameLive > div.liveTv_console").slideToggle(300),
            PlayerAPI[Args.LiveTv].consoleShow && (PlayerAPI[Args.LiveTv].consoleTimer = setTimeout(function() {
                PlayerAPI[Args.LiveTv].consoleShow = !1,
                $("#innerGameLive > div.liveTv_console").slideToggle(300)
            }, 3e3)),
            Panel.SetFocusSound(Args.PopLiveTv),
            Panel.SetFocusLive(Args.PopLiveTv)
        }),
        $("#innerGameLive > div.liveTv_console").click(function(e) {
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#popGameLive").click(function() {
            clearTimeout(PlayerAPI[Args.PopLiveTv].consoleTimer),
            PlayerAPI[Args.PopLiveTv].consoleShow = !PlayerAPI[Args.PopLiveTv].consoleShow,
            $("#popGameLive > div.liveTv_team").fadeToggle(200),
            $("#popGameLive > div.liveTv_console").slideToggle(300),
            $("#popGameLive > div.btn_popUpTv_close").fadeToggle(200),
            PlayerAPI[Args.PopLiveTv].consoleShow && (PlayerAPI[Args.PopLiveTv].consoleTimer = setTimeout(function() {
                PlayerAPI[Args.PopLiveTv].consoleShow = !1,
                $("#popGameLive > div.liveTv_console").slideToggle(300),
                $("#popGameLive > div.btn_popUpTv_close").fadeOut(200)
            }, 3e3)),
            Panel.SetFocusSound(Args.PopLiveTv),
            Panel.SetFocusLive(Args.PopLiveTv)
        }),
        $("#popGameLive > div.liveTv_console").click(function(e) {
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#btnSourceBar > li.btn_blockgift").add("#popBtnSourceBar > li.btn_blockgift").click(function(e) {
            $("#btnSourceBar > li.btn_blockgift").add("#popBtnSourceBar > li.btn_blockgift").toggleClass("off"),
            $(this).hasClass("off") ? ($(this).closest(".liveTv").find(".livePopup").text(langFont.Font_HideGiftAnimation).finish().fadeIn(800).delay(800).fadeOut(800),
            $("#btnSourceBar > li.btn_blockgift").add("#popBtnSourceBar > li.btn_blockgift").find(".LT_prompt").text(langFont.Font_ShowGiftAnimation),
            ChatVue.$store.gift.useAnimationStatus = !1) : ($(this).closest(".liveTv").find(".livePopup").text(langFont.Font_ShowGiftAnimation).finish().fadeIn(800).delay(800).fadeOut(800),
            $("#btnSourceBar > li.btn_blockgift").add("#popBtnSourceBar > li.btn_blockgift").find(".LT_prompt").text(langFont.Font_HideGiftAnimation),
            ChatVue.$store.gift.useAnimationStatus = !0),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#btnSourceBar > li.btn_bulletScreen").click(function(e) {
            var t = Panel.ChangeBulletMode(Args.LiveTv);
            Panel.SetBulletText(t),
            $(this).closest(".liveTv").find(".livePopup").finish().fadeIn(800).delay(800).fadeOut(800),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#popBtnSourceBar > li.btn_bulletScreen").click(function(e) {
            var t = Panel.ChangeBulletMode(Args.PopLiveTv);
            Panel.SetBulletText(t),
            $(this).closest(".liveTv").find(".livePopup").finish().fadeIn(800).delay(800).fadeOut(800),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#popBtnSourceBar > li.btn_popupScreen").click(function(e) {
            Panel.GoToMore(),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $(".btn_changeMC").on("click", function(e) {
            $(this).parent(".changeMC").toggleClass("on").find(".LT_prompt").hide(),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#popLiveVolumeSilder").add("#liveVolumeSilder").addClass("none"),
        $(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange msfullscreenchange", function(e) {
            PlayerAPI.IsFullScreen() ? ($("#innerVideoDiv > video").add("#popVideoDiv > video").prop("controls", !0),
            $("#btnSourceBar > li.btn_popupScreen").add("#popBtnSourceBar > li.btn_popupScreen").addClass("none")) : ($("#innerVideoDiv > video").add("#popVideoDiv > video").prop("controls", !1),
            $("#btnSourceBar > li.btn_popupScreen").add("#popBtnSourceBar > li.btn_popupScreen").removeClass("none"),
            $("#innerGameLive").add("#popGameLive").removeClass("full"))
        })) : ($("#innerGameLive:not(.full)").hoverDelay(function() {
            clearTimeout(PlayerAPI[Args.LiveTv].consoleTimer),
            $("#innerGameLive > .liveTv_console").slideDown(300)
        }, function() {
            PlayerAPI[Args.LiveTv].consoleTimer = setTimeout(function() {
                $("#innerGameLive > .liveTv_console").slideUp(300)
            }, 300)
        }),
        $("#popGameLive:not(.full)").hoverDelay(function() {
            clearTimeout(PlayerAPI[Args.PopLiveTv].consoleTimer),
            $("#popGameLive > .liveTv_console").slideDown(300),
            $("#popGameLive > div.btn_popUpTv_close").fadeIn(200),
            $("#popGameLive > div.liveTv_team").fadeIn(200)
        }, function() {
            PlayerAPI[Args.PopLiveTv].consoleTimer = setTimeout(function() {
                $("#popGameLive > .liveTv_console").slideUp(300),
                $("#popGameLive > div.btn_popUpTv_close").fadeOut(200),
                $("#popGameLive > div.liveTv_team").fadeOut(200)
            }, 300)
        }),
        $("#innerGameLive").add("#popGameLive").click(function(e) {
            $(e.currentTarget).hasClass("full") && Panel.SetLiveTvConsoleAnimation(e.currentTarget.id),
            $(e.currentTarget).hasClass("popUp") ? (Panel.SetFocusSound(Args.PopLiveTv),
            Panel.SetFocusLive(Args.PopLiveTv)) : (Panel.SetFocusSound(Args.LiveTv),
            Panel.SetFocusLive(Args.LiveTv)),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#btnSoundMuted").add("#btnSourceBar > li").add("#popBtnSoundMuted").add("#popBtnSourceBar > li").hoverDelay(function() {
            $("#btnSourceBar > li.changeMC").hasClass("on") || $("#popBtnSourceBar > li.changeMC").hasClass("on") || $(this).find(".LT_prompt").fadeIn(200)
        }, function() {
            $(".changeMC_list li").parents(".changeMC").removeClass("on"),
            $(this).find(".LT_prompt").fadeOut(200)
        }),
        $(".btn_changeMC,.changeMC_list").hoverDelay(function() {
            $(this).parent(".changeMC").addClass("on")
        }, function() {
            $(this).parent(".changeMC").removeClass("on")
        }),
        $("#innerGameLive > div:not(.liveTv_console):not(.liveTv_maskB)").add("#popGameLive > div:not(.liveTv_console):not(.liveTv_maskB)").click(function(e) {
            var t = null
              , a = $(e.target).closest(".liveTv").hasClass("popUp") ? Args.PopLiveTv : Args.LiveTv;
            MainProperty.panelData.fullScreenClickTime = MainProperty.panelData.fullScreenClickTime + 1,
            MainProperty.panelData.fullScreenTimer = setTimeout(function() {
                1 < MainProperty.panelData.fullScreenClickTime && (a == Args.LiveTv && BulletAPI.Clear(),
                t = (Tool.IsTouch ? $(e.target).closest(".liveTv").find("video") : $(e.target).closest(".liveTv"))[0],
                PlayerAPI.SetFullScreen(t, a)),
                MainProperty.panelData.fullScreenClickTime = 0,
                clearTimeout(MainProperty.panelData.fullScreenTimer)
            }, 300),
            Panel.SetFocusSound(a),
            Panel.SetFocusLive(a),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation(),
            e.preventDefault()
        }),
        $("#liveVolumeSilder").parent().mousedown(function(e) {
            Panel.SetFocusSound(Args.LiveTv),
            Panel.SetFocusLive(Args.LiveTv),
            PlayerAPI[Args.LiveTv].SetMuted(!1, !0),
            Panel.UpdateSound(Args.VolDistance, e.pageX, Args.LiveTv, !0),
            $("#innerGameLive > .liveTv_console").on("mouseup mouseleave", function(e) {
                $("#innerGameLive > .liveTv_console").off("mouseup mouseleave mousemove"),
                e.stopPropagation()
            }).on("mousemove", function(e) {
                Panel.UpdateSound(Args.VolDistance, e.pageX, Args.LiveTv, !0),
                e.stopPropagation()
            }),
            e.stopPropagation()
        }).removeClass("none"),
        $("#popLiveVolumeSilder").parent().mousedown(function(e) {
            Panel.SetFocusSound(Args.PopLiveTv),
            Panel.SetFocusLive(Args.PopLiveTv),
            PlayerAPI[Args.PopLiveTv].SetMuted(!1, !0),
            Panel.UpdateSound(Args.VolDistance, e.pageX, Args.PopLiveTv, !0),
            $("#popGameLive > .liveTv_console").on("mouseup mouseleave", function(e) {
                $("#popGameLive > .liveTv_console").off("mouseup mouseleave mousemove"),
                e.stopPropagation()
            }).on("mousemove", function(e) {
                Panel.UpdateSound(Args.VolDistance, e.pageX, Args.PopLiveTv, !0),
                e.stopPropagation()
            }),
            e.stopPropagation()
        }).removeClass("none"),
        $("#btnSourceBar > li.btn_bulletScreen").click(function(e) {
            var t = Panel.ChangeBulletMode(Args.LiveTv);
            Panel.SetBulletText(t),
            $(this).closest(".liveTv").find(".livePopup").finish().fadeIn(800).delay(800).fadeOut(800),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#popBtnSourceBar > li.btn_bulletScreen").click(function(e) {
            var t = Panel.ChangeBulletMode(Args.PopLiveTv);
            Panel.SetBulletText(t),
            $(this).closest(".liveTv").find(".livePopup").finish().fadeIn(800).delay(800).fadeOut(800),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#innerGameLive > div.liveTv_console").add("#popGameLive > div.liveTv_console").add("#innerGameLive > div.liveTv_team").add("#popGameLive > div.liveTv_team").add("#popGameLive > div.btn_popUpTv_close").on("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
            !0 !== PlayerAPI.lock && ($(this).removeClass("fadeOut slideUp"),
            $(this).hide(),
            $("#innerGameLive").add("#popGameLive").css("cursor", "none"))
        }),
        $(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange msfullscreenchange", function(e) {
            $("#innerGameLive").add("#popGameLive").off("mousemove"),
            $("#innerGameLive > div.liveTv_console, #popGameLive > div.liveTv_console").off("mousemove mouseleave"),
            PlayerAPI.IsFullScreen() ? ($("#innerGameLive").add("#popGameLive").on("mousemove", function(e) {
                Panel.SetLiveTvConsoleAnimation(e.currentTarget.id)
            }),
            $("#innerGameLive > div.liveTv_console, #popGameLive > div.liveTv_console").on("mousemove", function() {
                PlayerAPI.lock = !0
            }).on("mouseleave", function() {
                PlayerAPI.lock = !1
            }),
            Panel.SetLiveTvConsoleAnimation($(e.target).closest(".liveTv").attr("id")),
            $("#popBtnSourceBar > li.btn_fullScreen > div.LT_prompt").add("#btnSourceBar > li.btn_fullScreen > div.LT_prompt").text(langFont.Font_ExitFullScreen).hide(),
            $("#btnSourceBar > li.btn_popupScreen").add("#popBtnSourceBar > li.btn_popupScreen").addClass("none"),
            ChatVue.status && $("#btnSourceBar > li.btn_bulletScreen").add("#innerBulletScreen").removeClass("none")) : ($("#innerGameLive > div.liveTv_console").add("#popGameLive > div.liveTv_console").removeClass("slideUp").hide(),
            $("#innerGameLive > div.liveTv_team").add("#popGameLive > div.liveTv_team").add("#popGameLive > div.btn_popUpTv_close").removeClass("fadeOut").hide(),
            0 < $("#popGameLive:hover").length && $("#popGameLive > div.liveTv_console").add("#popGameLive > div.liveTv_team").add("#popGameLive > div.btn_popUpTv_close").show(),
            0 < $("#innerGameLive:hover").length && $("#innerGameLive > div.liveTv_console").show(),
            $("#btnSourceBar > li.btn_popupScreen").add("#popBtnSourceBar > li.btn_popupScreen").removeClass("none"),
            $("#btnSourceBar > li.btn_bulletScreen").add("#innerBulletScreen").addClass("none"),
            $("#innerGameLive").add("#popGameLive").removeClass("full"),
            $("#popBtnSourceBar > li.btn_fullScreen > div.LT_prompt").add("#btnSourceBar > li.btn_fullScreen > div.LT_prompt").text(langFont.Font_FullScreen).hide(),
            $("#innerGameLive").add("#popGameLive").css("cursor", "auto"),
            ChatVue.status && !ChatVue.half.status && requestAnimationFrame(function() {
                Inner.HalfChatRoom(!1),
                ChatVue.SlideDownClickEventHandler()
            }))
        })),
        $("#btnSourceBar > li.btn_popupScreen").on("click touchend", function(e) {
            Outer.CloseBlock($(e.target)),
            e.preventDefault(),
            e.stopPropagation(),
            Panel.OpenPopLiveTV()
        }),
        $("#popGameLive > div.btn_popUpTv_close").on("click touchend", function(e) {
            Outer.CloseBlock($(e.target)),
            e.preventDefault(),
            e.stopPropagation(),
            Panel.ClosePopLiveTV(!1, !1, !0)
        }),
        $("#popBtnSourceBar > li.btn_popupScreen").click(function(e) {
            Outer.CloseBlock($(e.target)),
            e.preventDefault(),
            e.stopPropagation(),
            Panel.GoToMore()
        }),
        $("#btnSoundMuted").click(function(e) {
            $(this).toggleClass("off");
            var t = $(this).hasClass("off");
            PlayerAPI[Args.LiveTv].SetMuted(t, !0),
            Panel.SetFocusSound(Args.LiveTv),
            Panel.SetFocusLive(Args.LiveTv),
            Panel.UpdateSound(Args.VolPercent, t ? 0 : PlayerAPI.Volume || PlayerAPI.InitialVol, Args.LiveTv, !t),
            Outer.CloseBlock($(e.target)),
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#popBtnSoundMuted").click(function(e) {
            $(this).toggleClass("off");
            var t = $(this).hasClass("off");
            PlayerAPI[Args.PopLiveTv].SetMuted(t, !0),
            Panel.SetFocusSound(Args.PopLiveTv),
            Panel.SetFocusLive(Args.PopLiveTv),
            Panel.UpdateSound(Args.VolPercent, t ? 0 : PlayerAPI.Volume || PlayerAPI.InitialVol, Args.PopLiveTv, !t),
            Outer.CloseBlock($(e.target)),
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#btnSourceBar > li.btn_refresh").click(function(e) {
            PlayerAPI[Args.LiveTv].RefreshPlayer(),
            Panel.SetFocusSound(Args.LiveTv),
            Panel.SetFocusLive(Args.LiveTv),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#innerGameLive > div.liveTv_mask").click(function(e) {
            MainProperty.panelData.panel == Args.GameLive ? (PlayerAPI[Args.LiveTv].videoSource != VideoSource.Hls && PlayerAPI[Args.LiveTv].DestroyPlayer(),
            PlayerAPI[Args.LiveTv].SetChannel(MainProperty.panelData.gameLive.route, MainProperty.panelData.gameLive.domain, MainProperty.panelData.gameLive.rSteamId, "GameLive MaskClick"),
            PlayerAPI[Args.LiveTv].InitPlayer(VideoSource.Hls)) : MainProperty.panelData.panel == Args.Anchor && (PlayerAPI[Args.LiveTv].videoSource == VideoSource.Hls && PlayerAPI[Args.LiveTv].DestroyPlayer(),
            PlayerAPI[Args.LiveTv].SetChannel(MainProperty.panelData.girlLive.route, MainProperty.panelData.girlLive.domain, null, "GirlLive MaskClick"),
            PlayerAPI[Args.LiveTv].InitPlayer(VideoSource.Sldp)),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#popBtnSourceBar > li.btn_refresh").click(function(e) {
            PlayerAPI[Args.PopLiveTv].RefreshPlayer(),
            Panel.SetFocusSound(Args.PopLiveTv),
            Panel.SetFocusLive(Args.PopLiveTv),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#popGameLive > div.liveTv_mask").click(function(e) {
            var t = MainProperty.panelData.popGameLive.type == Args.GameLive ? VideoSource.Hls : VideoSource.Sldp;
            PlayerAPI[Args.PopLiveTv].SetChannel(MainProperty.panelData.popGameLive.route, MainProperty.panelData.popGameLive.domain, MainProperty.panelData.popGameLive.rSteamId, "PopGameLive MaskClick"),
            PlayerAPI[Args.PopLiveTv].InitPlayer(t),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#btnSourceBar > li.btn_fullScreen").add("#popBtnSourceBar > li.btn_fullScreen").click(function(e) {
            var t = null
              , a = $(e.target).closest(".liveTv").hasClass("popUp") ? Args.PopLiveTv : Args.LiveTv;
            a == Args.LiveTv && BulletAPI.Clear(),
            t = (Tool.IsTouch ? $(e.target).closest(".liveTv").find("video") : $(e.target).closest(".liveTv"))[0],
            Panel.SetFocusSound(a),
            Panel.SetFocusLive(a),
            PlayerAPI.SetFullScreen(t, a),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        $("#btnSourceBar > li.btn_blockgift").add("#popBtnSourceBar > li.btn_blockgift").click(function(e) {
            $("#btnSourceBar > li.btn_blockgift").add("#popBtnSourceBar > li.btn_blockgift").toggleClass("off"),
            $(this).hasClass("off") ? ($("#btnSourceBar > li.btn_blockgift").add("#popBtnSourceBar > li.btn_blockgift").find(".LT_prompt").text(langFont.Font_ShowGiftAnimation),
            $(this).closest(".liveTv").find(".livePopup").text(langFont.Font_HideGiftAnimation).finish().fadeIn(800).delay(800).fadeOut(800),
            ChatVue.$store.gift.useAnimationStatus = !1) : ($("#btnSourceBar > li.btn_blockgift").add("#popBtnSourceBar > li.btn_blockgift").find(".LT_prompt").text(langFont.Font_HideGiftAnimation),
            $(this).closest(".liveTv").find(".livePopup").text(langFont.Font_ShowGiftAnimation).finish().fadeIn(800).delay(800).fadeOut(800),
            ChatVue.$store.gift.useAnimationStatus = !0),
            Outer.CloseBlock($(e.target)),
            e.stopPropagation()
        }),
        Panel.Resizable("popGameLive")) : ($("#innerGameLive > div.liveTv_maskB").add("#popGameLive > div.liveTv_maskB").addClass("on"),
        $("#innerGameLive > div.liveTv_maskB > div.liveTv_maskB_text").add("#popGameLive > div.liveTv_maskB > div.liveTv_maskB_text").html(MainProperty.user.hasDormant ? langFont.Font_DormantAccount : langFont.Font_NoDeposit)) : BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + '\r\nsource: Document\r\n直播相關 el 不完整: \r\ndocument.getElementById("innerVideoDiv"): ' + (document.getElementById("innerVideoDiv") ? "有載入" : "沒載入") + '\r\ndocument.getElementById("popVideoDiv"): ' + (document.getElementById("popVideoDiv") ? "有載入" : "沒載入") + "\r\n"),
        Panel.BindShowFloatText("#innerView > ul.GDView_T > li")
    },
    ToRDAnimationUrl: function() {
        var e = PanelBase.TransformRadarUrlLang()
          , t = PanelBase.TransformRadarUrlSport()
          , a = MainProperty.panelData.mId;
        NewWindow(MainProperty.RadarAnimation + "?language=" + e + "&matchid=" + a + "&reqtype=1&ball=" + t, "RadarAnimation")
    },
    ToRDHistoryUrl: function() {
        var e = PanelBase.TransformRadarUrlLang()
          , t = MainProperty.panelData.mId;
        NewWindow(MainProperty.RadarData + "?language=" + e + "&matchid=" + t + "&reqtype=1", "RadarData")
    },
    SetChatRoomType: function() {
        if (MainProperty.gameData[MainProperty.innerPage] && MainProperty.gameData[MainProperty.innerPage].mode == PlayMode.ZD)
            if (PanelBase.IsPopAndInnerSameLive(Args.Anchor))
                MainProperty.panelData.roomId = MainProperty.panelData.popGameLive.roomId,
                ChatVue.SwitchChatType(!0, "none" != $("#innerNoData").css("display"));
            else if (PanelBase.IsPopAndInnerSameLive(Args.GameLive))
                ChatVue.SwitchChatType(!1, "none" != $("#innerNoData").css("display"));
            else
                switch (MainProperty.panelData.panel) {
                case Args.Anchor:
                    ChatVue.SwitchChatType(!0, "none" != $("#innerNoData").css("display"));
                    break;
                case Args.GameLive:
                    ChatVue.SwitchChatType(!1, "none" != $("#innerNoData").css("display"));
                    break;
                case Args.NoPanel:
                case Args.ScoreBoard:
                case Args.RDAnimation:
                case Args.RDInfo:
                case Args.RDHistory:
                default:
                    (MainProperty.panelData.panelTitle.indexOf(Args.Anchor) < 0 || ChatVue.roomId != MainProperty.panelData.roomId) && ChatVue.SwitchChatType(!1, "none" != $("#innerNoData").css("display"))
                }
    },
    SetActiveHtml: function(e, t) {
        switch ($("#innerView > div").add("#innerGameLive > div.livePopup").hide(),
        Panel.HasLoadingCompleteVideoElement() && MainProperty.user.hasEnoughDeposit && (MainProperty.panelData.popGameLive.gId !== MainProperty.innerPage || e) && (MainProperty.panelData.panel == Args.GameLive ? (PlayerAPI[Args.LiveTv].videoSource != VideoSource.Hls && PlayerAPI[Args.LiveTv].DestroyPlayer(),
        PlayerAPI[Args.LiveTv].SetChannel(MainProperty.panelData.gameLive.route, MainProperty.panelData.gameLive.domain, MainProperty.panelData.gameLive.rSteamId, t + " SetActiveHtml gameLive") && PlayerAPI[Args.LiveTv].InitPlayer(VideoSource.Hls)) : MainProperty.panelData.panel == Args.Anchor ? (PlayerAPI[Args.LiveTv].videoSource == VideoSource.Hls && PlayerAPI[Args.LiveTv].DestroyPlayer(),
        PlayerAPI[Args.LiveTv].SetChannel(MainProperty.panelData.girlLive.route, MainProperty.panelData.girlLive.domain, null, t + " SetActiveHtml girlLive") && PlayerAPI[Args.LiveTv].InitPlayer(VideoSource.Sldp)) : (PlayerAPI[Args.LiveTv].DestroyPlayer(),
        0 < $("#popGameLive:visible").length && (Panel.SetFocusSound(Args.PopLiveTv),
        Panel.SetFocusLive(Args.PopLiveTv)))),
        MainProperty.panelData.panel) {
        case Args.ScoreBoard:
            MainProperty.panelData.scoreBoard && (Panel.DrawScoreBoard(),
            $("#innerBoard").show());
            break;
        case Args.RDAnimation:
            0 != MainProperty.panelData.RDAnimate && $("#innerRDAnimate").show();
            break;
        case Args.GameLive:
            MainProperty.panelData.gameLive && (MainProperty.panelData.popGameLive.gId !== MainProperty.innerPage || e) && (Panel.DrawInnerLiveBattle(),
            $("#innerGameLive").removeClass("liveMc").show(),
            e && MainProperty.user.hasEnoughDeposit && (Panel.SetFocusSound(Args.LiveTv),
            Panel.SetFocusLive(Args.LiveTv)),
            Panel.ChangeBulletMode(Args.LiveTv, MainProperty.panelData.bulletMode));
            break;
        case Args.Anchor:
            MainProperty.panelData.girlLive && (MainProperty.panelData.popGameLive.gId !== MainProperty.innerPage || e) && (Panel.DrawInnerLiveBattle(),
            $("#innerGameLive").addClass("liveMc").show(),
            e && MainProperty.user.hasEnoughDeposit && (Panel.SetFocusSound(Args.LiveTv),
            Panel.SetFocusLive(Args.LiveTv)),
            Panel.ChangeBulletMode(Args.LiveTv, MainProperty.panelData.bulletMode));
            break;
        default:
            $("#innerView > div").hide(),
            Panel.ResetAction()
        }
    },
    PostMessageToRDiframe: function(e) {
        $("#innerRDAnimate > iframe")[0] && $("#innerRDAnimate > iframe")[0].contentWindow && $("#innerRDAnimate > iframe")[0].contentWindow.postMessage(e, "*")
    },
    SetRDAnimateHeight: function() {
        var e;
        PanelBase.HasRDAnimate() && ($("#innerRDAnimate > iframe").add("#innerLoading").css("height", ""),
        e = $("#innerLoading").height() + (PanelBase.HasRDAnimateMomentum() && $("#innerView > ul.GDView_T > li.btn_GDV_runData").hasClass("hasMomentum") ? 64 : 0) + 32,
        $("#innerRDAnimate > iframe").add("#innerLoading").css("height", e)),
        ChatVue.status && ($("#innerPage").hasClass("chatroomOpenAll") && (e = $("#innerPage > div.gamePanelR_In > div.gameDetail").height() - $("#innerPage > div.gamePanelR_In > div.gameDetail > div.gameDetail_T").outerHeight() - $("#innerView").height(),
        $("#innerChatRoom").css("height", e)),
        ChatVue.SlideDownClickEventHandler())
    },
    DrawRDAnimate: function() {
        0 != MainProperty.panelData.RDAnimate && (Panel.PostMessageToRDiframe({
            event: "startRD",
            data: {
                mId: MainProperty.panelData.mId,
                hasMomentum: PanelBase.HasRDAnimateMomentum(),
                isTeamInvert: 2 == MainProperty.panelData.RDAnimate
            }
        }),
        MainProperty.panelData.panel == Args.RDAnimation && Panel.ShowOrHideRDAnimateLoading(!0))
    },
    ShowOrHideRDAnimateLoading: function(e) {
        e ? ($("#innerLoading").show(),
        $("#innerRDAnimate > iframe").hide(),
        $("#innerLoading > div.liveTv_NG").add("#innerLoading > div.liveTv_NG > div.liveTv_NG_loading").addClass("on")) : ($("#innerLoading").hide(),
        $("#innerRDAnimate > iframe").show(),
        $("#innerLoading > div.liveTv_NG").add("#innerLoading > div.liveTv_NG > div.liveTv_NG_loading").removeClass("on"))
    },
    DrawScoreBoard: function() {
        var e = MainProperty.panelData.game
          , t = MainProperty.panelData.scoreBoard
          , a = ""
          , i = e.aId
          , i = 0 <= i.indexOf("A") ? "A" : 0 <= i.indexOf("B") ? "B" : ""
          , n = Mapping.GetScoreBoardTitle(e.type + i);
        switch ($("#innerBoard > div.scoreBoard").attr("class", "scoreBoard"),
        e.type) {
        case "bk":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_basketball");
            break;
        case "bb":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_baseball");
            break;
        case "tn":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_tennis");
            break;
        case "ih":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_hockey");
            break;
        case "af":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_football");
            break;
        case "vl":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_volleyball");
            break;
        case "bm":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_badminton");
            break;
        case "hb":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_handball");
            break;
        case "wp":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_waterpolo");
            break;
        case "tt":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_pingpong");
            break;
        case "pb":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_poolball");
            break;
        case "es":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_pcgame");
            break;
        case "ot":
        case "op":
            $("#innerBoard > div.scoreBoard").addClass("bg_site_olympic");
            break;
        default:
            $("#innerBoard > div.scoreBoard").addClass("bg_site_soccer")
        }
        "bb" == e.type ? (a += "<tr><th>",
        a += Panel.DrawBaseballStatus(t),
        a += "</th>") : a += '<tr><th><font id="panelSt">' + (t = Tool.TransformGdOrSt(e.type, e.mode, null, PanelBase.TransformStatus(e.type, t.st), "", t.rt, t.ht))[0] + '</font> <font id="panelRt">' + t[1] + "</font></th>";
        for (var r = 0; r < n[0].length; r++)
            a += "<th>" + n[0][r] + "</th>";
        for (r = 0; r < n[1].length; r++)
            a += '<th class="' + n[2][r] + '">' + n[1][r] + "</th>";
        a += "</tr>",
        a += '<tr id="panelH">' + Panel.DrawTeamScore(0) + "</tr>",
        a += '<tr id="panelG">' + Panel.DrawTeamScore(1) + "</tr>",
        "bb" == e.type ? $("#innerBoard > div.scoreBoard > table.SB_table").addClass("SB_w25") : $("#innerBoard > div.scoreBoard > table.SB_table").removeClass("SB_w25"),
        $("#innerBoard > div.scoreBoard > table.SB_table").html(a)
    },
    UpdateScoreBoard: function(e) {
        var t, a, i, n = MainProperty.panelData.scoreBoard, r = MainProperty.panelData.game;
        for (t in e) {
            switch (t) {
            case "h":
            case "pr":
                Panel.SetActiveHtml(!1, "UpdateScoreBoard");
                break;
            case "rt":
                var s = Tool.TransformGdOrSt(r.type, r.mode, null, PanelBase.TransformStatus(r.type, n.st), "", n.rt, n.ht);
                "bb" == r.type && s[1] && $("#bbRuns").add("#bbRunsTopBottom").add("#bbBase").add("#bbOut").hide(),
                $("#panelRt").text(s[1]).show();
                break;
            case "ta":
            case "sta":
            case "runsA":
            case "rga":
                var o = 2 == r.h ? [1, "G"] : [0, "H"];
                $("#panel" + o[1]).html(Panel.DrawTeamScore(o[0])),
                "bb" == r.type && (l = 2 == r.h ? [0, "H"] : [1, "G"],
                $("#panel" + l[1]).html(Panel.DrawTeamScore(l[0])));
                break;
            case "tb":
            case "stb":
            case "runsB":
            case "rgb":
                var l, o = 2 == r.h ? [0, "H"] : [1, "G"];
                $("#panel" + o[1]).html(Panel.DrawTeamScore(o[0])),
                "bb" == r.type && (l = 2 == r.h ? [1, "G"] : [0, "H"],
                $("#panel" + l[1]).html(Panel.DrawTeamScore(l[0])));
                break;
            case "st":
                "bb" == r.type ? (a = (i = PanelBase.TransformBaseballStatus(n.st))[0],
                i = i[1],
                a ? ($("#panelSt").add("#panelRt").hide(),
                0 <= n.o ? $("#bbOut").show() : $("#bbOut").hide(),
                0 <= n.base ? $("#bbBase").show() : $("#bbBase").hide(),
                $("#bbRuns").add("#bbRunsTopBottom").show(),
                $("#bbRuns").text(a),
                $("#bbTop").add("#bbBottom").removeClass("on"),
                i && $("#bbTop").addClass("on"),
                i || $("#bbBottom").addClass("on")) : ($("#bbRuns").add("#bbRunsTopBottom").add("#bbBase").add("#bbOut").hide(),
                s = Tool.TransformGdOrSt(r.type, r.mode, null, PanelBase.TransformStatus(r.type, n.st), "", n.rt, n.ht),
                $("#panelSt").text(s[0]).show(),
                $("#panelRt").text(s[1]).show())) : (s = Tool.TransformGdOrSt(r.type, r.mode, null, PanelBase.TransformStatus(r.type, n.st), "", n.rt, n.ht),
                $("#panelSt").text(s[0]),
                $("#panelRt").text(s[1]));
                break;
            case "o":
                0 <= n.o ? $("#bbOut").show() : $("#bbOut").hide(),
                $("#out1").add("#out2").removeClass("on"),
                0 < n.o && $("#out1").addClass("on"),
                1 < n.o && $("#out2").addClass("on");
                break;
            case "base":
                0 <= n.base ? $("#bbBase").show() : $("#bbBase").hide(),
                $("#base1").add("#base2").add("#base3").removeClass("on"),
                1 == (1 & n.base) && $("#base1").addClass("on"),
                2 == (2 & n.base) && $("#base2").addClass("on"),
                4 == (4 & n.base) && $("#base3").addClass("on")
            }
            $("#innerBoard").show()
        }
    },
    DrawBaseballStatus: function(e) {
        var t = MainProperty.panelData.game
          , a = '<div class="baseballStatus">'
          , i = PanelBase.TransformBaseballStatus(e.st)
          , n = i[0]
          , i = i[1]
          , t = Tool.TransformGdOrSt(t.type, t.mode, null, PanelBase.TransformStatus(t.type, e.st), "", e.rt, e.ht);
        return a += '<font id="panelSt" ' + (n ? 'style="display: none;"' : "") + ">" + t[0] + "</font> ",
        a += '<font id="panelRt" ' + (n ? 'style="display: none;"' : "") + ">" + t[1] + "</font>",
        a += '<div id="bbRuns" class="BS_inningNum" ' + (n ? "" : 'style="display: none;"') + ">" + n + "</div>",
        a += '<div id="bbRunsTopBottom" class="BS_inningBox" ' + (n ? "" : 'style="display: none;"') + ">",
        a += '<span id="bbTop" class="BS_Top ' + (i ? "on" : "") + '"></span>',
        a += '<span id="bbBottom" class="BS_Bottom ' + (i ? "" : "on") + '"></span>',
        a += "</div>",
        a += '<div class="BS_info">',
        a += '<div id="bbBase" class="BSI_baseBox" ' + (0 <= e.base && n ? "" : 'style="display: none;"') + ">",
        a += '<span id="base1" class="BSI_base1 ' + (1 == (1 & e.base) ? "on" : "") + '"></span>',
        a += '<span id="base2" class="BSI_base2 ' + (2 == (2 & e.base) ? "on" : "") + '"></span>',
        a += '<span id="base3" class="BSI_base3 ' + (4 == (4 & e.base) ? "on" : "") + '"></span>',
        a += "</div>",
        a += '<div id="bbOut" class="BSI_outBox" ' + (0 <= e.o && n ? "" : 'style="display: none;"') + ">",
        a += '<span id="out1" class="BSI_out ' + (0 < e.o ? "on" : "") + '"></span>',
        a += '<span id="out2" class="BSI_out ' + (1 < e.o ? "on" : "") + '"></span>',
        a += "</div>",
        a += "</div>",
        a += "</div>"
    },
    DrawTeamScore: function(e) {
        var t = MainProperty.panelData.scoreBoard
          , a = 2 == MainProperty.panelData.game.h ? ["b", "a"] : ["a", "b"];
        "bb" == MainProperty.panelData.game.type && (a = 2 == MainProperty.panelData.game.h ? ["a", "b"] : ["b", "a"]);
        var i = a[e]
          , n = ""
          , a = 0 == t.pr ? ["", ""] : 1 == t.pr ? ['<span class="SB_Ball_green"></span>', '<span class="SB_Ball_no"></span>'] : ['<span class="SB_Ball_no"></span>', '<span class="SB_Ball_green"></span>'];
        "bb" == MainProperty.panelData.game.type ? n += '<td class="SB_name">' + a[e] + MainProperty.panelData.game["st" + i] + "</td>" : n += '<td class="SB_name">' + a[e] + MainProperty.panelData.game["t" + i].join(" / ") + "</td>";
        for (var r = 0; r < t["runs" + i.toUpperCase()].length; r++)
            n += "<td>" + t["runs" + i.toUpperCase()][r] + "</td>";
        for (r = 0; r < t["rg" + i].length; r++)
            n += "<td" + (0 == r && !Tool.IsSC(MainProperty.panelData.game.type) || Tool.IsSC(MainProperty.panelData.game.type) && r == t["rg" + i].length - 1 ? ' class="t_yellow"' : "") + ">" + t["rg" + i][r] + "</td>";
        return n
    },
    DrawInnerLiveBattle: function() {
        var e = MainProperty.panelData.game
          , t = 2 == e.h ? ["b", "a"] : ["a", "b"];
        "bb" == e.type && (t = 2 == e.h ? ["a", "b"] : ["b", "a"]),
        $("#innerGameLive > div.liveTv_team > font.textL").attr("id", "innerLiveTeam" + t[0].toUpperCase()),
        $("#innerGameLive > div.liveTv_team > font.textR").attr("id", "innerLiveTeam" + t[1].toUpperCase()),
        $("#innerLiveTeamA").text(e.ta.join(" / ") + e.pa),
        $("#innerLiveTeamB").text(e.tb.join(" / ") + e.pb)
    },
    UpdateInnerLiveBattle: function(e) {
        var t, a = MainProperty.panelData.game;
        for (t in e)
            switch (t) {
            case "ta":
            case "pa":
                $("#innerLiveTeamA").text(a.ta.join(" / ") + a.pa);
                break;
            case "tb":
            case "pb":
                $("#innerLiveTeamB").text(a.tb.join(" / ") + a.pb);
                break;
            case "h":
                Panel.DrawInnerLiveBattle()
            }
    },
    CalculateRunTimer: function() {
        var e = MainProperty.panelData.scoreBoard
          , t = MainProperty.panelData.game;
        e && t && t.mode == PlayMode.ZD && Tool.IsSC(t.type) && (e = Tool.TransformGdOrSt(t.type, t.mode, null, PanelBase.TransformStatus(t.type, e.st), "", e.rt, e.ht),
        $("#panelRt").text(e[1]))
    },
    ResetAction: function() {
        Panel.HasLoadingCompleteVideoElement() && MainProperty.user.hasEnoughDeposit && (PlayerAPI[Args.LiveTv].DestroyPlayer(),
        PlayerAPI.IsFullScreen() && Panel.FullScreenPosition() == Args.LiveTv && PlayerAPI.ExitFullScreen())
    },
    Close: function() {
        Panel.ResetAction(),
        Panel.PostMessageToRDiframe({
            event: "destroyRD"
        });
        var e = MainProperty.panelData.popGameLive
          , t = MainProperty.panelData.bulletMode
          , a = MainProperty.panelData.bulletPosition;
        MainProperty.panelData = {
            panelTitle: [],
            RDAnimate: 0,
            titleTimer: null,
            showTitle: !1,
            scoreBoard: {
                rt: null,
                st: "",
                runsA: [],
                runsB: [],
                rga: [],
                rgb: [],
                pr: null,
                base: -1,
                o: -1,
                ht: ""
            },
            roomId: "",
            anchorId: "",
            anchorLang: "",
            gameLive: {
                domain: [],
                route: "",
                rSteamId: ""
            },
            girlLive: {
                domain: [],
                route: "",
                anchor: []
            },
            popGameLive: e,
            game: {
                aId: "",
                mode: "",
                type: Ball.none.key,
                ta: [],
                tb: [],
                sta: "",
                stb: "",
                pa: "",
                pb: "",
                h: null,
                gpid: null
            },
            panel: Args.NoPanel,
            userOpen: !1,
            mId: "",
            bulletMode: t,
            bulletPosition: a
        },
        0 < $("#popGameLive:visible").length && (Panel.SetFocusSound(Args.PopLiveTv),
        Panel.SetFocusLive(Args.PopLiveTv))
    },
    OpenPopLiveTV: function() {
        0 < $("#popGameLive:visible").length && Panel.ClosePopLiveTV(!0, !1, !0),
        PanelBase.InitialPopLive(MainProperty.panelData.panel),
        PanelBase.ClearInnerLive(MainProperty.panelData.popGameLive.type);
        var e = MainProperty.panelData.popGameLive.gId
          , t = MainProperty.panelData.popGameLive.type == Args.GameLive ? 0 : 1;
        e && DataAdapter.SendCommand({
            action: "popLive",
            gId: e,
            type: t
        }),
        PlayerAPI[Args.LiveTv].DestroyPlayer(),
        PlayerAPI.ExitFullScreen(),
        MainProperty.panelData.panel = PanelBase.GetDefaultPanel(!0),
        Panel.SetActiveHtml(!0, "OpenPopLiveTV"),
        Panel.SetChatRoomType(),
        Panel.SetTitle(!0),
        Panel.DrawPopLiveBattle(),
        (MainProperty.panelData.popGameLive.type == Args.GameLive ? $("#popGameLive").removeClass("liveMc") : $("#popGameLive").addClass("liveMc")).show();
        e = $("#popGameLive").outerHeight(),
        t = $(window).height();
        if ($("#popGameLive").offset({
            top: t - e,
            left: 0
        }),
        PlayerAPI[Args.PopLiveTv].DestroyPlayer(),
        PlayerAPI[Args.PopLiveTv].SetChannel(MainProperty.panelData.popGameLive.route, MainProperty.panelData.popGameLive.domain, MainProperty.panelData.popGameLive.rSteamId, "OpenPopLiveTV"))
            switch (MainProperty.panelData.popGameLive.type) {
            case Args.GameLive:
                PlayerAPI[Args.PopLiveTv].InitPlayer(VideoSource.Hls);
                break;
            case Args.Anchor:
                PlayerAPI[Args.PopLiveTv].InitPlayer(VideoSource.Sldp)
            }
        Panel.SetFocusSound(Args.PopLiveTv),
        Panel.SetFocusLive(Args.PopLiveTv),
        Panel.ChangeBulletMode(Args.PopLiveTv, MainProperty.panelData.bulletMode),
        ChatVue.status ? $("#btnSourceBar > li.btn_bulletScreen").add("#popBtnSourceBar > li.btn_bulletScreen").css("display", "") : $("#btnSourceBar > li.btn_bulletScreen").add("#popBtnSourceBar > li.btn_bulletScreen").css("display", "none")
    },
    FullScreenPosition: function() {
        var e = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
        return $(e).hasClass("popUp") ? Args.PopLiveTv : Args.LiveTv
    },
    FilterPopLiveAlly: function(e) {
        (MainProperty.playMode == PlayMode.ZD && "fv" != MainProperty.ballType || "fv" == MainProperty.ballType && 0 <= MainProperty.alOption.fvAlly.indexOf(MainProperty.panelData.popGameLive.aId)) && (Tool.IsMultiSport(MainProperty.ballType) || MainProperty.panelData.popGameLive.game && MainProperty.panelData.popGameLive.game.type == MainProperty.ballType) && (MainProperty.panelData.popGameLive.aId && e.indexOf(MainProperty.panelData.popGameLive.aId) < 0 && e.indexOf("All")) < 0 && Panel.ClosePopLiveTV(!0, !1, !0)
    },
    ClosePopLiveTV: function(e, t, a) {
        var i = MainProperty.panelData.popGameLive.type
          , n = MainProperty.panelData.panelTitle.filter(function(e) {
            return e == Args.GameLive || e == Args.Anchor
        })
          , e = !e && MainProperty.innerPage == MainProperty.panelData.popGameLive.gId && (0 <= n.indexOf(i) || 1 == n.length && (0 <= n.indexOf(Args.GameLive) || 0 <= n.indexOf(Args.Anchor)));
        MainProperty.panelData.popGameLive.gId && DataAdapter.SendCommand({
            action: "cPopLive",
            gId: MainProperty.panelData.popGameLive.gId
        }),
        e && (PanelBase.InitialInnerLive(i),
        Panel.SetAnchor(Args.LiveTv, t)),
        PanelBase.ClearPopLive(),
        a && $("#popGameLive").removeAttr("style"),
        $("#popGameLive").hide(),
        Panel.SetFocusSound(Args.LiveTv),
        Panel.SetFocusLive(Args.LiveTv),
        PlayerAPI[Args.PopLiveTv].DestroyPlayer(),
        PlayerAPI.ExitFullScreen(),
        e && 0 <= [Args.NoPanel, Args.Anchor, Args.GameLive].indexOf(MainProperty.panelData.panel) && (MainProperty.panelData.panel == Args.NoPanel && (MainProperty.panelData.panel = 0 <= n.indexOf(i) ? i : 0 <= n.indexOf(Args.GameLive) ? Args.GameLive : Args.Anchor),
        Panel.SetActiveHtml(!0, "ClosePopLiveTV")),
        ChatVue.SwitchChatType(MainProperty.panelData.panel == Args.Anchor, "none" != $("#innerNoData").css("display")),
        Panel.SetTitle(e)
    },
    UpdatePopLiveBattle: function(e) {
        var t, a = MainProperty.panelData.popGameLive.game;
        for (t in e)
            switch (t) {
            case "ta":
            case "pa":
                $("#popLiveTeamA").text(a.ta.join(" / ") + a.pa);
                break;
            case "tb":
            case "pb":
                $("#popLiveTeamB").text(a.tb.join(" / ") + a.pb);
                break;
            case "h":
                Panel.DrawPopLiveBattle()
            }
    },
    DrawPopLiveBattle: function() {
        var e = MainProperty.panelData.popGameLive.game
          , t = 2 == e.h ? ["b", "a"] : ["a", "b"];
        "bb" == e.type && (t = 2 == e.h ? ["a", "b"] : ["b", "a"]),
        $("#popGameLive > div.liveTv_team > font.textL").attr("id", "popLiveTeam" + t[0].toUpperCase()),
        $("#popGameLive > div.liveTv_team > font.textR").attr("id", "popLiveTeam" + t[1].toUpperCase()),
        $("#popLiveTeamA").text(e.ta.join(" / ") + e.pa),
        $("#popLiveTeamB").text(e.tb.join(" / ") + e.pb)
    },
    Resizable: function(e) {
        for (var p = document.getElementById(e), t = ["tl", "bl", "tr", "br"], m = function(e) {
            return !(933 < e) && !(e < 370)
        }, g = function() {
            var e = p.offsetWidth
              , t = p.offsetHeight
              , a = p.offsetLeft
              , i = p.offsetTop
              , n = window.innerWidth
              , r = window.innerHeight;
            a <= 0 && (p.style.left = "0px"),
            n <= a + e + 4 && (p.style.left = n - e - 4 + "px"),
            i <= 0 && (p.style.top = "0px"),
            r <= i + t + 4 && (p.style.top = r - t - 4 + "px")
        }, a = 0; a < t.length; a++) {
            var i = document.createElement("span");
            i.classList.add(t[a]),
            p.appendChild(i),
            function(h) {
                h.onmousedown = function(e) {
                    e.stopPropagation();
                    var o = p.offsetWidth
                      , l = p.offsetHeight
                      , c = p.offsetLeft
                      , d = p.offsetTop
                      , u = e.clientX;
                    return document.onmousemove = function(e) {
                        var t, a, i, n, r, s;
                        "tl" == h.className ? m(o - (e.clientX - u)) && (n = (i = o - (e.clientX - u)) / 1.78,
                        t = c + (e.clientX - u),
                        a = d + l - n,
                        window.innerHeight < a + n + 4 && (a = window.innerHeight - n - 4),
                        window.innerWidth < t + i + 4 && (t = window.innerWidth - i - 4),
                        p.style.width = i + "px",
                        p.style.height = n + "px",
                        p.style.left = t + "px",
                        p.style.top = a + "px") : "bl" == h.className ? m(o - (e.clientX - u)) && (n = (i = o - (e.clientX - u)) / 1.78,
                        t = c + (e.clientX - u),
                        s = d + l - n,
                        window.innerWidth < t + i + 4 && (t = window.innerWidth - i - 4),
                        p.style.width = i + "px",
                        p.style.height = n + "px",
                        p.style.left = t + "px",
                        p.style.bottom = s + "px") : "tr" == h.className ? m(o + (e.clientX - u)) && (n = (i = o + (e.clientX - u)) / 1.78,
                        r = c - (e.clientX - u),
                        a = d + l - n,
                        window.innerHeight < a + n + 4 && (a = window.innerHeight - n - 4),
                        p.style.width = i + "px",
                        p.style.height = n + "px",
                        p.style.right = r + "px",
                        p.style.top = a + "px") : "br" == h.className && m(o + (e.clientX - u)) && (n = (i = o + (e.clientX - u)) / 1.78,
                        r = c - (e.clientX - u),
                        s = d + l - n,
                        p.style.width = i + "px",
                        p.style.height = n + "px",
                        p.style.right = r + "px",
                        p.style.bottom = s + "px"),
                        g()
                    }
                    ,
                    !(document.onmouseup = function() {
                        document.onmousemove = null,
                        document.onmouseup = null
                    }
                    )
                }
            }(i)
        }
    },
    UpdateSound: function(e, t, a, i) {
        var n = 0;
        switch (e) {
        case Args.VolDistance:
            a == Args.LiveTv ? n = parseFloat(((t - $("#liveVolumeSilder").offset().left) / $("#liveVolumeSilder").width()).toFixed(1)) : a == Args.PopLiveTv && (n = parseFloat(((t - $("#popLiveVolumeSilder").offset().left) / $("#popLiveVolumeSilder").width()).toFixed(1)));
            break;
        case Args.VolPercent:
            n = t
        }
        1 < n ? n = 1 : (n <= 0 || isNaN(n)) && (n = 0);
        var r = a == Args.PopLiveTv ? "#popLiveVolumeSilder > div.LTVB_BarColor" : "#liveVolumeSilder > div.LTVB_BarColor"
          , e = a == Args.PopLiveTv ? "#popLiveVolumeSilder, #popBtnSoundMuted" : "#liveVolumeSilder, #btnSoundMuted"
          , t = a == Args.PopLiveTv ? "#popBtnSoundMuted > div.LT_prompt" : "#btnSoundMuted > div.LT_prompt";
        $(r).css("width", 100 * n + "%"),
        n <= 0 ? ($(e).addClass("off"),
        $(t).text(langFont.Font_Unmute)) : ($(e).removeClass("off"),
        $(t).text(langFont.Font_Mute)),
        i && PlayerAPI[a].SetVolume(n, !0)
    },
    SetLineText: function(e, t) {
        t = t ? langFont.Font_TVLine + " " + t : "";
        switch (e) {
        case Args.LiveTv:
            $("#btnSourceBar > li.btn_refresh > div.LT_line_text").text(t);
            break;
        case Args.PopLiveTv:
            $("#popBtnSourceBar > li.btn_refresh > div.LT_line_text").text(t)
        }
    },
    SetFocusLive: function(e) {
        switch ($("#popGameLive").add("#innerGameLive").removeClass("on focus"),
        e) {
        case Args.LiveTv:
            $("#innerGameLive").addClass("focus"),
            0 < $("#popGameLive:visible").length && $("#innerGameLive").addClass("on");
            break;
        case Args.PopLiveTv:
            $("#popGameLive").addClass("focus"),
            0 < $("#innerGameLive:visible").length && $("#popGameLive").addClass("on")
        }
    },
    SetFocusSound: function(e) {
        switch (e) {
        case Args.LiveTv:
            $("#popGameLive").hasClass("focus") && (PlayerAPI[Args.LiveTv].SetMuted(PlayerAPI.Muted),
            PlayerAPI[Args.LiveTv].SetVolume(PlayerAPI.Volume),
            PlayerAPI[Args.PopLiveTv].SetMuted(!0),
            PlayerAPI[Args.PopLiveTv].SetVolume(0)),
            Panel.UpdateSound(Args.VolPercent, PlayerAPI.Muted ? 0 : PlayerAPI.Volume, Args.LiveTv, !PlayerAPI.Muted),
            Panel.UpdateSound(Args.VolPercent, 0, Args.PopLiveTv);
            break;
        case Args.PopLiveTv:
            $("#innerGameLive").hasClass("focus") && (PlayerAPI[Args.PopLiveTv].SetMuted(PlayerAPI.Muted),
            PlayerAPI[Args.PopLiveTv].SetVolume(PlayerAPI.Volume),
            PlayerAPI[Args.LiveTv].SetMuted(!0),
            PlayerAPI[Args.LiveTv].SetVolume(0)),
            Panel.UpdateSound(Args.VolPercent, PlayerAPI.Muted ? 0 : PlayerAPI.Volume, Args.PopLiveTv, !PlayerAPI.Muted),
            Panel.UpdateSound(Args.VolPercent, 0, Args.LiveTv)
        }
    },
    DisplayMessage: function(e, t, a) {
        e = e === Args.PopLiveTv ? "#popGameLive" : e === Args.LiveTv ? "#innerGameLive" : "";
        if (e && ($(e + " > div.liveTv_NG, " + e + " > div.liveTv_NG > div, " + e + " > div.liveTv_mask").add(e + " > div.liveTv_maskB").removeClass("on"),
        $(e + " > div.liveTv_console").css("z-index", ""),
        a))
            switch (t) {
            case Args.LiveRdOtherError:
            case Args.LiveTvNoSignal:
                $(e + " > div.liveTv_NG, " + e + " > div.liveTv_NG > div.liveTv_NG1").addClass("on"),
                $(e + " > div.liveTv_console").css("z-index", "-1");
                break;
            case Args.LiveTvRegionalRestriction:
                $(e + " > div.liveTv_NG, " + e + " > div.liveTv_NG > div.liveTv_NG2").addClass("on"),
                $(e + " > div.liveTv_console").css("z-index", "-1");
                break;
            case Args.LiveTvLoading:
                $(e + " > div.liveTv_NG, " + e + " > div.liveTv_NG > div.liveTv_NG3").addClass("on");
                break;
            case Args.LiveTvPlayMask:
                $(e + " > div.liveTv_mask").addClass("on");
                break;
            case Args.LivePlayWrong:
                $(e + " > div.liveTv_maskB").addClass("on"),
                $(e + " > div.liveTv_maskB > div.liveTv_maskB_text").html(langFont.Font_LoadingError),
                $(e + " > div.liveTv_console").css("z-index", "-1")
            }
    },
    HasLoadingCompleteVideoElement: function() {
        return document.getElementById("innerVideoDiv") && document.getElementById("popVideoDiv")
    },
    SetAnchor: function(e, t, a) {
        var i = e === Args.LiveTv ? MainProperty.panelData : MainProperty.panelData.popGameLive
          , n = e === Args.LiveTv ? MainProperty.panelData.girlLive : MainProperty.panelData.popGameLive
          , r = !0;
        if (0 < n.anchor.length)
            if (n.anchor[a])
                n.anchor[a].anchorId == i.anchorId && n.anchor[a].roomId == i.roomId && (r = !1),
                n.route = n.anchor[a].route,
                i.roomId = n.anchor[a].roomId,
                i.anchorId = n.anchor[a].anchorId,
                i.anchorLang = n.anchor[a].lang;
            else {
                if (!t)
                    for (var s = 0; s < n.anchor.length; s++)
                        if (n.anchor[s].anchorId == i.anchorId && n.anchor[s].roomId == i.roomId) {
                            n.route = n.anchor[s].route,
                            r = !1;
                            break
                        }
                r && (n.route = n.anchor[0].route,
                i.roomId = n.anchor[0].roomId,
                i.anchorId = n.anchor[0].anchorId,
                i.anchorLang = n.anchor[0].lang)
            }
        return PanelBase.IsPopAndInnerSameLive(Args.Anchor) && (MainProperty.panelData.anchorId = i.anchorId),
        Panel.SetActiveAnchorStyle(e),
        r
    },
    SetActiveAnchorStyle: function(i) {
        var e = i == Args.LiveTv ? "#innerAnchorList" : "#popAnchorList"
          , n = i == Args.LiveTv ? "#btnSourceBar > li.changeMC" : "#popBtnSourceBar > li.changeMC";
        $(e).html(Panel.DrawAnchorDropDownList(i)),
        $(e + " li").click(function(e) {
            var t, a;
            Panel.SetAnchor(i, !1, $(this).index()) && (t = (i == Args.LiveTv ? MainProperty.panelData.girlLive : MainProperty.panelData.popGameLive).route,
            a = (i == Args.LiveTv ? MainProperty.panelData.girlLive : MainProperty.panelData.popGameLive).domain,
            PlayerAPI[i].SetChannel(t, a, null, "SetActiveAnchorStyle girlLive"),
            PlayerAPI[i].InitPlayer(VideoSource.Sldp),
            Panel.SetChatRoomType()),
            $(this).addClass("on").siblings("li").removeClass("on"),
            $(n).removeClass("on")
        })
    },
    DrawAnchorDropDownList: function(e) {
        for (var t = e === Args.LiveTv ? MainProperty.panelData : MainProperty.panelData.popGameLive, a = (e === Args.LiveTv ? MainProperty.panelData.girlLive : MainProperty.panelData.popGameLive).anchor, i = "", n = 0; n < a.length; n++)
            i += '<li class="' + (a[n].anchorId == t.anchorId ? "on" : "") + '"><img src="' + Panel.TransformAnchorCountryImg(a[n].lang) + '">' + a[n].nickName + "</li>";
        return i
    },
    TransformAnchorCountryImg: function(e) {
        var t = "";
        switch (e) {
        case "zh":
        case "cn":
            t = "/images/bb/icon_mc_mic.svg";
            break;
        case "vi":
            t = "/images/bb/icon_mc_VN.png";
            break;
        case "th":
            t = "/images/bb/icon_mc_TH.png";
            break;
        case "en":
            t = ""
        }
        return t
    },
    AddBulletText: function(e) {
        for (var t = 0; t < e.length && (e[t][0] !== ChatType.Normal && e[t][0] !== ChatType.System && e[t][0] !== ChatType.Anchor || BulletAPI.Send(e[t][4], e[t][0], e[t][1], e[t][8] && 0 < e[t][8].length)); t++)
            ;
    },
    ChangeBulletMode: function(e, t) {
        if (ChatVue.status) {
            t = void 0 !== t ? t : (MainProperty.panelData.bulletMode + 1) % 3;
            var a = e === Args.LiveTv ? "innerBulletScreen" : "popBulletScreen";
            switch (MainProperty.panelData.bulletPosition == e && BulletAPI.TargetElt || BulletAPI.Init(a, !1),
            MainProperty.panelData.bulletMode = t,
            MainProperty.panelData.bulletPosition = e,
            t) {
            case BulletMode.Close:
                $("#innerBulletScreen").add("#popBulletScreen").removeClass("bulletArea_all bulletArea_half").hide(),
                BulletAPI.Destroy();
                break;
            case BulletMode.Half:
                $("#innerBulletScreen").add("#popBulletScreen").removeClass("bulletArea_all").addClass("bulletArea_half").show(),
                BulletAPI.ChangeBulletMode(t);
                break;
            case BulletMode.All:
                $("#innerBulletScreen").add("#popBulletScreen").removeClass("bulletArea_half").addClass("bulletArea_all").show(),
                BulletAPI.Init(a, !1, t)
            }
        }
        return t
    },
    SetBulletText: function(e) {
        switch (e) {
        case BulletMode.Close:
            $("#popBtnSourceBar > li.btn_bulletScreen > div.LT_prompt").add("#btnSourceBar > li.btn_bulletScreen > div.LT_prompt").text(langFont.Font_OpenStandardBarrage),
            $("#popGameLive > div.livePopup").add("#innerGameLive > div.livePopup").text(langFont.Font_CloseBarrage),
            $("#popBtnSourceBar > li.btn_bulletScreen").add("#btnSourceBar > li.btn_bulletScreen").removeClass("half all").addClass("off");
            break;
        case BulletMode.Half:
            $("#popBtnSourceBar > li.btn_bulletScreen > div.LT_prompt").add("#btnSourceBar > li.btn_bulletScreen > div.LT_prompt").text(langFont.Font_CloseBarrage),
            $("#popGameLive > div.livePopup").add("#innerGameLive > div.livePopup").text(langFont.Font_OpenSimplifyBarrage),
            $("#popBtnSourceBar > li.btn_bulletScreen").add("#btnSourceBar > li.btn_bulletScreen").removeClass("off all").addClass("half");
            break;
        case BulletMode.All:
            $("#popBtnSourceBar > li.btn_bulletScreen > div.LT_prompt").add("#btnSourceBar > li.btn_bulletScreen > div.LT_prompt").text(langFont.Font_OpenSimplifyBarrage),
            $("#popGameLive > div.livePopup").add("#innerGameLive > div.livePopup").text(langFont.Font_OpenStandardBarrage),
            $("#popBtnSourceBar > li.btn_bulletScreen").add("#btnSourceBar > li.btn_bulletScreen").removeClass("half off").addClass("all")
        }
    },
    GoToMore: function() {
        var e, t = MainProperty.panelData.popGameLive.type;
        MainProperty.innerPage == MainProperty.panelData.popGameLive.gId && 0 <= MainProperty.panelData.panelTitle.indexOf(t) ? (MainProperty.innerPage = MainProperty.panelData.popGameLive.gId,
        MainProperty.panelData.panel = MainProperty.panelData.popGameLive.type,
        Panel.ClosePopLiveTV(!1, !1, !0)) : (0 == MainProperty.sortOption.kind || Mapping.TransformMenuType(MainProperty.ballType, MainProperty.playMode, null)[0][1] == MainProperty.sortOption.kind) && MainProperty.panelData.popGameLive.gId && MainProperty.gameData[MainProperty.panelData.popGameLive.gId] ? (e = MainProperty.panelData.popGameLive.gId,
        t = 0 < $("#innerPage:visible").length,
        e && (t || !t && MainProperty.innerPage != e) && (t && (Panel.Close(),
        ChatVue.Initial(),
        Inner.CloseChatRoom(),
        ChatVue.show = !1),
        MainProperty.panelData.panel = MainProperty.panelData.popGameLive.type,
        MainProperty.alOption.cache[MainProperty.alOption.cacheName].list.indexOf(MainProperty.panelData.popGameLive.aId) < 0 && MainProperty.alOption.cache[MainProperty.alOption.cacheName].list.indexOf("All") < 0 && (MainProperty.alOption.cache[MainProperty.alOption.cacheName].list.push(MainProperty.panelData.popGameLive.aId),
        Ally.DrawAllyList(),
        t = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn),
        Outer.BatchProcess(t, !0, !1)),
        DataAdapter.SendCommand({
            action: "more",
            gId: e
        }),
        MainProperty.innerPage = e,
        $("#innerNoData").hide(),
        $(".gameDetail_scroll").addClass("noChatroom"))) : MainProperty.panelData.popGameLive.gId && (e = MainProperty.panelData.popGameLive.gId,
        0 < $("#innerPage:visible").length && (Panel.Close(),
        ChatVue.Initial(),
        Inner.CloseChatRoom(),
        ChatVue.show = !1),
        DataAdapter.SendCommand({
            action: "gotoMore",
            gId: e
        }))
    }
}
  , Header = {
    SetEvent: function() {
        Tool.TransformUserBalance(MainProperty.user.balance),
        $(window).on("message", function(e) {
            try {
                if (e.originalEvent && e.originalEvent.data) {
                    var t = "string" == typeof e.originalEvent.data ? JSON.parse(e.originalEvent.data) : e.originalEvent.data;
                    switch (t.event) {
                    case "transferWindow":
                        "Disabled" == t.status && 0 < $("#fastTransfer:visible").length && Header.ShowOrHideTurnPoint();
                        break;
                    case "setNotePoint":
                        Header.SetNote(0);
                        break;
                    case "errorRD":
                        "function" == typeof window.onerror && window.onerror(t.message, t.source, t.lineno, t.colno, t.error);
                        break;
                    case "isPlayRD":
                        t.isPlayRD ? ($("#innerView > ul.GDView_T > li.btn_GDV_runData").addClass("hasSRLive"),
                        MainProperty.panelData.panel == Args.RDAnimation && (Panel.ShowOrHideRDAnimateLoading(!1),
                        Panel.SetRDAnimateHeight())) : $("#innerView > ul.GDView_T > li.btn_GDV_runData").removeClass("hasSRLive");
                        break;
                    case "setMomentum":
                        t.hasMomentum ? $("#innerView > ul.GDView_T > li.btn_GDV_runData").addClass("hasMomentum") : $("#innerView > ul.GDView_T > li.btn_GDV_runData").removeClass("hasMomentum"),
                        Panel.SetRDAnimateHeight(),
                        $("#innerScrollBar").scrollTop(0)
                    }
                }
            } catch (e) {}
        }),
        $("#fastTransfer > iframe.fastTransfer_In").load(function() {
            $("#fastTransferMask").hide()
        }),
        $("#userLevel").add("#userAccount").hoverDelay(function() {
            $(this).next("div.IDInfo_prompt").fadeIn(150)
        }, function() {
            $(this).next("div.IDInfo_prompt").fadeOut(150)
        }),
        $("#turnPoint").add("#service").add("#noteBtn").add("#pkTutorials").hoverDelay(function() {
            $(this).children("div.IDInfo_prompt").fadeIn(150)
        }, function() {
            $(this).children("div.IDInfo_prompt").fadeOut(150)
        }),
        $("#freePoint").hoverDelay(function() {
            $(this).addClass("on").children("div.GP_In").show().children(".GP_InBox").slideDown(200),
            ChatVue.ChkFreePoint()
        }, function() {
            $(this).removeClass("on").children("div.GP_In").fadeOut(200).children(".GP_InBox").slideUp(200)
        }),
        $('#ddlTheme > div[rel="' + MainProperty.user.theme.color + '"]').addClass("on"),
        $("#ddlTheme > div").hoverDelay(function() {
            $(this).children("div.skin_prompt").fadeIn(150)
        }, function() {
            $(this).children("div.skin_prompt").fadeOut(150)
        })
    },
    ShowBroadcast: function(e) {
        SMMaintain.Status == Args.MT && 2 != e || (MainProperty.user.hasDormant ? ShowAlert(Args.AlertText, langFont.Font_DormantDirectSM) : SMProcess())
    },
    ShowLiveScore: function() {
        NewWindow("/bbView/LiveScore.aspx", $("#liveScore").text(), 1e3, 750)
    },
    ShowNote: function() {
        NewWindow("/bbView/Note.aspx", langFont.Font_SystemNote, 1e3, 650)
    },
    SetNote: function(e) {
        e ? $("#noteBtn").addClass("point") : $("#noteBtn").removeClass("point")
    },
    ShowGameResult: function() {
        var e = $("#sportList > div.SM_list").toArray().map(function(e) {
            return $(e).attr("id").replace("btn", "").toLowerCase()
        }).indexOf(MainProperty.ballType) < 0 || "none" == MainProperty.ballType;
        NewWindow("/bbView/GameResult.aspx?ballType=" + (Tool.IsCHorFI(MainProperty.ballType) ? "sc" : Tool.IsMultiSport(MainProperty.ballType) ? "op" == MainProperty.ballType ? "ot" : "sc" : e ? "sc" : MainProperty.ballType) + "&theme=" + MainProperty.user.theme.color, $("#gameResult").text(), 1e3, 750)
    },
    ShowRuleInfo: function() {
        var e = $("#sportList > div.SM_list").toArray().map(function(e) {
            return $(e).attr("id").replace("btn", "").toLowerCase()
        }).indexOf(MainProperty.ballType) < 0 || "none" == MainProperty.ballType
          , e = Tool.IsSC(MainProperty.ballType) ? "sc" : e ? "none" : "op" == MainProperty.ballType ? "opw" : MainProperty.ballType;
        NewWindow("/bbView/Rule.aspx?ballType=" + e + "&lang=" + langFont.Font_Langue, $("#rule").text(), 1e3, 750)
    },
    ShowPlayRecord: function() {
        NewWindow("/bbView/OrderReport.aspx?lang=" + langFont.Font_Langue, $("#playRecord").text(), 1150, 650)
    },
    ShowOrHideTurnPoint: function(e) {
        $("#fastTransfer > iframe.fastTransfer_In")[0].contentWindow && (GetUserBalance(),
        0 < $("#fastTransfer:visible").length ? ($("#fastTransfer:visible").removeAttr("style"),
        $("#fastTransfer > iframe.fastTransfer_In")[0].contentWindow.location.replace("about:blank"),
        $("#leagueOption").add("#leagueOption > div.bg_popUpBox > div.popUpBox > div").hide(),
        e && e.stopPropagation()) : ($("#leagueOption").removeClass("reset"),
        $("#leagueOption").add("#fastTransfer").show(),
        $("#fastTransferMask").height($("#fastTransfer").height()).show(),
        e = $("#fastTransfer > iframe.fastTransfer_In").attr("base"),
        $("#fastTransfer > iframe.fastTransfer_In")[0].contentWindow.location.replace(e)))
    },
    ShowPrincipalOption: function() {
        0 == $("#ddlPrincipal > .SUM_In > .SUM_InBox:visible").length ? ($("#settings > li.btn_setUpMenu_list > .SUM_In").hide(),
        $("#settings > li.btn_setUpMenu_list > .SUM_In > .SUM_InBox").hide(),
        $("#settings > li.btn_setUpMenu_list").removeClass("on"),
        $("#ddlPrincipal").addClass("on"),
        $("#ddlPrincipal > .SUM_In").show(),
        $("#ddlPrincipal > .SUM_In > .SUM_InBox").show()) : ($("#ddlPrincipal").removeClass("on"),
        $("#ddlPrincipal > .SUM_In").hide(),
        $("#ddlPrincipal > .SUM_In > .SUM_InBox").hide())
    },
    ChangePrincipal: function(e) {
        MainProperty.isPrincipal != e && (1 == (MainProperty.isPrincipal = e) ? ($("#ddlPrincipal > div.SUM_T").html(langFont.Font_WithPrincipal),
        $("#ddlPrincipal > div.SUM_In > .SUM_InBox > a").removeClass("on"),
        $("#ddlPrincipal > div.SUM_In > .SUM_InBox > a:last-child").addClass("on")) : ($("#ddlPrincipal > div.SUM_T").html(langFont.Font_WithoutPrincipal),
        $("#ddlPrincipal > div.SUM_In > .SUM_InBox > a").removeClass("on"),
        $("#ddlPrincipal > div.SUM_In > .SUM_InBox > a:first-child").addClass("on")),
        $.each(MainProperty.oddData, function(i) {
            $.each(MainProperty.oddData[i], function(a) {
                $.each(MainProperty.oddData[i][a], function(t) {
                    $.each(MainProperty.oddData[i][a][t], function(e) {
                        isNaN(MainProperty.oddData[i][a][t][e]) && $("#opl" + i + e + t + a).text(MainProperty.oddData[i][a][t][e][MainProperty.isPrincipal])
                    })
                })
            })
        }),
        $.each(MainProperty.innerData.oddData, function(i) {
            $.each(MainProperty.innerData.oddData[i], function(a) {
                $.each(MainProperty.innerData.oddData[i][a], function(t) {
                    $.each(MainProperty.innerData.oddData[i][a][t], function(e) {
                        isNaN(MainProperty.innerData.oddData[i][a][t][e]) && $("#ipl" + i + e + t + a).text(MainProperty.innerData.oddData[i][a][t][e][MainProperty.isPrincipal])
                    })
                })
            })
        }),
        $.each(MainProperty.cart.list, function(e, t) {
            var a = t.split("_")[3]
              , i = t.replaceAll("_", "");
            $("#sc1Odds" + i).add("#sc2Odds" + i).add("#mc1Odds" + i).add("#mc2Odds" + i).add("#fc1Odds" + i).add("#mnc1Odds" + i).add("#mnc2Odds" + i).text(MainProperty.cart.oddData[t][a][MainProperty.isPrincipal])
        }))
    },
    ChangeColor: function(e) {
        if (MainProperty.user.theme.color != e) {
            Tool.SetThemeHabit(e);
            var t = [];
            switch (e) {
            case "White":
                t = ["/css/" + MainProperty.cssVersion + "/bb/pc/bgColor_w.css", "bb/white"],
                Panel.PostMessageToRDiframe({
                    event: "setTheme",
                    data: "white"
                });
                break;
            case "Black":
            default:
                t = ["", "bb"],
                Panel.PostMessageToRDiframe({
                    event: "setTheme",
                    data: "black"
                })
            }
            $("#ddlTheme > div").removeClass("on"),
            $('#ddlTheme > div[rel="' + e + '"]').addClass("on");
            e = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll";
            $("#theme").attr("href", t[0]),
            $("#sportList > div > div > img").add("#scheduleNoData > div > img").add("#innerNoData > img").add(e + " > div.noGmae > img").add(e + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList > td.GLIL_More > div.GLIL_MoreRow > img").add("#receiptInfo .betInfo_prompt > img").add("#noCart img").add("#noReceipt img").each(function() {
                $(this).attr("src", $(this).attr("src").replace(MainProperty.user.theme.imgPath, t[1]))
            }),
            MainProperty.user.theme.imgPath = t[1],
            clearTimeout(MainProperty.user.theme.timer),
            MainProperty.user.theme.timer = setTimeout(function() {
                $.ajax({
                    type: "POST",
                    url: "/ajax/AjaxInfo.aspx",
                    data: {
                        method: "SetUserTheme",
                        type: MainProperty.user.theme.color,
                        isChangeTheme: !1,
                        themeSetting: JSON.stringify(MainProperty.user.theme.themeSetting)
                    },
                    dataType: "text",
                    error: function(e, t, a) {
                        1 != LogOutCheck('{"st":"' + e.status + '"}') && BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\nsource: Document\r\nChangeColor ajax error, textStatus: " + t)
                    },
                    success: function(e) {
                        1 != LogOutCheck(e) && (e = JSON.parse(e),
                        MainProperty.user.theme.themeSetting.color = e.color,
                        MainProperty.user.theme.themeSetting.extraColor = e.extraColor)
                    }
                })
            }, 1e3)
        }
    },
    SetServerTime: function() {
        var e = Tool.TransformDateTime(MainProperty.serverTime.ms, langFont.Font_Langue, 62).split(" ");
        $("#dateTime > span.currentTime_date").text(e[0].replaceAll("/", " / ")),
        $("#dateTime > span.currentTime_time").text(e[1]),
        MainProperty.serverTime.timer = setTimeout(function() {
            MainProperty.serverTime.ms = MainProperty.serverTime.ms + 1e3,
            Header.SetServerTime()
        }, 1e3)
    }
}
  , Menu = {
    SetEvent: function() {
        $("#sportList").scrollbar(),
        1400 < $(window).width() ? $("#sportMenu").removeClass("ZoomOut") : $("#sportMenu").addClass("ZoomOut"),
        $(window).scroll(function() {
            var e = "-" + $(window).scrollLeft() + "px";
            $("#modeOption, #sportList .SM_list > .SM_listIn").css("left", e)
        }),
        $("#modeDS").click(function(e) {
            Menu.ChangeMode(e, PlayMode.DS)
        }),
        $("#modeZD").click(function(e) {
            Menu.ChangeMode(e, PlayMode.ZD)
        }),
        $("#modeZP").click(function(e) {
            Menu.ChangeMode(e, PlayMode.ZP)
        }),
        Tool.IsTouch ? $("#modeText").click(function() {
            0 < $("#sportMenu.ZoomOut").length ? $("#modeOption").show() : $("#modeOption").hide()
        }) : $("#playMode > div.SM_T_menu").hover(function() {
            0 < $("#sportMenu.ZoomOut").length ? $("#modeOption").show() : $("#modeOption").show().css("display", "table")
        }, function() {
            0 < $("#sportMenu.ZoomOut").length && $("#modeOption").hide()
        })
    },
    DrawMenuList: function(e, t, a, i) {
        var n = ""
          , r = 0 == $("#btn" + MainProperty.ballType.toUpperCase() + " > ul.SM_listIn:visible").length && a && !i
          , s = ""
          , o = 0;
        $("#sportMenu").hasClass("ZoomOut") && 1 == $("#sportList > div.SM_list > ul.SM_listIn:visible").length && (s = $("#sportList > div.SM_list > ul.SM_listIn:visible").parent("div").attr("id"),
        o = $("#sportList > div.SM_list > ul.SM_listIn:visible").offset().top);
        var l, c, d = 0;
        if ((a || i) && (d = $("#sportList").scrollTop()),
        MainProperty.sortOption.csChecked = ["All"].concat(MainProperty.ballSequence.slice(MainProperty.ballSequence.length / 2).map(function(e) {
            return e.substr(2)
        })),
        a && 0 < $("#btnCS > ul.SM_listIn").length && (l = e.cs ? e.cs.map(function(e) {
            return Ball[e[0]].key
        }) : [],
        c = !1,
        $("#btnCS > ul.SM_listIn > li > div.icon_SM_checkboxAll:not(.on)").toArray().map(function(e) {
            e = $(e).attr("rel");
            0 <= l.indexOf(e) && (c = !0,
            MainProperty.sortOption.csChecked.splice(MainProperty.sortOption.csChecked.indexOf(e), 1))
        }),
        c && MainProperty.sortOption.csChecked.splice("All", 1)),
        n += '<div id="btnFV" class="SM_list"><div class="btn_SM_listT" onclick="Menu.ChangeSport(this, \'' + Ball.fv.key + "', " + Ball.fv.idx + ')"><img src="/images/bb/icon_sportMenu_star.svg">' + langFont.Font_MyGame + '<div class="SM_listT_counter">' + MainProperty.favoriteData.length + '</div></div><ul class="SM_listIn"><li class="SM_listIn_title">' + langFont.Font_MyGame + "</li></ul></div>",
        MainProperty.playMode == PlayMode.DS && e.cs) {
            var u = '<ul class="SM_listIn"><li class="SM_listIn_title">' + langFont.Font_ComingSoon + "</li>"
              , h = 0;
            u += '<li onclick="Menu.ClickComingSoonCkb(this, \'All\', false)"><div rel="All" class="icon_SM_checkboxAll' + (0 <= MainProperty.sortOption.csChecked.indexOf("All") || !a ? " on" : "") + '"></div>' + langFont.Font_All + "</li>";
            for (var p = 0; p < e.cs.length; p++)
                u += "<li onclick=\"Menu.ClickComingSoonCkb(this, '" + (m = Tool.TransformGameType(e.cs[p][0], Args.ShortEn)) + '\', false)"><div rel="' + m + '" class="icon_SM_checkboxAll ckb' + (0 <= MainProperty.sortOption.csChecked.indexOf("All") || 0 <= MainProperty.sortOption.csChecked.indexOf(m) || !a ? " on" : "") + '"></div>' + Tool.TransformGameType(e.cs[p][0], Args.WholeLang) + '<div class="SM_listIn_counter">' + e.cs[p][1] + "</div></li>",
                h += e.cs[p][1];
            u += "</ul>",
            n += '<div id="btnCS" class="SM_list"><div class="btn_SM_listT" onclick="Menu.ChangeSport(this, \'' + Ball.cs.key + "', " + Ball.cs.idx + ')"><img src="/images/bb/icon_sportMenu_time_20210729.svg">' + langFont.Font_ComingSoon + '<div class="SM_listT_counter">' + h + "</div></div>" + u + "</div>"
        }
        if (e.list)
            for (p = 0; p < e.list.length; p++) {
                var m = Tool.TransformGameType(e.list[p].type, Args.ShortEn)
                  , g = e.list[p].count
                  , f = Mapping.TransformMenuType(m, MainProperty.playMode, null)
                  , v = MainProperty.ballType == m && r ? ' style="display:none"' : "";
                if (n += '<div id="btn' + m.toUpperCase() + '" class="SM_list"><div class="btn_SM_listT" onclick="Menu.ChangeSport(this, \'' + m + "', " + e.list[p].type + ')"><img src="/images/' + MainProperty.user.theme.imgPath + "/icon_sportMenu_" + MainProperty.imgSet[m] + '.svg">' + Tool.TransformGameType(e.list[p].type, Args.WholeLang) + '<div class="SM_listT_counter">' + g[0] + '</div></div><ul class="SM_listIn"' + v + '><li class="SM_listIn_title">' + Tool.TransformGameType(e.list[p].type, Args.WholeLang) + "</li>",
                !Tool.IsMultiSport(m))
                    for (var _ = 0; _ < f.length; _++)
                        n += '<li rel="kind' + f[_][1] + '" onclick="Menu.ChangeKGroup(this, \'' + e.list[p].type + "', " + f[_][1] + ')">' + f[_][0] + '<div class="SM_listIn_counter">' + g[_ + 1] + "</div></li>";
                n += "</ul></div>"
            }
        $("#sportList").html(n),
        $("#sportList").scrollTop(0),
        $("#btn" + MainProperty.ballType.toUpperCase()).addClass("on"),
        $("#btn" + MainProperty.ballType.toUpperCase() + ' > ul.SM_listIn > li[rel="kind' + MainProperty.sortOption.kind + '"]').addClass("on"),
        (a || i) && $("#sportList").scrollTop(d),
        s && o && 0 < $("#" + s).length && (i = $("#" + s + " > ul.SM_listIn"),
        d = $("#" + s).offset().top,
        s = !1,
        i.show(),
        $(window).height() - i.height() < d && d > i.height() && (d -= i.height() - 36,
        s = !0),
        d == o ? (s && i.addClass("bottom"),
        i.offset({
            top: d
        })) : i.hide()),
        Tool.IsTouch ? $("#sportList > div.SM_list > div.btn_SM_listT").click(function() {
            var e, t;
            0 < $("#sportMenu.ZoomOut").length && ($("#sportList > div.SM_list > ul.SM_listIn").hide(),
            e = $(this).find("ul.SM_listIn"),
            t = $(this).offset().top,
            "none" == e.css("display") ? (e.show(),
            e.offset({
                top: t
            })) : e.hide())
        }) : $("#sportList > div.SM_list").hover(function() {
            var e, t;
            0 < $("#sportMenu.ZoomOut").length && ($("#sportList > div.SM_list > ul.SM_listIn").hide(),
            e = $(this).find("ul.SM_listIn"),
            t = $(this).offset().top,
            "none" == e.css("display") ? (e.removeClass("bottom"),
            e.show(),
            $(window).height() - e.height() < t && t > e.height() && (t -= e.height() - 36,
            e.addClass("bottom")),
            e.offset({
                top: t
            })) : e.hide())
        }, function() {
            0 < $("#sportMenu.ZoomOut").length && $("#sportList > div.SM_list > ul.SM_listIn").hide()
        })
    },
    DrawZPDate: function() {
        var e = !1;
        if (MainProperty.playMode == PlayMode.ZP && MainProperty.ballType != Ball.fv.key) {
            var t = ""
              , a = "";
            "All" == MainProperty.sortOption.zpDate && (t = langFont.Font_AllDates,
            a = ' class="on"');
            var i = "<a" + a + " onclick = \"Menu.ChangeZPDate(this, 'All')\" > " + langFont.Font_AllDates + "</a>"
              , n = Object.keys(MainProperty.gameData).map(function(e) {
                return MainProperty.gameData[e].gd.split(" ")[0]
            }).filter(function(e, t, a) {
                return a.indexOf(e) === t
            }).sort().map(function(e) {
                return [e, new Date(e).getDay()]
            });
            if (n)
                for (var r = 0; r < n.length; r++) {
                    var s = n[r]
                      , o = Tool.TransformDateTime(s[0], langFont.Font_Langue, 6).replace("/", " / ") + "　" + langFont.Font_WeekDay[s[1]];
                    i += "<a" + (a = MainProperty.sortOption.zpDate == s[0] ? (t = o,
                    ' class="on"') : "") + " onclick=\"Menu.ChangeZPDate(this, '" + s[0] + "')\">" + o + "</a>"
                }
            "" == t && (e = !0,
            t = langFont.Font_AllDates,
            MainProperty.sortOption.zpDate = "All"),
            $("#zpDate > div.SUM_T").html(t),
            $("#zpDateList").html(i),
            $("#zpDate").removeClass("advanceDay")
        } else
            $("#zpDate").addClass("advanceDay");
        return e
    },
    ChangeMode: function(e, t) {
        var a;
        MainProperty.playMode != t && (Mask(),
        MainProperty.innerPage && Inner.Close(),
        0 < $("#sportMenu.ZoomOut").length ? $("#modeOption").delay(150).hide() : $("#modeOption").show().css("display", "table"),
        MainProperty.sortOption.zpDate = "All",
        a = Mapping.TransformMenuType(MainProperty.ballType, t, null)[0][1],
        DataAdapter.SendCommand({
            action: "cm",
            sport: Tool.TransformGameType(MainProperty.ballType, Args.ShortNum),
            mode: t,
            type: a
        }))
    },
    ChangeSport: function(e, t, a) {
        var i = Mapping.TransformMenuType(t, MainProperty.playMode, null)[0][1];
        MainProperty.ballType == t && e ? $("#sportMenu").hasClass("ZoomOut") || (0 < $(e).siblings("ul.SM_listIn:visible").length ? $(e).siblings("ul.SM_listIn:visible").hide() : $(e).siblings("ul.SM_listIn").show()) : (Mask(),
        MainProperty.innerPage && Inner.Close(),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("on"),
        MainProperty.sortOption.zpDate = "All",
        DataAdapter.SendCommand({
            action: "cs",
            sport: a,
            mode: MainProperty.playMode,
            type: i
        }))
    },
    ChangeKGroup: function(e, t, a) {
        MainProperty.ballType == Tool.TransformGameType(parseInt(t), Args.ShortEn) && MainProperty.sortOption.kind == a || (Mask(),
        MainProperty.innerPage && Inner.Close(),
        MainProperty.ballType != Tool.TransformGameType(parseInt(t), Args.ShortEn) && $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("on"),
        DataAdapter.SendCommand({
            action: "ckg",
            sport: t,
            mode: MainProperty.playMode,
            type: a
        }),
        $("#sportList .SM_list, #sportList .SM_list > .SM_listIn > li").removeClass("on"),
        $(e).parents("#sportList .SM_list").addClass("on"),
        $(e).addClass("on"),
        0 < $("#sportMenu.ZoomOut").length && $(e).parents(".SM_listIn").delay(150).hide())
    },
    ClickComingSoonCkb: function(e, t, a) {
        e = $(e).children("div.icon_SM_checkboxAll");
        if ("All" == t ? $(e).hasClass("on") ? $(e).add("#btnCS > ul.SM_listIn > li > div.ckb").removeClass("on") : $(e).add("#btnCS > ul.SM_listIn > li > div.ckb").addClass("on") : ($(e).hasClass("on") ? $(e).removeClass("on") : $(e).addClass("on"),
        $("#btnCS > ul.SM_listIn > li > div.ckb").length == $("#btnCS > ul.SM_listIn > li > div.ckb.on").length ? $("#btnCS > ul.SM_listIn > li > div.icon_SM_checkboxAll:first").addClass("on") : $("#btnCS > ul.SM_listIn > li > div.icon_SM_checkboxAll:first").removeClass("on")),
        MainProperty.sortOption.csChecked = ["All"].concat(MainProperty.ballSequence.slice(MainProperty.ballSequence.length / 2).map(function(e) {
            return e.substr(2)
        })),
        $("#btnCS > ul.SM_listIn > li > div.icon_SM_checkboxAll:not(.on)").toArray().map(function(e) {
            MainProperty.sortOption.csChecked.splice(MainProperty.sortOption.csChecked.indexOf($(e).attr("rel")), 1)
        }),
        !a)
            for (var i in MainProperty.BallAllyClosure)
                MainProperty.BallAllyClosure[i] = !0;
        MainProperty.innerPage && MainProperty.gameData[MainProperty.innerPage] && MainProperty.sortOption.csChecked.indexOf(MainProperty.gameData[MainProperty.innerPage].type) < 0 && Inner.Close();
        e = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn);
        Outer.BatchProcess(e, !0, a)
    },
    MenuShrink: function(e) {
        $("#sportList .SM_list > .SM_listIn").removeClass("bottom"),
        0 == e && 0 < $("#sportMenu.ZoomOut").length ? ($("#sportMenu").removeClass("ZoomOut"),
        $("#modeOption").show().css("display", "table"),
        $("#sportList > div.SM_list > ul.SM_listIn").hide(),
        $("#sportList > div.SM_list.on > ul.SM_listIn").show()) : ($("#sportMenu").addClass("ZoomOut"),
        $("#sportList > div.SM_list > ul.SM_listIn").hide(),
        $("#modeOption").hide());
        var i = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle" : "#outerPage > div.gamePanelL_In > table.gameTitle"
          , n = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList";
        (Mapping.TransformMenuType(MainProperty.ballType, MainProperty.playMode, null)[0][1] == MainProperty.sortOption.kind || 0 == MainProperty.sortOption.kind) && $(window).width() <= 1400 && 0 == e && (0 < $("#innerPage:visible").length && ($("#innerPage").hide(),
        Inner.Close()),
        $(i).each(function() {
            var e, t = $(this).attr("rel"), a = MainProperty.sortOption.kindSub[t];
            n = Tool.IsMultiSport(MainProperty.ballType) ? '#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox[rel="' + t + '"] > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList' : n,
            $("#sportMenu").hasClass("ZoomOut") ? ($(i + '[rel="' + t + '"] > tbody > tr > td[class^="screenOff_"]').add(n + ' > td[class^="screenOff_"]').show(),
            $(i + '[rel="' + t + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selT').hide(),
            (e = $("#outerPage > div.gamePanelL_In > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel")).hasClass("on") && (e.removeClass("on"),
            e.find("div.GT_selIn").hide(),
            e.find("div.GT_selInBox").hide())) : ($(i + '[rel="' + t + '"] > tbody > tr > td[class^="screenOff_"]:not([class="screenOff_' + a + '"])').hide(),
            $(n + ' > td[class^="screenOff_"]:not([class="screenOff_' + a + '"])').hide(),
            $(i + '[rel="' + t + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.ZoomOutShow.on').removeClass("on"),
            a = $(i + '[rel="' + t + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.ZoomOutShow[set="' + a + '"]').addClass("on").text(),
            $(i + '[rel="' + t + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selT').text(a).show())
        })),
        $("#scheduleNoData").width($("#outerPage").width())
    },
    ShowOrHideZPDate: function() {
        0 == $("#zpDateList:visible").length ? ($("#settings > li.btn_setUpMenu_list > div.SUM_In").hide(),
        $("#settings > li.btn_setUpMenu_list > div.SUM_In > div.SUM_InBox").hide(),
        $("#settings > li.btn_setUpMenu_list").removeClass("on"),
        $("#zpDate").addClass("on"),
        $("#zpDate > div.SUM_In").add("#zpDateList").show()) : ($("#zpDate").removeClass("on"),
        $("#zpDate > div.SUM_In").add("#zpDateList").hide())
    },
    ChangeZPDate: function(e, t) {
        t != MainProperty.sortOption.zpDate && (Inner.Close(),
        $("#zpDateList > a").removeClass("on"),
        $(e).addClass("on"),
        $("#zpDate > div.SUM_T").html($(e).html()),
        MainProperty.sortOption.zpDate = t,
        t = MainProperty.alOption.cacheName,
        MainProperty.alOption.cache[t].allCheck = !0,
        MainProperty.alOption.cache[t].list = ["All"],
        Ally.DrawAllyList(),
        t = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn),
        Outer.BatchProcess(t, !0, !1))
    },
    SetModeText: function() {
        var e = Tool.TransformModeText(0, MainProperty.playMode);
        $("#modeOption > li").removeClass("on"),
        $("#mode" + e).addClass("on"),
        e = $("#mode" + e).html(),
        $("#modeText").html(e)
    }
}
  , Ally = {
    ShowOrHideAllyOption: function() {
        var e, t, a, i;
        0 < $("#leagueOption:visible").length ? ($("#leagueOption").add("#leagueOption > div.bg_popUpBox > div.popUpBox > div").hide(),
        $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu").removeClass("on"),
        $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_In").hide(),
        $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_In > div.ALSM_InBox").hide(),
        i = MainProperty.alOption.cacheName,
        0 <= MainProperty.alOption.cache[i].list.indexOf("All") ? $("#leagueOptionEventList > li.btn_AL_allSel").addClass("on") : $("#leagueOptionEventList > li.btn_AL_allSel").removeClass("on"),
        MainProperty.alOption.cache[i].hideUncheck ? ($("#leagueOptionEventList > li.btn_AL_showSel").removeClass("off"),
        $("#leagueOptionEventList > li.btn_AL_showSel").addClass("on")) : ($("#leagueOptionEventList > li.btn_AL_showSel").removeClass("on"),
        $("#leagueOptionEventList > li.btn_AL_allSel").hasClass("on") ? $("#leagueOptionEventList > li.btn_AL_showSel").addClass("off") : $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("off")),
        Ally.DrawAllyList()) : ($("#leagueBlock").offset({
            top: -500,
            left: -500
        }),
        $("#leagueOption").add("#leagueBlock").show(),
        $("#leagueOptionList").scrollTop(0),
        e = $("#leagueBlock").height(),
        t = $("#leagueBlock").width(),
        a = $(window).height(),
        i = $(window).width(),
        a < e || i < t ? ($("#leagueOption").removeClass("reset"),
        $("#leagueBlock").css({
            top: "",
            left: ""
        })) : ($("#leagueOption").addClass("reset"),
        $("#leagueBlock").offset({
            top: Math.floor((a - e) / 2),
            left: Math.floor((i - t) / 2)
        })))
    },
    DrawAllyList: function() {
        Tool.IsMultiSport(MainProperty.ballType) ? $("#leagueBlock").addClass("allianceFAV") : $("#leagueBlock").removeClass("allianceFAV");
        var e = "All" == MainProperty.sortOption.zpDate ? MainProperty.allySequence.pop : MainProperty.allySequence.pop.filter(function(e) {
            for (var t = MainProperty.allyData[e] ? MainProperty.allyData[e].gidSet : [], a = !1, i = 0; i < t.length && !a; i++) {
                var n = MainProperty.gameData[t[i]] || {};
                n.gd && 0 <= n.gd.indexOf(MainProperty.sortOption.zpDate) && (a = !0)
            }
            return a
        })
          , t = MainProperty.alOption.cacheName;
        (MainProperty.alOption.cache[t].list.length == e.length || 0 <= MainProperty.alOption.cache[t].list.indexOf("All") || MainProperty.alOption.cache[t].allCheck) && (MainProperty.alOption.cache[t].allCheck = !0,
        MainProperty.alOption.cache[t].list = ["All"],
        MainProperty.alOption.cache[t].hideUncheck = !1);
        var a = MainProperty.alOption.cache[t].allCheck
          , i = MainProperty.alOption.cache[t].list
          , n = MainProperty.alOption.cache[t].hideUncheck;
        0 < $("#leagueOption:visible").length ? (i = 0 < $("#leagueOptionList > li.on").length && !$("#leagueOptionEventList > li.btn_AL_allSel").hasClass("on") ? $("#leagueOptionList > li.on").toArray().map(function(e) {
            return $(e).attr("rel")
        }) : $("#leagueOptionEventList > li.btn_AL_allSel").hasClass("on") ? ["All"] : [],
        n = $("#leagueOptionEventList > li.btn_AL_showSel").hasClass("on")) : a ? ($("#leagueOptionEventList > li.btn_AL_allSel").addClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").addClass("off").removeClass("on"),
        $("#btnAlly").removeClass("on")) : ($("#leagueOptionEventList > li.btn_AL_allSel").removeClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("off"),
        $("#btnAlly").addClass("on"),
        n ? $("#leagueOptionEventList > li.btn_AL_showSel").addClass("on") : $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("on"));
        var r, s = [];
        for (r in MainProperty.gameData)
            MainProperty.gameData.hasOwnProperty(r) && s.indexOf(MainProperty.gameData[r].aId) < 0 && ("All" == MainProperty.sortOption.zpDate || 0 <= MainProperty.gameData[r].gd.indexOf(MainProperty.sortOption.zpDate)) && s.push(MainProperty.gameData[r].aId);
        s = $.extend([], s).sort(function(e, t) {
            switch (MainProperty.alOption.sort) {
            case 0:
                return MainProperty.allySequence.pop.indexOf(e) > MainProperty.allySequence.pop.indexOf(t) ? 1 : -1;
            case 1:
                return MainProperty.allySequence.pin.indexOf(e) > MainProperty.allySequence.pin.indexOf(t) ? 1 : -1
            }
        });
        for (var o = "", l = [], c = 0; c < s.length; c++) {
            var d, u, h = s[c], p = Tool.TransformAIdToModeBall(h), m = 0 <= i.indexOf("All") || 0 <= i.indexOf(h) ? " on" : "", g = 0 < MainProperty.alOption.seachArray.length && 0 <= MainProperty.alOption.seachArray.indexOf(h) || 1 == n && !m ? ' style="display: none;" ' : "";
            Tool.IsMultiSport(MainProperty.ballType) && l.indexOf(p) < 0 && (u = i.filter(function(e) {
                return Tool.TransformAIdToModeBall(e) == p
            }),
            d = 0 <= i.indexOf("All") ? m : u.length == e.filter(function(e) {
                return Tool.TransformAIdToModeBall(e) == p
            }).length ? " on" : "",
            u = n && 0 == u.length ? ' style="display: none;" ' : "",
            o += '<li rel="' + p + '" class="ballCkb AL_li_' + Tool.TransformGameType(MainProperty.allyData[h].type, Args.WholeEn) + d + '"' + u + '><div class="icon_AL_checkbox"></div>',
            o += '<div class="AL_nameT">' + Tool.TransformGameType(MainProperty.allyData[h].type, Args.WholeLang) + ("fv" == MainProperty.ballType && 2 <= parseInt(h.split("_")[3]) ? " - " + Tool.TransformModeText(1, PlayMode.ZD) : "") + "</div></li> ",
            l.push(p)),
            o += '<li type="' + p + '" class="' + m + '" ' + g + ' style rel="' + h + '"><div class="icon_AL_checkbox"></div><div class="AL_nameT notBind">' + MainProperty.allyData[h].an + '</div><div class="AL_nameShow"></div></li>'
        }
        $("#leagueOptionList").html(o),
        $("#leagueOptionList > li:not(.ballCkb)").click(Ally.ClickAllyCkb),
        $("#leagueOptionList > li.ballCkb").click(Ally.ClickBallCkb),
        Ally.AllyNameHover("#leagueOptionList > li > div.AL_nameT.notBind"),
        Tool.ChangeBoundary("leagueBlock")
    },
    ClickAllyCkb: function(e) {
        var t = $(e.currentTarget).closest("li")
          , e = t.attr("type");
        t.hasClass("on") ? (t.add("#leagueOptionEventList > li.btn_AL_allSel").add('#leagueOptionList > li[rel="' + e + '"]').removeClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("off"),
        0 < $("#leagueOptionEventList > li.btn_AL_showSel.on").length && (t.hide(),
        0 == $('#leagueOptionList > li[type="' + e + '"]:visible').length && $('#leagueOptionList > li[rel="' + e + '"]').hide())) : (t.addClass("on"),
        0 == $('#leagueOptionList > li[type="' + e + '"]:not(.on)').length && $('#leagueOptionList > li[rel="' + e + '"]').addClass("on"),
        0 == $("#leagueOptionList > li:not(.on)").length && ($("#leagueOptionEventList > li.btn_AL_allSel").addClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("on").addClass("off"))),
        Tool.ChangeBoundary("leagueBlock")
    },
    ClickBallCkb: function(e) {
        var t = $(e.currentTarget).closest("li")
          , e = t.attr("rel");
        t.hasClass("on") ? (t.add("#leagueOptionEventList > li.btn_AL_allSel").add('#leagueOptionList > li[type="' + e + '"]').removeClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("off"),
        0 < $("#leagueOptionEventList > li.btn_AL_showSel.on").length && ($('#leagueOptionList > li[type="' + e + '"]').hide(),
        $('#leagueOptionList > li[rel="' + e + '"]').hide())) : (t.add('#leagueOptionList > li[type="' + e + '"]').addClass("on").show(),
        0 == $("#leagueOptionList > li:not(.on)").length && ($("#leagueOptionEventList > li.btn_AL_allSel").addClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("on").addClass("off"))),
        Tool.ChangeBoundary("leagueBlock")
    },
    AllyNameHover: function(e) {
        Tool.IsTouch ? $(e).click(function() {
            var e = $(this).html();
            $(this)[0].getBoundingClientRect().width >= $(this).closest("li")[0].getBoundingClientRect().width - (Tool.IsMultiSport(MainProperty.ballType) ? 32 : 34) ? ($(this).next("div.AL_nameShow").show().html(e),
            $(this).closest("li").position().top < 70 ? $(this).closest("li").addClass("boxDown") : $(this).closest("li").removeClass("boxDown")) : $(this).next("div.AL_nameShow").hide()
        }) : $(e).hoverDelay(function() {
            var e = $(this).html();
            $(this)[0].getBoundingClientRect().width >= $(this).closest("li")[0].getBoundingClientRect().width - (Tool.IsMultiSport(MainProperty.ballType) ? 32 : 34) ? ($(this).next("div.AL_nameShow").show().html(e),
            $(this).closest("li").position().top < 70 ? $(this).closest("li").addClass("boxDown") : $(this).closest("li").removeClass("boxDown")) : $(this).next("div.AL_nameShow").hide()
        }, function() {
            $(this).next("div.AL_nameShow").hide()
        }),
        $(e).removeClass("notBind")
    },
    ClickAllAllyCkb: function() {
        $("#leagueOptionEventList > li.btn_AL_allSel").hasClass("on") ? ($("#leagueOptionEventList > li.btn_AL_allSel").add("#leagueOptionList > li").removeClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("off")) : ($("#leagueOptionEventList > li.btn_AL_allSel").add("#leagueOptionList > li").addClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("on").addClass("off"),
        $("#leagueOptionList > li").show()),
        Tool.ChangeBoundary("leagueBlock")
    },
    ClickOnlyShowAllyCkb: function() {
        if (0 == $("#leagueOptionEventList > li.btn_AL_showSel.off").length)
            if ($("#leagueOptionEventList > li.btn_AL_showSel").hasClass("on"))
                $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("on"),
                $("#leagueOptionList > li").show();
            else {
                $("#leagueOptionEventList > li.btn_AL_showSel").addClass("on"),
                $("#leagueOptionList > li:not(.on, .ballCkb)").hide();
                for (var e = $("#leagueOptionList > li.ballCkb").toArray().map(function(e) {
                    return $(e).attr("rel")
                }), t = 0; t < e.length; t++) {
                    var a = e[t];
                    0 == $('#leagueOptionList > li[type="' + a + '"]:visible').length && $('#leagueOptionList > li[rel="' + a + '"]').hide()
                }
            }
        Tool.ChangeBoundary("leagueBlock")
    },
    ShowALSort: function() {
        "none" == $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_In").css("display") ? ($("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu").addClass("on"),
        $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_In").show(),
        $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_In > div.ALSM_InBox").show()) : ($("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu").removeClass("on"),
        $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_In").hide(),
        $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_In > div.ALSM_InBox").hide())
    },
    SetALSort: function(e, t) {
        switch ($("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_In > div.ALSM_InBox > a").removeClass("on"),
        $("#leagueBlock > div.alliance_In > div.alliance_set > ul.AL_set > li.btn_AL_setMenu > div.ALSM_T").text($(t).text()),
        $(t).addClass("on"),
        MainProperty.alOption.sort = e,
        MainProperty.alOption.sort) {
        case 0:
            $("#leagueBlock").removeClass("alliance_A-Z"),
            $("#letterList").hide();
            break;
        case 1:
            $("#leagueBlock").addClass("alliance_A-Z"),
            $("#letterList").show()
        }
        Ally.DrawAllyList()
    },
    AllySubmit: function() {
        var e, t, a, i;
        0 < $("#leagueOptionList > li.on").length && (e = [],
        t = 0 < $("#leagueOptionEventList > li.btn_AL_allSel.on").length,
        a = $("#leagueOptionEventList > li.btn_AL_showSel").hasClass("on"),
        0 == t ? (e = $("#leagueOptionList > li.on:not(.ballCkb)").toArray().map(function(e) {
            return $(e).attr("rel")
        }),
        $("#btnAlly").addClass("on")) : (e = ["All"],
        $("#btnAlly").removeClass("on")),
        i = MainProperty.alOption.cacheName,
        MainProperty.alOption.cache[i].hideUncheck = a,
        MainProperty.alOption.cache[i].allCheck = t,
        MainProperty.alOption.cache[i].list.join("") != e.join("") && (MainProperty.alOption.cache[i].list = e,
        Inner.Close(),
        i = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn),
        Outer.BatchProcess(i, !0, !1),
        Panel.FilterPopLiveAlly(e)),
        Ally.ShowOrHideAllyOption())
    }
}
  , Calculator = {
    SetEvent: function() {
        $("#calculatorInfo").draggabilly({
            containment: !0,
            handle: "#calculatorInfo > div.calcT, #calculatorInfo > div.calc_button",
            click: "#calculatorInfo > div.calc_button > input"
        }),
        $('.calc_totalBet input[type="text"], input[type="text"].calcOdds, input[type="text"].calcPassCount_ratio').click(function() {
            $('.calc_totalBet input[type="text"], input[type="text"].calcOdds, input[type="text"].calcPassCount_ratio').removeClass("focus"),
            $(this).addClass("focus")
        }),
        $("#calculatorInfo").children().click(function(e) {
            "text" === e.target.type && !e.target.disabled || $('input[type="text"]').removeClass("focus"),
            $("#calcTable > tbody > tr.calcList > td > div.calcPassCount_select").removeClass("on"),
            e.stopPropagation()
        }),
        Tool.IsTouch ? ($("#btnCalculator").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") ? 0 < $("#btnCalculator > div.count_prompt:visible").length && ($("#btnCalculator > div.count_prompt").fadeOut(150),
            Calculator.Open()) : ($(e).addClass("on"),
            $("#btnCalculator > div.count_prompt").fadeIn(150))
        }),
        $("#btnCalcPrompt").click(function() {
            $("#btnCalcPrompt > div.calcPromptIn").fadeOut(200),
            $("#btnCalcPrompt > div.calcPromptIn > div.calcPromptInBox").slideUp(200),
            "none" == $("#btnCalcPrompt > div.calcPromptIn").css("display") ? ($("#btnCalcPrompt > div.calcPromptIn").show(),
            $("#btnCalcPrompt > div.calcPromptIn > div.calcPromptInBox").slideDown(200).delay(200)) : ($("#btnCalcPrompt > div.calcPromptIn").fadeOut(200),
            $("#btnCalcPrompt > div.calcPromptIn > div.calcPromptInBox").slideUp(200))
        }),
        $("#btnFormulaPrompt").click(function() {
            $(this).removeClass("on"),
            $("#btnFormulaPrompt > div.formulaPromptBox").fadeOut(200),
            "none" == $("#btnFormulaPrompt > div.formulaPromptBox").css("display") ? ($(this).addClass("on"),
            $("#btnFormulaPrompt > div.formulaPromptBox").slideDown(200).delay(200)) : ($(this).removeClass("on"),
            $("#btnFormulaPrompt > div.formulaPromptBox").slideUp(200))
        })) : ($("#btnCalculator").hoverDelay(function() {
            $(this).addClass("on"),
            $("#btnCalculator > div.count_prompt").fadeIn(150)
        }, function() {
            $(this).removeClass("on"),
            $("#btnCalculator > div.count_prompt").fadeOut(150)
        }),
        $("#btnCalculator").click(function(e) {
            $("#btnCalculator > div.count_prompt").hide(),
            Calculator.Open()
        }),
        $("#btnCalcPrompt").hoverDelay(function() {
            $("#btnCalcPrompt > div.calcPromptIn").show(),
            $("#btnCalcPrompt > div.calcPromptIn > div.calcPromptInBox").slideDown(200).delay(200)
        }, function() {
            $("#btnCalcPrompt > div.calcPromptIn").fadeOut(200),
            $("#btnCalcPrompt > div.calcPromptIn > div.calcPromptInBox").slideUp(200)
        }),
        $("#btnFormulaPrompt").hoverDelay(function() {
            $(this).addClass("on"),
            $("#btnFormulaPrompt > div.formulaPromptBox").slideDown(200).delay(200)
        }, function() {
            $(this).removeClass("on"),
            $("#btnFormulaPrompt > div.formulaPromptBox").slideUp(200)
        })),
        $(document).bind("click touchend", function(e) {
            0 == $("#btnCalcPrompt").length && ($("#btnCalcPrompt > div.calcPromptIn").fadeOut(200),
            $("#btnCalcPrompt > div.calcPromptIn > div.calcPromptInBox").slideUp(200)),
            0 == $("#btnFormulaPrompt").length && ($("#btnFormulaPrompt").removeClass("on"),
            $("#btnFormulaPrompt > div.formulaPromptBox").slideUp(200))
        }),
        $("#calculatorInfo > div.btn_calculator_close").click(Calculator.Close),
        $("#calculatorInfo > div.calc_button > input.btn_calc_clear").click(Calculator.Reset),
        $("#calculatorInfo > div.calc_button > input.btn_calc_run").click(Calculator.Run),
        $("#calcTable > tbody > tr.calcList > td > div.calcPassCount_select").click(function(e) {
            var t = $(this).closest(".calcPassCount_select")
              , a = t.hasClass("on");
            $("#calcTable > tbody > tr.calcList > td > div.calcPassCount_select").removeClass("on"),
            a || t.addClass("on"),
            e.stopPropagation()
        }),
        $("#calcTable > tbody > tr.calcList > td > div.calcPassCount_select > .CPC_selIn li").click(function(e) {
            var t = $(e.currentTarget)
              , a = $(t).closest(".calcPassCount_select")
              , i = $(t).attr("name")
              , n = a.find(".CPC_selT");
            switch ($("#calcTable > tbody > tr.calcList > td > div.calcPassCount_select").removeClass("on"),
            a.find("li").removeClass("on"),
            i) {
            case "CPC_selWin":
                n.css("color", "#0371fe"),
                a.next(".calcPassCount_ratio").addClass("off").attr("disabled", "disabled").val("100");
                break;
            case "CPC_selLose":
                n.css("color", "#f00"),
                a.next(".calcPassCount_ratio").addClass("off").attr("disabled", "disabled").val("100");
                break;
            case "CPC_selFlat":
                n.css("color", "#000"),
                a.next(".calcPassCount_ratio").addClass("off").attr("disabled", "disabled").val("0");
                break;
            case "CPC_selPlus":
                n.css("color", "#0371fe"),
                a.next(".calcPassCount_ratio").removeClass("off").removeAttr("disabled").val("");
                break;
            case "CPC_selMinus":
                n.css("color", "#f00"),
                a.next(".calcPassCount_ratio").removeClass("off").removeAttr("disabled").val("")
            }
            t.addClass("on"),
            n.text($(t).text()),
            e.stopPropagation()
        }),
        $("#calcTable > tbody > tr.calcList > td > input.calcOdds").add("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL > input").attr("maxLength", MainProperty.cart.maxInputLength),
        $("#calcTable > tbody > tr.calcList > td.calcPassCount > input.calcPassCount_ratio").keydown(function(e) {
            var t = $(e.currentTarget)
              , a = e.which || e.keyCode;
            8 === a || 9 === a || 27 === a || 37 === a || 39 === a || (e.shiftKey || (a < 48 || 57 < a) && (a < 96 || 105 < a) || 0 == parseInt($(t).val()) && (48 == a || 96 == a)) && e.preventDefault()
        }),
        $("#calcTable > tbody > tr.calcList > td > input.calcOdds").add("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL > input").keydown(function(e) {
            var t = $(e.currentTarget)
              , a = e.which || e.keyCode
              , i = $(t).val();
            8 === a || 9 === a || 27 === a || 37 === a || 39 === a || (e.shiftKey || (a < 48 || 57 < a) && (a < 96 || 105 < a) && 110 != a && 190 != a || 0 == parseInt($(t).val()) && (48 == a || 96 == a) && i.indexOf(".") < 0 || (0 <= i.indexOf(".") || "" == i) && (110 == a || 190 == a) ? e.preventDefault() : 0 == parseFloat(i) && i.indexOf(".") < 0 && 110 != a && 190 != a && $(t).val(""))
        }),
        $("#calcTable > tbody > tr.calcList > td.calcPassCount > input.calcPassCount_ratio").keyup(function(e) {
            var t = $(e.currentTarget)
              , e = isNaN(parseInt($(t).val())) ? "" : parseInt($(t).val());
            100 <= e ? $(t).val(100) : $(t).val(e)
        }),
        $("#calcTable > tbody > tr.calcList > td.calcPassCount > input.calcPassCount_ratio").blur(function(e) {
            var t = $(e.currentTarget)
              , e = parseInt($(t).val());
            (isNaN(e) || e < 0) && $(t).val("")
        }),
        $("#calcTable > tbody > tr.calcList > td > input.calcOdds").add("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL > input").blur(function(e) {
            var t = $(e.currentTarget)
              , e = parseFloat($(t).val());
            isNaN(e) || e <= 0 ? $(t).val("") : t.val().indexOf(".") + 1 == t.val().length && $(t).val(t.val().substr(0, t.val().length - 1))
        })
    },
    KeyTramsform: function(e) {
        switch (e) {
        case 48:
        case 96:
            return "0";
        case 49:
        case 97:
            return "1";
        case 50:
        case 98:
            return "2";
        case 51:
        case 99:
            return "3";
        case 52:
        case 100:
            return "4";
        case 53:
        case 101:
            return "5";
        case 54:
        case 102:
            return "6";
        case 55:
        case 103:
            return "7";
        case 56:
        case 104:
            return "8";
        case 57:
        case 105:
            return "9";
        case 110:
        case 190:
            return "."
        }
    },
    Close: function() {
        $("#btnCalculator").removeClass("on"),
        $("#leagueOption").hide(),
        $("#calculatorInfo").hide(),
        $("#leagueOption > div.bg_popUpBox").removeClass("bg_popUpBox_Y")
    },
    Open: function() {
        Calculator.Reset(),
        $("#leagueOption").show(),
        $("#calculatorInfo").show(),
        $("#leagueOption > div.bg_popUpBox").addClass("bg_popUpBox_Y"),
        $("#calculatorInfo > div.formula").hide(),
        $("#calculatorInfo > div.formula > div.formula_In").html("");
        var e = $("#calculatorInfo").height()
          , t = $("#calculatorInfo").width()
          , a = $(window).height()
          , i = $(window).width();
        a < e || i < t ? ($("#leagueOption").removeClass("reset"),
        $("#calculatorInfo").css({
            top: "",
            left: ""
        })) : ($("#leagueOption").addClass("reset"),
        $("#calculatorInfo").offset({
            top: Math.floor((a - e) / 2),
            left: Math.floor((i - t) / 2)
        }))
    },
    Run: function() {
        var e, t, a;
        $("#calculatorInfo > div.calc_totalBet > div.calc_totalBetR > input").val(""),
        Calculator.ChkError() ? Tool.ChangeBoundary("calculatorInfo") : (e = [(t = [Calculator.GetEachPL(1), Calculator.GetEachPL(2), Calculator.GetEachPL(3), Calculator.GetEachPL(4), Calculator.GetEachPL(5), Calculator.GetEachPL(6), Calculator.GetEachPL(7), Calculator.GetEachPL(8), Calculator.GetEachPL(9), Calculator.GetEachPL(10)])[0].formula, t[1].formula, t[2].formula, t[3].formula, t[4].formula, t[5].formula, t[6].formula, t[7].formula, t[8].formula, t[9].formula],
        a = [CalcDecimal("+", 1, t[0].pl), CalcDecimal("+", 1, t[1].pl), CalcDecimal("+", 1, t[2].pl), CalcDecimal("+", 1, t[3].pl), CalcDecimal("+", 1, t[4].pl), CalcDecimal("+", 1, t[5].pl), CalcDecimal("+", 1, t[6].pl), CalcDecimal("+", 1, t[7].pl), CalcDecimal("+", 1, t[8].pl), CalcDecimal("+", 1, t[9].pl)].reduce(function(e, t) {
            return CalcDecimal("*", e, t)
        }),
        a = CalcDecimal("+", a, -1),
        t = parseFloat($("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL > input").val()),
        a = Tool.TransformMathFloor(CalcDecimal("*", t, a), 2),
        $("#calculatorInfo > div.calc_totalBet > div.calc_totalBetR > input").val(a),
        a = t + "*" + e.join("") + "-" + t + "=" + a,
        $("#calculatorInfo > div.formula > div.formula_In").html(a),
        $("#calculatorInfo > div.formula").css("visibility", "hidden").show(),
        a = Tool.ChangeBoundary("calculatorInfo"),
        $("#calculatorInfo > div.formula").hide().css("visibility", "visible"),
        a ? $("#calculatorInfo > div.formula").show() : $("#calculatorInfo > div.formula").slideDown(200))
    },
    ChkError: function() {
        var e = !1
          , t = 1
          , a = []
          , i = $("#calcTable > tbody > tr.calcList");
        Calculator.ClearError();
        for (var n = 0; n < i.length; n++) {
            var r = $(i[n]).children("td").children(".calcOdds")
              , s = $(i[n]).children("td.calcPassCount").children(".calcPassCount_ratio")
              , o = {
                plEmpty: !0,
                perEmpty: !0
            };
            $(r).val() && (t = n + 1,
            o.plEmpty = !1),
            $(s).val() && (o.perEmpty = !1),
            a.push(o)
        }
        for (n = 0; n < a.length; n++) {
            var l = n + 1;
            if (t < l)
                break;
            a[n].plEmpty && l <= t && (e = !0,
            $("#calc" + l + " > td > input.calcOdds").addClass("error"),
            $("#calc" + l).next(".error_t").children("td").prepend("<div>" + langFont.Font_PLCanNotBeEmpty + "</div>")),
            a[n].perEmpty && (e = !0,
            $("#calc" + l + " > td.calcPassCount > input.calcPassCount_ratio").addClass("error"),
            $("#calc" + l).next(".error_t").children("td").append("<div>" + langFont.Font_PercentCanNotBeEmpty + "</div>"))
        }
        return $("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL > input").val() || (e = !0,
        $("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL").addClass("error"),
        $("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL > span.error_t").text(langFont.Font_PleaseEnterThePrincipal)),
        e
    },
    ClearError: function() {
        $("#calcTable > tbody > tr.calcList > td > input").removeClass("error"),
        $("#calcTable > tbody > tr.error_t > td").html(""),
        $("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL").removeClass("error"),
        $("#calculatorInfo > div.calc_totalBet > div.calc_totalBetL > span.error_t").text("")
    },
    GetEachPL: function(e) {
        if ("" == $("#calc" + e + " > td > input.calcOdds").val())
            return {
                pl: 0,
                formula: ""
            };
        var t = parseFloat($("#calc" + e + " > td > input.calcOdds").val())
          , a = parseInt($("#calc" + e + " > td.calcPassCount >input.calcPassCount_ratio").val())
          , i = $("#calc" + e + " > td.calcPassCount > div.calcPassCount_select > ul.CPC_selIn > li.on").attr("name")
          , e = ""
          , a = isNaN(a) ? 0 : CalcDecimal("/", a, 100)
          , e = Calculator.GetEachFormula(t, a, i);
        return {
            pl: {
                CPC_selWin: CalcDecimal("*", t, 1),
                CPC_selLose: -1,
                CPC_selFlat: 0,
                CPC_selPlus: CalcDecimal("*", t, a),
                CPC_selMinus: CalcDecimal("*", -1, a)
            }[i],
            formula: e
        }
    },
    GetEachFormula: function(e, t, a) {
        var i = "";
        switch (a) {
        case "CPC_selWin":
        case "CPC_selFlat":
        case "CPC_selPlus":
            i += "(1+" + CalcDecimal("*", e, t) + ")";
            break;
        case "CPC_selLose":
            i += '<font class="t_red">(1-' + t + ")</font>";
            break;
        case "CPC_selMinus":
            i += 1 == t ? '<font class="t_red">(1-' + t + ")</font>" : "(1-" + t + ")"
        }
        return i
    },
    Reset: function() {
        $("#calcTable > tbody > tr.calcList > td > input.calcOdds").add("#calculatorInfo > div.calc_totalBet > div > input").val(""),
        $("#calcTable > tbody > tr.calcList > td > div.calcPassCount_select > ul > li").removeClass("on").filter('[name="CPC_selWin"]').addClass("on"),
        $("#calcTable > tbody > tr.calcList > td > div.calcPassCount_select > div.CPC_selT").text($("#calcTable").attr("default")).removeAttr("style"),
        $("#calcTable > tbody > tr.calcList > td > input.calcPassCount_ratio").removeClass("off").attr("disabled", "disabled").val(100),
        $("#calculatorInfo > div.formula").slideUp(200),
        $("#calculatorInfo > div.formula > div.formula_In").html(""),
        Calculator.ClearError()
    }
}
  , FuncSetting = {
    isChange: !1,
    SetEvent: function() {
        switch ($("#funcBlock").draggabilly({
            containment: !0,
            handle: "#funcBlock > div.funSetT,#funcBlock > div.funSetIn > div.funSet_button",
            click: "#funcBlock > div.funSetIn > div.funSet_button > input"
        }),
        Tool.IsTouch ? $("#btnFuncSetting").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") ? 0 < $("#btnFuncSetting > div.funSet_prompt:visible").length && ($("#btnFuncSetting > div.funSet_prompt").fadeOut(150),
            FuncSetting.Open()) : ($(e).addClass("on"),
            $("#btnFuncSetting > div.funSet_prompt").fadeIn(150))
        }) : ($("#btnFuncSetting").hoverDelay(function() {
            $(this).addClass("on"),
            $("#btnFuncSetting > div.funSet_prompt").fadeIn(150)
        }, function() {
            0 == $("#funcBlock:visible").length && $(this).removeClass("on"),
            $("#btnFuncSetting > div.funSet_prompt").fadeOut(150)
        }),
        $("#btnFuncSetting").click(function(e) {
            $(e.currentTarget).addClass("on"),
            FuncSetting.Open()
        }),
        $("#btnFuncPrompt").hoverDelay(function() {
            $("#btnFuncPrompt > div.funSetPromptIn").show(),
            $("#btnFuncPrompt > div.funSetPromptIn > div.funSetPromptInBox").slideDown(200).delay(200)
        }, function() {
            $("#btnFuncPrompt > div.funSetPromptIn").fadeOut(200),
            $("#btnFuncPrompt > div.funSetPromptIn > div.funSetPromptInBox").slideUp(200)
        }),
        $("#funcChip > div.btn_chip").hover(function() {
            $(this).addClass("hover")
        }, function() {
            $(this).removeClass("hover")
        })),
        $("#funcBlock > div.btn_funSet_close").click(FuncSetting.Close),
        $("#funcBlock > div.funSetIn > div.funSet_button > input").click(FuncSetting.SetFuncSetting),
        $("#funcMode > div.btn_funSel").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") || ($("#funcMode > div.btn_funSel").removeClass("on"),
            $(e).addClass("on"),
            FuncSetting.isChange = !0,
            $(e).attr("rel") == PlayMode.None ? ($("#funcSport").closest("ul").hide(),
            $("#funcSport > div").removeClass("on")) : $(e).attr("rel") == PlayMode.ZD ? ($("#funcSport").closest("ul").show(),
            $('#funcSport > div[rel="100"]').hide().removeClass("on")) : ($("#funcSport").closest("ul").show(),
            $('#funcSport > div[rel="100"]').show()),
            Tool.ChangeBoundary("funcBlock"))
        }),
        $("#funcSport > div.btn_funSel").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") || ($("#funcSport > div.btn_funSel").removeClass("on"),
            $(e).addClass("on"),
            FuncSetting.isChange = !0)
        }),
        $("#funcSort > div.btn_funSel").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") || ($("#funcSort > div.btn_funSel").removeClass("on"),
            $(e).addClass("on"),
            FuncSetting.isChange = !0)
        }),
        $("#funcComfirmMsg > div.btn_funSel").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") || ($("#funcComfirmMsg > div.btn_funSel").removeClass("on"),
            $(e).addClass("on"),
            FuncSetting.isChange = !0)
        }),
        $("#funcCallBackMsg > div.btn_funSel").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") || ($("#funcCallBackMsg > div.btn_funSel").removeClass("on"),
            $(e).addClass("on"),
            FuncSetting.isChange = !0)
        }),
        $("#funcDefultMulti > div.btn_funSel").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") || ($("#funcDefultMulti > div.btn_funSel").removeClass("on"),
            $(e).addClass("on"),
            FuncSetting.isChange = !0)
        }),
        MainProperty.sortOption.sort) {
        case Args.SortHot:
            $("#ddlSort > div.SUM_T").html(langFont.Font_SortHot),
            $("#ddlSort > div.SUM_In > .SUM_InBox > a").removeClass("on"),
            $("#ddlSort > div.SUM_In > .SUM_InBox > a:first-child").addClass("on");
            break;
        case Args.SortTime:
            $("#ddlSort > div.SUM_T").html(langFont.Font_SortTime),
            $("#ddlSort > div.SUM_In > .SUM_InBox > a").removeClass("on"),
            $("#ddlSort > div.SUM_In > .SUM_InBox > a:last-child").addClass("on")
        }
        FuncSetting.BindDefautMoneyEvent(),
        $("#funcChip > div.btn_chip").click(function(e) {
            e = $(e.currentTarget);
            FuncSetting.isChange = !0,
            $(e).hasClass("on") ? 1 != $("#funcChip > div.btn_chip.on").length && $(e).removeClass("on") : $("#funcChip > div.btn_chip.on").length < 6 && $(e).addClass("on")
        })
    },
    BindDefautMoneyEvent: function() {
        $("#defaultMoney > div.btn_funSel").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") || ($("#defaultMoney > div.btn_funSel").removeClass("on"),
            $(e).addClass("on"),
            $("#setMoney").hasClass("on") ? ($("#cartDefaultPoint").addClass("focus enter").css("display", "inline-block").focus(),
            Tool.ChangeBoundary("funcBlock")) : $("#cartDefaultPoint").removeClass("focus enter").hide().val(""),
            FuncSetting.isChange = !0)
        }),
        $("#defaultMultiMoney > div.btn_funSel").click(function(e) {
            e = $(e.currentTarget);
            $(e).hasClass("on") || ($("#defaultMultiMoney > div.btn_funSel").removeClass("on"),
            $(e).addClass("on"),
            $("#setMoney_multi").hasClass("on") ? ($("#cartDefaultMultiPoint").addClass("focus enter").css("display", "inline-block").focus(),
            Tool.ChangeBoundary("funcBlock")) : $("#cartDefaultMultiPoint").removeClass("focus enter").hide().val(""),
            FuncSetting.isChange = !0)
        }),
        $("#cartDefaultPoint, #cartDefaultMultiPoint").focus(function(e) {
            $(e.currentTarget).addClass("focus enter")
        }).blur(function(e) {
            $(e.currentTarget).removeClass("focus enter")
        }),
        $("#cartDefaultPoint").add("#cartDefaultMultiPoint").on("input propertychange", function(e) {
            e = $(e.currentTarget);
            $(e).val(Cart.AmountMonitor($(e).val())),
            FuncSetting.isChange = !0
        })
    },
    Open: function() {
        $("#leagueOption").show(),
        $("#funcBlock").show(),
        $("#leagueOption > div.bg_popUpBox").addClass("bg_popUpBox_Y"),
        FuncSetting.isChange = !1;
        var e = $("#funcBlock").height()
          , t = $("#funcBlock").width()
          , a = $(window).height()
          , i = $(window).width();
        a < e || i < t ? ($("#leagueOption").removeClass("reset"),
        $("#funcBlock").css({
            top: "",
            left: ""
        })) : ($("#leagueOption").addClass("reset"),
        $("#funcBlock").offset({
            top: Math.floor((a - e) / 2),
            left: Math.floor((i - t) / 2)
        })),
        MainProperty.funcSetting.mode == PlayMode.None ? $("#funcSport").closest("ul").hide() : MainProperty.funcSetting.mode == PlayMode.ZD ? ($("#funcSport").closest("ul").show(),
        $('#funcSport > div[rel="100"]').hide()) : ($("#funcSport").closest("ul").show(),
        $('#funcSport > div[rel="100"]').show()),
        $("#funcBlock > div.funSetIn > ul > li:nth-child(2) > div").removeClass("on"),
        $('#funcMode > div.btn_funSel[rel="' + MainProperty.funcSetting.mode + '"]').add('#funcSport > div.btn_funSel[rel="' + MainProperty.funcSetting.sport + '"]').add('#funcSort > div.btn_funSel[rel="' + MainProperty.funcSetting.sort + '"]').add('#funcComfirmMsg > div.btn_funSel[rel="' + (MainProperty.funcSetting.cartComfirmMsg ? 1 : 0) + '"]').add('#funcCallBackMsg > div.btn_funSel[rel="' + (MainProperty.funcSetting.cartCallBackMsg ? 1 : 0) + '"]').add('#defaultMoney > div.btn_funSel[rel="' + MainProperty.funcSetting.defPoint[0] + '"]').add('#defaultMultiMoney > div.btn_funSel[rel="' + MainProperty.funcSetting.defPassPoint[0] + '"]').add('#funcDefultMulti > div.btn_funSel[rel="' + (MainProperty.funcSetting.defMulti ? 1 : 0) + '"]').addClass("on"),
        2 == MainProperty.funcSetting.defPoint[0] ? $("#cartDefaultPoint").addClass("focus enter").css("display", "inline-block").val(Cart.AmountMonitor(MainProperty.funcSetting.defPoint[1])) : $("#cartDefaultPoint").removeClass("focus enter").hide().val(""),
        2 == MainProperty.funcSetting.defPassPoint[0] ? $("#cartDefaultMultiPoint").addClass("focus enter").css("display", "inline-block").val(Cart.AmountMonitor(MainProperty.funcSetting.defPassPoint[1])) : $("#cartDefaultMultiPoint").removeClass("focus enter").hide().val("");
        for (var n = 0; n < MainProperty.funcSetting.defChip.length; n++)
            $('#funcChip > div.btn_chip[rel="' + MainProperty.funcSetting.defChip[n] + '"]').addClass("on")
    },
    SetFuncSetting: function() {
        var e = parseInt($("#defaultMoney > div.btn_funSel.on").attr("rel"), 10)
          , t = parseInt($("#defaultMultiMoney > div.btn_funSel.on").attr("rel"), 10);
        MainProperty.funcSetting.mode = parseInt($("#funcMode > div.btn_funSel.on").attr("rel"), 10),
        MainProperty.funcSetting.sport = 0 == $("#funcSport > div.btn_funSel.on").length ? Ball.none.idx : parseInt($("#funcSport > div.btn_funSel.on").attr("rel"), 10),
        MainProperty.funcSetting.sort = parseInt($("#funcSort > div.btn_funSel.on").attr("rel"), 10),
        MainProperty.funcSetting.cartComfirmMsg = 1 == $("#funcComfirmMsg > div.btn_funSel.on").attr("rel"),
        MainProperty.funcSetting.cartCallBackMsg = 1 == $("#funcCallBackMsg > div.btn_funSel.on").attr("rel"),
        MainProperty.funcSetting.defPoint[0] = isNaN(e) ? MainProperty.funcSetting.defPoint[0] : e,
        MainProperty.funcSetting.defPassPoint[0] = isNaN(t) ? MainProperty.funcSetting.defPassPoint[0] : t,
        MainProperty.funcSetting.defChip = $("#funcChip > div.btn_chip.on").toArray().map(function(e) {
            return $(e).attr("rel")
        }),
        MainProperty.funcSetting.defMulti = 1 == $("#funcDefultMulti > div.btn_funSel.on").attr("rel"),
        MainProperty.funcSetting.mode == PlayMode.ZD && MainProperty.funcSetting.sport == Ball.cs.idx && (MainProperty.funcSetting.sport = Ball.none.idx),
        2 == MainProperty.funcSetting.defPoint[0] && (MainProperty.funcSetting.defPoint[1] = isNaN(parseInt($("#cartDefaultPoint").val(), 10)) ? 0 : parseInt($("#cartDefaultPoint").val(), 10)),
        2 == MainProperty.funcSetting.defPassPoint[0] && (MainProperty.funcSetting.defPassPoint[1] = isNaN(parseInt($("#cartDefaultMultiPoint").val(), 10)) ? 0 : parseInt($("#cartDefaultMultiPoint").val(), 10)),
        CartBase.SetCartChip(),
        FuncSetting.Close(!0),
        FuncSetting.isChange && $.ajax({
            type: "POST",
            url: "/ajax/AjaxInfo.aspx",
            data: {
                method: "SetFuncSetting",
                funcSetting: JSON.stringify(MainProperty.funcSetting)
            },
            dataType: "text",
            error: function(e, t, a) {
                1 != LogOutCheck('{"st":"' + e.status + '"}') && BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\nsource: Document\r\nSetFuncSetting ajax error, textStatus: " + t)
            },
            success: function(e) {
                LogOutCheck(e)
            }
        })
    },
    Close: function(e) {
        $("#btnFuncSetting").removeClass("on"),
        $("#leagueOption").hide(),
        $("#funcBlock").hide(),
        $("#leagueOption > div.bg_popUpBox").removeClass("bg_popUpBox_Y"),
        1 == e && ($("#fvMsg").finish().fadeIn(800).delay(800).fadeOut(800),
        $("#fvMsg > div.popFavMsg_In").text(langFont.Font_ChangeSuccess))
    }
}
  , PKTutorials = {
    SetEvent: function() {
        $("#pkTutorialsInfo").draggabilly({
            containment: !0,
            handle: "#pkTutorialsInfo > div.tutorials_T",
            click: "#pkTutorialsInfo"
        }),
        $("#pkTutorials").click(PKTutorials.Open),
        $("#pkTutorialsInfo > div.btn_tutorials_close").click(PKTutorials.Close),
        $("#pkTutorialsInfo > div.tutorialsIn > div.btn_OW_goTop").click(PKTutorials.ScrollTop),
        $("#pkTutorialsInfo > div.tutorialsIn > div.tutorials_scroll").scroll(function() {
            0 < $(this).scrollTop() ? $("#pkTutorialsInfo > div.tutorialsIn > div.btn_OW_goTop").fadeIn() : $("#pkTutorialsInfo > div.tutorialsIn > div.btn_OW_goTop").fadeOut()
        }),
        $("#pkTutorialsInfo > ul.tutorials_nav li").click(function() {
            switch (PKTutorials.SelectChange($(this)),
            $(this).attr("id")) {
            case "pankou":
                PKTutorials.SelectChange($("#pankou_navIn,#tutorials_pankou_ball")),
                PKTutorials.SelectChange($("#pankou_navIn > li.ball"));
                break;
            case "pankou_per":
                PKTutorials.SelectChange($("#pankou_per_navIn,#tutorials_pankou_per_ball")),
                PKTutorials.SelectChange($("#pankou_per_navIn > li.ball"));
                break;
            case "pankou_demo":
                PKTutorials.SelectChange($("#pankou_demo_navIn,#tutorials_pankou_demo_ball")),
                PKTutorials.SelectChange($("#pankou_demo_navIn > li.ball")),
                PKTutorials.SetPKDemo($("#tutorials_pankou_demo_ball .demo .team_list li:first"));
                break;
            case "pankou_demoPer":
                PKTutorials.SelectChange($("#pankou_demoPer_navIn,#tutorials_pankou_demoPer_ball")),
                PKTutorials.SelectChange($("#pankou_demoPer_navIn > li.ball")),
                PKTutorials.SetPKDemo($("#tutorials_pankou_demoPer_ball .demo .team_list li:first"))
            }
            PKTutorials.ScrollTop()
        }),
        $("#pkTutorialsInfo > div.tutorialsIn > div.tutorialsIn_nav li").click(function() {
            var e = $(this)
              , t = ""
              , a = !1;
            switch (e.parent().attr("id")) {
            case "pankou_navIn":
                a = !(t = "#tutorials_pankou_");
                break;
            case "pankou_per_navIn":
                a = !(t = "#tutorials_pankou_per_");
                break;
            case "pankou_demo_navIn":
                t = "#tutorials_pankou_demo_",
                a = !0;
                break;
            case "pankou_demoPer_navIn":
                t = "#tutorials_pankou_demoPer_",
                a = !0
            }
            e.hasClass("ball") ? t += "ball" : e.hasClass("bigAndsmall") ? t += "bigAndsmall" : e.hasClass("soloWin") ? t += "soloWin" : e.hasClass("even") && (t += "even"),
            PKTutorials.SelectChange(e),
            PKTutorials.SelectChange($(t)),
            a && PKTutorials.SetPKDemo($(t + " .demo .team_list li:first")),
            PKTutorials.ScrollTop()
        }),
        $("#pkTutorialsInfo > div.tutorialsIn > div.tutorials_scroll .demo .team_list li").click(function() {
            PKTutorials.SetPKDemo($(this)),
            PKTutorials.ScrollTop()
        }),
        $("#pkTutorialsInfo > div.tutorialsIn > div.tutorials_scroll").scrollbar()
    },
    Close: function() {
        PKTutorials.SelectChange($("#pankou")),
        PKTutorials.SelectChange($("#pankou_navIn,#tutorials_pankou_ball")),
        PKTutorials.SelectChange($("#pankou_navIn > li.ball")),
        PKTutorials.ScrollTop(),
        $("#pkTutorialsInfo").parents(".bg_popUpBox_scroll").hide(),
        $("#pkTutorialsInfo").hide()
    },
    Open: function() {
        $("#pkTutorialsInfo").parents(".bg_popUpBox_scroll").show(),
        $("#pkTutorialsInfo").show();
        var e = $("#pkTutorialsInfo").height()
          , t = $("#pkTutorialsInfo").width()
          , a = $(window).height()
          , i = $(window).width();
        a < e || i < t ? ($("#leagueOption").removeClass("reset"),
        $("#pkTutorialsInfo").css({
            top: "",
            left: ""
        })) : ($("#leagueOption").addClass("reset"),
        $("#pkTutorialsInfo").offset({
            top: Math.floor((a - e) / 2),
            left: Math.floor((i - t) / 2)
        }))
    },
    SelectChange: function(e) {
        e.addClass("on").siblings().removeClass("on")
    },
    SetPKDemo: function(e) {
        e.parents('[class*="_team"]').siblings('[class*="_team"]').find(".team_list li").removeClass("on"),
        e.addClass("on"),
        PKTutorials.SelectChange(e),
        PKTutorials.SelectChange($("#" + e.attr("id") + "_in"))
    },
    ScrollTop: function() {
        $("#pkTutorialsInfo > div.tutorialsIn > div.tutorials_scroll > div.tutorials_scroll").scrollTop(0)
    }
};
function AutoAdapt() {
    $("#autoAdapt").hasClass("on") ? ($("#autoAdapt").removeClass("on"),
    MainProperty.isAutoAdapt = !1) : ($("#autoAdapt").addClass("on"),
    MainProperty.isAutoAdapt = !0)
}
function ShowOrHideSortOption() {
    0 == $("#ddlSort > .SUM_In > .SUM_InBox:visible").length ? ($("#settings > li.btn_setUpMenu_list > .SUM_In").hide(),
    $("#settings > li.btn_setUpMenu_list > .SUM_In > .SUM_InBox").hide(),
    $("#settings > li.btn_setUpMenu_list").removeClass("on"),
    $("#ddlSort").addClass("on"),
    $("#ddlSort > .SUM_In").show(),
    $("#ddlSort > .SUM_In > .SUM_InBox").show()) : ($("#ddlSort").removeClass("on"),
    $("#ddlSort > .SUM_In").hide(),
    $("#ddlSort > .SUM_In > .SUM_InBox").hide())
}
function RecoverSetting(e, t) {
    var s, o, l, c, d, u, h, p, m, g, f, v, _, y, P, a, i, n, r, S, b, T, C, M, I;
    e ? (s = {
        outerYPath: "#outerPage > div.gamePanelL_In > div.gameList_scroll",
        outerTitlePath: "#outerPage > div.gamePanelL_In > table.gameTitle",
        outerGamePath: "#outerPage > div.gamePanelL_In > div.gameList_scroll",
        innerYPath: "#innerScrollBar"
    },
    Tool.IsMultiSport(MainProperty.ballType) && (s.outerYPath = "#outerPage > div.gamePanelL_In > div.gameListAll_scroll",
    s.outerTitlePath = "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle",
    s.outerGamePath = "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox"),
    $("#innerView > ul.GDView_T > li.btn_fixed").hasClass("on") && (s.innerYPath = "#innerSchedule"),
    o = $("#mainStruc").scrollLeft(),
    t == Args.Outer ? (l = !$("#sportMenu").hasClass("ZoomOut"),
    c = $("#modeOption > li.on").attr("id"),
    d = $("#sportList > div.SM_list.on").attr("id"),
    u = 0 < $("#sportList > div.SM_list.on > ul.SM_listIn:visible").length,
    h = $("#sportList > div.SM_list.on > ul.SM_listIn > li.on[rel]").attr("rel"),
    I = [],
    $("#btnCS.on > ul.SM_listIn > li > div.icon_SM_checkboxAll[rel!=All]:not(.on)").each(function() {
        I.push($(this).attr("rel"))
    }),
    p = I,
    m = $("#sportMenu > div.sportMenu_in > div.scroll-wrapper > div.SM_scroll").scrollTop(),
    M = {
        open: [],
        close: []
    },
    $(s.outerGamePath + " > div.gameList").each(function() {
        ($(this).children("ul.btn_GLT").hasClass("off") ? M.close : M.open).push($(this).attr("rel"))
    }),
    g = M,
    f = $(s.outerYPath).scrollTop(),
    C = [],
    $("#leagueOptionList > li.on:not(.ballCkb)").each(function() {
        C.push($(this).attr("rel"))
    }),
    v = C,
    _ = $("#leagueOptionEventList > li.btn_AL_showSel").hasClass("on"),
    y = 0 < $("#leagueBlock:visible").length,
    P = $("#leagueOptionList").scrollTop(),
    MainProperty.Recover[t] = function() {
        if (Menu.MenuShrink(!0),
        l && Menu.MenuShrink(!1),
        c && ($("#modeOption > li").removeClass("on"),
        $("#" + c).addClass("on")),
        0 < $("#" + d).length) {
            if ($("#sportList > div.SM_list").removeClass("on"),
            $("#" + d).addClass("on"),
            u ? $("#sportList > div.SM_list.on > ul.SM_listIn").show() : $("#sportList > div.SM_list.on > ul.SM_listIn").hide(),
            $("#sportList > div.SM_list.on > ul.SM_listIn > li[rel]").removeClass("on"),
            $("#sportList > div.SM_list.on > ul.SM_listIn > li[rel=" + h + "]").addClass("on"),
            0 < p.length)
                for (var e = 0; e < p.length; e++) {
                    var t = p[e];
                    Menu.ClickComingSoonCkb($("#btnCS.on > ul.SM_listIn > li > div.icon_SM_checkboxAll[rel=" + t + "]").closest("li"), t, !0)
                }
            $("#sportMenu > div.sportMenu_in > div.scroll-wrapper > div.SM_scroll").scrollTop(m)
        }
        for (e = 0; e < g.close.length; e++)
            $(s.outerGamePath + " > div.gameList[rel=" + g.close[e] + "] > ul.btn_GLT").addClass("off"),
            $(s.outerGamePath + " > div.gameList[rel=" + g.close[e] + "] > div.GLIn").hide();
        for (e = 0; e < g.open.length; e++) {
            var a = s.outerGamePath + ' > div.gameList[rel="' + g.open[e] + '"]';
            $(a).hasClass("shell") ? Outer.AllyShrink(a) : ($(a + " > ul.btn_GLT").removeClass("off"),
            $(a + " > div.GLIn").show())
        }
        $(s.outerGamePath).each(function() {
            var e = $(this).attr("rel");
            0 == $(this).children("div.gameList").children("ul.btn_GLT").not(".off").length && $(s.outerTitlePath + "[rel=" + e + "] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_gameList_all").addClass("off")
        }),
        $(s.outerYPath).scrollTop(f);
        var i = !0;
        if ($("#leagueOptionList > li:not(.ballCkb)").each(function() {
            var e = $(this).attr("rel");
            v.indexOf(e) < 0 && ($(this).removeClass("on"),
            i = !1)
        }),
        i)
            $("#leagueOptionEventList > li.btn_AL_allSel").addClass("on"),
            $("#leagueOptionEventList > li.btn_AL_showSel").addClass("gray");
        else if ($("#leagueOptionEventList > li.btn_AL_allSel").removeClass("on"),
        $("#leagueOptionEventList > li.btn_AL_showSel").removeClass("gray"),
        _) {
            $("#leagueOptionEventList > li.btn_AL_showSel").addClass("on"),
            $("#leagueOptionList > li:not(.on, .ballCkb)").hide();
            for (var n = $("#leagueOptionList > li.ballCkb").toArray().map(function(e) {
                return $(e).attr("rel")
            }), e = 0; e < n.length; e++) {
                var r = n[e];
                0 == $('#leagueOptionList > li[type="' + r + '"]:visible').length && $('#leagueOptionList > li[rel="' + r + '"]').hide()
            }
        }
        y && ($("#leagueBlock").show(),
        $("#leagueOptionList").scrollTop(P)),
        $("#mainStruc").scrollLeft(o)
    }
    ) : (a = 0 < $("#innerPage:visible").length) && (T = "",
    $(s.outerGamePath + " > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList").each(function() {
        var e = $(this).attr("rel");
        if ($(this).children("td.GLIL_More").hasClass("on"))
            return T = e,
            !1
    }),
    i = T,
    S = $(s.innerYPath).scrollTop(),
    n = (0 < $("#innerMenu > li.btn_GDListT.on").length ? $("#innerMenu > li.btn_GDListT.on") : $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.show.on")).attr("page"),
    b = [],
    $("#innerSchedule > div.gameStyle_list[" + ("0" == n ? "page" : "page=" + n) + "] > div.gameStyle_T:not(.on)").each(function() {
        b.push($(this).parent(".gameStyle_list").attr("ck"))
    }),
    r = b,
    MainProperty.Recover[t] = function() {
        if (a) {
            if ($("#innerPage").show(),
            $("#o" + i).parent(".GLIL_More").addClass("on"),
            0 < $("#innerMenu > li.btn_GDListT[page=" + n + "]").length || 0 < $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.show[page=" + n + "]").length) {
                $("#innerMenu > li.btn_GDListT[page]").add("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.show[page]").removeClass("on"),
                $("#innerMenu > li.btn_GDListT[page=" + n + "]").addClass("on"),
                $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.show[page =" + n + "]").addClass("on"),
                "0" != n && $("#innerSchedule > div.gameStyle_list[page!=" + n + "]").hide();
                for (var e = 0; e < r.length; e++)
                    $("#innerSchedule > div.gameStyle_list[ck=" + r[e] + "] > div.gameStyle_T").removeClass("on"),
                    $("#innerSchedule > div.gameStyle_list[ck=" + r[e] + "] > div.gameStyle_In").hide();
                ("0" != n && 0 == $("#innerSchedule > div.gameStyle_list[page=" + n + "] > div.gameStyle_T.on").length || "0" == n && 0 == $("#innerSchedule > div.gameStyle_list > div.gameStyle_T.on").length) && $("#innerMenu > li.btn_gameStyle_all").addClass("off")
            }
            $(s.innerYPath).scrollTop(S)
        }
        $("#mainStruc").scrollLeft(o)
    }
    )) : MainProperty.Recover[t] && (MainProperty.Recover[t](),
    MainProperty.Recover[t] = function() {}
    )
}
var GameDrawer = {
    OuterOddFunc: function(e, t, a, i, n, r, s) {
        switch (n) {
        case "11061":
        case "11161":
        case "26061":
        case "26161":
        case "27061":
        case "27161":
            return GameDrawer.OuterCS(e, r[1], t, a, i, n);
        case "11062":
        case "11162":
        case "11063":
        case "26062":
        case "26162":
        case "26063":
        case "27062":
        case "27162":
        case "27063":
            return GameDrawer.OuterSimple(e, r[1], t, a, i, n);
        case "11201,11202,11203#11221,11222,11223#11241,11242,11243":
        case "11211,11212,11213#11231,11232,11233#11251,11252,11253":
        case "11301,11302,11303#11321,11322,11323#11341,11342,11343":
        case "11311,11312,11313#11331,11332,11333#11351,11352,11353":
        case "11401,11402,11403#11421,11422,11423#11441,11442,11443":
        case "11411,11412,11413#11431,11432,11433#11451,11452,11453":
        case "11201,11202,11203":
        case "11211,11212,11213":
        case "11221,11222,11223":
        case "11231,11232,11233":
        case "11241,11242,11243":
        case "11251,11252,11253":
        case "26201,26202,26203#26221,26222,26223#26241,26242,26243":
        case "26211,26212,26213#26231,26232,26233#26251,26252,26253":
        case "26301,26302,26303#26321,26322,26323#26341,26342,26343":
        case "26311,26312,26313#26331,26332,26333#26351,26352,26353":
        case "26401,26402,26403#26421,26422,26423#26441,26442,26443":
        case "26411,26412,26413#26431,26432,26433#26451,26452,26453":
        case "26201,26202,26203":
        case "26211,26212,26213":
        case "26221,26222,26223":
        case "26231,26232,26233":
        case "26241,26242,26243":
        case "26251,26252,26253":
        case "27201,27202,27203#27221,27222,27223#27241,27242,27243":
        case "27211,27212,27213#27231,27232,27233#27251,27252,27253":
        case "27301,27302,27303#27321,27322,27323#27341,27342,27343":
        case "27311,27312,27313#27331,27332,27333#27351,27352,27353":
        case "27401,27402,27403#27421,27422,27423#27441,27442,27443":
        case "27411,27412,27413#27431,27432,27433#27451,27452,27453":
        case "27201,27202,27203":
        case "27211,27212,27213":
        case "27221,27222,27223":
        case "27231,27232,27233":
        case "27241,27242,27243":
        case "27251,27252,27253":
        case "12301,12302,12303,12304#12401,12402,12403,12404#12501,12502,12503,12504#12601,12602,12603,12604":
        case "12301,12302,12304":
        case "12401,12402,12404":
        case "12501,12502,12504":
        case "12601,12602,12604":
        case "12005,12006#12105,12106#12205,12206#12305,12306#12405,12406#12505,12506#12605,12606":
        case "12007,12008#12107,12108#12207,12208#12307,12308#12407,12408#12507,12508#12607,12608":
        case "12005#12105#12205#12305#12405#12505#12605":
        case "12007#12107#12207#12307#12407#12507#12607":
        case "13121,13122,13221,13222":
        case "13131,13132,13231,13232":
        case "13141,13142,13241,13242":
        case "13151,13152,13251,13252":
        case "13161,13162,13261,13262":
        case "13171,13172,13271,13272":
        case "13181,13182,13281,13282":
        case "14101,14102,14103,14104#14201,14202,14203,14204#14301,14302,14303,14304":
        case "14101,14102,14103":
        case "14201,14202,14203":
        case "14301,14302,14303":
        case "14401,14402,14403":
        case "14501,14502,14503":
        case "15101,15102,15103#15201,15202,15203#15301,15302,15303":
        case "16101,16102,16104":
        case "16201,16202,16204":
        case "16301,16302,16304":
        case "16401,16402,16404":
        case "16501,16502,16504":
        case "16601,16602,16604":
        case "16701,16702,16704":
        case "17101,17102,17104":
        case "17201,17202,17204":
        case "17301,17302,17304":
        case "17401,17402,17404":
        case "17501,17502,17504":
        case "180105,180106,180108#180109,180110,180112#180113,180114,180116#180117,180118,180120#180121,180122,180124#180125,180126,180128#180129,180130,180132#180133,180134,180136#180137,180138,180140#180141,180142,180144#180145,180146,180148#180149,180150,180152#180153,180154,180156":
        case "180205,180206,180208#180209,180210,180212#180213,180214,180216#180217,180218,180220#180221,180222,180224#180225,180226,180228#180229,180230,180232#180233,180234,180236#180237,180238,180240#180241,180242,180244#180245,180246,180248#180249,180250,180252#180253,180254,180256":
        case "180305,180306,180308#180309,180310,180312#180313,180314,180316#180317,180318,180320#180321,180322,180324#180325,180326,180328#180329,180330,180332#180333,180334,180336#180337,180338,180340#180341,180342,180344#180345,180346,180348#180349,180350,180352#180353,180354,180356":
        case "180405,180406,180408#180409,180410,180412#180413,180414,180416#180417,180418,180420#180421,180422,180424#180425,180426,180428#180429,180430,180432#180433,180434,180436#180437,180438,180440#180441,180442,180444#180445,180446,180448#180449,180450,180452#180453,180454,180456":
        case "180505,180506,180508#180509,180510,180512#180513,180514,180516#180517,180518,180520#180521,180522,180524#180525,180526,180528#180529,180530,180532#180533,180534,180536#180537,180538,180540#180541,180542,180544#180545,180546,180548#180549,180550,180552#180553,180554,180556":
        case "180605,180606,180608#180609,180610,180612#180613,180614,180616#180617,180618,180620#180621,180622,180624#180625,180626,180628#180629,180630,180632#180633,180634,180636#180637,180638,180640#180641,180642,180644#180645,180646,180648#180649,180650,180652#180653,180654,180656":
        case "180705,180706,180708#180709,180710,180712#180713,180714,180716#180717,180718,180720#180721,180722,180724#180725,180726,180728#180729,180730,180732#180733,180734,180736#180737,180738,180740#180741,180742,180744#180745,180746,180748#180749,180750,180752#180753,180754,180756":
        case "180853,180854,180856":
        case "180953,180954,180956":
        case "181053,181054,181056":
        case "181153,181154,181156":
        case "181253,181254,181256":
        case "181353,181354,181356":
        case "181453,181454,181456":
        case "181553,181554,181556":
        case "19301,19302,19303,19304#19401,19402,19403,19404#19501,19502,19503,19504#19601,19602,19603,19604":
        case "19301,19302":
        case "19401,19402":
        case "19501,19502":
        case "19601,19602":
        case "19005#19105#19205#19305#19405#19505#19605":
        case "19007#19107#19207#19307#19407#19507#19607":
        case "21101,21102,21104":
        case "21201,21202,21204":
        case "21301,21302,21304":
        case "21401,21402,21404":
        case "21501,21502,21504":
        case "21601,21602,21604":
        case "21701,21702,21704":
            return GameDrawer.OuterSpecialMinute(e, r, a, i, n.split("#"));
        case "12005&01#12105&01#12205&01#12305&01#12405&01#12505&01#12605&01":
        case "12007&01#12107&01#12207&01#12307&01#12407&01#12507&01#12607&01":
        case "19005&01#19105&01#19205&01#19305&01#19405&01#19505&01#19605&01":
        case "19007&01#19107&01#19207&01#19307&01#19407&01#19507&01#19607&01":
            return GameDrawer.OuterSingleTeam(e, r, a, i, n);
        case "180101&01#180181&01#180182&05#180182&10#180182&15#180182&20#180178&01#180178&02#180178&03#180179&01#180179&02#180179&03#180180&01#180180&02#180180&03#180171&01#180171&02#180171&03#180172&01#180172&02#180172&03#180173&01#180173&02#180173&03#180174&01#180174&02#180174&03#180175&01#180175&02#180175&03#180176&01#180176&02#180176&03#180177&01#180177&02#180177&03#180191&01#180183&01#180183&16#180184&05#180185&01#180186&01":
        case "180201&01#180281&01#180282&05#180282&10#180282&15#180282&20#180278&01#180278&02#180278&03#180279&01#180279&02#180279&03#180280&01#180280&02#180280&03#180271&01#180271&02#180271&03#180272&01#180272&02#180272&03#180273&01#180273&02#180273&03#180274&01#180274&02#180274&03#180275&01#180275&02#180275&03#180276&01#180276&02#180276&03#180277&01#180277&02#180277&03#180291&01#180283&01#180283&16#180284&05#180285&01#180286&01":
        case "180301&01#180381&01#180382&05#180382&10#180382&15#180382&20#180378&01#180378&02#180378&03#180379&01#180379&02#180379&03#180380&01#180380&02#180380&03#180371&01#180371&02#180371&03#180372&01#180372&02#180372&03#180373&01#180373&02#180373&03#180374&01#180374&02#180374&03#180375&01#180375&02#180375&03#180376&01#180376&02#180376&03#180377&01#180377&02#180377&03#180391&01#180383&01#180383&16#180384&05#180385&01#180386&01":
        case "180401&01#180481&01#180482&05#180482&10#180482&15#180482&20#180478&01#180478&02#180478&03#180479&01#180479&02#180479&03#180480&01#180480&02#180480&03#180471&01#180471&02#180471&03#180472&01#180472&02#180472&03#180473&01#180473&02#180473&03#180474&01#180474&02#180474&03#180475&01#180475&02#180475&03#180476&01#180476&02#180476&03#180477&01#180477&02#180477&03#180491&01#180483&01#180483&16#180484&05#180485&01#180486&01":
        case "180501&01#180581&01#180582&05#180582&10#180582&15#180582&20#180578&01#180578&02#180578&03#180579&01#180579&02#180579&03#180580&01#180580&02#180580&03#180571&01#180571&02#180571&03#180572&01#180572&02#180572&03#180573&01#180573&02#180573&03#180574&01#180574&02#180574&03#180575&01#180575&02#180575&03#180576&01#180576&02#180576&03#180577&01#180577&02#180577&03#180591&01#180583&01#180583&16#180584&05#180585&01#180586&01":
        case "180601&01#180681&01#180682&05#180682&10#180682&15#180682&20#180678&01#180678&02#180678&03#180679&01#180679&02#180679&03#180680&01#180680&02#180680&03#180671&01#180671&02#180671&03#180672&01#180672&02#180672&03#180673&01#180673&02#180673&03#180674&01#180674&02#180674&03#180675&01#180675&02#180675&03#180676&01#180676&02#180676&03#180677&01#180677&02#180677&03#180691&01#180683&01#180683&16#180684&05#180685&01#180686&01":
        case "180701&01#180781&01#180782&05#180782&10#180782&15#180782&20#180778&01#180778&02#180778&03#180779&01#180779&02#180779&03#180780&01#180780&02#180780&03#180771&01#180771&02#180771&03#180772&01#180772&02#180772&03#180773&01#180773&02#180773&03#180774&01#180774&02#180774&03#180775&01#180775&02#180775&03#180776&01#180776&02#180776&03#180777&01#180777&02#180777&03#180791&01#180783&01#180783&16#180784&05#180785&01#180786&01":
            return GameDrawer.OuterSingle(e, r, a, n);
        default:
            return GameDrawer.OuterDefault(e, r[1], t, a, i, n, r[0], s, !0)
        }
    },
    OuterDefault: function(e, t, a, i, n, r, s, o, l) {
        var c = ""
          , d = !(!(a = a || {}) || $.isEmptyObject(a))
          , u = !1
          , h = 0 == o ? $.extend([], t).splice(0, 2) : t;
        if (l) {
            c = "<td";
            for (var p = 0; p < e.length; p++)
                c += e[p];
            c += ">"
        }
        var m = a.pk || ""
          , g = ["", ""]
          , g = s == Args.PKPL ? "bb" == MainProperty.gameData[i].type ? ["", m] : [m, ""] : s == Args.BigSmallPL ? [m, langFont.Font_Small] : s == Args.OddPairPL ? [langFont.Font_Single, langFont.Font_Pair] : ["", ""];
        c += '<ul class="GLOdds" pkType="' + s + '">',
        s == Args.PKPL && (1 == a.lineAt && 2 == MainProperty.gameData[i].h || 0 == a.lineAt && MainProperty.gameData[i].h <= 1) && (g = g.reverse());
        for (p = 0; p < h.length; p++) {
            Mapping.IsHomeChange(MainProperty.gameData[i].type, r, MainProperty.gameData[i].h) && (_ = "1" == (_ = h[p].substr(h[p].length - 1)) ? "2" : "2" == _ ? "1" : _,
            h[p] = h[p].substr(0, h[p].length - 1) + _);
            var f = Cart.ChkScheduleBgColor(i + "_" + n + "_" + r + "_" + h[p]) ? " on" : ""
              , v = "";
            a[h[p]] && a[h[p]][MainProperty.isPrincipal] && (v = a[h[p]][MainProperty.isPrincipal],
            u = !(!u && !v));
            var _, y = "";
            s < Args.OnlyPL ? (_ = g[p] || "",
            _ = s == Args.OddPairPL ? v ? _ : "" : m ? _ : "",
            y = '<div id="opk' + i + h[p] + r + n + '" class="GLOdds_L">' + _ + '</div><div id="opl' + i + h[p] + r + n + '" class="GLOdds_R" principal="1">' + v + "</div>",
            c += '<li class="' + (v ? "btn_GLOdds" + f : "noneOdds") + '" rel="' + i + "_" + n + "_" + r + "_" + h[p] + '">' + y + "</li>") : c += '<li id="opl' + i + h[p] + r + n + '" class="' + (v ? "btn_GLOdds" + f : "noneOdds") + '" principal="1" rel="' + i + "_" + n + "_" + r + "_" + h[p] + '">' + v + "</li>"
        }
        return c += "</ul>",
        l && (c += "</td>"),
        {
            html: c,
            hasContent: d,
            hasOdds: u
        }
    },
    OuterSimple: function(e, t, a, i, n, r) {
        for (var s = "", o = !(!(a = a || {}) || $.isEmptyObject(a)), l = 0; l < t.length; l++) {
            var c = Cart.ChkScheduleBgColor(i + "_" + n + "_" + r + "_" + t[l]) ? " on" : ""
              , d = a[t[l]] && a[t[l]][MainProperty.isPrincipal] ? a[t[l]][MainProperty.isPrincipal] : ""
              , u = "";
            s += '<td id="opl' + i + t[l] + r + n + '"';
            for (var h = 0; h < e.length; h++)
                0 <= e[h].indexOf("class") && (u = e[h].substr(0, e[h].length - 1) + (d ? " btn_GLOdds" + c : " noneOdds") + '"'),
                s += u;
            s += 'rel="' + i + "_" + n + "_" + r + "_" + t[l] + '" principal="1">',
            s += d || "",
            s += "</td>"
        }
        return {
            html: s,
            hasContent: o
        }
    },
    OuterCS: function(e, t, a, i, n, r) {
        for (var s = !(!(a = a || {}) || $.isEmptyObject(a)), o = "<tr", l = 0; l < e.length; l++)
            0 <= e[l].indexOf("class") && (e[l] = e[l].substr(0, e[l].length - 1) + ' GLInList"'),
            o += e[l];
        o += ' sT="' + n + '">';
        for (var c = 0; c < t.length; c++) {
            for (var d = "", l = 0; l < t[c].length; l++) {
                var u = t[c][l];
                Mapping.IsHomeChange(MainProperty.gameData[i].type, r, MainProperty.gameData[i].h) && (u = (g = t[c][l].split(""))[1] + g[0]);
                var h = Cart.ChkScheduleBgColor(i + "_" + n + "_" + r + "_" + u) ? " on" : ""
                  , p = "99" == t[c][l] ? langFont.Font_ElseWithBlank : t[c][l].split("").join(" - ")
                  , m = c < 10 && 0 <= ["11061", "26061", "27061"].indexOf(r) || c < 6 && 0 <= ["11161", "26161", "27161"].indexOf(r) ? "li" : "td"
                  , g = a[u] && a[u][MainProperty.isPrincipal] ? a[u][MainProperty.isPrincipal] : "";
                d += "<" + m + ' class="' + (g ? "btn_GLOdds" + h : "noneOdds") + '" rel="' + i + "_" + n + "_" + r + "_" + u + '">',
                d += '<div class="GLOdds_T">' + p + "</div>",
                d += '<div id="opl' + i + u + r + n + '" class="GLOdds_B csHeight" principal="1">' + g + "</div>",
                d += "</" + m + ">"
            }
            c < 10 && 0 <= ["11061", "26061", "27061"].indexOf(r) || c < 6 && 0 <= ["11161", "26161", "27161"].indexOf(r) ? o += '<td><ul class="GLOdds">' + d + "</ul></td>" : o += d
        }
        return {
            html: o += "</tr>",
            hasContent: s
        }
    },
    OuterSpecialMinute: function(e, t, a, i, n) {
        for (var r = !1, s = "<td", o = 0; o < e.length; o++)
            s += e[o];
        s += ">";
        for (o = 0; o < n.length; o++) {
            var l = n[o].split(",")
              , c = ["GLOddsSingle_T", "GLOddsSingle"]
              , d = "";
            switch (l[0]) {
            case "11201":
            case "11301":
            case "11401":
            case "26201":
            case "26301":
            case "26401":
            case "27201":
            case "27301":
            case "27401":
                c = ["GLOdds15mins_T", "GLOdds15mins"],
                d = langFont.Font_SCSpecific15Items[0];
                break;
            case "11211":
            case "11311":
            case "11411":
            case "26211":
            case "26311":
            case "26411":
            case "27211":
            case "27311":
            case "27411":
                c = ["GLOdds15mins_T", "GLOdds15mins"],
                d = langFont.Font_SCSpecific15Items[1];
                break;
            case "11221":
            case "11321":
            case "11421":
            case "26221":
            case "26321":
            case "26421":
            case "27221":
            case "27321":
            case "27421":
                c = ["GLOdds15mins_T", "GLOdds15mins"],
                d = langFont.Font_SCSpecific15Items[2];
                break;
            case "11231":
            case "11331":
            case "11431":
            case "26231":
            case "26331":
            case "26431":
            case "27231":
            case "27331":
            case "27431":
                c = ["GLOdds15mins_T", "GLOdds15mins"],
                d = langFont.Font_SCSpecific15Items[3];
                break;
            case "11241":
            case "11341":
            case "11441":
            case "26241":
            case "26341":
            case "26441":
            case "27241":
            case "27341":
            case "27441":
                c = ["GLOdds15mins_T", "GLOdds15mins"],
                d = langFont.Font_SCSpecific15Items[4];
                break;
            case "11251":
            case "11351":
            case "11451":
            case "26251":
            case "26351":
            case "26451":
            case "27251":
            case "27351":
            case "27451":
                c = ["GLOdds15mins_T", "GLOdds15mins"],
                d = langFont.Font_SCSpecific15Items[5];
                break;
            case "12301":
                d = langFont.Font_BKQuarters[0];
                break;
            case "12401":
                d = langFont.Font_BKQuarters[1];
                break;
            case "12501":
                d = langFont.Font_BKQuarters[2];
                break;
            case "12601":
                d = langFont.Font_BKQuarters[3];
                break;
            case "12005":
            case "12007":
                d = langFont.Font_FT;
                break;
            case "12105":
            case "12107":
                d = langFont.Font_1stHalf;
                break;
            case "12205":
            case "12207":
                d = langFont.Font_2ndHalf;
                break;
            case "12305":
            case "12307":
                d = langFont.Font_BKQuarters[0];
                break;
            case "12405":
            case "12407":
                d = langFont.Font_BKQuarters[1];
                break;
            case "12505":
            case "12507":
                d = langFont.Font_BKQuarters[2];
                break;
            case "12605":
            case "12607":
                d = langFont.Font_BKQuarters[3];
                break;
            case "13111":
            case "13211":
                d = langFont.Font_BBRounds[0];
                break;
            case "13121":
            case "13221":
                d = langFont.Font_BBRounds[1];
                break;
            case "13131":
            case "13231":
                d = langFont.Font_BBRounds[2];
                break;
            case "13141":
            case "13241":
                d = langFont.Font_BBRounds[3];
                break;
            case "13151":
            case "13251":
                d = langFont.Font_BBRounds[4];
                break;
            case "13161":
            case "13261":
                d = langFont.Font_BBRounds[5];
                break;
            case "13171":
            case "13271":
            case "13273":
                d = langFont.Font_BBRounds[6];
                break;
            case "13181":
            case "13281":
                d = langFont.Font_BBRounds[7];
                break;
            case "14101":
            case "14103":
                d = langFont.Font_TNSetsItems[0];
                break;
            case "14201":
            case "14203":
                d = langFont.Font_TNSetsItems[1];
                break;
            case "14301":
            case "14303":
                d = langFont.Font_TNSetsItems[2];
                break;
            case "14401":
            case "14403":
                d = langFont.Font_TNSetsItems[3];
                break;
            case "14501":
            case "14503":
                d = langFont.Font_TNSetsItems[4];
                break;
            case "15101":
                d = langFont.Font_IHQuarters[0];
                break;
            case "15201":
                d = langFont.Font_IHQuarters[1];
                break;
            case "15301":
                d = langFont.Font_IHQuarters[2];
                break;
            case "16101":
                d = langFont.Font_VLSetsItems[0];
                break;
            case "16201":
                d = langFont.Font_VLSetsItems[1];
                break;
            case "16301":
                d = langFont.Font_VLSetsItems[2];
                break;
            case "16401":
                d = langFont.Font_VLSetsItems[3];
                break;
            case "16501":
                d = langFont.Font_VLSetsItems[4];
                break;
            case "16601":
                d = langFont.Font_VLSetsItems[5];
                break;
            case "16701":
                d = langFont.Font_VLSetsItems[6];
                break;
            case "17101":
                d = langFont.Font_BMSetsItems[0];
                break;
            case "17201":
                d = langFont.Font_BMSetsItems[1];
                break;
            case "17301":
                d = langFont.Font_BMSetsItems[2];
                break;
            case "17401":
                d = langFont.Font_BMSetsItems[3];
                break;
            case "17501":
                d = langFont.Font_BMSetsItems[4];
                break;
            case "180105":
            case "180205":
            case "180305":
            case "180405":
            case "180505":
            case "180605":
            case "180705":
                d = langFont.Font_ESSetsItems[0];
                break;
            case "180109":
            case "180209":
            case "180309":
            case "180409":
            case "180509":
            case "180609":
            case "180709":
                d = langFont.Font_ESSetsItems[1];
                break;
            case "180113":
            case "180213":
            case "180313":
            case "180413":
            case "180513":
            case "180613":
            case "180713":
                d = langFont.Font_ESSetsItems[2];
                break;
            case "180117":
            case "180217":
            case "180317":
            case "180417":
            case "180517":
            case "180617":
            case "180717":
                d = langFont.Font_ESSetsItems[3];
                break;
            case "180121":
            case "180221":
            case "180321":
            case "180421":
            case "180521":
            case "180621":
            case "180721":
                d = langFont.Font_ESSetsItems[4];
                break;
            case "180125":
            case "180225":
            case "180325":
            case "180425":
            case "180525":
            case "180625":
            case "180725":
                d = langFont.Font_ESSetsItems[5];
                break;
            case "180129":
            case "180229":
            case "180329":
            case "180429":
            case "180529":
            case "180629":
            case "180729":
                d = langFont.Font_ESSetsItems[6];
                break;
            case "180133":
            case "180233":
            case "180333":
            case "180433":
            case "180533":
            case "180633":
            case "180733":
                d = langFont.Font_ESSetsItems[7];
                break;
            case "180137":
            case "180237":
            case "180337":
            case "180437":
            case "180537":
            case "180637":
            case "180737":
                d = langFont.Font_ESSetsItems[8];
                break;
            case "180141":
            case "180241":
            case "180341":
            case "180441":
            case "180541":
            case "180641":
            case "180741":
                d = langFont.Font_ESSetsItems[9];
                break;
            case "180145":
            case "180245":
            case "180345":
            case "180445":
            case "180545":
            case "180645":
            case "180745":
                d = langFont.Font_ESSetsItems[10];
                break;
            case "180149":
            case "180249":
            case "180349":
            case "180449":
            case "180549":
            case "180649":
            case "180749":
                d = langFont.Font_ESSetsItems[11];
                break;
            case "180153":
            case "180253":
            case "180353":
            case "180453":
            case "180553":
            case "180653":
            case "180753":
            case "180853":
            case "180953":
            case "181053":
            case "181153":
            case "181253":
            case "181353":
            case "181453":
            case "181553":
                d = langFont.Font_ESSetsItems[12];
                break;
            case "19301":
                d = langFont.Font_AFQuarters[0];
                break;
            case "19401":
                d = langFont.Font_AFQuarters[1];
                break;
            case "19501":
                d = langFont.Font_AFQuarters[2];
                break;
            case "19601":
                d = langFont.Font_AFQuarters[3];
                break;
            case "19005":
            case "19007":
                d = langFont.Font_FT;
                break;
            case "19105":
            case "19107":
                d = langFont.Font_1stHalf;
                break;
            case "19205":
            case "19207":
                d = langFont.Font_2ndHalf;
                break;
            case "19305":
            case "19307":
                d = langFont.Font_AFQuarters[0];
                break;
            case "19405":
            case "19407":
                d = langFont.Font_AFQuarters[1];
                break;
            case "19505":
            case "19507":
                d = langFont.Font_AFQuarters[2];
                break;
            case "19605":
            case "19607":
                d = langFont.Font_AFQuarters[3];
                break;
            case "21101":
                d = langFont.Font_TTSetsItems[0];
                break;
            case "21201":
                d = langFont.Font_TTSetsItems[1];
                break;
            case "21301":
                d = langFont.Font_TTSetsItems[2];
                break;
            case "21401":
                d = langFont.Font_TTSetsItems[3];
                break;
            case "21501":
                d = langFont.Font_TTSetsItems[4];
                break;
            case "21601":
                d = langFont.Font_TTSetsItems[5];
                break;
            case "21701":
                d = langFont.Font_TTSetsItems[6]
            }
            l = GameDrawer.OuterSingleSpecial(a, d, c, t, i, l, Tool.IsSC(MainProperty.ballType)),
            r = !(!l.hasContent && !r);
            s += l.html
        }
        return {
            html: s += "</td>",
            hasContent: r
        }
    },
    OuterSingleSpecial: function(e, t, a, i, n, r, s) {
        for (var o = !1, l = !1, c = "", d = 0; d < r.length; d++) {
            var u = MainProperty.oddData[e][n] ? MainProperty.oddData[e][n][r[d]] : {}
              , u = GameDrawer.OuterDefault(["", ""], i[d][1], u, e, n, r[d], i[d][0], s, !1)
              , o = !(!u.hasContent && !o)
              , l = !(!u.hasOdds && !l);
            c += u.html
        }
        return c = '<div class="' + a[0] + '">' + t + '</div><div class="' + a[1] + '">' + c + "</div>",
        {
            html: o ? c : "",
            hasContent: o
        }
    },
    OuterSingleTeam: function(e, t, a, i, n) {
        for (var r = "<td", s = 0; s < e.length; s++)
            0 <= e[s].indexOf("class") && (e[s] = e[s].substr(0, e[s].length - 1) + '"'),
            r += e[s];
        r += ">";
        for (var o = MainProperty.gameData[a], l = (o.mode < 2 ? o.type : o.type,
        !1), c = MainProperty.oddData[a] || {}, d = n.split("#"), u = 0; u < t.length; u++) {
            var h = langFont["Font_" + o.type.toUpperCase() + "OuterItems"][u]
              , p = d[u].split("&")[0]
              , m = GameDrawer.OuterSingleDefault(p, i, c, a, t[u], h)
              , h = !(!m.hasOdds && !m.hasContent)
              , l = !(!m.hasContent && !l);
            r += '<div class="GLOddsPcgame' + (h ? " show" : "") + '" rel="' + a + "_" + i + "_" + p + '">' + m.html + "</div>"
        }
        return {
            html: r += "</td>",
            hasContent: l
        }
    },
    OuterSingle: function(e, t, a, i) {
        for (var n = "<td", r = 0; r < e.length; r++)
            0 <= e[r].indexOf("class") && (e[r] = e[r].substr(0, e[r].length - 1) + '"'),
            n += e[r];
        n += ">";
        for (var s = MainProperty.gameData[a], o = s.mode < 2 ? "DS" + s.type : "ZD" + s.type, l = !1, c = MainProperty.oddData[a] || {}, d = i.split("#"), u = Object.keys(c).sort(), h = 0; h < t.length; h++)
            for (var p = langFont["Font_" + s.type.toUpperCase() + "OuterItems"][h].replace("X", MainProperty.sortOption.kindSub[o]), m = 0; m < u.length; m++) {
                var g, f, v = d[h].split("&")[0], _ = d[h].split("&")[1];
                u[m].substr(2) == _ && (_ = u[m],
                f = !(!(g = GameDrawer.OuterSingleDefault(v, _, c, a, t[h], p)).hasOdds && !g.hasContent),
                l = !(!g.hasContent && !l),
                n += '<div class="GLOddsPcgame' + (f ? " show" : "") + '" rel="' + a + "_" + _ + "_" + v + '">' + g.html + "</div>")
            }
        return {
            html: n += "</td>",
            hasContent: l
        }
    },
    OuterSingleDefault: function(e, t, a, i, n, r) {
        for (var s = a && a[t] && a[t][e] ? a[t][e] : {}, a = !(!s || $.isEmptyObject(s)), o = n[0], l = s.pk || "", c = ["", ""], c = o == Args.PKPL ? [langFont.Font_Home, langFont.Font_Guest] : o == Args.BigSmallPL ? "es" == MainProperty.gameData[i].type ? 0 <= ["180191", "180291", "180391", "180491", "180591", "180691", "180791"].indexOf(e) ? [langFont.Font_MoreThan + " pk", langFont.Font_LessThan + " pk"] : [langFont.Font_Big + " pk", langFont.Font_Small + " pk"] : [l, langFont.Font_Small] : o == Args.OddPairPL ? [langFont.Font_Single, langFont.Font_Pair] : ["", ""], d = "", u = !1, h = n[1], p = 0; p < h.length; p++) {
            Mapping.IsHomeChange(MainProperty.gameData[i].type, e, MainProperty.gameData[i].h) && (f = "1" == (f = h[p].substr(h[p].length - 1)) ? "2" : "2" == f ? "1" : f,
            h[p] = h[p].substr(0, h[p].length - 1) + f);
            var m = Cart.ChkScheduleBgColor(i + "_" + t + "_" + e + "_" + h[p]) ? " on" : ""
              , g = "";
            s[h[p]] && s[h[p]][MainProperty.isPrincipal] && (g = s[h[p]][MainProperty.isPrincipal],
            u = !(!u && !g));
            var f = c[p] || ""
              , f = o == Args.OddPairPL ? g ? f : "" : l ? f : "";
            f = l ? ((1 == s.lineAt && 2 == MainProperty.gameData[i].h || 0 == s.lineAt && MainProperty.gameData[i].h <= 1) && (0 <= f.indexOf("+pk") ? f = f.replace("+", "-") : 0 <= f.indexOf("-pk") && (f = f.replace("-", "+"))),
            0 == s.pk && (f = (f = f.replace("+pk", "pk")).replace("-pk", "pk")),
            f.replace("pk", l)) : (f = (f = f.replace(" +pk", "")).replace(" -pk", "")).replace(" pk", ""),
            d += '<li class="' + (g ? "btn_GLOdds" + m : "noneOdds") + '" rel="' + i + "_" + t + "_" + e + "_" + h[p] + '"><div id="opk' + i + h[p] + e + t + '" class="GLOdds_L">' + f + '</div><div id="opl' + i + h[p] + e + t + '" class="GLOdds_R" principal="1">' + g + "</div>"
        }
        return {
            html: '<div class="GLOddsPcgame_T">' + r + '</div><div class="GLOddsPcgame_In"><ul class="GLOdds" pkType="' + o + '">' + d + "</ul></div>",
            hasContent: a,
            hasOdds: u
        }
    },
    InnerOddFunc: function(e, t, a, i, n, r) {
        var s = {}
          , o = [i]
          , o = "X" == i || "*" == i ? GetGameST(null, MainProperty.innerData.oddData[t], !0).sort() : Object.keys(e).filter(function(e) {
            return e.substr(2) == i
        });
        switch (n) {
        case "11061":
        case "11161":
        case "26061":
        case "26161":
        case "27061":
        case "27161":
            s = GameDrawer.InnerCS(e, t, a, o, n, r);
            break;
        case "11711":
        case "11712":
        case "11713":
        case "26711":
        case "26712":
        case "26713":
        case "27711":
        case "27712":
        case "27713":
            s = GameDrawer.InnerOneMulti(e, t, a, o, n, r);
            break;
        case "11063":
        case "26063":
        case "27063":
            s = GameDrawer.InnerHalfFull(e, t, o, n, r);
            break;
        default:
            s = Array.isArray(n) ? 1 == r ? GameDrawer.InnerSeveralMulti(e, t, a, o, n) : GameDrawer.InnerNumberMulti(e, t, o, n) : GameDrawer.InnerDefault(e, t, a, o, n, r)
        }
        return s
    },
    InnerBaseDrawer: function(e, t, a, i, n, r, s) {
        for (var o = "", l = 0; l < r.length; l++) {
            var c, d, u, h, p = $.extend([], r[l]), m = "", g = p.join();
            if (0 <= g.indexOf(langFont.Font_Small) || 0 <= g.indexOf(langFont.Font_Big) || 0 <= g.indexOf(langFont.Font_MoreThan) || 0 <= g.indexOf(langFont.Font_LessThan) ? m = ' type="' + Args.BigSmallPL + '"' : (0 <= g.indexOf("+pk") || 0 <= g.indexOf("-pk")) && (m = ' type="' + Args.PKPL + '"'),
            Mapping.IsHomeChange(e.type, n, e.h))
                for (var f = 0; f < p.length; f++) {
                    var v = "1" == (v = p[f].substr(p[f].length - 1)) ? "2" : "2" == v ? "1" : v;
                    p[f] = p[f].substr(0, p[f].length - 1) + v
                }
            0 == p.length ? o += "<div></div>" : (c = p[0],
            c = s ? ((1 == t.lineAt && 2 == e.h || 0 == t.lineAt && e.h <= 1) && (0 <= c.indexOf("+pk") ? c = c.replace("+", "-") : 0 <= c.indexOf("-pk") && (c = c.replace("-", "+"))),
            0 == t.pk && (c = (c = c.replace("+pk", "pk")).replace("-pk", "pk")),
            c.replace("pk", s)) : (c = (c = p[0].replace(" +pk", "")).replace(" -pk", "")).replace(" pk", ""),
            d = p[1].replace("X", i.substr(2)),
            u = Cart.ChkScheduleBgColor(a + "_" + i + "_" + n + "_" + d) ? " on" : "",
            h = 0 <= ["11062", "11162", "26062", "26162", "27062", "27162"].indexOf(n),
            g = t[d] && t[d][MainProperty.isPrincipal] ? t[d][MainProperty.isPrincipal] : "",
            "none" != c ? (o += '<div class="' + (g ? "btn_GSOdds notBind" : "noneOdds") + u + '" rel="' + a + "_" + i + "_" + n + "_" + d + '"' + m + ">",
            o += '<div id="ipk' + a + d + n + i + '" class="GSOdds_T' + (g || h ? "" : " none") + '">' + c + "</div>",
            o += '<div id="ipl' + a + d + n + i + '" class="GSOdds_B" principal="1">' + g + "</div>") : o += '<div id="ipl' + a + d + n + i + '" class="' + (g ? "btn_GSOdds notBind" : "noneOdds") + u + '" rel="' + a + "_" + i + "_" + n + "_" + d + '" principal="1">' + g,
            o += "</div>")
        }
        return o
    },
    InnerDefault: function(e, t, a, i, n, r) {
        for (var s = "", o = null, l = 0; l < i.length; l++) {
            var c, d = i[l], u = null;
            e && e[d] && e[d][n] && ((u = e[d][n]).ra && u.rb && (o = {
                a: u.ra.toString(),
                b: u.rb.toString()
            }),
            s += '<div class="GSOddsBox">',
            c = u.pk || "",
            s += GameDrawer.InnerBaseDrawer(MainProperty.innerData.gameData[t], u, t, d, n, r, c),
            s += "</div>")
        }
        if (s) {
            for (var h = "", l = 0; l < a.length; l++)
                h += "<th>" + a[l] + "</th>";
            s = "<tr>" + h + "<td>" + s + "</td></tr>"
        }
        return {
            html: s,
            score: o
        }
    },
    InnerOneMulti: function(e, t, a, i, n, r) {
        for (var s = "", o = {
            html: "",
            score: null
        }, l = 0; l < i.length; l++) {
            var c = i[l]
              , d = parseInt(c.substr(2), 10).toString()
              , u = a.map(function(e) {
                return e.replace(" X ", d)
            });
            s += (o = GameDrawer.InnerDefault(e, t, u, [c], n, r[0])).html;
            for (var h = 1; h < r.length; h++)
                s += (o = GameDrawer.InnerDefault(e, t, [], [c], n, r[h])).html
        }
        return {
            html: s,
            score: o.score
        }
    },
    InnerSeveralMulti: function(e, t, a, i, n) {
        for (var r = "", s = {
            html: "",
            score: null
        }, o = 0; o < n.length; o++)
            for (var l = n[o][0], c = n[o][2], d = 0; d < i.length; d++) {
                var u = i[d];
                0 == r.length ? r += (s = GameDrawer.InnerDefault(e, t, a, [u], l, c)).html : r += (s = GameDrawer.InnerDefault(e, t, [], [u], l, c)).html
            }
        return {
            html: r,
            score: s.score
        }
    },
    InnerNumberMulti: function(e, t, a, i) {
        var n = ""
          , r = {
            html: "",
            score: null
        };
        if (e)
            for (var s = 0; s < i.length; s++) {
                var o = i[s][0]
                  , l = $.extend([], a)
                  , c = i[s][1][1]
                  , d = i[s][2];
                "X" == i[s][1][0] ? l = l.filter(function(e) {
                    return "01" != e.substr(2) && "99" != e.substr(2)
                }) : 0 == isNaN(parseInt(i[s][1][0], 10)) && (l = l.filter(function(e) {
                    return e.substr(2) == i[s][1][0]
                }));
                for (var u = 0; u < l.length; u++) {
                    var h = $.extend([], c).map(function(e) {
                        return e.replace(" X ", parseInt(l[u].substr(2), 10))
                    });
                    n += (r = GameDrawer.InnerDefault(e, t, h, [l[u]], o, d)).html
                }
            }
        return {
            html: n,
            score: r.score
        }
    },
    InnerCS: function(e, t, a, i, n, r) {
        for (var s = "", o = null, l = "", l = '<tr><td><div class="GSOddsBox">', c = 0; c < a.length; c++)
            l += "<div>" + a[c] + "</div>";
        l += "</div></td></tr>";
        for (c = 0; c < i.length; c++) {
            var d = i[c]
              , u = null;
            if (e && e[d] && e[d][n]) {
                (u = e[d][n]).ra && u.rb && (o = {
                    a: u.ra.toString(),
                    b: u.rb.toString()
                });
                for (var h = 0; h < r.length; h++) {
                    s += '<tr><td><div class="GSOddsBox">';
                    for (var p, m, g, f = 0; f < r[h].length; f++)
                        0 == r[h][f].length ? s += "<div></div>" : (p = r[h][f][1],
                        Mapping.IsHomeChange(MainProperty.innerData.gameData[t].type, n, MainProperty.innerData.gameData[t].h) && (p = (g = r[h][f][1].split(""))[1] + g[0]),
                        m = Cart.ChkScheduleBgColor(t + "_" + d + "_" + n + "_" + p) ? " on" : "",
                        s += '<div class="' + ((g = u[p] && u[p][MainProperty.isPrincipal] ? u[p][MainProperty.isPrincipal] : "") ? "btn_GSOdds notBind" : "noneOdds") + m + '" rel="' + t + "_" + d + "_" + n + "_" + p + '">',
                        s += '<div id="ipk' + t + p + n + d + '" class="GSOdds_L">' + r[h][f][0] + "</div>",
                        s += '<div id="ipl' + t + p + n + d + '" class="GSOdds_R" principal="1">' + g + "</div></div>");
                    s += "</div></td></tr>"
                }
            }
        }
        return {
            html: s = 0 < s.length ? l + s : s,
            score: o
        }
    },
    InnerHalfFull: function(e, t, a, i, n) {
        for (var r = "", s = null, o = 0; o < a.length; o++) {
            var l = a[o]
              , c = null;
            if (e && e[l] && e[l][i]) {
                (c = e[l][i]).ra && c.rb && (s = {
                    a: c.ra.toString(),
                    b: c.rb.toString()
                });
                for (var d = 0; d < n.length; d++) {
                    r += '<tr><td><div class="GSOddsBox">';
                    for (var u = 0; u < n[d].length; u++) {
                        var h = n[d][u][1].replace("X", l.substr(2))
                          , p = Cart.ChkScheduleBgColor(t + "_" + l + "_" + i + "_" + h) ? " on" : ""
                          , m = c[h] && c[h][MainProperty.isPrincipal] ? c[h][MainProperty.isPrincipal] : "";
                        r += '<div class="' + (m ? "btn_GSOdds notBind" : "noneOdds") + p + '" rel="' + t + "_" + l + "_" + i + "_" + h + '">',
                        r += '<div id="ipk' + t + h + i + l + '" class="GSOdds_T">' + n[d][u][0] + "</div>",
                        r += '<div id="ipl' + t + h + i + l + '" class="GSOdds_B" principal="1">' + m + "</div>",
                        r += "</div>"
                    }
                    r += "</div></td></tr>"
                }
            }
        }
        return {
            html: r,
            score: s
        }
    }
}
  , CartBase = {
    SetEvent: function() {
        $("#cartInfo > div.betInfo_In > div.betInfo_scroll").scrollbar(),
        $(document).keydown(function(e) {
            32 == e.keyCode && "CRB_keyIn_Text" !== e.target.className && e.preventDefault()
        }),
        $(document).keyup(function(e) {
            13 == e.keyCode && (1 != Alert.Status ? 0 < $("#singleStep2:visible").length ? CartS2.Confirm() : 0 < $("#singleStep3:visible").length ? CartS3.Close(parseInt($("#btnSC3Close").attr("dir"))) : 0 < $("#multiStep2:visible").length ? CartM2.Confirm() : 0 < $("#multiStep3:visible").length ? CartM3.Close(parseInt($("#btnMC3Close").attr("dir"))) : 0 < $("#fastCartInfo:visible").length && (0 < $("#fastCartInfo > input.btn_popFB_confirm:visible").length || 0 < $("#fastCartInfo > input.btn_popFB_change:visible").length ? CartFast.Check() : 0 < $("#fastCartInfo > input.btn_popFB_confirmOK:visible").length && CartFast.CloseStep3()) : Alert.Confirm())
        }),
        $("#btnCart").click(function() {
            CartBase.ChangeCartDisplay(Args.ShowCart)
        }),
        $("#btnReceipt").click(function() {
            CartBase.ChangeCartDisplay(Args.ShowReceipt)
        }),
        $("#btnSingle").click(function() {
            CartBase.ChangeCartInfoDisplayClickEvent(Args.Single)
        }),
        $("#btnMulti").click(function() {
            CartBase.ChangeCartInfoDisplayClickEvent(Args.Multi)
        }),
        $("#sc1BtmKeyNum").add("#sc1BtmShowNum").add("#mc1BtmKeyNum").add("#mc1BtmShowNum").add("#pointCount").attr("maxLength", MainProperty.cart.maxInputLength),
        CartBase.SetCartChip(),
        CartBase.ChangeCartDisplay(Args.ShowCart),
        CartS1.BindEvent(),
        CartS3.BindEvent(),
        CartM1.BindEvent(),
        CartM3.BindEvent(),
        CartFast.BindEvent()
    },
    ChangeCartDisplay: function(e) {
        if (!MainProperty.cart.isSending)
            switch (Cart.KeepSuccessStep3(!1),
            $("#noCart").add("#fastBetText").add("#cartInfoMode").add("#cartInfo").add("#receiptInfo").add("#noReceipt").hide(),
            e) {
            case Args.ShowCart:
                $("#cartBlock > div.betInfo > ul.betInfo_T > li.BIT_list").removeClass("on"),
                $("#btnCart").addClass("on"),
                CartBase.ChkCartDisplay();
                break;
            case Args.ShowReceipt:
                $("#cartBlock > div.betInfo > ul.betInfo_T > li.BIT_list").removeClass("on"),
                $("#btnReceipt").addClass("on"),
                0 == ReceiptVue.$store.newest.receiptIndex.length ? $("#noReceipt").show() : $("#noReceipt").hide(),
                $("#receiptInfo").show(),
                $("#receiptInfo > div.newbet_scroll > div.newbet_scroll").scrollTop(0)
            }
    },
    ChkCartDisplay: function() {
        MainProperty.cart.isSending || $("#btnCart").hasClass("on") && ($("#noCart").add("#fastBetText").add("#cartInfoMode").add("#cartInfo").add("#receiptInfo").hide(),
        0 < MainProperty.cart.list.length ? ($("#cartInfoMode").show(),
        $("#cartInfo").show(),
        $("#btnSingle").hasClass("on") || 1 == MainProperty.cart.list.length && MainProperty.cart.loc.step == Args.Step3 ? CartBase.ChangeCartInfoDisplay(Args.Single) : CartBase.ChangeCartInfoDisplay(Args.Multi)) : (CartBase.ChangeCartInfoDisplay(Args.Single),
        MainProperty.isFastTrade ? $("#fastBetText").show() : $("#noCart").css("display", "flex")))
    },
    ChangeCartInfoDisplayClickEvent: function(e) {
        MainProperty.cart.loc.step == Args.Step3 || MainProperty.cart.isSending || CartBase.ChangeCartInfoDisplay(e)
    },
    ChangeCartInfoDisplay: function(e) {
        switch (e) {
        case Args.Single:
            $("#singleStep1").add("#singleStep2").add("#singleStep3").add("#multiStep1").add("#multiStep2").add("#multiStep3").add("#multiNGTips").hide(),
            $("#cartInfoMode > li").removeClass("on"),
            $("#btnSingle").addClass("on"),
            $("#singleStep1").show(),
            CartBase.SetInputFocus(Args.Single);
            break;
        case Args.Multi:
            Cart.ChkCanUsePass() ? ($("#singleStep1").add("#singleStep2").add("#singleStep3").add("#multiStep1").add("#multiStep2").add("#multiStep3").add("#multiNGTips").hide(),
            $("#cartInfoMode > li").removeClass("on"),
            $("#btnMulti").addClass("on"),
            1 < MainProperty.cart.list.length ? ($("#multiStep1").show(),
            CartBase.SetInputFocus(Args.Multi)) : $("#multiNGTips").css("display", "flex")) : ShowAlert(Args.AlertText, langFont.Font_CantUsePass)
        }
        MainProperty.cart.loc.type = e,
        MainProperty.cart.loc.step = Args.Step1
    },
    SetInputFocus: function(e) {
        switch (CartBase.ClearKeyboardStyle(),
        e) {
        case Args.Single:
            1 == MainProperty.cart.list.length ? (e = MainProperty.cart.list[0].replace(/_/g, ""),
            CartS1.InputTouchEvent($("#txbSC1KeyNum" + e)),
            CartBase.SetFocus($("#txbSC1KeyNum" + e)),
            CartBase.SetFocusClass($("#txbSC1KeyNum" + e))) : (CartS1.BtmInputTouchEvent($("#sc1BtmKeyNum")),
            CartBase.SetFocus($("#sc1BtmKeyNum")),
            CartBase.SetFocusClass($("#sc1BtmKeyNum")));
            break;
        case Args.Multi:
            $("#p1Option").hasClass("on") || (CartM1.BtmInputTouchEvent(),
            CartBase.SetFocus($("#mc1BtmKeyNum")),
            CartBase.SetFocusClass($("#mc1BtmKeyNum")))
        }
    },
    ClearKeyboardStyle: function() {
        $("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input").add("#singleStep1 > div.betPlay > div.betPlay_In > div.betPlay_list > ul > li.BP_listIn > input").add("#multiStep1 > div.betPlay > div.betPlay_In > div.betPlay_list > ul > li.BP_listIn > input").removeClass("enter focus")
    },
    SetFocus: function(e) {
        var t = $(e).val();
        $(e).focus().val("").val(t)
    },
    SetFocusClass: function(e) {
        $(e).addClass("focus")
    },
    AddCartList: function(e, t) {
        var a, i, n, r, s, o, l, c = "object" == typeof e ? $(e).attr("rel") : e;
        CartBase.ChkCanAdd(c) && (a = (o = c.split("_"))[0],
        i = o[1],
        n = o[2],
        r = o[3],
        (l = $.extend({}, (t ? MainProperty.innerData : MainProperty).gameData[a])).type = Tool.IsCHorFI(l.type) ? "sc" : "op" == l.type ? "ot" : l.type,
        s = l,
        o = $.extend({}, t ? MainProperty.innerData.oddData[a] && MainProperty.innerData.oddData[a][i] ? MainProperty.innerData.oddData[a][i][n] : {} : MainProperty.oddData[a] && MainProperty.oddData[a][i] ? MainProperty.oddData[a][i][n] : {}),
        l = $.extend({}, (t ? MainProperty.innerData : MainProperty).allyData[s.aId]),
        MainProperty.isFastTrade && "object" == typeof e ? CartFast.Add(e, a, i, n, r, t) : MainProperty.isFastTrade || (0 == MainProperty.cart.list.length && (Cart.ClearBtmErrorPrompt(Args.Single, !0),
        Cart.ClearBtmErrorPrompt(Args.Multi, !0)),
        Cart.AddCartStep1(c, [l, s, o], null),
        1 == MainProperty.cart.list.length && CartBase.ChkCartExistOddsChange(),
        CartBase.ChangeCartDisplay(Args.ShowCart)))
    },
    ChkCanAdd: function(e) {
        var t = e.split("_")
          , a = t[0]
          , i = t[1]
          , n = t[2]
          , r = t[3]
          , s = MainProperty.gameData[a] ? $.extend({}, MainProperty.gameData[a]) : {}
          , t = Cart.GetModeType(s.type, s.mode);
        if (!(MainProperty.user.modeData && MainProperty.user.modeData[t] && MainProperty.user.modeData[t][n]))
            return !1;
        if (!MainProperty.user.modeData[t][n].enable)
            return ShowAlert(Args.AlertText, langFont.Font_CartBetClosed),
            !1;
        if (MainProperty.cart.isSending)
            return !1;
        if (0 <= MainProperty.cart.list.indexOf(e) && MainProperty.receiptKeepList.indexOf(e) < 0)
            return CartBase.Remove(a, i, n, r),
            !1;
        if (MainProperty.isFastTrade) {
            r = $("#pointCount").val();
            if (!(/^[\d]+$/.test(r) && 0 < parseInt(r)))
                return $("#fastNoInputPrompt").show(),
                $("#pointCount").addClass("error"),
                !1
        }
        MainProperty.user.balance < 1 && Header.ShowOrHideTurnPoint(),
        Cart.KeepSuccessStep3(!1);
        s = Cart.GetSameKTGroup(e, s.h);
        return !(MainProperty.cart.list.length - s.length + 1 > MainProperty.cart.cartLimit) || (ShowAlert(Args.AlertText, langFont.Font_CartBetItemsIsFull),
        !1)
    },
    DrawCartStep1Process: function(e) {
        var t, a, i, n;
        MainProperty.isFastTrade || (t = $("#singleStep1 > div.betPlay"),
        a = $("#mc1NGText"),
        i = e.split("_"),
        n = "",
        0 <= (e = MainProperty.cart.list.indexOf(e)) && MainProperty.cart.list[e + 1] && (n = MainProperty.cart.list[e + 1]),
        n && (n = n.replace(/_/g, ""),
        0 < $("#sc1" + n).length && (t = $("#sc1" + n)),
        0 < $("#mc1" + n).length && (a = $("#mc1" + n))),
        $(t).add(a).addClass("newCart"),
        CartBase.DrawCartStep1(i[0], i[1], i[2], i[3]))
    },
    DrawCartStep1: function(e, t, a, i) {
        CartS1.Draw(e, t, a, i),
        CartM1.Draw(e, t, a, i),
        CartBase.UpdateLengthDisplay(MainProperty.cart.list.length),
        CartBase.SetScheduleBgColor(),
        CartBase.ChkCartDisplay()
    },
    UpdateLengthDisplay: function(e) {
        $("#singleNum").add("#multiNum").text(e),
        $("#sc1BtmKeyNum").next("div.BP_double").text("x " + e),
        $("#sc1BtmShowNum").next("div.BP_double").text("x " + e),
        CartBase.UpdatePassOdds(e)
    },
    UpdatePassOdds: function(e) {
        var t = Cart.GetPassOddList()
          , a = "";
        1 < t.length && (MainProperty.cart.multiPassCount = [0, 0],
        Cart.CalcCombination(1, e - 1, e, Array(e), t),
        a = Tool.TransformMathFloor(CalcDecimal("+", MainProperty.cart.multiPassCount[0], -MainProperty.cart.multiPassCount[1]), 2));
        t = $("#mc1BtmKeyNumHeader > div.BP_bet > span").hasClass("t_oddsChange") ? "t_oddsChange" : "";
        $("#mc1BtmKeyNumHeader").html('<div class="BP_name">' + langFont["Font_Cart" + e + "x1"] + '</div><div class="BP_listT_double">1<span class="t_gray">x</span></div><div class="BP_bet">@<span class="' + t + '">' + a + "</span></div>")
    },
    SetScheduleBgColor: function() {
        var e = CartBase.GetGamePath("outerGamePath")
          , t = CartBase.GetGamePath("innerGamePath");
        $(e + " .btn_GLOdds").add(e + " .noneOdds").removeClass("on"),
        $(t + ".btn_GSOdds").add(t + ".noneOdds").removeClass("on");
        for (var a = 0; a < MainProperty.cart.list.length; a++)
            $(e + " .btn_GLOdds[rel=" + MainProperty.cart.list[a] + "]").add(t + "[rel=" + MainProperty.cart.list[a] + "]").addClass("on")
    },
    GetGamePath: function(e) {
        return {
            outerGamePath: Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList > div.GLIn > table.GLInBox > tbody > tr" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox > tbody > tr",
            innerGamePath: "#innerSchedule > div.gameStyle_list > div.gameStyle_In > table.gameStyle_Table > tbody > tr > td > div.GSOddsBox > div"
        }[e]
    },
    SetErrorMsgDisplay: function(e, t, a, i) {
        var n = ""
          , r = ""
          , s = "";
        switch (a && (4 == a.length ? (n = a[0] + a[1] + a[2] + a[3],
        r = a[0] + "_" + a[1] + "_" + a[2] + "_" + a[3]) : 1 == a.length && (s = a[0])),
        t) {
        case Args.Single:
            e ? MainProperty.cart.step1ErrorMsg.single.item[r] = e : delete MainProperty.cart.step1ErrorMsg.single.item[r],
            $("#sc1" + n + " > div.BIL_In > div.BIL_input > input").removeClass("error"),
            $("#sc1" + n + " > div.BIL_In > div.error_t").text(i.top),
            $("#sc1" + n).removeClass("off"),
            $("#sc1" + n + " > div.gameBetOff").remove(),
            i.top && $("#sc1" + n + " > div.BIL_In > div.BIL_input > input:first").addClass("error"),
            i.mask && ($("#sc1" + n).addClass("off"),
            $("#sc1" + n).prepend('<div class="gameBetOff">' + i.mask + "</div>")),
            CartBase.ChkBtmErrorPrompt(t);
            break;
        case Args.Multi:
            "multiBtm" == s ? (e ? MainProperty.cart.step1ErrorMsg.multi.item.multiBtm = e : delete MainProperty.cart.step1ErrorMsg.multi.item.multiBtm,
            $("#mc1BtmKeyNum").removeClass("error"),
            $("#multiStep1 > div.betPlay > div.betPlay_In > div.betPlay_list > div.error_t").text(i.top),
            i.top && $("#mc1BtmKeyNum").addClass("error")) : (e ? (s && (MainProperty.cart.step1ErrorMsg.multi.item[s] = e),
            n && (MainProperty.cart.step1ErrorMsg.multi.item[r] = e)) : (s && delete MainProperty.cart.step1ErrorMsg.multi.item[s],
            n && delete MainProperty.cart.step1ErrorMsg.multi.item[r]),
            $("#p1" + s + " > ul.BC_listIn > li > input").removeClass("error"),
            $("#p1" + s + " > div.error_t").text(i.top),
            $("#mc1" + n).removeClass("off"),
            $("#mc1" + n + " > div.gameBetOff").remove(),
            i.top && $("#p1" + s + " > ul.BC_listIn > li > input:first").addClass("error"),
            i.mask && ($("#mc1" + n).addClass("off"),
            $("#mc1" + n).prepend('<div class="gameBetOff">' + i.mask + "</div>"))),
            CartBase.ChkBtmErrorPrompt(t);
            break;
        case Args.Fast:
            e ? MainProperty.cart.step1ErrorMsg.fast.item[r] = e : delete MainProperty.cart.step1ErrorMsg.fast.item[r],
            a && 4 == a.length && ($("#fastCartInfo > div.popFB_prompt:first").hide(),
            $("#fastCartInfo > div.popFB_prompt:first").text(i.top),
            i.top && $("#fastCartInfo > div.popFB_prompt:first").show()),
            CartBase.ChkBtmErrorPrompt(t)
        }
    },
    ChkBtmErrorPrompt: function(e) {
        var t, a = {
            isIF: !1,
            isNoPoint: !1,
            isChanged: !1,
            changedCount: 0,
            isSingleIF: !1
        }, i = Cart.GetStep1BtmErrorGroup();
        switch (e) {
        case Args.Single:
            for (var n in MainProperty.cart.step1ErrorMsg.single.btmChange = !1,
            0 <= MainProperty.cart.step1ErrorMsg.single.btm.indexOf(i[Args.CBE_IF]) && (a.isIF = !0),
            MainProperty.cart.step1ErrorMsg.single.btmBl && (MainProperty.cart.step1ErrorMsg.single.btmBl = !1,
            a.isSingleIF = !0),
            MainProperty.cart.step1ErrorMsg.single.item)
                n && (t = parseInt(MainProperty.cart.step1ErrorMsg.single.item[n]),
                0 <= i[Args.CBE_Change].indexOf(t) ? (a.isChanged = !0,
                a.changedCount++) : 0 <= i[Args.CBE_NoPoint].indexOf(t) && (a.isNoPoint = !0));
            $("#sc1BtmErrorBlock").add("#sc1BtmErrorBlock > div.BIL_NG_text").hide(),
            (a.isChanged || a.isIF || a.isNoPoint || a.isSingleIF) && $("#sc1BtmErrorBlock").show(),
            a.isChanged && !a.isSingleIF && ($("#sc1BtmErrorChangedCount").text(a.changedCount),
            $("#sc1BtmErrorChanged").css("display", "table"),
            MainProperty.cart.step1ErrorMsg.single.btmChange = !0),
            a.isNoPoint && $("#sc1BtmErrorNoPoint").css("display", "table"),
            (a.isIF || a.isSingleIF) && $("#sc1BtmErrorIF").css("display", "table");
            break;
        case Args.Multi:
            for (var n in 0 <= MainProperty.cart.step1ErrorMsg.multi.btm.indexOf(i[Args.CBE_IF]) && (a.isIF = !0),
            0 <= MainProperty.cart.step1ErrorMsg.multi.btm.indexOf(i[Args.CBE_MultiNoPoint]) && (a.isNoPoint = !0),
            MainProperty.cart.step1ErrorMsg.multi.item)
                n && (t = parseInt(MainProperty.cart.step1ErrorMsg.multi.item[n]),
                0 <= i[Args.CBE_Change].indexOf(t) ? (a.isChanged = !0,
                a.changedCount++) : 0 <= i[Args.CBE_NoPoint].indexOf(t) && (a.isNoPoint = !0));
            $("#mc1BtmErrorBlock").add("#mc1BtmErrorBlock > div.BIL_NG_text").hide(),
            (a.isChanged || a.isIF || a.isNoPoint) && $("#mc1BtmErrorBlock").show(),
            a.isChanged && ($("#mc1BtmErrorChangedCount").text(a.changedCount),
            $("#mc1BtmErrorChanged").css("display", "table")),
            a.isNoPoint && $("#mc1BtmErrorNoPoint").css("display", "table"),
            a.isIF && $("#mc1BtmErrorIF").css("display", "table");
            break;
        case Args.Fast:
            0 <= MainProperty.cart.step1ErrorMsg.fast.btm.indexOf(i[Args.CBE_IF]) && (a.isIF = !0),
            $("#fcBtmErrorIF").hide(),
            a.isIF && $("#fcBtmErrorIF").show()
        }
    },
    Remove: function(a, e, t, i, n) {
        var r = a + e + t + i
          , s = a + "_" + e + "_" + t + "_" + i;
        clearInterval(MainProperty.cartTimer.scanner),
        MainProperty.cartTimer.time.send || Cart.SetCarTimeList(Args.BaseList, null),
        Cart.SetCarTimeList(Args.RemoveList, s);
        var o = 0;
        MainProperty.cart.list = MainProperty.cart.list.filter(function(e) {
            var t = e.split("_");
            return o += a == t[0] ? 1 : 0,
            r != e.replace(/_/g, "") || (delete MainProperty.cart.oddData[e],
            o--,
            !1)
        }),
        0 == o && delete MainProperty.cart.gameData[a],
        MainProperty.cart.returnMax = {},
        Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Single, [a, e, t, i], null, null),
        Cart.ChkErrorMsg(Args.CE_ClearMask, Args.Single, [a, e, t, i], null, null),
        $("#sc1" + r).remove(),
        CartS1.SetTotalNumber(),
        Cart.ChkErrorMsg(Args.CE_ClearMask, Args.Multi, [a, e, t, i], null, null),
        Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, ["multiBtm"], null, null),
        Cart.ClearBtmErrorPrompt(Args.Multi, !1),
        $("#mc1" + r).remove(),
        CartM1.ChkNGList();
        i = $("#mc1BtmKeyNum").val();
        $("#mc1BtmKeyNum").add("#mc1BtmShowNum").val(""),
        isNaN(parseInt(i)) || CartM1.ProcessDefaultPoint(i),
        CartM1.DrawPassInfo(),
        CartM1.UpdateLimit(!1, MainProperty.cart.list.length + "x1"),
        CartM1.SetTotalNumber(),
        CartBase.UpdateLengthDisplay(MainProperty.cart.list.length),
        CartBase.ChkCartExistOddsChange(),
        n || (CartBase.SetScheduleBgColor(),
        MainProperty.cart.loc.step == Args.Step1 && MainProperty.cart.list.length < 2 && CartBase.ChangeCartInfoDisplay(Args.Single),
        CartBase.ChkCartDisplay()),
        MainProperty.cartTimer.scanner = setInterval(Cart.ChkCartTimer, 200)
    },
    Clear: function() {
        clearInterval(MainProperty.cartTimer.scanner),
        MainProperty.cartTimer.time.send || Cart.SetCarTimeList(Args.BaseList, null);
        for (var e = 0; e < MainProperty.cart.list.length; e++)
            Cart.SetCarTimeList(Args.RemoveList, MainProperty.cart.list[e]);
        MainProperty.cart.allyData = {},
        MainProperty.cart.gameData = {},
        MainProperty.cart.oddData = {},
        MainProperty.cart.list = [],
        MainProperty.cart.returnMax = {},
        MainProperty.cart.loc = {
            type: "",
            step: "",
            fcBtn: ""
        },
        $("#singleStep1 > div.betInfo_List").remove(),
        $("#sc1BtmKeyNum").add("#sc1BtmShowNum").val(""),
        Cart.ClearBtmErrorPrompt(Args.Single, !0),
        CartS1.SetTotalNumber(),
        $("#multiStep1 > div.betInfo_List").remove(),
        $("#mc1BtmKeyNum").add("#mc1BtmShowNum").val(""),
        $("#mc1NGNum").text(0),
        $("#mc1NGText").add("#mc1NGText > div.BIL_NG_text").hide(),
        Cart.ClearBtmErrorPrompt(Args.Multi, !0),
        CartM1.DrawPassInfo(),
        CartM1.SetTotalNumber(),
        CartBase.UpdateLengthDisplay(MainProperty.cart.list.length),
        CartBase.SetScheduleBgColor(),
        CartBase.ChkCartExistOddsChange(),
        CartBase.ChkCartDisplay(),
        MainProperty.cartTimer.scanner = setInterval(Cart.ChkCartTimer, 200)
    },
    ChkCartExistOddsChange: function() {
        for (var e = {
            single: !1,
            multi: !1
        }, t = {
            single: !1,
            multi: !1
        }, a = 0; a < MainProperty.cart.list.length; a++) {
            var i = MainProperty.cart.list[a].replace(/_/g, "");
            $("#sc1Odds" + i).hasClass("t_oddsChange") && (e.single = !0,
            t.single = !0),
            ($("#sc1BackPk" + i).hasClass("t_oddsChange") || $("#sc1RefScore" + i).hasClass("t_oddsChange")) && (t.single = !0),
            $("#mc1Odds" + i).hasClass("t_oddsChange") && (e.multi = !0,
            t.multi = !0),
            ($("#mc1BackPk" + i).hasClass("t_oddsChange") || $("#mc1RefScore" + i).hasClass("t_oddsChange")) && (t.multi = !0)
        }
        e.single || $("#singleStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").removeClass("t_oddsChange"),
        t.single || ($("#singleStep1 .cartChange").hide(),
        $("#singleStep1 .cartDefault").show()),
        e.multi || $("#multiStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span, #mc1BtmKeyNumHeader > div.BP_bet > span").removeClass("t_oddsChange"),
        t.multi || ($("#multiStep1 .cartChange").hide(),
        $("#multiStep1 .cartDefault").show())
    },
    OddsChangeDisplay: function(e, t, a) {
        var i = t.split("_")
          , n = i[0]
          , r = i[1]
          , s = i[2]
          , o = i[3]
          , l = n + r + s + o
          , c = MainProperty.cart.gameData[n]
          , d = MainProperty.cart.oddData[t]
          , i = a.Status
          , r = !1
          , n = !1
          , t = !1;
        -35 == i && a.Odds && (d[o] = Tool.TransformPointer(s, a.Odds),
        r = !0),
        -34 == i && a.Line && (d.line = a.Line,
        d.pk = Tool.TransformNumToPk(s, a.Line),
        n = !0),
        -24 != i || isNaN(parseInt(a.ScoreA)) || isNaN(parseInt(a.ScoreB)) || (d.ra = a.ScoreA,
        d.rb = a.ScoreB,
        d.sA = a.ScoreA,
        d.sB = a.ScoreB,
        t = !0);
        var u, a = d && d[o] ? [d[o][0], d[o][1]] : [0, 0];
        switch (e) {
        case Args.Single:
            r && ($("#sc1Odds" + l).text(a[MainProperty.isPrincipal]),
            $("#txbSC1ShowNum" + l).val(Cart.CalcKeyOrNum(Args.CalcShowNum, $("#txbSC1KeyNum" + l).val(), a[0])),
            CartS1.SetTotalNumber(),
            $("#sc1Odds" + l).addClass("t_oddsChange"),
            $("#singleStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").addClass("t_oddsChange")),
            n && (u = Cart.GetCartBetInfo([s, o], [c.h, c.ta, c.tb], [a[0], d.line, d.lineAt], MainProperty.isPrincipal, !0),
            $("#sc1BackPk" + l).text(u[1]),
            $("#sc1BackPk" + l).addClass("t_oddsChange")),
            t && ($("#sc1RefScore" + l).text(Cart.RefScoreProcess(d.sA, d.sB, c.h)),
            $("#sc1RefScore" + l).addClass("t_oddsChange")),
            $("#singleStep1 .cartDefault").hide(),
            $("#singleStep1 .cartChange").show();
            break;
        case Args.Multi:
            if (r) {
                if ($("#mc1Odds" + l).text(a[MainProperty.isPrincipal]),
                $("#p1Option").hasClass("on"))
                    for (var h = $("#p1Info > div.BC_list"), p = 0; p < h.length; p++) {
                        var m = $(h[p]).attr("rel");
                        isNaN(parseInt($("#txbP1KeyNum" + m).val())) || (g = parseInt($("#txbP1KeyNum" + m).val()),
                        $("#txbP1ShowNum" + m).val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, m, g)))
                    }
                else {
                    var g, m = MainProperty.cart.list.length + "x1";
                    isNaN(parseInt($("#mc1BtmKeyNum").val())) || (g = parseInt($("#mc1BtmKeyNum").val()),
                    $("#mc1BtmShowNum").val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, m, g)))
                }
                CartM1.SetTotalNumber(),
                $("#mc1Odds" + l).addClass("t_oddsChange"),
                $("#multiStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span, #mc1BtmKeyNumHeader > div.BP_bet > span").addClass("t_oddsChange")
            }
            n && (u = Cart.GetCartBetInfo([s, o], [c.h, c.ta, c.tb], [a[0], d.line, d.lineAt], MainProperty.isPrincipal, !0),
            $("#mc1BackPk" + l).text(u[1]),
            $("#mc1BackPk" + l).addClass("t_oddsChange")),
            t && ($("#mc1RefScore" + l).text(Cart.RefScoreProcess(d.sA, d.sB, c.h)),
            $("#mc1RefScore" + l).addClass("t_oddsChange")),
            $("#multiStep1 .cartDefault").hide(),
            $("#multiStep1 .cartChange").show();
            break;
        case Args.Fast:
            r && ($("#fcOdds" + l).text(a[MainProperty.isPrincipal]),
            $("#fcOdds" + l).addClass("t_oddsChange")),
            n && (u = Cart.GetCartBetInfo([s, o], [c.h, c.ta, c.tb], [a[0], d.line, d.lineAt], MainProperty.isPrincipal, !0),
            $("#fcBackPk" + l).text(u[1]),
            $("#fcBackPk" + l).addClass("t_oddsChange")),
            t && ($("#fcRefScore" + l).text(Cart.RefScoreProcess(d.sA, d.sB, c.h)),
            $("#fcRefScore" + l).addClass("t_oddsChange")),
            CartFast.ChangeBtn(Args.FCChange)
        }
    },
    SetStep3ErrorMsg: function(e, t, a, i) {
        var n = Cart.CheckGameReturnStatus(t)
          , r = n.msg
          , t = "";
        switch (n.needReplaceNum && (r = r.replace("X", isNaN(Number(i)) ? "" : i)),
        e != Args.Fast && (t += '<div class="BIL_NG">',
        t += '<div class="BIL_NG_text">' + r + "</div>",
        t += "</div>"),
        e) {
        case Args.Single:
            $("#sc3" + a).append(t),
            $("#sc3" + a).addClass("betInfo_List_NG");
            break;
        case Args.Multi:
            $("#mc3" + a).append(t),
            $("#mc3" + a).addClass("betInfo_List_NG");
            break;
        case Args.Fast:
            $("#fastCartInfo > div.popFB_prompt:first").text(r).show()
        }
    },
    ShowOrHidMask: function(e) {
        e ? $("#delayInfo").show() : $("#delayInfo").hide()
    },
    RemoveKeepListBgColor: function(e, t, a, i) {
        t = e + i + a + t;
        $("#opl" + t).closest(".on").removeClass("on"),
        $("#ipl" + t).closest(".on").removeClass("on")
    },
    ProcessWagerStatusDisplay: function(e, t) {
        switch (e) {
        case Args.Single:
            $("#sc3" + t.commId).attr("rel") == t.wId && ($("#sc3" + t.commId + " > div.BIL_In > ul.BIL_inputShow").next().remove(),
            $("#sc3" + t.commId + " > div.BIL_In > ul.BIL_inputShow").after(Receipt.DrawGameStatus(t.status, t.invalid, t.remark, t.time)),
            Receipt.SetStatusEvent("#sc3" + t.commId));
            break;
        case Args.Multi:
            var a = $("#mc3" + t.commId).attr("rel");
            a && 0 <= a.split(",").indexOf(t.wId) && (e = $("#mc3" + t.commId + " > div.BIL_In > ul.BIL_InText"),
            a = Receipt.DrawGameStatus(t.status, t.invalid, t.remark, t.time),
            e.next().hasClass("confirm") && "" === a || (e.next().remove(),
            e.after(a),
            Receipt.SetStatusEvent("#mc3" + t.commId)))
        }
    },
    UpdateCartAllyData: function(e) {
        var t = e.aId;
        if (MainProperty.cart.allyData[t])
            for (var a in e)
                if ("an" === a) {
                    var i = AllyNameProcess(t, e[a]);
                    if (MainProperty.cart.allyData[t][a] = i,
                    !MainProperty.isFastTrade)
                        for (var n = 0; n < MainProperty.cart.list.length; n++) {
                            var r = MainProperty.cart.list[n].split("_")
                              , s = r[0] + r[1] + r[2] + r[3]
                              , r = MainProperty.cart.gameData[r[0]];
                            r && r.aId == t && ($("#sc1Alliance" + s).text(i),
                            $("#mc1Alliance" + s).text(i),
                            MainProperty.cart.isSending || MainProperty.cart.loc.step != Args.Step2 || (MainProperty.cart.loc.type == Args.Single && $("#sc2Alliance" + s).text(i),
                            MainProperty.cart.loc.type == Args.Multi && $("#mc2Alliance" + s).text(i)))
                        }
                }
    },
    UpdateCartGameData: function(e) {
        var t = e.gId;
        if (MainProperty.cart.gameData[t])
            for (var a in e)
                if (e.hasOwnProperty(a) && "gId" != a)
                    switch (["coa", "cob", "pa", "pb"].indexOf(a) < 0 && (MainProperty.cart.gameData[t][a] = e[a]),
                    a) {
                    case "h":
                        if (MainProperty.isFastTrade)
                            CartFast.Close();
                        else
                            for (var i = 0; i < MainProperty.cart.list.length; i++)
                                (l = (o = MainProperty.cart.list[i]).split("_"))[0] == t && (Cart.AddCartStep1(o, [MainProperty.cart.allyData[MainProperty.cart.gameData[l[0]].aId], MainProperty.cart.gameData[l[0]], MainProperty.cart.oddData[o]], o),
                                MainProperty.cart.isSending || MainProperty.cart.loc.step != Args.Step2 || (MainProperty.cart.loc.type == Args.Single && CartS2.Draw(),
                                MainProperty.cart.loc.type == Args.Multi && CartM2.Draw()));
                        break;
                    case "ta":
                    case "tb":
                        if (MainProperty.isFastTrade) {
                            var n = (l = (o = $("#fastCartInfo").attr("rel")).split("_"))[0] + l[1] + l[2] + l[3]
                              , r = MainProperty.cart.gameData[l[0]]
                              , s = (u = MainProperty.cart.oddData[o]) && u[l[3]] ? u[l[3]][0] : 0;
                            r && u && (c = Cart.GetCartBetInfo([l[2], l[3]], [r.h, r.ta, r.tb], [s, u.line, u.lineAt], MainProperty.isPrincipal, !1),
                            $("#fcFrontPk" + n).text(c[0]))
                        } else
                            for (i = 0; i < MainProperty.cart.list.length; i++) {
                                var o, l, c, d, n = (l = (o = MainProperty.cart.list[i]).split("_"))[0] + l[1] + l[2] + l[3], r = MainProperty.cart.gameData[l[0]], u = MainProperty.cart.oddData[o];
                                l[0] == t && r && u && (d = Tool.TransformKTypeDetailInfo([l[2], l[3], r.h]),
                                c = Cart.GetCartBetInfo([l[2], l[3]], [r.h, r.ta, r.tb], [s, u.line, u.lineAt], MainProperty.isPrincipal, !1),
                                d = Cart.GetCartShowTeamName([r.h, r.ta, r.tb, r.type], d),
                                $("#sc1Team" + n).html(d),
                                $("#sc1FrontPk" + n).text(c[0]),
                                $("#mc1Team" + n).html(d),
                                $("#mc1FrontPk" + n).text(c[0]),
                                MainProperty.cart.isSending || MainProperty.cart.loc.step != Args.Step2 || (MainProperty.cart.loc.type == Args.Single && ($("#sc2Team" + n).html(d),
                                $("#sc2FrontPk" + n).text(c[0])),
                                MainProperty.cart.loc.type == Args.Multi && ($("#mc2Team" + n).html(d),
                                $("#mc2FrontPk" + n).text(c[0]))))
                            }
                    }
    },
    UpdateCartOddData: function(e) {
        var t = e.path[0]
          , a = e.path[1]
          , i = e.path[2]
          , n = [];
        if (MainProperty.cart.gameData[t]) {
            for (var r = 0; r < MainProperty.cart.list.length; r++) {
                var s = MainProperty.cart.list[r]
                  , o = s.split("_");
                o[0] == t && o[1] == a && o[2] == i && n.push(s)
            }
            for (r = 0; r < n.length; r++) {
                var l, c = n[r], d = c.split("_"), u = c.replace(/_/g, "");
                for (l in e)
                    if (e.hasOwnProperty(l)) {
                        var h, p = !1;
                        if ("o" == l) {
                            for (var m = !1, g = 0; g < e[l].length; g++) {
                                var f = e[l][g];
                                MainProperty.cart.oddData[c][f] = Tool.TransformPointer(i, e[l][g + 1]),
                                c == t + "_" + a + "_" + i + "_" + f && (m = !0),
                                g += 1
                            }
                            if (m) {
                                var v = (MainProperty.isFastTrade ? $("#fcOdds" + u) : $("#sc1Odds" + u)).text()
                                  , _ = MainProperty.cart.oddData[c] && MainProperty.cart.oddData[c][d[3]] ? [MainProperty.cart.oddData[c][d[3]][0], MainProperty.cart.oddData[c][d[3]][1]] : [0, 0]
                                  , y = _[MainProperty.isPrincipal];
                                if (y && v != y)
                                    if (MainProperty.isFastTrade)
                                        MainProperty.cart.loc.step != Args.Step3 && ($("#fcOdds" + u).text(y),
                                        $("#fcOdds" + u).addClass("t_oddsChange"),
                                        MainProperty.cart.isSending || MainProperty.isAutoAdapt && !(MainProperty.isAutoAdapt && y < v) || CartFast.ChangeBtn(Args.FCChange));
                                    else {
                                        $("#sc1Odds" + u).text(y),
                                        $("#txbSC1KeyNum" + u).hasClass("off") ? (b = $("#txbSC1ShowNum" + u).val(),
                                        $("#txbSC1KeyNum" + u).val(Cart.CalcKeyOrNum(Args.CalcKeyNum, b, _[0])),
                                        $("#txbSC1ShowNum" + u).val(Cart.CalcKeyOrNum(Args.CalcShowNum, $("#txbSC1KeyNum" + u).val(), _[0]))) : (b = $("#txbSC1KeyNum" + u).val(),
                                        $("#txbSC1ShowNum" + u).val(Cart.CalcKeyOrNum(Args.CalcShowNum, b, _[0]))),
                                        CartS1.SetTotalNumber(),
                                        $("#sc1Odds" + u).addClass("t_oddsChange"),
                                        $("#singleStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").addClass("t_oddsChange"),
                                        (!MainProperty.isAutoAdapt || MainProperty.isAutoAdapt && y < v) && ($("#singleStep1 .cartDefault").hide(),
                                        $("#singleStep1 .cartChange").show()),
                                        $("#mc1Odds" + u).text(y);
                                        for (var P, S = $("#p1Info > div.BC_list"), r = 0; r < S.length; r++) {
                                            var b, T = $(S[r]).attr("rel");
                                            $("#txbP1KeyNum" + T).hasClass("off") ? isNaN(parseInt($("#txbP1ShowNum" + T).val())) || (b = $("#txbP1ShowNum" + T).val(),
                                            $("#txbP1KeyNum" + T).val(Cart.CalcPassKeyOrNum(Args.CalcKeyNum, T, b)),
                                            $("#txbP1ShowNum" + T).val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, T, $("#txbP1KeyNum" + T).val()))) : isNaN(parseInt($("#txbP1KeyNum" + T).val())) || (b = $("#txbP1KeyNum" + T).val(),
                                            $("#txbP1ShowNum" + T).val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, T, b)))
                                        }
                                        isNaN(parseInt($("#mc1BtmKeyNum").val())) || $("#mc1BtmShowNum").val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, MainProperty.cart.list.length + "x1", $("#mc1BtmKeyNum").val())),
                                        CartM1.SetTotalNumber(),
                                        $("#mc1Odds" + u).addClass("t_oddsChange"),
                                        $("#multiStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span, #mc1BtmKeyNumHeader > div.BP_bet > span").addClass("t_oddsChange"),
                                        (!MainProperty.isAutoAdapt || MainProperty.isAutoAdapt && y < v) && ($("#multiStep1 .cartDefault").hide(),
                                        $("#multiStep1 .cartChange").show()),
                                        MainProperty.cart.isSending || MainProperty.cart.loc.step != Args.Step2 || (MainProperty.cart.loc.type == Args.Single && ($("#sc2Odds" + u).text(y),
                                        b = $("#sc2KeyNum" + u).text(),
                                        $("#sc2ShowNum" + u).text(Cart.CalcKeyOrNum(Args.CalcShowNum, b, _[0])),
                                        CartS2.SetTotalNumber(),
                                        $("#sc2Odds" + u).addClass("t_oddsChange"),
                                        $("#sc2ShowNum" + u).addClass("t_oddsChange"),
                                        $("#singleStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").addClass("t_oddsChange"),
                                        (!MainProperty.isAutoAdapt || MainProperty.isAutoAdapt && y < v) && ($("#singleStep2 .cartDefault").hide(),
                                        $("#singleStep2 .cartChange").show())),
                                        MainProperty.cart.loc.type == Args.Multi && ($("#mc2Odds" + u).text(y),
                                        P = $("#multiStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(),
                                        $("#multiStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(P),
                                        $("#mc2Odds" + u).addClass("t_oddsChange"),
                                        $("#multiStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").addClass("t_oddsChange"),
                                        (!MainProperty.isAutoAdapt || MainProperty.isAutoAdapt && y < v) && ($("#multiStep2 .cartDefault").hide(),
                                        $("#multiStep2 .cartChange").show())))
                                    }
                            }
                        } else
                            ("la" == l || "l" == l) && Cart.GetSCOtherKType().indexOf(d[2]) < 0 ? (p = "la" == l && MainProperty.cart.oddData[c].lineAt != e[l] || "l" == l && MainProperty.cart.oddData[c].pk != Tool.TransformNumToPk(i, e[l]),
                            "la" == l && (MainProperty.cart.oddData[c].lineAt = e[l]),
                            "l" == l && (MainProperty.cart.oddData[c].line = e[l],
                            MainProperty.cart.oddData[c].pk = Tool.TransformNumToPk(i, e[l])),
                            h = Tool.TransformKTypeDetailInfo([d[2], d[3], MainProperty.cart.gameData[t].h]),
                            p && h[1] !== Args.PlayWin && (P = $.extend({}, MainProperty.cart.gameData[d[0]]),
                            v = (y = $.extend({}, MainProperty.cart.oddData[c])) && y[d[3]] ? y[d[3]][0] : 0,
                            y = Cart.GetCartBetInfo([d[2], d[3]], [P.h, P.ta, P.tb], [v, y.line, y.lineAt], MainProperty.isPrincipal, !0),
                            MainProperty.isFastTrade ? MainProperty.cart.loc.step != Args.Step3 && ($("#fcBackPk" + u).text(y[1]),
                            $("#fcBackPk" + u).addClass("t_oddsChange"),
                            MainProperty.cart.isSending || CartFast.ChangeBtn(Args.FCChange)) : ($("#sc1BackPk" + u).text(y[1]),
                            $("#sc1BackPk" + u).addClass("t_oddsChange"),
                            $("#singleStep1 .cartDefault").hide(),
                            $("#singleStep1 .cartChange").show(),
                            $("#mc1BackPk" + u).text(y[1]),
                            $("#mc1BackPk" + u).addClass("t_oddsChange"),
                            $("#multiStep1 .cartDefault").hide(),
                            $("#multiStep1 .cartChange").show(),
                            MainProperty.cart.isSending || MainProperty.cart.loc.step != Args.Step2 || (MainProperty.cart.loc.type == Args.Single && ($("#sc2BackPk" + u).text(y[1]),
                            $("#sc2BackPk" + u).addClass("t_oddsChange"),
                            $("#singleStep2 .cartDefault").hide(),
                            $("#singleStep2 .cartChange").show()),
                            MainProperty.cart.loc.type == Args.Multi && ($("#mc2BackPk" + u).text(y[1]),
                            $("#mc2BackPk" + u).addClass("t_oddsChange"),
                            $("#multiStep2 .cartDefault").hide(),
                            $("#multiStep2 .cartChange").show()))))) : "path" != l && (p = MainProperty.cart.oddData[c][l] != e[l],
                            MainProperty.cart.oddData[c][l] = e[l],
                            "ra" == l || "rb" == l ? p && (h = Tool.TransformKTypeDetailInfo([d[2], d[3], MainProperty.cart.gameData[t].h]),
                            Cart.ChkDisplayRefScore(MainProperty.cart.gameData[t].type, MainProperty.cart.gameData[t].mode, h[3]) && (p = Cart.RefScoreProcess(MainProperty.cart.oddData[c].ra, MainProperty.cart.oddData[c].rb, MainProperty.cart.gameData[t].h),
                            MainProperty.isFastTrade ? MainProperty.cart.loc.step != Args.Step3 && ($("#fcRefScore" + u).text(p),
                            $("#fcRefScore" + u).addClass("t_oddsChange"),
                            MainProperty.cart.isSending || CartFast.ChangeBtn(Args.FCChange)) : ($("#sc1RefScore" + u).text(p),
                            $("#sc1RefScore" + u).addClass("t_oddsChange"),
                            $("#singleStep1 .cartDefault").hide(),
                            $("#singleStep1 .cartChange").show(),
                            $("#mc1RefScore" + u).text(p),
                            $("#mc1RefScore" + u).addClass("t_oddsChange"),
                            $("#multiStep1 .cartDefault").hide(),
                            $("#multiStep1 .cartChange").show()))) : "isParlay" == l ? CartM1.ChkNGList() : "obm" != l && "gbm" != l || Cart.UpdateCartLimit(c))
                    }
            }
            CartBase.UpdatePassOdds(MainProperty.cart.list.length)
        }
    },
    DelCartData: function(e) {
        var t = e[0]
          , a = e[1];
        if (-1 == a) {
            if (MainProperty.cart.gameData[t])
                if (MainProperty.isFastTrade)
                    MainProperty.cart.loc.type == Args.Fast && MainProperty.cart.loc.step == Args.Step3 || CartFast.Close();
                else
                    for (var i = $.extend([], MainProperty.cart.list), n = 0; n < i.length; n++)
                        (l = i[n].split("_"))[0] == t && (Cart.ChkErrorMsg(Args.CE_ClosePK, Args.Single, l, null, null),
                        Cart.ChkErrorMsg(Args.CE_ClosePK, Args.Multi, l, null, null))
        } else if (3 <= e.length && MainProperty.cart.gameData[t])
            for (n = 2; n < e.length; n++) {
                var r, i = $.extend([], MainProperty.cart.list);
                if (Array.isArray(e[n])) {
                    r = e[n][0];
                    for (var s = e[n].slice(1), o = 0; o < i.length; o++)
                        (l = i[o].split("_"))[0] == t && l[1] == a && l[2] == r && 0 <= s.indexOf(l[3]) && (MainProperty.isFastTrade ? MainProperty.cart.loc.type == Args.Fast && MainProperty.cart.loc.step == Args.Step3 || CartFast.Close() : (Cart.ChkErrorMsg(Args.CE_ClosePK, Args.Single, l, null, null),
                        Cart.ChkErrorMsg(Args.CE_ClosePK, Args.Multi, l, null, null)))
                } else {
                    r = e[n];
                    for (var l, o = 0; o < i.length; o++)
                        (l = i[o].split("_"))[0] == t && l[1] == a && l[2] == r && (MainProperty.isFastTrade ? MainProperty.cart.loc.type == Args.Fast && MainProperty.cart.loc.step == Args.Step3 || CartFast.Close() : (Cart.ChkErrorMsg(Args.CE_ClosePK, Args.Single, l, null, null),
                        Cart.ChkErrorMsg(Args.CE_ClosePK, Args.Multi, l, null, null)))
                }
            }
    },
    AddCartData: function(e) {
        if (e && 0 < e.length) {
            var t = e[0]
              , a = e[1]
              , i = a[3]
              , n = a[0]
              , r = Cart.InitialCartOddDataCache(e);
            if (r && MainProperty.cart.gameData[t])
                for (var s = 0; s < MainProperty.cart.list.length; s++) {
                    var o, l = MainProperty.cart.list[s], c = l.split("_"), d = MainProperty.cart.oddData[l], u = d && d[c[3]] ? d[c[3]][0] : 0;
                    c[0] == t && (o = c[0] + c[1] + c[2] + c[3],
                    l = function(e, t) {
                        t = e.indexOf(t);
                        return 0 <= t ? e[t + 1] : ""
                    }(r.o, c[3]),
                    c[1] == i && c[2] == n && l && (MainProperty.isFastTrade && 0 < $("#btnFCClose:visible").length ? CartFast.ChangeBtn(Args.FCBet) : (Cart.ChkErrorMsg(Args.CE_ClearMask, Args.Single, c, null, null),
                    Cart.ChkErrorMsg(Args.CE_ClearMask, Args.Multi, c, null, null),
                    isNaN(parseInt($("#txbSC1KeyNum" + o).val())) || (d = Cart.GetSingleBetLimit(t, c[2], u, [d.obm, d.gbm]),
                    Cart.ChkErrorMsg(Args.CE_ChkLimit, Args.Single, c, $("#txbSC1KeyNum" + o).val(), [d[0], d[1]])))),
                    CartBase.UpdateCartOddData(r))
                }
        }
    },
    cartLimit: 4,
    SetCartChip: function() {
        var e = MainProperty.funcSetting.defChip;
        $("#singleStep1 > div.betPlay > div.betPlay_In > div.betPlay_chip > div.betPlay_chipBox > div.BPC_List").add("#multiStep1 > div.betPlay > div.betPlay_In > div.betPlay_chip > div.betPlay_chipBox > div.BPC_List").hide();
        var a = CartBase.cartLimit - (0 < $("#btnSingle.on").length && 0 < $("#sChipMax:not(.none)").length || 0 < $("#btnMulti.on").length && 0 < $("#bcChipMax:not(.none)").length ? 1 : 0);
        $.each(e, function(e, t) {
            $("#sChip" + t).add("#bcChip" + t).addClass("on"),
            e < a && $("#sChip" + t).add("#bcChip" + t).show()
        })
    },
    CartIconSwitch: function(e, t) {
        var a, i = "sChip" == e ? $("#singleStep1 > div.betPlay > div.betPlay_In > div.betPlay_chip > div.betPlay_chipBox > div.BPC_List.on:visible") : $("#multiStep1 > div.betPlay > div.betPlay_In > div.betPlay_chip > div.betPlay_chipBox > div.BPC_List.on:visible"), n = MainProperty.funcSetting.defChip;
        t ? $("#" + e + n[0]).is(":visible") || (a = n.indexOf(i[0].id.replace(e, "")) - 1,
        $("#" + e + n[a]).show(),
        $("#" + e + i[i.length - 1].id.replace(e, "")).hide()) : $("#" + e + n[n.length - 1]).is(":visible") || (a = n.indexOf(i[i.length - 1].id.replace(e, "")) + 1,
        $("#" + e + n[a]).show(),
        $("#" + e + i[0].id.replace(e, "")).hide())
    },
    CartIconClick: function(e, t) {
        var a = parseInt($(e.currentTarget).attr("rel"));
        if (isNaN(a))
            e.preventDefault();
        else {
            var i, n, r = "", s = 0, o = 0;
            switch (t) {
            case 0:
                if (0 < $("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input.enter").length) {
                    r = $("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input.enter");
                    var l = $(r).parents("div.betInfo_List").attr("rel")
                      , c = $(r).parents("div.betInfo_List").attr("rel").split("_")
                      , d = (g = MainProperty.cart.oddData[l]) && g[c[3]] ? g[c[3]][0] : 0
                      , u = Cart.GetSingleBetLimit(c[0], c[2], d, [g.obm, g.gbm])
                      , h = a + (isNaN(parseFloat($(r).val())) ? 0 : parseFloat($(r).val()));
                    $(r).blur(),
                    s = $(r).hasClass("BIL_keyNum") ? h : Cart.CalcKeyOrNum(Args.CalcKeyNum, h, d),
                    (f = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Single, c, s, [u[0], u[1]])).isMatch && (s = f.changeNum),
                    o = Cart.CalcKeyOrNum(Args.CalcShowNum, s, d),
                    $(r).parent().children("input.BIL_keyNum").val(s),
                    $(r).parent().children("input.BIL_showNum").val(o),
                    $("#sc1BtmKeyNum").add("#sc1BtmShowNum").val("")
                } else if (0 < $("#singleStep1 > div.betPlay > div.betPlay_In > div.betPlay_list > ul > li.BP_listIn > input.enter").length) {
                    var p = $("#sc1BtmShowNum").hasClass("off")
                      , h = $("#singleStep1 > div.betPlay > div.betPlay_In > div.betPlay_list > ul > li.BP_listIn > input.enter").val();
                    h = a + (isNaN(parseInt(h)) ? 0 : parseInt(h)),
                    p ? ($("#sc1BtmKeyNum").val(h).blur(),
                    $("#sc1BtmShowNum").val("")) : ($("#sc1BtmKeyNum").val(""),
                    $("#sc1BtmShowNum").val(h).blur()),
                    r = $("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input");
                    for (var m = 0; m < r.length; m++) {
                        var g, f, l = $(r[m]).parents("div.betInfo_List").attr("rel"), c = $(r[m]).parents("div.betInfo_List").attr("rel").split("_"), d = (g = MainProperty.cart.oddData[l]) && g[c[3]] ? g[c[3]][0] : 0, u = Cart.GetSingleBetLimit(c[0], c[2], d, [g.obm, g.gbm]), s = p ? h : Cart.CalcKeyOrNum(Args.CalcKeyNum, h, d);
                        (f = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Single, c, s, [u[0], u[1]])).isMatch && (s = f.changeNum),
                        o = Cart.CalcKeyOrNum(Args.CalcShowNum, s, d),
                        $(r[m]).children("input.BIL_keyNum").val(s),
                        $(r[m]).children("input.BIL_showNum").val(o)
                    }
                }
                CartS1.SetTotalNumber();
                break;
            case 1:
                0 < $("#p1Info > div.BC_list > ul.BC_listIn > input.enter").length ? (r = $("#p1Info > div.BC_list > ul.BC_listIn > input.enter"),
                i = $(r).attr("rel"),
                n = Cart.GetMultiBetLimit(i),
                $(r).blur(),
                s = a + (isNaN(parseInt($(r).val())) ? 0 : parseInt($(r).val())),
                (f = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Multi, [i], s, n)).isMatch && (s = f.changeNum),
                o = Cart.CalcPassKeyOrNum(Args.CalcShowNum, i, s),
                $(r).val(s),
                $("#txbP1ShowNum" + i).val(o)) : $("#mc1BtmKeyNum").hasClass("enter") && (t = MainProperty.cart.list.length,
                h = $("#mc1BtmKeyNum").val(),
                h = a + (isNaN(parseInt(h)) ? 0 : parseInt(h)),
                $("#mc1BtmKeyNum").blur(),
                i = t + "x1",
                s = h,
                n = Cart.GetMultiBetLimit(i),
                (f = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Multi, ["multiBtm"], s, n)).isMatch && (s = f.changeNum),
                o = Cart.CalcPassKeyOrNum(Args.CalcShowNum, i, s),
                $("#mc1BtmKeyNum").val(s),
                $("#mc1BtmShowNum").val(o)),
                CartM1.SetTotalNumber()
            }
            e.preventDefault()
        }
    },
    CarSetMaxIcon: function(e, t, a, i) {
        if (!(MainProperty.cart.list.length <= 0)) {
            var n = "sChip" == e ? $("#singleStep1 > div.betPlay > div.betPlay_In > div.betPlay_chip > div.betPlay_chipBox > div.BPC_List.on:visible") : $("#multiStep1 > div.betPlay > div.betPlay_In > div.betPlay_chip > div.betPlay_chipBox > div.BPC_List.on:visible")
              , r = MainProperty.funcSetting.defChip
              , s = "#" + e + "Max";
            if (t) {
                for (var o = r.length - 1; 0 <= o && n.length >= CartBase.cartLimit; o--)
                    if ($("#" + e + r[o]).is(":visible")) {
                        $("#" + e + r[o]).hide();
                        break
                    }
                $(s).removeClass("none").text(a).attr({
                    rel: a,
                    chipId: i
                })
            } else {
                for (o = r.length - 1; 0 <= o && n.length < CartBase.cartLimit; o--) {
                    if ($("#" + e + r[o]).is(":visible") && r[o + 1] && !$("#" + e + r[o + 1]).is(":visible")) {
                        $("#" + e + r[o + 1]).show();
                        break
                    }
                    if ($("#" + e + r[o]).is(":visible") && r[o - 1] && !$("#" + e + r[o - 1]).is(":visible")) {
                        $("#" + e + r[o - 1]).show();
                        break
                    }
                }
                $(s).addClass("none").removeAttr("rel chipId")
            }
        }
    },
    CartUpdateMaxIcon: function(e, t, a) {
        0 < $("#" + e + "Max[chipId=" + t + "]:visible").length && (isNaN(parseInt(a)) ? $("#" + e + "Max[chipId=" + t + "]:visible").hide() : $("#" + e + "Max[chipId=" + t + "]:visible").text(a))
    }
}
  , CartS1 = {
    BindEvent: function() {
        $("#sc1BtmKeyNum").add("#sc1BtmShowNum").on("mousedown", function(e) {
            CartS1.BtmInputTouchEvent($(e.currentTarget))
        }),
        $("#sc1BtmKeyNum").add("#sc1BtmShowNum").on("input propertychange", function(e) {
            e = $(e.currentTarget);
            $(e).val(Cart.AmountMonitor($(e).val()))
        }),
        $("#sc1BtmKeyNum").keyup(function(e) {
            var t = $(e.currentTarget);
            if (13 === e.keyCode)
                CartS1.Check(),
                e.stopPropagation();
            else {
                for (var a = parseInt($(t).val()) ? parseInt($(t).val()) : "", i = $.extend([], MainProperty.cart.list), n = 0; n < i.length; n++) {
                    var r, s = i[n], o = s.split("_"), l = o[0] + o[1] + o[2] + o[3], c = MainProperty.cart.oddData[s];
                    c && (r = c && c[o[3]] ? c[o[3]][0] : 0,
                    s = Cart.GetSingleBetLimit(o[0], o[2], r, [c.obm, c.gbm]),
                    c = a,
                    (s = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Single, o, c, [s[0], s[1]])).isMatch && (c = s.changeNum),
                    r = Cart.CalcKeyOrNum(Args.CalcShowNum, c, r),
                    $("#txbSC1KeyNum" + l).val(c),
                    $("#txbSC1ShowNum" + l).val(r))
                }
                "" == a && Cart.ClearBtmErrorPrompt(Args.Single, !0),
                $("#sc1BtmShowNum").val(""),
                CartS1.SetTotalNumber()
            }
        }),
        $("#sc1BtmShowNum").keyup(function(e) {
            var t = $(e.currentTarget);
            if (13 === e.keyCode)
                CartS1.Check(),
                e.stopPropagation();
            else {
                for (var a = parseInt($(t).val()) ? parseInt($(t).val()) : "", i = $.extend([], MainProperty.cart.list), n = 0; n < i.length; n++) {
                    var r, s = i[n], o = s.split("_"), l = o[0] + o[1] + o[2] + o[3], c = MainProperty.cart.oddData[s];
                    c && (r = c && c[o[3]] ? c[o[3]][0] : 0,
                    s = Cart.GetSingleBetLimit(o[0], o[2], r, [c.obm, c.gbm]),
                    c = Cart.CalcKeyOrNum(Args.CalcKeyNum, a, r),
                    (s = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Single, o, c, [s[0], s[1]])).isMatch && (c = s.changeNum),
                    r = Cart.CalcKeyOrNum(Args.CalcShowNum, c, r),
                    $("#txbSC1KeyNum" + l).val(c),
                    $("#txbSC1ShowNum" + l).val(r))
                }
                "" == a && Cart.ClearBtmErrorPrompt(Args.Single, !0),
                $("#sc1BtmKeyNum").val(""),
                CartS1.SetTotalNumber()
            }
        }),
        $("#sc1BtmKeyNum").add("#sc1BtmShowNum").blur(function(e) {
            e = $(e.currentTarget),
            e = $(e).val();
            if (1 == MainProperty.cart.list.length && 0 < e && 0 == MainProperty.user.balance) {
                var t = (r = (n = $.extend([], MainProperty.cart.list)[0]).split("_"))[0] + r[1] + r[2] + r[3];
                $("#sc1" + t + " input").val(""),
                Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Single, r, null, null),
                Cart.ChkErrorMsg(Args.CE_ChkEmpty, Args.Single, r, null, null)
            } else if (!isNaN(parseFloat(e)) || 0 < parseFloat(e))
                for (var a = $.extend([], MainProperty.cart.list), i = 0; i < a.length; i++) {
                    var n, r, s, o, t = (r = (n = a[i]).split("_"))[0] + r[1] + r[2] + r[3], l = MainProperty.cart.oddData[n];
                    l && (s = l && l[r[3]] ? l[r[3]][0] : 0,
                    o = Cart.GetSingleBetLimit(r[0], r[2], s, [l.obm, l.gbm]),
                    l = $("#txbSC1KeyNum" + t).val(),
                    (o = Cart.ChkErrorMsg(Args.CE_ChkLTGTLimit, Args.Single, r, l, [o[0], o[1]])).isMatch && (l = o.changeNum),
                    s = Cart.CalcKeyOrNum(Args.CalcShowNum, l, s),
                    $("#txbSC1KeyNum" + t).val(l),
                    $("#txbSC1ShowNum" + t).val(s))
                }
            CartS1.SetTotalNumber()
        })
    },
    BtmInputTouchEvent: function(e) {
        $("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input").add("#singleStep1 > div.betPlay > div.betPlay_In > div.betPlay_list > ul > li.BP_listIn > input").removeClass("enter focus"),
        $(e).addClass("enter focus"),
        $("#sc1BtmKeyNum").add("#sc1BtmShowNum").addClass("off"),
        $(e).removeClass("off"),
        $("#sc1BtmKeyNum").hasClass("off") ? ($("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input.BIL_showNum ").removeClass("off"),
        $("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input.BIL_keyNum").addClass("off")) : $("#sc1BtmShowNum").hasClass("off") && ($("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input.BIL_keyNum").removeClass("off"),
        $("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input.BIL_showNum ").addClass("off")),
        CartBase.CarSetMaxIcon("sChip", !1, 0)
    },
    Draw: function(e, t, a, i) {
        $("#sc1BtmKeyNum").add("#sc1BtmShowNum").val("");
        var n = $("#singleStep1 > div.betPlay");
        0 < $("#singleStep1 > .newCart").length && (n = $("#singleStep1 > .newCart"),
        $("#singleStep1 > .newCart").removeClass("newCart"));
        var r = e + t + a + i
          , s = e + "_" + t + "_" + a + "_" + i
          , o = MainProperty.cart.gameData[e] || {}
          , l = MainProperty.cart.oddData[s] || {}
          , c = MainProperty.cart.allyData[o.aId] || {}
          , d = o.h
          , u = o.ta
          , h = o.tb
          , p = o.type
          , m = o.mode
          , g = l && l[i] ? l[i][0] : 0
          , f = Tool.TransformKTypeDetailInfo([a, i, d])
          , v = Cart.GetCartBetInfo([a, i], [d, u, h], [g, l.line, l.lineAt], MainProperty.isPrincipal, !1)
          , u = Cart.GetCartShowTeamName([d, u, h, p], f)
          , h = "";
        h += '<div id="sc1' + r + '" class="betInfo_List" rel="' + s + '">',
        h += '<div class="BIL_T">',
        h += '<div class="BIL_T_text">',
        Cart.ChkDisplayRefScore(p, m, f[3]) && (h += '<span id="sc1RefScore' + r + '" class="t_red">' + Cart.RefScoreProcess(l.ra, l.rb, d) + "</span> "),
        h += '<span id="sc1FrontPk' + r + '" class="t_blue">' + v[0] + '</span> <div class="t_inlineBox"><span id="sc1BackPk' + r + '" class="t_red">' + v[1] + '</span> @ <span id="sc1Odds' + r + '" class="t_red">' + v[2] + "</span></div>",
        h += "</div>",
        h += '<div class="btn_BIL_close" onclick="CartBase.Remove(\'' + e + "', '" + t + "', '" + a + "', '" + i + "')\"></div>",
        h += "</div>",
        h += '<div class="BIL_In">',
        h += '<ul class="BIL_InText">',
        h += "<li>" + Cart.GetCommonTitle(o.type, o.mode, c.an, f[0]) + "</li>",
        h += '<li id="sc1Alliance' + r + '">' + c.an + "</li>",
        h += '<li id="sc1Team' + r + '">' + u + "</li>",
        h += "</ul>",
        h += '<div class="BIL_input">',
        h += '<input type="text" id="txbSC1KeyNum' + r + '" class="BIL_keyNum" rel="' + r + '" maxLength="' + MainProperty.cart.maxInputLength + '" />',
        h += '<input type="text" id="txbSC1ShowNum' + r + '" class="BIL_showNum off" placeholder="' + langFont.Font_CartCanWinPoint + '" rel="' + r + '" maxLength="' + MainProperty.cart.maxInputLength + '" />',
        h += "</div>",
        h += '<div id="labSC1Limit' + r + '" class="betLimit_t"></div>',
        h += '<div class="error_t"></div>',
        h += "</div>",
        h += "</div>",
        $(n).before(h);
        h = Cart.GetDefaultPoint(Args.Single);
        !isNaN(parseInt(h)) && 1 <= MainProperty.user.balance && (l = Cart.GetSingleBetLimit(e, a, g, [l.obm, l.gbm]),
        (l = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Single, [e, t, a, i], h, [l[0], l[1]])).isMatch && (h = l.changeNum),
        $("#txbSC1KeyNum" + r).val(h),
        $("#txbSC1ShowNum" + r).val(Cart.CalcKeyOrNum(Args.CalcShowNum, h, g))),
        CartS1.SetTotalNumber(),
        CartS1.UpdateLimit(e, t, a, i),
        $("#sc1" + r + " > div.BIL_In > div.BIL_input > input").on("click", function(e) {
            CartS1.InputTouchEvent($(e.currentTarget))
        }),
        $("#sc1" + r + " > div.BIL_In > div.BIL_input > input").keydown(function(e) {
            $("#sc1BtmKeyNum").add("#sc1BtmShowNum").val("")
        }),
        $("#sc1" + r + " > div.BIL_In > div.BIL_input > input").on("input propertychange", function(e) {
            e = $(e.currentTarget);
            $(e).val(Cart.AmountMonitor($(e).val()))
        }),
        $("#txbSC1KeyNum" + r).on("keyup", function(e) {
            13 == e.keyCode && (CartS1.Check(),
            e.stopPropagation(),
            e.preventDefault())
        }).on("input", function(e) {
            var t, a, i, n = $(e.currentTarget);
            13 != e.keyCode && (t = $(n).attr("rel"),
            a = (i = $("#sc1" + t).attr("rel")).split("_"),
            i = (e = MainProperty.cart.oddData[i]) && e[a[3]] ? e[a[3]][0] : 0,
            e = Cart.GetSingleBetLimit(a[0], a[2], i, [e.obm, e.gbm]),
            n = $(n).val(),
            (e = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Single, a, n, [e[0], e[1]])).isMatch && (n = e.changeNum),
            i = Cart.CalcKeyOrNum(Args.CalcShowNum, n, i),
            $("#txbSC1KeyNum" + t).val(n),
            $("#txbSC1ShowNum" + t).val(i),
            isNaN(parseInt(n)) && 1 == MainProperty.cart.list.length && Cart.ClearBtmErrorPrompt(Args.Single, !0),
            CartS1.SetTotalNumber())
        }),
        $("#txbSC1ShowNum" + r).on("keyup", function(e) {
            13 == e.keyCode && (CartS1.Check(),
            e.stopPropagation(),
            e.preventDefault())
        }).on("input", function(e) {
            var t, a, i, n, r = $(e.currentTarget);
            13 != e.keyCode && (t = $(r).attr("rel"),
            a = (n = $("#sc1" + t).attr("rel")).split("_"),
            e = (i = MainProperty.cart.oddData[n]) && i[a[3]] ? i[a[3]][0] : 0,
            n = Cart.GetSingleBetLimit(a[0], a[2], e, [i.obm, i.gbm]),
            i = Cart.CalcKeyOrNum(Args.CalcKeyNum, $(r).val(), e),
            r = $(r).val(),
            (n = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Single, a, i, [n[0], n[1]])).isMatch && (i = n.changeNum,
            r = Cart.CalcKeyOrNum(Args.CalcShowNum, i, e)),
            isNaN(parseInt(i)) && 1 == MainProperty.cart.list.length && Cart.ClearBtmErrorPrompt(Args.Single, !0),
            $("#txbSC1KeyNum" + t).val(i),
            $("#txbSC1ShowNum" + t).val(r),
            CartS1.SetTotalNumber())
        }),
        $("#sc1" + r + " > div.BIL_In > div.BIL_input > input").blur(function(e) {
            var t, a = $(e.currentTarget), i = $(a).attr("rel"), n = $(a).val();
            $("#sc1" + i).attr("rel") && (e = (t = $("#sc1" + i).attr("rel")).split("_"),
            t = (a = MainProperty.cart.oddData[t]) && a[e[3]] ? a[e[3]][0] : 0,
            1 == MainProperty.cart.list.length && 0 == parseFloat($("#sc1" + i + " input").val()) ? ($("#sc1" + i + " input").val(""),
            Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Single, e, null, null),
            Cart.ChkErrorMsg(Args.CE_ChkEmpty, Args.Single, e, null, null)) : isNaN(parseFloat(n)) || 0 == parseFloat(n) ? ($("#sc1" + i + " input").val(""),
            Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Single, e, null, null)) : (n = Cart.GetSingleBetLimit(e[0], e[2], t, [a.obm, a.gbm]),
            a = $("#txbSC1KeyNum" + i).val(),
            (n = Cart.ChkErrorMsg(Args.CE_ChkLTGTLimit, Args.Single, e, a, [n[0], n[1]])).isMatch && (a = n.changeNum),
            t = Cart.CalcKeyOrNum(Args.CalcShowNum, a, t),
            $("#txbSC1KeyNum" + i).val(a),
            $("#txbSC1ShowNum" + i).val(t),
            CartS1.SetTotalNumber())),
            CartS1.SetTotalNumber()
        })
    },
    UpdateLimit: function(e, t, a, i) {
        var n = e + t + a + i
          , t = e + "_" + t + "_" + a + "_" + i
          , t = MainProperty.cart.oddData[t]
          , i = t && t[i] ? t[i][0] : 0
          , t = Cart.GetSingleBetLimit(e, a, i, [t.obm, t.gbm]);
        $("#txbSC1KeyNum" + n).attr("placeholder", t[0] + " - " + t[1]),
        $("#labSC1Limit" + n).text(langFont.Font_CartUpperLimit + "：" + t[2]),
        CartBase.CartUpdateMaxIcon("sChip", n, t[1])
    },
    InputTouchEvent: function(e) {
        $("#singleStep1 > div.betInfo_List > div.BIL_In > div.BIL_input > input").add("#singleStep1 > div.betPlay > div.betPlay_In > div.betPlay_list > ul > li.BP_listIn > input").removeClass("enter focus"),
        $(e).addClass("enter focus");
        var t = $(e).attr("rel");
        $("#sc1" + t + " > div.BIL_In > div.BIL_input > input").addClass("off"),
        $(e).removeClass("off");
        var a = (a = $(e).attr("placeholder")) ? a.split(" - ")[1] : "";
        $(e).hasClass("BIL_keyNum") && !isNaN(parseInt(a)) ? CartBase.CarSetMaxIcon("sChip", !0, a, t) : CartBase.CarSetMaxIcon("sChip", !1, 0)
    },
    SetTotalNumber: function() {
        for (var e = 0, t = 0, a = $.extend([], MainProperty.cart.list), i = 0; i < a.length; i++) {
            var n = a[i].replace(/_/g, "");
            e += isNaN(parseInt($("#txbSC1KeyNum" + n).val())) ? 0 : parseInt($("#txbSC1KeyNum" + n).val()),
            t += isNaN(parseFloat($("#txbSC1ShowNum" + n).val())) ? 0 : parseFloat($("#txbSC1ShowNum" + n).val())
        }
        $("#singleStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(e),
        $("#singleStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(Tool.TransformMathFloor(t, 2))
    },
    Check: function() {
        if (CartS1.ChkAllPoint())
            $("#cartInfo > div.betInfo_In > div.betInfo_scroll > div.betInfo_scroll").scrollTop($("#singleStep1").height());
        else {
            for (var e = 0; e < MainProperty.cart.list.length; e++) {
                var t = MainProperty.cart.list[e];
                MainProperty.cart.oddData[t].sA = MainProperty.cart.oddData[t].ra || 0,
                MainProperty.cart.oddData[t].sB = MainProperty.cart.oddData[t].rb || 0
            }
            MainProperty.cart.loc.type = Args.Single,
            CartS2.Draw()
        }
    },
    ChkAllPoint: function() {
        for (var e, t = 0, a = !1, i = $.extend([], MainProperty.cart.list), n = !1, r = 0; r < i.length; r++) {
            var s, o = i[r], l = o.split("_"), c = l[0] + l[1] + l[2] + l[3], d = MainProperty.cart.oddData[o];
            d && (s = d && d[l[3]] ? d[l[3]][0] : 0,
            o = Cart.GetSingleBetLimit(l[0], l[2], s, [d.obm, d.gbm]),
            d = $("#txbSC1KeyNum" + c).val(),
            $("#sc1" + c).hasClass("off") ? a = !0 : !isNaN(parseInt(d)) && 0 < d ? ((e = Cart.ChkErrorMsg(Args.CE_ChkLTGTLimit, Args.Single, l, d, [o[0], o[1]])).isMatch && (a = !0,
            $("#txbSC1KeyNum" + c).val(e.changeNum),
            $("#txbSC1ShowNum" + c).val(Cart.CalcKeyOrNum(Args.CalcShowNum, e.changeNum, s)),
            CartS1.SetTotalNumber()),
            $("#sc1" + c + " > div.BIL_In > div.BIL_input > input").hasClass("error") && (a = !0)) : (a = !0,
            0 == d && (d = "",
            $("#txbSC1KeyNum" + c).val(d),
            $("#txbSC1ShowNum" + c).val(d),
            Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Single, l, null, null)),
            Cart.ChkErrorMsg(Args.CE_ChkEmpty, Args.Single, l, d, null)),
            t += parseInt($("#txbSC1KeyNum" + c).val()) ? parseInt($("#txbSC1KeyNum" + c).val()) : 0,
            n = n || "" == d)
        }
        return n || (e = Cart.ChkErrorMsg(Args.CE_IF, Args.Single, null, t, [MainProperty.user.balance])),
        a = e && e.isMatch ? e.isMatch : a,
        a = 0 < MainProperty.cart.list.length && a
    }
}
  , CartS2 = {
    Draw: function() {
        $("#singleStep2 > .betInfo_List").remove(),
        $("#singleStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").removeClass("t_oddsChange"),
        $("#singleStep2 .cartChange").hide(),
        $("#singleStep2 .cartDefault").show();
        for (var e = 0; e < MainProperty.cart.list.length; e++) {
            var t = MainProperty.cart.list[e]
              , a = t.split("_")
              , i = a[0]
              , n = a[1]
              , r = a[2]
              , s = a[3]
              , o = i + n + r + s
              , l = MainProperty.cart.gameData[i]
              , c = MainProperty.cart.oddData[t]
              , a = MainProperty.cart.allyData[l.aId]
              , n = c && c[s] ? c[s][0] : 0
              , i = Tool.TransformKTypeDetailInfo([r, s, l.h])
              , r = Cart.GetCartBetInfo([r, s], [l.h, l.ta, l.tb], [n, c.line, c.lineAt], MainProperty.isPrincipal, !1)
              , s = Cart.GetCartShowTeamName([l.h, l.ta, l.tb, l.type], i)
              , n = "";
            n += '<div id="sc2' + o + '" class="betInfo_List" rel="' + t + '">',
            n += '<div class="BIL_T">',
            n += '<div class="BIL_T_text">',
            Cart.ChkDisplayRefScore(l.type, l.mode, i[3]) && (n += '<span id="sc2RefScore' + o + '" class="t_red">' + Cart.RefScoreProcess(c.sA, c.sB, l.h) + "</span> "),
            n += '<span id="sc2FrontPk' + o + '" class="t_blue">' + r[0] + '</span> <div class="t_inlineBox"><span id="sc2BackPk' + o + '" class="t_red">' + r[1] + '</span> @ <span id="sc2Odds' + o + '" class="t_red">' + r[2] + "</span></div>",
            n += "</div>",
            n += "</div>",
            n += '<div class="BIL_In">',
            n += '<ul class="BIL_InText">',
            n += "<li>" + Cart.GetCommonTitle(l.type, l.mode, a.an, i[0]) + "</li>",
            n += '<li id="sc2Alliance' + o + '">' + a.an + "</li>",
            n += '<li id="sc2Team' + o + '">' + s + "</li>",
            n += "</ul>",
            n += '<ul class="BIL_inputShow">',
            n += "<li>" + langFont.Font_CartBet + '：<strong id="sc2KeyNum' + o + '">' + $("#txbSC1KeyNum" + o).val() + "</strong></li>",
            n += "<li>" + langFont.Font_CartCanWin + '：<strong id="sc2ShowNum' + o + '">' + $("#txbSC1ShowNum" + o).val() + "</strong></li>",
            n += "</ul>",
            n += "</div>",
            n += "</div>",
            $("#singleStep2 > .betPlay").before(n)
        }
        CartS2.SetTotalNumber(),
        MainProperty.cart.loc.step = Args.Step2,
        $("#singleStep1").hide(),
        $("#singleStep2").show(),
        MainProperty.funcSetting.cartComfirmMsg || CartS2.Confirm()
    },
    SetTotalNumber: function() {
        for (var e = 0, t = 0, a = $("#singleStep2 > div.betInfo_List"), i = 0; i < a.length; i++) {
            var n = $(a[i]).attr("rel").replace(/_/g, "");
            e += isNaN(parseInt($("#sc2KeyNum" + n).text())) ? 0 : parseInt($("#sc2KeyNum" + n).text()),
            t += isNaN(parseFloat($("#sc2ShowNum" + n).text())) ? 0 : parseFloat($("#sc2ShowNum" + n).text())
        }
        $("#singleStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(e),
        $("#singleStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(Tool.TransformMathFloor(t, 2))
    },
    Confirm: function() {
        if (!MainProperty.cart.isSending) {
            MainProperty.cart.isSending = !0;
            var e = $.extend({}, MainProperty.cart.oddData);
            $("#singleStep1 > div.betInfo_List .t_oddsChange").removeClass("t_oddsChange"),
            $("#singleStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").removeClass("t_oddsChange"),
            $("#singleStep1 .cartChange").hide(),
            $("#singleStep1 .cartDefault").show();
            for (var t = [], a = 0; a < MainProperty.cart.list.length; a++) {
                var i = MainProperty.cart.list[a]
                  , n = MainProperty.cart.list[a].split("_")
                  , r = n[0] + n[1] + n[2] + n[3]
                  , r = parseInt($("#txbSC1KeyNum" + r).val());
                !isNaN(r) && 0 < r && (1 == MainProperty.funcSetting.defPoint[0] && a == MainProperty.cart.list.length - 1 && (MainProperty.cart.defPoint = r),
                i = {
                    gId: n[0],
                    gT: n[2].substr(0, 2),
                    sT: n[1].replace(e[i].sId, ""),
                    kT: n[2].substr(2),
                    bT: n[3],
                    coin: r,
                    odds: e[i] && e[i][n[3]] && e[i][n[3]][0] ? e[i][n[3]][0] : 0,
                    line: e[i].line || "0",
                    lineAt: e[i].lineAt,
                    sA: e[i].sA,
                    sB: e[i].sB,
                    sId: e[i].sId
                },
                t.push(i))
            }
            0 < (t = t.reverse()).length ? (CartBase.ShowOrHidMask(!0),
            CartS2.SendProcess(t, MainProperty.isPrincipal ? 1 : 0)) : MainProperty.cart.isSending = !1
        }
    },
    SendProcess: function(m, g) {
        $.ajax({
            type: "POST",
            url: "/ajax/AjaxCart.aspx",
            data: {
                method: "SendReceiptDelay",
                bestOdds: MainProperty.isAutoAdapt,
                isPrincipal: 1 == g,
                single: JSON.stringify(m),
                ticks: MainProperty.serverTime.ms
            },
            dataType: "json",
            error: function(e, t, a) {
                1 != LogOutCheck('{"st":"' + e.status + '"}') && ShowAlert(Args.Reload, langFont.Font_CartNetError)
            },
            success: function(e) {
                if (1 != LogOutCheck(e)) {
                    CartBase.ShowOrHidMask(!1);
                    var t = e.Result || e
                      , a = !1
                      , i = !1
                      , n = []
                      , r = [];
                    if ("Status"in t == 1)
                        (l = Cart.CheckGameReturnStatus(t.Status)).processType == Args.ShowAlert && l.msg && ShowAlert(Args.AlertText, l.msg),
                        MainProperty.cart.isSending = !1;
                    else {
                        m = m.reverse(),
                        t = t.reverse();
                        for (var s = 0; s < t.length; s++) {
                            var o = m[s];
                            if (o.sT = o.sId + o.sT,
                            o.kT = Tool.TransformGameType(MainProperty.cart.gameData[o.gId].type, Args.ShortNum) + o.kT,
                            t[s].WId) {
                                var l, c = o.gId + "_" + o.sT + "_" + o.kT + "_" + o.bT, d = o.gId + o.sT + o.kT + o.bT;
                                switch ((l = Cart.CheckGameReturnStatus(t[s].Status)).processType) {
                                case Args.Success:
                                    a = !0,
                                    MainProperty.cart.oddData[c][o.bT] = Tool.TransformPointer(o.kT, t[s].Odds),
                                    o.odds = t[s].Odds,
                                    n.unshift({
                                        wId: t[s].WId,
                                        sendInfo: o
                                    }),
                                    2 == t[s].Status && r.push(t[s].WId);
                                    break;
                                case Args.PKChange:
                                    i = !0,
                                    CartBase.OddsChangeDisplay(Args.Single, c, t[s]);
                                    break;
                                case Args.OtherError:
                                    var u, i = !0;
                                    l.errorType && (u = Cart.ChkErrorMsg(l.errorType, Args.Single, [o.gId, o.sT, o.kT, o.bT], t[s].BetLimit, null),
                                    l.needChangeInput && u.isMatch && (o = MainProperty.cart.oddData[c] && MainProperty.cart.oddData[c][o.bT] ? MainProperty.cart.oddData[c][o.bT][0] : 0,
                                    $("#txbSC1KeyNum" + d).val(u.changeNum),
                                    $("#txbSC1ShowNum" + d).val(Cart.CalcKeyOrNum(Args.CalcShowNum, u.changeNum, o)),
                                    CartS1.SetTotalNumber()))
                                }
                            }
                        }
                        if (void 0 !== e.UserBalance && Tool.TransformUserBalance(e.UserBalance),
                        a) {
                            for (var h = [], s = 0; s < n.length; s++) {
                                var p = n[s];
                                !p.wId || (p = Cart.UpdateSingleReceiptData(p.wId, p.sendInfo, r, g)) && h.push(p)
                            }
                            Receipt.DrawProcess(h)
                        }
                        MainProperty.funcSetting.cartCallBackMsg ? (CartS3.DrawProcess(m, t, g),
                        i ? ($("#cartInfo > div.betInfo_In > div.betInfo_scroll > div.betInfo_scroll").scrollTop($("#singleStep3").height()),
                        $("#btnSC3Close").attr("dir", Args.ShowCart)) : ($("#cartInfo > div.betInfo_In > div.betInfo_scroll > div.betInfo_scroll").scrollTop(0),
                        $("#btnSC3Close").attr("dir", Args.ShowReceipt))) : (MainProperty.cart.isSending = !1,
                        MainProperty.cart.loc.step = Args.Step3,
                        CartS3.Close(i ? Args.ShowCart : Args.ShowReceipt))
                    }
                    MainProperty.cart.isSending = !1
                }
            }
        })
    },
    Keep: function() {
        MainProperty.cart.isSending || (MainProperty.cart.loc.step = Args.Step1,
        $("#singleStep2").hide(),
        $("#singleStep1").show())
    }
}
  , CartS3 = {
    BindEvent: function() {
        $("#btnSC3Close").click(function(e) {
            CartS3.Close(parseInt($(e.currentTarget).attr("dir")))
        })
    },
    DrawProcess: function(e, t, a) {
        $("#singleStep3 > div.betInfo_List").remove(),
        $("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(0),
        $("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(0),
        Cart.ClearStep3Status(),
        $("#sc3BtmErrorBlock").add("#sc3BtmErrorBlock > div.BIL_NG_text").hide();
        for (var i = 0; i < t.length; i++) {
            var n = t[i]
              , r = e[i]
              , s = r.gId + "_" + r.sT + "_" + r.kT + "_" + r.bT
              , o = MainProperty.cart.gameData[r.gId].gpid + r.sT + r.kT + r.bT
              , l = Cart.CheckGameReturnStatus(n.Status);
            Cart.AddStep3Status(n.Status),
            CartS3.Draw(r, a),
            l.processType == Args.Success ? ($("#sc3" + o).attr("rel", n.WId),
            2 == n.Status ? ($("#sc3" + o + " > div.BIL_In > ul.BIL_inputShow").next().remove(),
            $("#sc3" + o + " > div.BIL_In > ul.BIL_inputShow").after(Receipt.DrawGameStatus(255, null, null)),
            Receipt.SetStatusEvent("#sc3" + o)) : Cart.ChkSetp3AlwaysConfirmed(MainProperty.cart.gameData[r.gId].type, MainProperty.cart.gameData[r.gId].mode, MainProperty.cart.gameData[r.gId].st, MainProperty.cart.oddData[s].wt) && ($("#sc3" + o + " > div.BIL_In > ul.BIL_inputShow").next().remove(),
            $("#sc3" + o + " > div.BIL_In > ul.BIL_inputShow").after(Receipt.DrawGameStatus(254, null, null)),
            Receipt.SetStatusEvent("#sc3" + o))) : CartBase.SetStep3ErrorMsg(Args.Single, n.Status, o, n.BetLimit)
        }
        CartS3.SetTotalNumber();
        var c = Cart.GetStep3StatusCount();
        0 < c && ($("#sc3BtmErrorBlock").show(),
        $("#sc3BtmErrorChanged").css("display", "table"),
        $("#sc3BtmErrorChangedCount").text(c)),
        MainProperty.cart.loc.step = Args.Step3,
        $("#singleStep1").add("#singleStep2").hide(),
        $("#singleStep3").show()
    },
    Draw: function(e, t) {
        var a = e.gId
          , i = e.sT
          , n = e.kT
          , r = e.bT
          , s = a + "_" + i + "_" + n + "_" + r
          , o = MainProperty.cart.gameData[a] || {}
          , l = MainProperty.cart.allyData[o.aId] || {}
          , c = o.gpid + i + n + r
          , d = Tool.TransformKTypeDetailInfo([n, r, o.h])
          , u = Cart.GetCartBetInfo([n, r], [o.h, o.ta, o.tb], [e.odds, e.line, e.lineAt], t, !1)
          , h = Cart.GetCartShowTeamName([o.h, o.ta, o.tb, o.type], d)
          , a = parseInt(e.coin)
          , i = parseFloat(Cart.CalcKeyOrNum(Args.CalcShowNum, a, e.odds))
          , n = isNaN(parseInt($("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text())) ? 0 : parseInt($("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text())
          , r = isNaN(parseFloat($("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text())) ? 0 : parseFloat($("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text())
          , t = "";
        t += '<div id="sc3' + c + '" class="betInfo_List" rel="' + s + '">',
        t += '<div class="BIL_T">',
        t += '<div class="BIL_T_text">',
        Cart.ChkDisplayRefScore(o.type, o.mode, d[3]) && (t += '<span class="t_red">' + Cart.RefScoreProcess(e.sA, e.sB, o.h) + "</span> "),
        t += '<span class="t_blue">' + u[0] + '</span> <div class="t_inlineBox"><span class="t_red">' + u[1] + '</span> @ <span class="t_red">' + u[2] + "</span></div>",
        t += "</div>",
        t += "</div>",
        t += '<div class="BIL_In">',
        t += '<ul class="BIL_InText">',
        t += "<li>" + Cart.GetCommonTitle(o.type, o.mode, l.an, d[0]) + "</li>",
        t += "<li>" + l.an + "</li>",
        t += "<li>" + h + "</li>",
        t += "</ul>",
        t += '<ul class="BIL_inputShow">',
        t += "<li>" + langFont.Font_CartBet + "：<strong>" + a + "</strong></li>",
        t += "<li>" + langFont.Font_CartCanWin + "：<strong>" + Tool.TransformMathFloor(i, 2) + "</strong></li>",
        t += "</ul>",
        t += "</div>",
        t += "</div>",
        $("#singleStep3 > div.betPlay").before(t),
        n += a,
        r += i,
        $("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(n),
        $("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(Tool.TransformMathFloor(r, 2))
    },
    SetTotalNumber: function() {
        for (var e = 0, t = 0, a = $("#singleStep3 > div.betInfo_List:not(.betInfo_List_NG)"), i = 0; i < a.length; i++) {
            var n = $(a[i]).attr("id")
              , r = parseInt($("#" + n + " > div.BIL_In > ul.BIL_inputShow > li:nth-child(1) > strong").text())
              , n = parseFloat($("#" + n + " > div.BIL_In > ul.BIL_inputShow > li:nth-child(2) > strong").text());
            e += isNaN(r) ? 0 : r,
            t += isNaN(n) ? 0 : n
        }
        $("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(e),
        $("#singleStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(Tool.TransformMathFloor(t, 2))
    },
    Close: function(e) {
        Cart.KeepSuccessStep3(!1),
        CartBase.ChangeCartDisplay(e)
    },
    Keep: function() {
        Cart.KeepSuccessStep3(!0),
        CartBase.ChangeCartInfoDisplay(Args.Single)
    }
}
  , CartFast = {
    BindEvent: function() {
        $("#mask").click(function() {
            CartFast.Close()
        }),
        Tool.IsTouch ? $("#tradePrompt").click(function() {
            "none" == $("#tradePrompt > div.FBP_In").css("display") ? ($("#tradePrompt > div.FBP_In").show(),
            $("#tradePrompt > div.FBP_In > div.FBP_InBox").slideDown(200)) : ($("#tradePrompt > div.FBP_In").fadeOut(200),
            $("#tradePrompt > div.FBP_In > div.FBP_InBox").slideUp(200))
        }) : $("#tradePrompt").hoverDelay(function() {
            $("#tradePrompt > div.FBP_In").show(),
            $("#tradePrompt > div.FBP_In > div.FBP_InBox").slideDown(200)
        }, function() {
            $("#tradePrompt > div.FBP_In").fadeOut(200),
            $("#tradePrompt > div.FBP_In > div.FBP_InBox").slideUp(200)
        }),
        $("#pointCount").on("input propertychange", function(e) {
            var t = $(e.currentTarget)
              , e = (e = parseInt(Cart.AmountMonitor($(t).val()))) || "";
            $(t).val(e)
        }),
        $("#pointCount").on("click keyup", function() {
            $("#fastNoInputPrompt").hide(),
            $("#pointCount").removeClass("error")
        }),
        $("#fastCartInfo > input.btn_popFB_confirmOK").click(function() {
            CartFast.CloseStep3()
        })
    },
    CloseStep3: function() {
        MainProperty.cart.isSending || (Cart.KeepSuccessStep3(!1),
        CartFast.Close(),
        CartBase.ChangeCartDisplay(Args.ShowReceipt))
    },
    SwitchEvent: function() {
        MainProperty.cart.isSending || (0 == $("#switchTrade.on").length ? ($("#switchTrade").text(langFont.Font_On),
        $("#switchTrade").addClass("on"),
        $("#pointCount").parent("li").show(),
        $("#pointCount").removeClass("error"),
        CartBase.SetFocus($("#pointCount")),
        MainProperty.isFastTrade = !0,
        CartBase.Clear()) : ($("#switchTrade").text(langFont.Font_Off),
        $("#switchTrade").removeClass("on"),
        $("#pointCount").parent("li").hide(),
        $("#fastNoInputPrompt").hide(),
        MainProperty.isFastTrade = !1,
        CartFast.Close()),
        CartBase.ChkCartDisplay())
    },
    Add: function(e, t, a, i, n, r) {
        CartFast.Clear();
        var s = t + a + i + n
          , o = t + "_" + a + "_" + i + "_" + n
          , l = $.extend({}, (r ? MainProperty.innerData : MainProperty).gameData[t]);
        l.type = Tool.IsCHorFI(l.type) ? "sc" : "op" == l.type ? "ot" : l.type;
        var c = l
          , d = $.extend({}, r ? MainProperty.innerData.oddData[t] && MainProperty.innerData.oddData[t][a] ? MainProperty.innerData.oddData[t][a][i] : {} : MainProperty.oddData[t] && MainProperty.oddData[t][a] ? MainProperty.oddData[t][a][i] : {})
          , u = $.extend({}, (r ? MainProperty.innerData : MainProperty).allyData[c.aId]);
        Cart.AddCartStep1(o, [u, c, d], null),
        c = MainProperty.cart.gameData[t] || {},
        d = MainProperty.cart.oddData[o] || {},
        MainProperty.cart.allyData[c.aId];
        l = c.h,
        a = c.ta,
        r = c.tb,
        t = d && d[n] ? d[n][0] : 0,
        u = Tool.TransformKTypeDetailInfo([i, n, l]),
        r = Cart.GetCartBetInfo([i, n], [l, a, r], [t, d.line, d.lineAt], MainProperty.isPrincipal, !1),
        t = "";
        t += "<div>",
        Cart.ChkDisplayRefScore(c.type, c.mode, u[3]) && (t += '<span id="fcRefScore' + s + '" class="t_red">' + Cart.RefScoreProcess(d.ra, d.rb, l) + "</span> "),
        t += '<font id="fcFrontPk' + s + '" class="popFB_info_T t_blue">' + r[0] + "</font>",
        t += "</div>",
        t += '<div class="popFB_info_bet"><span id="fcBackPk' + s + '" class="t_red">' + r[1] + '</span> @ <span id="fcOdds' + s + '" class="t_red">' + r[2] + "</span></div>",
        $("#fastCartInfo > div.popFB_info").html(t),
        $("#fastCartInfo").attr("rel", o),
        CartBase.SetScheduleBgColor();
        t = $("#pointCount").val();
        $("#mask").show(),
        $("#fcKeyNum").text(t).removeClass("t_red"),
        $("#fastCartInfo > div.popFB_prompt").hide(),
        $("#fastCartInfo > div.popFB_info_bet .t_red").removeClass("t_oddsChange"),
        CartFast.ChangeBtn(Args.FCBet),
        MainProperty.cart.fastCartItem.rel = $(e).attr("rel"),
        MainProperty.cart.fastCartItem.isInner = 0 <= $(e).attr("class").indexOf("btn_GSOdds"),
        CartFast.Position(e),
        CartFast.ArrowDisplay(!0),
        $("#fastCartInfo").show(),
        CartFast.ChkAllPoint(o, c, d),
        Outer.ScrollSolid()
    },
    Clear: function() {
        clearInterval(MainProperty.cartTimer.scanner),
        MainProperty.cartTimer.time.send || Cart.SetCarTimeList(Args.BaseList, null);
        for (var e = 0; e < MainProperty.cart.list.length; e++)
            Cart.SetCarTimeList(Args.RemoveList, MainProperty.cart.list[e]);
        MainProperty.receiptKeepList = [],
        MainProperty.cart.allyData = {},
        MainProperty.cart.gameData = {},
        MainProperty.cart.oddData = {},
        MainProperty.cart.list = [],
        MainProperty.cart.returnMax = {},
        MainProperty.cart.loc = {
            type: "",
            step: "",
            fcBtn: ""
        },
        MainProperty.cart.fastCartItem = {
            rel: null,
            isInner: null
        },
        CartBase.SetScheduleBgColor(),
        CartBase.ChkCartDisplay(),
        MainProperty.cartTimer.scanner = setInterval(Cart.ChkCartTimer, 200)
    },
    ChangeBtn: function(e) {
        switch (MainProperty.cart.loc.step = "",
        MainProperty.cart.loc.fcBtn = e,
        $("#fastCartInfo > input").add("#btnFCLoading").hide(),
        e) {
        case Args.FCBet:
            $("#fastCartInfo > input.btn_popFB_confirm").show();
            break;
        case Args.FCChange:
            $("#fastCartInfo > input.btn_popFB_change").show();
            break;
        case Args.FCSuccess:
            MainProperty.cart.loc.step = Args.Step3,
            $("#fastCartInfo > input.btn_popFB_confirmOK").show();
            break;
        case Args.FCSending:
            $("#btnFCLoading").show();
            break;
        case Args.FCClose:
            MainProperty.cart.loc.step = Args.Step3,
            $("#btnFCClose").show()
        }
    },
    Position: function(e) {
        var t = $("#fastCartInfo").innerWidth() / 2
          , a = $(e).width() / 2
          , i = $(e).innerHeight()
          , n = $(e).offset().left + $("#mainStruc").scrollLeft() + a - t + "px"
          , r = $(e).offset().top - 5 + "px"
          , a = $(window).height() - 17;
        (1200 <= $(window).width() || Tool.IsTouch) && (a = $(window).height());
        t = a - 200 + "px",
        i = $(e).offset().top + i + 12 + "px",
        e = a - $(e).offset().top + 12 + "px";
        r < t ? $("#fastCartInfo").removeClass("bottom").css({
            left: n,
            top: i,
            bottom: ""
        }) : $("#fastCartInfo").addClass("bottom").css({
            left: n,
            bottom: e,
            top: ""
        }),
        $("div.scrollbar-macosx, ul.scrollbar-macosx").not("#mainStruc").css("-webkit-overflow-scrolling", "initial")
    },
    Close: function() {
        var e;
        0 < $("#fastCartInfo:visible").length && (MainProperty.cart.isSending || (e = $("#fastCartInfo").attr("rel"),
        clearInterval(MainProperty.cartTimer.scanner),
        MainProperty.cartTimer.time.send || Cart.SetCarTimeList(Args.BaseList, null),
        0 < MainProperty.cart.list.length && (Cart.SetCarTimeList(Args.RemoveList, e),
        $("#fastCartInfo").attr("rel", "")),
        MainProperty.receiptKeepList = [],
        MainProperty.cart.allyData = {},
        MainProperty.cart.gameData = {},
        MainProperty.cart.oddData = {},
        MainProperty.cart.list = [],
        MainProperty.cart.returnMax = {},
        MainProperty.cart.loc = {
            type: "",
            step: "",
            fcBtn: ""
        },
        MainProperty.cart.fastCartItem = {
            rel: null,
            isInner: null
        },
        Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Fast, null, null, null),
        CartBase.SetScheduleBgColor(),
        CartFast.ChangeBtn(Args.FCBet),
        $("#fastCartInfo").add("#mask").add("#fastNoInputPrompt").hide(),
        $("#pointCount").removeClass("error"),
        $("div.scrollbar-macosx, ul.scrollbar-macosx").css("-webkit-overflow-scrolling", "touch"),
        MainProperty.cartTimer.scanner = setInterval(Cart.ChkCartTimer, 200),
        Outer.RemoveSolid()))
    },
    Check: function() {
        var e = $("#fastCartInfo").attr("rel");
        if (!CartFast.ChkAllPoint(e, MainProperty.cart.gameData[e], MainProperty.cart.oddData[e])) {
            for (var t = 0; t < MainProperty.cart.list.length; t++) {
                var a = MainProperty.cart.list[t];
                MainProperty.cart.oddData[a].sA = MainProperty.cart.oddData[a].ra || 0,
                MainProperty.cart.oddData[a].sB = MainProperty.cart.oddData[a].rb || 0
            }
            MainProperty.cart.loc.type = Args.Fast,
            CartFast.Confirm()
        }
    },
    ChkAllPoint: function(e, t, a) {
        var i = $("#fcKeyNum").text() || 0
          , n = Cart.ChkErrorMsg(Args.CE_IF, Args.Fast, null, i, [MainProperty.user.balance], !1)
          , r = parseInt(MainProperty.user.balance)
          , r = isNaN(r) || r < 0 ? 0 : parseInt(MainProperty.user.balance);
        if (0 < $("#fastCartInfo > div.popFB_prompt:not(#fcBtmErrorIF):visible").length && n.isMatch || 0 == r && 0 < $("#fcBtmErrorIF:visible").length)
            return !0;
        var s = e.split("_")
          , e = a && a[s[3]] ? a[s[3]][0] : 0
          , t = Cart.GetSingleBetLimit(s[0], s[2], e, [a.obm, a.gbm], t);
        return (n = Cart.ChkErrorMsg(Args.CE_IF, Args.Fast, null, $("#fcKeyNum").text(), [MainProperty.user.balance])).isMatch ? ($("#fcKeyNum").text(r).addClass("t_red"),
        $("#pointCount").val(r || "").addClass("error"),
        0 == r ? $("#fastNoInputPrompt").show() : $("#fastNoInputPrompt").hide(),
        !0) : !!(n = Cart.ChkErrorMsg(Args.CE_ChkLTGTLimit, Args.Fast, s, i, [t[0], t[1]])).isMatch && ($("#fcKeyNum").text(n.changeNum).addClass("t_red"),
        $("#pointCount").val(n.changeNum).addClass("error"),
        !0)
    },
    Confirm: function() {
        var e, t, a, i;
        MainProperty.cart.isSending || (MainProperty.cart.isSending = !0,
        e = $.extend({}, MainProperty.cart.oddData),
        $("#pointCount").removeClass("error"),
        $("#fastCartInfo > div.popFB_info .t_oddsChange").removeClass("t_oddsChange"),
        a = [],
        i = {
            gId: (t = (i = $("#fastCartInfo").attr("rel")).split("_"))[0],
            gT: t[2].substr(0, 2),
            sT: t[1].replace(e[i].sId, ""),
            kT: t[2].substr(2),
            bT: t[3],
            coin: parseInt($("#fcKeyNum").text()),
            odds: e[i] && e[i][t[3]] && e[i][t[3]][0] ? e[i][t[3]][0] : 0,
            line: e[i].line || "0",
            lineAt: e[i].lineAt,
            sA: e[i].sA,
            sB: e[i].sB,
            sId: e[i].sId
        },
        a.push(i),
        0 < a.length && (CartFast.ChangeBtn(Args.FCSending),
        CartFast.SendProcess(a, e, MainProperty.isPrincipal ? 1 : 0)))
    },
    SendProcess: function(p, m, g) {
        $.ajax({
            type: "POST",
            url: "/ajax/AjaxCart.aspx",
            data: {
                method: "SendReceiptDelay",
                bestOdds: MainProperty.isAutoAdapt,
                isPrincipal: 1 == g,
                single: JSON.stringify(p),
                ticks: MainProperty.serverTime.ms
            },
            dataType: "json",
            error: function(e, t, a) {
                1 != LogOutCheck('{"st":"' + e.status + '"}') && ShowAlert(Args.Reload, langFont.Font_CartNetError)
            },
            success: function(e) {
                if (1 != LogOutCheck(e)) {
                    var t = e.Result || e
                      , a = !1
                      , i = []
                      , n = [];
                    if (CartFast.ChangeBtn(Args.FCBet),
                    "Status"in t == 1)
                        (l = Cart.CheckGameReturnStatus(t.Status)).processType == Args.ShowAlert && l.msg && ShowAlert(Args.AlertText, l.msg),
                        MainProperty.cart.isSending = !1;
                    else {
                        var r = 0;
                        try {
                            for (var s = 0; s < t.length; s++) {
                                var o = p[s];
                                if (o.sT = o.sId + o.sT,
                                o.kT = Tool.TransformGameType(MainProperty.cart.gameData[o.gId].type, Args.ShortNum) + o.kT,
                                t[s].WId) {
                                    var l, c = o.gId + "_" + o.sT + "_" + o.kT + "_" + o.bT, d = o.gId + o.sT + o.kT + o.bT, r = (l = Cart.CheckGameReturnStatus(t[s].Status)).errorType;
                                    switch (l.processType) {
                                    case Args.Success:
                                        a = !0,
                                        MainProperty.cart.oddData[c][o.bT] = Tool.TransformPointer(o.kT, t[s].Odds),
                                        o.odds = t[s].Odds,
                                        $("#fcOdds" + d).text(MainProperty.cart.oddData[c][o.bT][MainProperty.isPrincipal]),
                                        i.unshift({
                                            wId: t[s].WId,
                                            sendInfo: o
                                        }),
                                        2 == t[s].Status && n.push(t[s].WId);
                                        break;
                                    case Args.PKChange:
                                        CartBase.OddsChangeDisplay(Args.Fast, c, t[s]);
                                        break;
                                    case Args.OtherError:
                                        l.errorType && Cart.GetErrorGroup(l.errorType) != Args.MaskError ? (o = Cart.ChkErrorMsg(l.errorType, Args.Fast, [o.gId, o.sT, o.kT, o.bT], t[s].BetLimit, null),
                                        l.needChangeInput && o.isMatch && ($("#fcKeyNum").text(o.changeNum).addClass("t_red"),
                                        $("#pointCount").val(o.changeNum).addClass("error"))) : CartBase.SetStep3ErrorMsg(Args.Fast, t[s].Status, null, t[s].BetLimit)
                                    }
                                }
                            }
                            if (void 0 !== e.UserBalance && Tool.TransformUserBalance(e.UserBalance),
                            a) {
                                CartFast.ChangeBtn(Args.FCSuccess);
                                for (var u = [], s = 0; s < i.length; s++) {
                                    var h = i[s];
                                    !h.wId || (h = Cart.UpdateSingleReceiptData(h.wId, h.sendInfo, n, g)) && u.push(h)
                                }
                                Receipt.DrawProcess(u)
                            } else
                                r == Args.CE_ClosePK && CartFast.ChangeBtn(Args.FCClose)
                        } catch (e) {
                            MainProperty.cart.isSending = !1,
                            BBXHR.RecordLog("發送時間: " + (new Date).Format("yyyy-MM-dd hh:mm:ss.F") + "\r\ntoken: " + MainProperty.sessionID + "\r\nsource: Document\r\n" + JSON.stringify({
                                message: "\r\n Exception: " + e + "\r\n cartList: " + MainProperty.cart.list + "\r\n cartOddData: " + JSON.stringify(m) + "\r\n oddData: " + JSON.stringify(MainProperty.cart.oddData) + "\r\n sendData: " + JSON.stringify(p) + "\r\n rel: " + $("#fastCartInfo").attr("rel")
                            }))
                        }
                    }
                    MainProperty.cart.isSending = !1,
                    a && 0 == MainProperty.funcSetting.cartCallBackMsg && CartFast.CloseStep3()
                }
            }
        })
    },
    InitialDisplay: function() {
        var e, t, a, i;
        MainProperty.isFastTrade && MainProperty.cart.fastCartItem.rel && "boolean" == typeof MainProperty.cart.fastCartItem.isInner && (e = CartBase.GetGamePath("outerGamePath"),
        t = CartBase.GetGamePath("innerGamePath"),
        a = MainProperty.cart.fastCartItem.rel,
        0 == (i = MainProperty.cart.fastCartItem.isInner) ? (Tool.IsOuterSingleTeam() ? 0 < $(e + " li[rel=" + a + "]").parents("div.GLOddsPcgame.show").length : 0 < $(e + " li[rel=" + a + "]").length) ? (CartFast.ArrowDisplay(!0),
        CartFast.SetPosition()) : CartFast.ArrowDisplay(!1) : 1 == i ? 0 < $(t + "[rel=" + a + "]:visible").length ? (CartFast.ArrowDisplay(!0),
        CartFast.SetPosition()) : CartFast.ArrowDisplay(!1) : CartFast.Close())
    },
    SetPosition: function() {
        var e, t, a, i;
        MainProperty.isFastTrade && MainProperty.cart.fastCartItem.rel && "boolean" == typeof MainProperty.cart.fastCartItem.isInner && (e = CartBase.GetGamePath("outerGamePath"),
        t = CartBase.GetGamePath("innerGamePath"),
        a = MainProperty.cart.fastCartItem.rel,
        0 == (i = MainProperty.cart.fastCartItem.isInner) ? CartFast.Position($(e + " li[rel=" + a + "]")) : 1 == i && CartFast.Position($(t + "[rel=" + a + "]")))
    },
    ArrowDisplay: function(e) {
        e ? $("#fastCartInfo").removeClass("fastCartArrowHidden") : $("#fastCartInfo").addClass("fastCartArrowHidden")
    }
}
  , CartM1 = {
    BindEvent: function() {
        $("#p1Option").click(function(e) {
            e = $(e.currentTarget);
            $("#p1Info > div.BC_list > ul.BC_listIn > input").removeClass("focus").val(""),
            $("#p1Info > div.BC_list").each(function() {
                var e = $(this).attr("rel");
                Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, [e], null, null)
            }),
            $("#mc1BtmKeyNum").add("#mc1BtmShowNum").removeClass("focus").val(""),
            Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, ["multiBtm"], null, null),
            "none" == $("#p1Info").css("display") ? ($("#p1Info").slideDown(200),
            $(e).addClass("on"),
            $("#multiStep1 > div.betPlay > div.betPlay_In").hide()) : ($("#p1Info").slideUp(200),
            $(e).removeClass("on"),
            $("#multiStep1 > div.betPlay > div.betPlay_In").show(),
            CartM1.ProcessDefaultPoint(),
            CartM1.BtmInputTouchEvent()),
            CartM1.SetTotalNumber()
        }),
        $("#mc1BtmKeyNum").on("mousedown", function(e) {
            CartBase.SetFocusClass($(e.target)),
            CartM1.BtmInputTouchEvent()
        }),
        $("#mc1BtmKeyNum").on("input propertychange", function(e) {
            e = $(e.currentTarget);
            $(e).val(Cart.AmountMonitor($(e).val()))
        }),
        $("#mc1BtmKeyNum").keyup(function(e) {
            var t, a = $(e.currentTarget);
            13 === e.keyCode ? (CartM1.Check(),
            e.stopPropagation()) : (t = MainProperty.cart.list.length + "x1",
            e = parseInt($(a).val()) ? parseInt($(a).val()) : "",
            a = Cart.GetMultiBetLimit(t),
            (a = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Multi, ["multiBtm"], e, a)).isMatch && (e = a.changeNum),
            t = Cart.CalcPassKeyOrNum(Args.CalcShowNum, t, e),
            $("#mc1BtmKeyNum").val(e),
            $("#mc1BtmShowNum").val(t),
            CartM1.SetTotalNumber())
        }),
        $("#mc1BtmKeyNum").blur(function(e) {
            var t = $(e.currentTarget)
              , a = $(t).val();
            isNaN(parseFloat(a)) || 0 == parseFloat(a) ? ($("#mc1BtmKeyNum").add("#mc1BtmShowNum").val(""),
            Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, ["multiBtm"], null, null)) : (e = MainProperty.cart.list.length + "x1",
            t = $("#mc1BtmKeyNum").val(),
            a = Cart.GetMultiBetLimit(e),
            (a = Cart.ChkErrorMsg(Args.CE_ChkLTGTLimit, Args.Multi, ["multiBtm"], t, a)).isMatch && (t = a.changeNum),
            e = Cart.CalcPassKeyOrNum(Args.CalcShowNum, e, t),
            $("#mc1BtmKeyNum").val(t),
            $("#mc1BtmShowNum").val(e)),
            CartM1.SetTotalNumber()
        })
    },
    BtmInputTouchEvent: function() {
        $("#multiStep1 > div.betPlay > div.betPlay_In > div.betPlay_list > ul > li.BP_listIn > input").removeClass("enter"),
        $("#mc1BtmKeyNum").addClass("enter");
        var e = $("#mc1BtmKeyNum").attr("placeholder").split(" - ")[1];
        isNaN(parseInt(e)) || CartBase.CarSetMaxIcon("bcChip", !0, e, MainProperty.cart.list.length + "x1")
    },
    Draw: function(e, t, a, i) {
        $("#mc1NGText").add("#mc1NGText > div.BIL_NG_text").hide(),
        $("#p1EachNum").add("#p1TotalNum").text(0),
        $("#mc1BtmKeyNum").add("#mc1BtmShowNum").val(""),
        Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, ["multiBtm"], null, null),
        Cart.ClearBtmErrorPrompt(Args.Multi, !1);
        var n = $("#mc1NGText");
        0 < $("#multiStep1 > .newCart").length && (n = $("#multiStep1 > .newCart"),
        $("#multiStep1 > .newCart").removeClass("newCart"));
        var r = e + t + a + i
          , s = e + "_" + t + "_" + a + "_" + i
          , o = MainProperty.cart.gameData[e] || {}
          , l = MainProperty.cart.oddData[s] || {}
          , c = MainProperty.cart.allyData[o.aId] || {}
          , d = o.h
          , u = o.ta
          , h = o.tb
          , p = o.type
          , m = o.mode
          , g = l && l[i] ? l[i][0] : 0
          , f = Tool.TransformKTypeDetailInfo([a, i, d])
          , g = Cart.GetCartBetInfo([a, i], [d, u, h], [g, l.line, l.lineAt], MainProperty.isPrincipal, !1)
          , u = Cart.GetCartShowTeamName([d, u, h, p], f)
          , h = "";
        h += '<div id="mc1' + r + '" class="betInfo_List" rel="' + s + '">',
        h += '<div class="BIL_T">',
        h += '<div class="BIL_T_text">',
        Cart.ChkDisplayRefScore(p, m, f[3]) && (h += '<span id="mc1RefScore' + r + '" class="t_red">' + Cart.RefScoreProcess(l.ra, l.rb, d) + "</span> "),
        h += '<span id="mc1FrontPk' + r + '" class="t_blue">' + g[0] + '</span> <div class="t_inlineBox"><span id="mc1BackPk' + r + '" class="t_red">' + g[1] + '</span> @ <span id="mc1Odds' + r + '" class="t_red">' + g[2] + "</span></div>",
        h += "</div>",
        h += '<div class="btn_BIL_close" onclick="CartBase.Remove(\'' + e + "', '" + t + "', '" + a + "', '" + i + "')\"></div>",
        h += "</div>",
        h += '<div class="BIL_In">',
        h += '<ul class="BIL_InText">',
        h += "<li>" + Cart.GetCommonTitle(o.type, o.mode, c.an, f[0]) + "</li>",
        h += '<li id="mc1Alliance' + r + '">' + c.an + "</li>",
        h += '<li id="mc1Team' + r + '">' + u + "</li>",
        h += "<li>" + langFont.Font_AccountDate + "：" + Tool.TransformDateTime(o.cd, langFont.Font_Langue, 6) + "</li>",
        h += "</ul>",
        h += "</div>",
        h += "</div>",
        $(n).before(h),
        CartM1.UpdateLimit(!1, MainProperty.cart.list.length + "x1"),
        CartM1.ProcessDefaultPoint(),
        CartM1.ChkNGList(),
        CartM1.DrawPassInfo(),
        CartM1.SetTotalNumber()
    },
    ProcessDefaultPoint: function(e) {
        var t, a = e || Cart.GetDefaultPoint(Args.Multi);
        !isNaN(parseInt(a)) && 1 <= MainProperty.user.balance && (t = MainProperty.cart.list.length,
        e = a,
        a = Cart.GetMultiBetLimit(t + "x1"),
        (a = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Multi, ["multiBtm"], e, a)).isMatch && (e = a.changeNum),
        t = Cart.CalcPassKeyOrNum(Args.CalcShowNum, t + "x1", e),
        $("#mc1BtmKeyNum").val(e),
        $("#mc1BtmShowNum").val(t))
    },
    ChkNGList: function() {
        var e = Cart.GetMultiNGInfo()
          , t = !1;
        $("#multiStep1 > div.betInfo_List").removeClass("betInfo_List_NG");
        for (var a = 0; a < e.list.length; a++)
            $("#mc1" + e.list[a].replace(/_/g, "")).addClass("betInfo_List_NG");
        $("#mc1NGText").add("#mc1NGText > div.BIL_NG_text").hide(),
        0 < e.list.length ? (t = !0,
        $("#mc1NGNum").text(e.list.length),
        $("#mc1CantPassText").css("display", "table")) : $("#mc1NGNum").text(0),
        0 < e.diffAcDate && (t = !0,
        $("#mc1DiffAcDateText").css("display", "table")),
        0 < e.theSameGame && (t = !0,
        $("#mc1TheSameGameText").css("display", "table")),
        t && $("#mc1NGText").show()
    },
    DrawPassInfo: function() {
        $("#p1Info > div.BC_list").remove(),
        $("#mc1BtmKeyNum").addClass("enter"),
        $("#p1Info").slideUp(200),
        $("#p1Option").removeClass("on"),
        $("#multiStep1 > div.betPlay > div.betPlay_In").show();
        for (var e, t, a = MainProperty.cart.list.length, i = "", n = 2; n <= a; n++)
            t = Cart.CalcMultiConsist(Args.CalcPassNum, a, n),
            i = "",
            i += '<div id="p1' + (e = n + "x1") + '" class="BC_list" rel="' + e + '">',
            i += '<div class="BC_listT">' + langFont["Font_Cart" + e] + "</div>",
            i += '<ul class="BC_listIn">',
            i += '<div class="BC_doubleNum"><span class="t_red">' + t + "</span> x</div>",
            i += '<input id="txbP1KeyNum' + e + '" type="text" class="BC_keyNum" rel="' + e + '" maxLength="' + MainProperty.cart.maxInputLength + '" />',
            i += '<input id="txbP1ShowNum' + e + '" type="text" class="BC_showNum off" disabled="disabled" placeholder="' + langFont.Font_CartCanWinPoint + '" rel="' + e + '" maxLength="' + MainProperty.cart.maxInputLength + '" />',
            i += "</ul>",
            i += '<div class="error_t"></div>',
            i += "</div>",
            $("#p1Info > .BC_total").before(i),
            CartM1.UpdateLimit(!0, e);
        2 < a ? (i = "",
        i += '<div id="p1' + (e = a + "x" + (t = Cart.CalcMultiConsist(Args.CalcTotalPassNum, a, null))) + '" class="BC_list" rel="' + e + '">',
        i += '<div class="BC_listT">' + ParlaysText(a, t) + "</div>",
        i += '<ul class="BC_listIn">',
        i += '<div class="BC_doubleNum"><span class="t_red">' + t + "</span> x</div>",
        i += '<input id="txbP1KeyNum' + e + '" type="text" class="BC_keyNum" rel="' + e + '" maxLength="' + MainProperty.cart.maxInputLength + '" />',
        i += '<input id="txbP1ShowNum' + e + '" type="text" class="BC_showNum off" disabled="disabled" placeholder="' + langFont.Font_CartCanWinPoint + '" rel="' + e + '" maxLength="' + MainProperty.cart.maxInputLength + '" />',
        i += "</ul>",
        i += '<div class="error_t"></div>',
        i += "</div>",
        $("#p1Info > .BC_total").before(i),
        CartM1.UpdateLimit(!0, e),
        $("#p1Option").show()) : $("#p1Option").hide(),
        $("#p1Info > div.BC_list input.BC_keyNum").on("input propertychange", function(e) {
            e = $(e.currentTarget);
            $(e).val(Cart.AmountMonitor($(e).val()))
        }),
        $("#p1Info > div.BC_list input.BC_keyNum").keyup(function(e) {
            var t, a = $(e.currentTarget);
            13 === e.keyCode ? (CartM1.Check(),
            e.stopPropagation()) : (t = $(a).attr("rel"),
            e = $(a).val(),
            isNaN(parseInt(e)) || 0 == parseInt(e) ? ($("#p1" + t + " input").val(""),
            Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, [t], null, null)) : (a = e,
            e = Cart.GetMultiBetLimit(t),
            (e = Cart.ChkErrorMsg(Args.CE_ChkGTLimit, Args.Multi, [t], a, e)).isMatch && (a = e.changeNum),
            e = Cart.CalcPassKeyOrNum(Args.CalcShowNum, t, a),
            $("#txbP1KeyNum" + t).val(a),
            $("#txbP1ShowNum" + t).val(e)),
            CartM1.SetTotalNumber())
        }),
        $("#p1Info > div.BC_list input.BC_keyNum").click(function(e) {
            CartBase.SetFocusClass(e.currentTarget)
        }),
        $("#p1Info > div.BC_list input.BC_keyNum").blur(function(e) {
            var t = $(e.currentTarget)
              , a = $(t).attr("rel")
              , i = $(t).val();
            isNaN(parseFloat(i)) || 0 == parseFloat(i) ? ($("#p1" + a + " input").val(""),
            Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, [a], null, null)) : (e = $("#txbP1KeyNum" + a).val(),
            i = Cart.GetMultiBetLimit(a),
            (i = Cart.ChkErrorMsg(Args.CE_ChkLTGTLimit, Args.Multi, [a], e, i)).isMatch && (e = i.changeNum),
            i = Cart.CalcPassKeyOrNum(Args.CalcShowNum, a, e),
            $("#txbP1KeyNum" + a).val(e),
            $("#txbP1ShowNum" + a).val(i)),
            t.removeClass("focus"),
            CartM1.SetTotalNumber()
        })
    },
    SetTotalNumber: function() {
        var e = 0
          , t = 0
          , a = 0
          , i = 0;
        if ($("#p1Option").hasClass("on")) {
            for (var n = $("#p1Info > div.BC_list"), r = 0; r < n.length; r++) {
                var s = $(n[r]).attr("rel");
                isNaN(parseInt($("#txbP1KeyNum" + s).val())) || (e += parseInt($("#txbP1KeyNum" + s).val()) * parseInt($("#p1" + s + " ul.BC_listIn > div.BC_doubleNum > span.t_red").text()),
                a++,
                i += parseInt($(n[r]).children("ul.BC_listIn").children("div.BC_doubleNum").children("span").text())),
                t += isNaN(parseFloat($("#txbP1ShowNum" + s).val())) ? 0 : parseFloat($("#txbP1ShowNum" + s).val())
            }
            $("#p1EachNum").text(a),
            $("#p1TotalNum").text(i)
        } else
            e = isNaN(parseInt($("#mc1BtmKeyNum").val())) ? 0 : parseInt($("#mc1BtmKeyNum").val()),
            t = isNaN(parseFloat($("#mc1BtmShowNum").val())) ? 0 : parseFloat($("#mc1BtmShowNum").val());
        $("#multiStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(e),
        $("#multiStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(Tool.TransformMathFloor(t, 2))
    },
    UpdateLimit: function(e, t) {
        var a = Cart.GetMultiBetLimit(t);
        e ? $("#txbP1KeyNum" + t).attr("placeholder", a[0] + " - " + a[1]) : ($("#mc1BtmKeyNum").attr("placeholder", a[0] + " - " + a[1]),
        CartBase.CartUpdateMaxIcon("bcChip", t, a[1]))
    },
    Check: function() {
        if (CartM1.ChkAllPoint())
            $("#cartInfo > div.betInfo_In > div.betInfo_scroll > div.betInfo_scroll").scrollTop($("#multiStep1").height());
        else {
            for (var e = 0; e < MainProperty.cart.list.length; e++) {
                var t = MainProperty.cart.list[e];
                MainProperty.cart.oddData[t].sA = MainProperty.cart.oddData[t].ra || 0,
                MainProperty.cart.oddData[t].sB = MainProperty.cart.oddData[t].rb || 0
            }
            MainProperty.cart.loc.type = Args.Multi,
            CartM2.Draw()
        }
    },
    ChkAllPoint: function() {
        var e, t = 0, a = !1, i = !1;
        0 < Cart.GetMultiNGInfo().list.length && (a = !0);
        for (var n = 0; n < MainProperty.cart.list.length; n++) {
            var r = MainProperty.cart.list[n].replace(/_/g, "");
            if ($("#mc1" + r).hasClass("off")) {
                a = !0;
                break
            }
        }
        if ($("#p1Option").hasClass("on"))
            for (var s = $("#p1Info > div.BC_list"), n = 0; n < s.length; n++) {
                var o = $(s[n]).attr("rel")
                  , l = $("#txbP1KeyNum" + o).val()
                  , c = Cart.GetMultiBetLimit(o)
                  , d = o.split("x")
                  , d = 1 < d[1] ? Cart.CalcMultiConsist(Args.CalcTotalPassNum, MainProperty.cart.list.length, null) : Cart.CalcMultiConsist(Args.CalcPassNum, MainProperty.cart.list.length, d[0]);
                !isNaN(parseInt(l)) && 0 < l ? (i = !0,
                (e = Cart.ChkErrorMsg(Args.CE_ChkLTGTLimit, Args.Multi, [o], l, c)).isMatch && (a = !0,
                $("#txbP1KeyNum" + o).val(e.changeNum),
                $("#txbP1ShowNum" + o).val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, o, e.changeNum)),
                CartM1.SetTotalNumber())) : Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, [o], null, null),
                $(s[n]).children("ul.BC_listIn").children("li").children("input").hasClass("error") && (a = !0),
                t += parseInt($("#txbP1KeyNum" + o).val()) ? parseInt($("#txbP1KeyNum" + o).val()) * d : 0
            }
        else {
            o = MainProperty.cart.list.length + "x1",
            l = $("#mc1BtmKeyNum").val(),
            c = Cart.GetMultiBetLimit(o);
            !isNaN(parseInt(l)) && 0 < l ? (i = !0,
            (e = Cart.ChkErrorMsg(Args.CE_ChkLTGTLimit, Args.Multi, ["multiBtm"], l, c)).isMatch && (a = !0,
            $("#mc1BtmKeyNum").val(e.changeNum),
            $("#mc1BtmShowNum").val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, o, e.changeNum)),
            CartM1.SetTotalNumber())) : Cart.ChkErrorMsg(Args.CE_ClearTop, Args.Multi, ["multiBtm"], null, null),
            $("#mc1BtmKeyNum").hasClass("error") && (a = !0),
            t += parseInt($("#mc1BtmKeyNum").val()) ? parseInt($("#mc1BtmKeyNum").val()) : 0
        }
        return a = (e = Cart.ChkErrorMsg(Args.CE_MultiEmpty, Args.Multi, null, null, [i])).isMatch || a,
        a = (e = Cart.ChkErrorMsg(Args.CE_IF, Args.Multi, null, t, [MainProperty.user.balance])).isMatch || a,
        a = 0 < MainProperty.cart.list.length && a
    }
}
  , CartM2 = {
    Draw: function() {
        var e = 0
          , t = 0;
        $("#multiStep2 > .betInfo_List, #multiStep2 > .betPass_list").remove(),
        $("#multiStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").removeClass("t_oddsChange"),
        $("#multiStep2 .cartChange").hide(),
        $("#multiStep2 .cartDefault").show();
        for (var a = 0; a < MainProperty.cart.list.length; a++) {
            var i = MainProperty.cart.list[a]
              , n = i.split("_")
              , r = n[0]
              , s = n[1]
              , o = n[2]
              , l = n[3]
              , c = r + s + o + l
              , d = MainProperty.cart.gameData[r] || {}
              , u = MainProperty.cart.oddData[i] || {}
              , n = MainProperty.cart.allyData[d.aId] || {}
              , s = u && u[l] ? u[l][0] : 0
              , r = Tool.TransformKTypeDetailInfo([o, l, d.h])
              , l = Cart.GetCartBetInfo([o, l], [d.h, d.ta, d.tb], [s, u.line, u.lineAt], MainProperty.isPrincipal, !1)
              , s = Cart.GetCartShowTeamName([d.h, d.ta, d.tb, d.type], r)
              , h = "";
            h += '<div id="mc2' + c + '" class="betInfo_List" rel="' + i + '">',
            h += '<div class="BIL_T">',
            h += '<div class="BIL_T_text">',
            Cart.ChkDisplayRefScore(d.type, d.mode, r[3]) && (h += '<span id="mc2RefScore' + c + '" class="t_red">' + Cart.RefScoreProcess(u.sA, u.sB, d.h) + "</span> "),
            h += '<span id="mc2FrontPk' + c + '" class="t_blue">' + l[0] + '</span> <div class="t_inlineBox"><span id="mc2BackPk' + c + '" class="t_red">' + l[1] + '</span> @ <span id="mc2Odds' + c + '" class="t_red">' + l[2] + "</span></div>",
            h += "</div>",
            h += "</div>",
            h += '<div class="BIL_In">',
            h += '<ul class="BIL_InText">',
            h += "<li>" + Cart.GetCommonTitle(d.type, d.mode, n.an, r[0]) + "</li>",
            h += '<li id="mc2Alliance' + c + '">' + n.an + "</li>",
            h += '<li id="mc2Team' + c + '">' + s + "</li>",
            h += "<li>" + langFont.Font_AccountDate + "：" + Tool.TransformDateTime(d.cd, langFont.Font_Langue, 6) + "</li>",
            h += "</ul>",
            h += "</div>",
            h += "</div>",
            $("#multiStep2 > div.betPlay").before(h)
        }
        var p = MainProperty.cart.list.length
          , m = 0
          , h = "";
        if (h += '<div id="p2Info" class="betPass_list">',
        h += '<li id="p2Count"></li>',
        $("#p1Option").hasClass("on"))
            for (var g = $("#p1Info > div.BC_list"), a = 0; a < g.length; a++) {
                var f = (v = $(g[a]).attr("rel")).split("x");
                isNaN(parseInt($("#txbP1KeyNum" + v).val())) || (_ = parseInt($("#txbP1KeyNum" + v).val()),
                y = parseFloat($("#txbP1ShowNum" + v).val()),
                S = 1 < f[1] ? (P = Cart.CalcMultiConsist(Args.CalcTotalPassNum, p, null),
                ParlaysText(f[0], f[1])) : (P = Cart.CalcMultiConsist(Args.CalcPassNum, p, f[0]),
                langFont["Font_Cart" + v]),
                m += P,
                h += '<li id="p2' + v + '" rel="' + v + '">',
                h += "<span>" + S + " X " + P + langFont.Font_CartStringGroup + "</span>",
                h += " (" + langFont.Font_CartEveryGroup + '<font id="p2KeyNum' + v + ' ">' + _ + "</font>" + langFont.Font_CartDollar + " X " + P + langFont.Font_CartGroup + ") = <strong>" + _ * P + "</strong>",
                h += "</li>",
                e += _ * P,
                t += y)
            }
        else {
            var v, _, y, P, S, f = (v = p + "x1").split("x");
            isNaN(parseInt($("#mc1BtmKeyNum").val())) || (_ = parseInt($("#mc1BtmKeyNum").val()),
            y = parseFloat($("#mc1BtmShowNum").val()),
            m += P = Cart.CalcMultiConsist(Args.CalcPassNum, p, f[0]),
            h += '<li id="p2' + v + '" rel="' + v + '">',
            h += "<span>" + (S = langFont["Font_Cart" + v]) + " X " + P + langFont.Font_CartStringGroup + "</span>",
            h += " (" + langFont.Font_CartEveryGroup + '<font id="p2KeyNum' + v + ' ">' + _ + "</font>" + langFont.Font_CartDollar + " X " + P + langFont.Font_CartGroup + ") = <strong>" + _ * P + "</strong>",
            h += "</li>",
            e += _ * P,
            t += y)
        }
        h += "</div>",
        h += "</div>",
        $("#multiStep2 > div.betPlay").before(h),
        $("#multiStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(e),
        $("#multiStep2 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(Tool.TransformMathFloor(t, 2)),
        $("#p2Count").text(langFont.Font_CartPass + " " + langFont.Font_CartTotal + m + langFont.Font_CartGroup),
        MainProperty.cart.loc.step = Args.Step2,
        $("#multiStep1").hide(),
        $("#multiStep2").show(),
        MainProperty.funcSetting.cartComfirmMsg || CartM2.Confirm()
    },
    Confirm: function() {
        if (!MainProperty.cart.isSending) {
            MainProperty.cart.isSending = !0;
            var e = $.extend({}, MainProperty.cart.oddData);
            $("#multiStep1 > div.betInfo_List .t_oddsChange").removeClass("t_oddsChange"),
            $("#multiStep1 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span, #mc1BtmKeyNumHeader > div.BP_bet > span").removeClass("t_oddsChange"),
            $("#multiStep1 .cartChange").hide(),
            $("#multiStep1 .cartDefault").show();
            for (var t = {
                mode: [],
                game: []
            }, a = 0; a < MainProperty.cart.list.length; a++) {
                var i = MainProperty.cart.list[a]
                  , n = MainProperty.cart.list[a].split("_")
                  , r = n[0] + n[1] + n[2] + n[3];
                $("#mc1" + r).hasClass("betInfo_List_NG") || (i = {
                    gId: n[0],
                    gT: n[2].substr(0, 2),
                    sT: n[1].replace(e[i].sId, ""),
                    kT: n[2].substr(2),
                    bT: n[3],
                    odds: e[i] && e[i][n[3]] && e[i][n[3]][0] ? e[i][n[3]][0] : 0,
                    line: e[i].line || "0",
                    lineAt: e[i].lineAt,
                    sA: e[i].sA,
                    sB: e[i].sB,
                    sId: e[i].sId
                },
                t.game.push(i))
            }
            if ($("#p1Option").hasClass("on"))
                for (var s = $("#p1Info > div.BC_list"), a = 0; a < s.length; a++) {
                    var o = $(s[a]).attr("rel")
                      , l = parseInt($("#txbP1KeyNum" + o).val());
                    !isNaN(l) && 0 < l && (c = {
                        asmb: o,
                        coin: l
                    },
                    t.mode.push(c))
                }
            else {
                var c, o = MainProperty.cart.list.length + "x1", l = parseInt($("#mc1BtmKeyNum").val());
                !isNaN(l) && 0 < l && (1 == MainProperty.funcSetting.defPassPoint[0] && (MainProperty.cart.defPassPoint = l),
                c = {
                    asmb: o,
                    coin: l
                },
                t.mode.push(c))
            }
            t.mode = t.mode.reverse(),
            t.game.length !== MainProperty.cart.list.length ? (CartM2.Keep(),
            MainProperty.cart.isSending = !1) : 0 < t.mode.length && 0 < t.game.length ? (CartBase.ShowOrHidMask(!0),
            CartM2.SendProcess(t, MainProperty.isPrincipal ? 1 : 0)) : MainProperty.cart.isSending = !1
        }
    },
    SendProcess: function(f, v) {
        $.ajax({
            type: "POST",
            url: "/ajax/AjaxCart.aspx",
            data: {
                method: "SendAssembleReceipt",
                bestOdds: MainProperty.isAutoAdapt,
                isPrincipal: 1 == v,
                multi: JSON.stringify(f),
                ticks: MainProperty.serverTime.ms
            },
            dataType: "json",
            error: function(e, t, a) {
                1 != LogOutCheck('{"st":"' + e.status + '"}') && ShowAlert(Args.Reload, langFont.Font_CartNetError)
            },
            success: function(e) {
                if (1 != LogOutCheck(e)) {
                    CartBase.ShowOrHidMask(!1);
                    var t = e
                      , a = !1
                      , i = !1
                      , n = []
                      , r = [];
                    if (t.Status)
                        (l = Cart.CheckGameReturnStatus(t.Status)).processType == Args.ShowAlert && l.msg && ShowAlert(Args.AlertText, l.msg),
                        MainProperty.cart.isSending = !1;
                    else {
                        f.mode = f.mode.reverse(),
                        t.Mode = t.Mode.reverse();
                        for (var s = 0; s < f.game.length; s++)
                            f.game[s].sT = f.game[s].sId + f.game[s].sT,
                            f.game[s].kT = Tool.TransformGameType(MainProperty.cart.gameData[f.game[s].gId].type, Args.ShortNum) + f.game[s].kT;
                        for (s = 0; s < t.Game.length; s++) {
                            var o = t.Game[s];
                            if (o.GSKB) {
                                var l, c = f.game[s], d = c.gId + "_" + c.sT + "_" + c.kT + "_" + c.bT;
                                switch ((l = Cart.CheckGameReturnStatus(o.Status)).processType) {
                                case Args.Success:
                                    MainProperty.cart.oddData[d][c.bT] = Tool.TransformPointer(c.kT, o.Odds),
                                    c.odds = o.Odds,
                                    2 == o.Status && r.push(d);
                                    break;
                                case Args.PKChange:
                                    i = !0,
                                    CartBase.OddsChangeDisplay(Args.Multi, d, o);
                                    break;
                                case Args.OtherError:
                                    i = !0;
                                    l.errorType && (o = o.BetLimit,
                                    h = Cart.ChkErrorMsg(l.errorType, Args.Multi, [c.gId, c.sT, c.kT, c.bT], o, null))
                                }
                            }
                        }
                        if (t.Mode)
                            for (s = 0; s < t.Mode.length; s++) {
                                var u = t.Mode[s];
                                switch (Cart.AddReturnMax(Args.Multi, u.Status, [u.Asmb, u.AvlBalance]),
                                (l = Cart.CheckModeReturnStatus(u.Status)).processType) {
                                case Args.Success:
                                    a = !0;
                                    break;
                                case Args.OtherError:
                                    i = !0;
                                    var h, p = u.Asmb;
                                    l.errorType && ($("#p1Option").hasClass("on") ? (h = Cart.ChkErrorMsg(l.errorType, Args.Multi, [p], u.BetLimit, null),
                                    l.needChangeInput && h.isMatch && ($("#txbP1KeyNum" + p).val(h.changeNum),
                                    $("#txbP1ShowNum" + p).val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, p, h.changeNum)),
                                    CartM1.SetTotalNumber())) : (h = Cart.ChkErrorMsg(l.errorType, Args.Multi, ["multiBtm"], u.BetLimit, null),
                                    l.needChangeInput && h.isMatch && ($("#mc1BtmKeyNum").val(h.changeNum),
                                    $("#mc1BtmShowNum").val(Cart.CalcPassKeyOrNum(Args.CalcShowNum, p, h.changeNum)),
                                    CartM1.SetTotalNumber())))
                                }
                                n.unshift({
                                    wId: u.WId,
                                    sendData: f,
                                    delayModeData: u,
                                    isP: v
                                })
                            }
                        else
                            i = !0;
                        if (void 0 !== t.UserBalance && Tool.TransformUserBalance(t.UserBalance),
                        a && !i && t.Mode) {
                            for (var m = [], s = 0; s < n.length; s++) {
                                var g = n[s]
                                  , g = Cart.UpdateMultiReceiptData(g.wId, g, r);
                                g && m.push(g)
                            }
                            Receipt.DrawProcess(m);
                            for (s = 0; s < f.game.length; s++)
                                CartBase.RemoveKeepListBgColor(f.game[s].gId, f.game[s].sT, f.game[s].kT, f.game[s].bT)
                        }
                        MainProperty.funcSetting.cartCallBackMsg ? (CartM3.DrawProcess(f, t, v),
                        i ? ($("#cartInfo > div.betInfo_In > div.betInfo_scroll > div.betInfo_scroll").scrollTop($("#multiStep3").height()),
                        $("#btnMC3Close").attr("dir", Args.ShowCart)) : ($("#cartInfo > div.betInfo_In > div.betInfo_scroll > div.betInfo_scroll").scrollTop(0),
                        $("#btnMC3Close").attr("dir", Args.ShowReceipt))) : (MainProperty.cart.isSending = !1,
                        MainProperty.cart.loc.step = Args.Step3,
                        CartM3.Close(i ? Args.ShowCart : Args.ShowReceipt))
                    }
                    MainProperty.cart.isSending = !1
                }
            }
        })
    },
    Keep: function() {
        MainProperty.cart.isSending || (MainProperty.cart.loc.step = Args.Step1,
        $("#multiStep2").hide(),
        $("#multiStep1").show())
    }
}
  , CartM3 = {
    BindEvent: function() {
        $("#btnMC3Close").click(function(e) {
            CartM3.Close(parseInt($(e.currentTarget).attr("dir")))
        })
    },
    DrawProcess: function(e, t, a) {
        var i = !1;
        $("#multiStep3 > div.betInfo_List, #multiStep3 > div.betPass_list").remove(),
        $("#multiStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(0),
        $("#multiStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(0),
        Cart.ClearStep3Status(),
        $("#mc3BtmErrorBlock").add("#mc3BtmErrorBlock > div.BIL_NG_text").hide();
        for (var n = 0; n < t.Game.length; n++) {
            var r = t.Game[n]
              , s = e.game[n]
              , o = s.gId + "_" + s.sT + "_" + s.kT + "_" + s.bT
              , l = MainProperty.cart.gameData[s.gId].gpid + s.sT + s.kT + s.bT
              , c = Cart.CheckGameReturnStatus(r.Status);
            Cart.AddStep3Status(r.Status),
            CartM3.Draw(s, a),
            c.processType == Args.Success ? 2 == r.Status ? ($("#mc3" + l + " > div.BIL_In > ul.BIL_InText").next().remove(),
            $("#mc3" + l + " > div.BIL_In > ul.BIL_InText").after(Receipt.DrawGameStatus(255, null, null)),
            Receipt.SetStatusEvent("#mc3" + l)) : Cart.ChkSetp3AlwaysConfirmed(MainProperty.cart.gameData[s.gId].type, MainProperty.cart.gameData[s.gId].mode, MainProperty.cart.gameData[s.gId].st, MainProperty.cart.oddData[o].wt) && ($("#mc3" + l + " > div.BIL_In > ul.BIL_InText").next().remove(),
            $("#mc3" + l + " > div.BIL_In > ul.BIL_InText").after(Receipt.DrawGameStatus(254, null, null)),
            Receipt.SetStatusEvent("#mc3" + l)) : (i = !0,
            CartBase.SetStep3ErrorMsg(Args.Multi, r.Status, l, r.BetLimit))
        }
        if (CartM3.DrawPassInfo(e),
        t.Mode)
            for (n = 0; n < t.Mode.length; n++) {
                var d = t.Mode[n]
                  , c = Cart.CheckModeReturnStatus(d.Status);
                Cart.AddStep3Status(d.Status),
                c.processType == Args.Success ? d.WId && d.Asmb && $("#p3" + d.Asmb).attr("rel", d.WId) : i = !0
            }
        else
            i = !0;
        if (i)
            for (n = 0; n < e.game.length; n++) {
                l = MainProperty.cart.gameData[e.game[n].gId].gpid + e.game[n].sT + e.game[n].kT + e.game[n].bT;
                $("#mc3" + l + " > div.BIL_In > ul.BIL_InText").next().remove()
            }
        else
            for (var u = t.Mode.map(function(e) {
                return e.WId
            }).join(), h = $("#multiStep3 > div.betInfo_List[rel]"), n = 0; n < h.length; n++)
                $(h[n]).attr("rel", u);
        var p = Cart.GetMultiStep3StatusCount();
        0 < p.reduce(function(e, t) {
            return e + t
        }) && (0 < p[0] && $("#mc3BtmErrorRebet").css("display", "table"),
        0 < p[1] && ($("#mc3BtmErrorOverPointLimit").css("display", "table"),
        $("#multiStep3 > div.betInfo_List").addClass("betInfo_List_NG")),
        0 < p[2] && ($("#mc3BtmErrorFewerPointLimit").css("display", "table"),
        $("#multiStep3 > div.betInfo_List").addClass("betInfo_List_NG")),
        0 < p[3] && ($("#mc3BtmErrorOverCanWin").css("display", "table"),
        $("#multiStep3 > div.betInfo_List").addClass("betInfo_List_NG")),
        0 < p[4] && $("#mc3BtmErrorIF").css("display", "table"),
        $("#mc3BtmErrorBlock").show(),
        $("#multiStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(0),
        $("#multiStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(Tool.TransformMathFloor(0, 2))),
        MainProperty.cart.loc.step = Args.Step3,
        $("#multiStep1").add("#multiStep2").hide(),
        $("#multiStep3").show()
    },
    Draw: function(e, t) {
        var a = e.gId
          , i = e.sT
          , n = e.kT
          , r = e.bT
          , s = a + "_" + i + "_" + n + "_" + r
          , o = MainProperty.cart.gameData[a] || {}
          , l = MainProperty.cart.allyData[o.aId] || {}
          , a = o.gpid + i + n + r
          , i = Tool.TransformKTypeDetailInfo([n, r, o.h])
          , n = Cart.GetCartBetInfo([n, r], [o.h, o.ta, o.tb], [e.odds, e.line, e.lineAt], t, !1)
          , r = Cart.GetCartShowTeamName([o.h, o.ta, o.tb, o.type], i)
          , t = "";
        t += '<div id="mc3' + a + '" class="betInfo_List" rel="' + s + '">',
        t += '<div class="BIL_T">',
        t += '<div class="BIL_T_text">',
        Cart.ChkDisplayRefScore(o.type, o.mode, i[3]) && (t += '<span class="t_red">' + Cart.RefScoreProcess(e.sA, e.sB, o.h) + "</span> "),
        t += '<span class="t_blue">' + n[0] + '</span> <div class="t_inlineBox"><span class="t_red">' + n[1] + '</span> @ <span class="t_red">' + n[2] + "</span></div>",
        t += "</div>",
        t += "</div>",
        t += '<div class="BIL_In">',
        t += '<ul class="BIL_InText">',
        t += "<li>" + Cart.GetCommonTitle(o.type, o.mode, l.an, i[0]) + "</li>",
        t += "<li>" + l.an + "</li>",
        t += "<li>" + r + "</li>",
        t += "</ul>",
        t += "</div>",
        t += "</div>",
        $("#multiStep3 > div.betPlay").before(t)
    },
    DrawPassInfo: function(e) {
        var t = e.game.length
          , a = 0
          , i = 0
          , n = 0
          , r = "";
        r += '<div id="p3Info" class="betPass_list">',
        r += '<li id="p3Count"></li>';
        for (var s = 0; s < e.mode.length; s++) {
            var o, l, c = e.mode[s], d = c.asmb, u = c.coin, c = d.split("x"), c = 1 < c[1] ? (o = parseFloat($("#txbP1ShowNum" + d).val()),
            l = Cart.CalcMultiConsist(Args.CalcTotalPassNum, t, null),
            ParlaysText(c[0], c[1])) : (o = parseFloat($("#txbP1ShowNum" + d).val()),
            o = isNaN(o) ? parseFloat($("#mc1BtmShowNum").val()) : o,
            l = Cart.CalcMultiConsist(Args.CalcPassNum, t, c[0]),
            langFont["Font_Cart" + d]);
            a += l,
            r += '<li id="p3' + d + '" rel="' + d + '">',
            r += "<span>" + c + " X " + l + langFont.Font_CartStringGroup + "</span>",
            r += " (" + langFont.Font_CartEveryGroup + '<font id="p3KeyNum' + d + '">' + u + "</font>" + langFont.Font_CartDollar + " X " + l + langFont.Font_CartGroup + ") = <strong>" + u * l + "</strong>",
            r += "</li>",
            i += u * l,
            n += o
        }
        r += "</div>",
        r += "</div>",
        $("#multiStep3 > div.betPlay").before(r),
        $("#multiStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_L > span").text(i),
        $("#multiStep3 > div.betPlay > div.betPlay_btm > div.betPlay_btmMoney > div.BPBM_R > span").text(Tool.TransformMathFloor(n, 2)),
        $("#p3Count").text(langFont.Font_CartPass + " " + langFont.Font_CartTotal + a + langFont.Font_CartGroup)
    },
    Close: function(e) {
        Cart.KeepSuccessStep3(!1),
        CartBase.ChangeCartDisplay(e)
    },
    Keep: function() {
        var e = 0 < MainProperty.receiptKeepList.length;
        Cart.KeepSuccessStep3(!0),
        e ? ($("#multiStep3").hide(),
        CartBase.ChangeCartInfoDisplay(Args.Multi)) : ($("#multiStep3").hide(),
        $("#multiStep1").show(),
        MainProperty.cart.loc.step = Args.Step1)
    }
}
  , Receipt = {
    DrawGameStatus: function(e, t, a, i) {
        var n, r = "";
        return t && (a || i) ? (n = 211 == t ? "iG" : 210 == t ? "i" : "iR",
        a = a || "",
        a = "" !== (i = i ? Tool.TransformDateTime(i, langFont.Font_Langue, 30) : "") && "" !== a ? " - " + a : a,
        r += '<div class="btn_BIL_' + n + '">',
        r += '<div class="BIL_' + n + '_T">' + Tool.TransformInvalid(t) + "</div>",
        r += '<div class="BIL_' + n + '_In">',
        r += '<div class="BIL_' + n + '_InBox">' + (i + a) + "</div>",
        r += "</div></div>") : t ? r += '<div class="icon_BIL_no">' + Tool.TransformInvalid(t) + "</div>" : 254 == e ? r += '<div class="icon_BIL_ok confirm">' + langFont.Font_CartConfirmed + "</div>" : -1 == e ? r += '<div class="icon_BIL_ok">' + langFont.Font_CartBetSettled + "</div>" : 255 == e && (r += '<div class="btn_BIL_wait">',
        r += '<div class="BIL_waitT">' + langFont.Font_CartWaiting + "</div>",
        r += '<div class="BIL_waitIn">',
        r += '<div class="BIL_waitInBox">' + langFont.Font_CartBetIsBeingProcessed + "</div>",
        r += "</div></div>"),
        r
    },
    DrawProcess: function(e) {
        ReceiptVue.AddReceipt({
            order: e
        })
    },
    SetStatusEvent: function(e) {
        var t = e + " > div.BIL_In"
          , a = " > div.btn_BIL_wait"
          , i = " > div.btn_BIL_iR"
          , n = " > div.btn_BIL_i"
          , e = " > div.btn_BIL_iG";
        Tool.IsTouch ? $(t + a).add(t + i).add(t + e).add(t + n).click(function(e) {
            e = $(e.currentTarget);
            $(t + " > div.btn_BIL_wait > div.BIL_waitIn").add(t + " > div.btn_BIL_iR > div.BIL_iR_In").add(t + " > div.btn_BIL_iG > div.BIL_iG_In").add(t + " > div.btn_BIL_i > div.BIL_iR_In").fadeOut(150),
            $(t + " > div.btn_BIL_wait > div.BIL_waitIn > div.BIL_waitInBox").add(t + " > div.btn_BIL_iG > div.BIL_iG_In > div.BIL_iG_InBox").add(t + " > div.btn_BIL_i > div.BIL_i_In > div.BIL_i_InBox").slideUp(150),
            "none" == $(e).find(".BIL_waitIn, .BIL_iR_In, .BIL_iG_In, .BIL_i_In").css("display") ? ($(e).find(".BIL_waitIn, .BIL_iR_In, .BIL_iG_In, .BIL_i_In").show(),
            $(e).find(".BIL_waitInBox, .BIL_iR_InBox, .BIL_iG_InBox, .BIL_i_InBox").slideDown(150)) : ($(e).find(".BIL_waitIn, .BIL_iR_In, .BIL_iG_In, .BIL_i_In").fadeOut(150),
            $(e).find(".BIL_waitInBox, .BIL_iR_InBox, .BIL_iG_InBox, .BIL_i_InBox").slideUp(150))
        }) : $(t + a).add(t + i).add(t + e).add(t + n).hoverDelay(function() {
            $(this).find(".BIL_waitIn, .BIL_iR_In, .BIL_iG_In, .BIL_i_In").show(),
            $(this).find(".BIL_waitInBox, .BIL_iR_InBox, .BIL_iG_InBox, .BIL_i_InBox").slideDown(150)
        }, function() {
            $(this).find(".BIL_waitIn, .BIL_iR_In, .BIL_iG_In, .BIL_i_In").fadeOut(150),
            $(this).find(".BIL_waitInBox, .BIL_iR_InBox, .BIL_iG_InBox, .BIL_i_InBox").slideUp(150)
        })
    }
};
function ReadyAndGo() {
    var a;
    1 != MainProperty.FireReady && (MainProperty.FireReady = !0,
    InitialSetting(),
    Mask(),
    Tool.IsTouch && ($(".scrollbar-macosx > .scroll-element div.scroll-bar").css("background-color", "transparent"),
    a = 0,
    document.addEventListener("touchstart", function(e) {
        1 < e.touches.length && e.preventDefault()
    }),
    document.addEventListener("touchend", function(e) {
        var t = (new Date).getTime();
        t - a <= 300 && e.preventDefault(),
        a = t
    }),
    document.addEventListener("gesturestart", function(e) {
        e.preventDefault()
    })),
    window.onunload = window.onbeforeunload = function() {
        for (var e = 0; e < Object.keys(MainProperty.recordWindow).length; e++) {
            var t = Object.keys(MainProperty.recordWindow)[e];
            0 == $.isEmptyObject(MainProperty.recordWindow[t]) && MainProperty.recordWindow[t].close()
        }
    }
    ,
    DataAdapter.SetVisibilityEvent(function() {
        BBSocket.StartWorker("Web_main", MainProperty.sessionID),
        BBSocket.SocketConnect(),
        WRSocket.StartWorker("Web_main", MainProperty.sessionID),
        WRSocket.SocketConnect(),
        0 == DataAdapter.IsIEEdgeBelow && ChatVue.status && (SMSocket.StartWorker("Web_main", MainProperty.sessionID),
        SMSocket.SocketConnect())
    }, function() {
        Panel.HasLoadingCompleteVideoElement() && MainProperty.user.hasEnoughDeposit && (Tool.IsTouch && PlayerAPI.IsFullScreen() && PlayerAPI.ExitFullScreen(),
        PlayerAPI[Args.LiveTv] && PlayerAPI[Args.LiveTv].videoSource == VideoSource.WebGL && 0 <= [Args.GameLive, Args.Anchor].indexOf(MainProperty.panelData.panel) && (PlayerAPI[Args.LiveTv].DestroyPlayer(),
        PlayerAPI.StopTimerCheckKidnap()),
        PlayerAPI[Args.PopLiveTv] && PlayerAPI[Args.PopLiveTv].videoSource == VideoSource.WebGL && MainProperty.panelData.popGameLive.route && (PlayerAPI[Args.PopLiveTv].DestroyPlayer(),
        PlayerAPI.StopTimerCheckKidnap()))
    }),
    Header.SetEvent(),
    Menu.SetEvent(),
    CartBase.SetEvent(),
    Panel.SetEvent(),
    $("#leagueBlock > div.alliance_In > ul.scrollbar-macosx").scrollbar({
        onUpdate: function() {
            Tool.ChangeBoundary("leagueBlock")
        }
    }),
    $(document).on("click touchend", function(e) {
        Outer.CloseBlock($(e.target))
    }),
    $("#scheduleNoData").width($("#outerPage").width()),
    $(window).resize(function() {
        var e, t, r = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > table.gameTitle" : "#outerPage > div.gamePanelL_In > table.gameTitle", s = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList", o = $(window).width();
        1400 < o ? ($("#sportMenu").removeClass("ZoomOut"),
        $("#sportList .SM_list > .SM_listIn").hide(),
        $("#sportList .SM_list.on").find(".SM_listIn").show(),
        $("#modeOption").css("display", "table"),
        0 == $("#innerPage:visible").length && MainProperty.sortOption.kind == Mapping.TransformMenuType(MainProperty.ballType, MainProperty.playMode, null)[0][1] && ($(r + ' > tbody > tr > td[class^="screenOff_"]').add(s + ' > td[class^="screenOff_"]').show(),
        $(r + " > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selT").hide(),
        (e = $("#outerPage > div.gamePanelL_In > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel")).hasClass("on") && (e.removeClass("on"),
        e.find("div.GT_selIn").hide(),
        e.find("div.GT_selInBox").hide()))) : 0 == $("#sportMenu.ZoomOut").length && (t = 0 < $("#innerPage:visible").length,
        Menu.MenuShrink(t)),
        0 < $("#innerPage:visible").length && $(r).each(function() {
            var e = $(this).attr("rel")
              , t = MainProperty.sortOption.kindSub[e];
            if (s = Tool.IsMultiSport(MainProperty.ballType) ? '#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox[rel="' + e + '"] > div.gameList > div.GLIn > table.GLInBox > tbody > tr.GLInList' : s,
            1400 < o)
                $(r + '[rel="' + e + '"] > tbody > tr > td[class^="screenOff_' + t + '"]').add(s + ' > td[class^="screenOff_' + t + '"]').show();
            else {
                $(r + '[rel="' + e + '"] > tbody > tr > td[class^="screenOff_"]').add(s + ' > td[class^="screenOff_"]').hide();
                for (var a = $(r + '[rel="' + e + '"] > tbody > tr'), i = 0; i < a.length; i++)
                    $(a[i]).find("td.screenOff_" + t + ":first").show();
                for (var n = $(s), i = 0; i < n.length; i++)
                    $(n[i]).find("td.screenOff_" + t + ":first").show()
            }
        }),
        $("#scheduleNoData").width($("#outerPage").width()),
        MainProperty.isFastTrade && CartFast.Close(),
        requestAnimationFrame(function() {
            function e(e) {
                var t = e.height()
                  , a = e.width()
                  , i = $(window).height()
                  , n = $(window).width();
                i < t || n < a ? ($("#leagueOption").removeClass("reset"),
                e.css({
                    top: "",
                    left: ""
                })) : ($("#leagueOption").addClass("reset"),
                e.offset({
                    top: Math.floor((i - t) / 2),
                    left: Math.floor((n - a) / 2)
                }))
            }
            0 < $("#leagueBlock:visible").length && e($("#leagueBlock")),
            0 < $("#calculatorInfo:visible").length && e($("#calculatorInfo")),
            0 < $("#fastTransfer:visible").length && e($("#fastTransfer")),
            0 < $("#popGameLive:visible").length && e($("#popGameLive")),
            0 < $("#funcBlock:visible").length && e($("#funcBlock")),
            0 < $("#pkTutorialsInfo:visible").length && e($("#pkTutorialsInfo"))
        }),
        ChatVue.status && !ChatVue.half.status && (t = $("#innerPage > div.gamePanelR_In > div.gameDetail").height() - $("#innerPage > div.gamePanelR_In > div.gameDetail > div.gameDetail_T").outerHeight() - $("#innerView").height(),
        $("#innerChatRoom").css("height", t))
    }),
    $("#leagueBlock").draggabilly({
        containment: !0,
        handle: "#leagueBlock > div.alliance_T,#leagueBlock > div.alliance_In > div.alliance_btn",
        click: "#leagueBlock > div.alliance_In > div.alliance_btn > input"
    }),
    $("#popGameLive").draggabilly({
        containment: !0,
        click: "#popGameLive"
    }),
    Calculator.SetEvent(),
    FuncSetting.SetEvent(),
    PKTutorials.SetEvent(),
    Inner.BindTeamNameHover("#innerPage > div.gamePanelR_In > div.gameDetail > div.gameDetail_T > div.GDT_name > div > div.GDT_textBox"),
    $("#innerView > ul.GDView_T > li").click(function() {
        var e = $("#innerSchedule").scrollTop();
        $(this).hasClass("btn_fixed") && ($(this).hasClass("on") ? ($("#innerScrollBar").removeClass("scroll_off").scrollTop(e),
        $("#innerSchedule").addClass("scroll_off"),
        $(this).removeClass("on"),
        $(this).children("div.GDV_prompt").text(langFont.Font_Fixed)) : ($("#innerScrollBar").addClass("scroll_off"),
        $("#innerSchedule").removeClass("scroll_off"),
        $(this).addClass("on"),
        $(this).children("div.GDV_prompt").text(langFont.Font_CancelFixed)))
    }),
    $("#innerScrollBar").scroll(function() {
        var e = $("#menuBlock").outerWidth(!0) + $("#outerPage").outerWidth(!0) - $("#mainStruc").scrollLeft()
          , t = $("#innerView > ul.GDView_T > li.btn_fixed").hasClass("on") || 0 == $("#innerView:visible").length ? 0 : $("#innerView").height();
        $(this).scrollTop() > t ? ($("#innerMenu").addClass("sticky"),
        $("#innerMenu").css({
            width: $("#innerPage").width(),
            left: e
        })) : ($("#innerMenu").removeClass("sticky"),
        $("#innerMenu").removeAttr("style"))
    }),
    $("#mainStruc").scroll(function() {
        $("#innerMenu").hasClass("sticky") && $("#innerMenu").css("left", $("#menuBlock").outerWidth(!0) + $("#outerPage").outerWidth(!0) - $("#mainStruc").scrollLeft())
    }),
    $("#outerPage").click(function(e) {
        var t, a = $(e.target);
        !(a.hasClass("GLOdds_R") || a.hasClass("btn_GLOdds") || a.hasClass("GLOdds_T") || a.hasClass("GLOdds_L") || a.hasClass("GLOdds_A") || a.hasClass("GLOdds_B")) || a.parent("li").hasClass("noneOdds") || a.parent("td").hasClass("noneOdds") ? a.hasClass("btn_GLIn_star") ? Outer.AddOrRemoveFV(a.attr("rel")) : a.hasClass("GT_T_name") || a.parent("div").hasClass("GT_T_name") || a.parent("div").parent("td").hasClass("GT_T") ? Outer.BallShrink(a.closest("div.GT_TBox").children("div.btn_gameList_all")) : a.parent("ul").hasClass("btn_GLT") ? Outer.AllyShrink(a.parent("ul")) : (t = a.parents("ul"),
        !(a.hasClass("GLInTBox") || a.hasClass("GLIL_More") || a.hasClass("GLIL_MoreRow") || a.hasClass("openInnerPage") || a.hasClass("openRDAnimate") || a.hasClass("openLiveTv") || a.hasClass("openRDData") || a.parent("div").hasClass("GLIL_MoreRow") || a.parent("div").hasClass("GLInTBox") || a.parent("div").hasClass("GLInTBox_row") || t.hasClass("GLInTBox")) || a.hasClass("noCursor") || a.hasClass("noneOdds") || a.parent("td").hasClass("noCursor") || a.parent("div").hasClass("noCursor") || t.hasClass("noCursor") || Inner.InitialPage(e)) : Outer.AddCartClick(a)
    }),
    $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").scroll(function() {
        var e = Tool.IsMultiSport(MainProperty.ballType) ? Args.FVAndCS : MainProperty.ballType
          , t = $(this)[0].scrollHeight - $(this)[0].offsetHeight
          , a = $(this).scrollTop();
        t < 2e3 ? requestAnimationFrame(function() {
            Outer.RecycleSchedule(e == Args.FVAndCS ? Args.LoadFV : Args.Load, e, 5),
            MainProperty.LastScroll = $(this).scrollTop()
        }) : MainProperty.LastScroll < a && t - a <= 1e3 ? requestAnimationFrame(function() {
            Outer.RecycleSchedule(Args.DownScroll, e, 5),
            MainProperty.LastScroll = $(this).scrollTop()
        }) : MainProperty.LastScroll > a && a <= 1e3 && requestAnimationFrame(function() {
            Outer.RecycleSchedule(Args.UpScroll, e, 5),
            MainProperty.LastScroll = $(this).scrollTop()
        }),
        MainProperty.LastScroll = $(this).scrollTop()
    }),
    $("#outerPage > div.gamePanelL_In > div.gameListAll_scroll").add("#innerSchedule").on("animationend webkitAnimationEnd", function(e) {
        $(e.target).removeClass("oddsUp oddsDown oddsText animate1 animate2")
    }),
    $("#broadcast").hoverDelay(function() {
        $(this).find(".navTop_info").show(),
        $(this).find(".navTop_infoBox").slideDown(200)
    }, function() {
        $(this).find(".navTop_info").fadeOut(200),
        $(this).find(".navTop_infoBox").slideUp(200)
    }),
    InitialAlOptionCache(null),
    ChatVue.$store.gift.canFree && (ChatVue.ChkFreePoint(),
    $("#freePoint").show()))
}
function ActionFirst(e) {
    MainProperty.playMode = parseInt(e.mode, 10),
    MainProperty.ballType = Tool.TransformGameType(e.sport, Args.ShortEn),
    Tool.IsMultiSport(MainProperty.ballType) || "none" == MainProperty.ballType ? $("#ddlSort").addClass("none") : $("#ddlSort").removeClass("none"),
    MainProperty.playMode == PlayMode.ZD ? $("#menuBlock").addClass("rollLive") : $("#menuBlock").removeClass("rollLive"),
    InitialModeData(e.limit),
    MainProperty.sortOption.kind = e.type,
    MainProperty.coin = e.coin,
    0 == e.status && (e.menu = [],
    e.ally = [],
    e.game = [],
    e.score = [],
    e.odds = [],
    e.allyIndex = [],
    e.ballIndex = []);
    for (var t = {
        DS: [],
        ZD: []
    }, a = 0; a < e.ballIndex.length; a++) {
        var i = Tool.TransformGameType(e.ballIndex[a], Args.ShortEn);
        t.DS.push("DS" + i),
        t.ZD.push("ZD" + i),
        MainProperty.sortOption.kindSub["DS" + i] = 1,
        MainProperty.sortOption.kindSub["ZD" + i] = 1,
        MainProperty.BallAllyClosure["DS" + i] = !0,
        MainProperty.BallAllyClosure["ZD" + i] = !0
    }
    MainProperty.ballSequence = t.ZD.concat(t.DS),
    InitialAlOptionCache(e.ally),
    MainProperty.allyData = {},
    MainProperty.gameData = {},
    MainProperty.oddData = {},
    MainProperty.allySequence = {
        pin: [],
        pop: []
    };
    InitialCache(MainProperty, e.ally, null, null, null).allys;
    var n = InitialCache(MainProperty, null, e.game, e.score, null).games
      , r = InitialCache(MainProperty, null, null, null, e.odds).odds;
    Menu.DrawZPDate(),
    Menu.DrawMenuList(e.menu, MainProperty.ballType, !1, !1),
    MainProperty.kindSub = e.menu && e.menu.kindSub ? e.menu.kindSub : [],
    MainProperty.allySequence.pin = CheckAllyIndex(e),
    MainProperty.allySequence.pop = $.extend([], MainProperty.allySequence.pin).sort(function(e, t) {
        return Tool.TransformAIdToModeBall(e) != Tool.TransformAIdToModeBall(t) ? MainProperty.ballSequence.indexOf(Tool.TransformAIdToModeBall(e)) > MainProperty.ballSequence.indexOf(Tool.TransformAIdToModeBall(t)) ? 1 : -1 : MainProperty.allyData[e] && MainProperty.allyData[t] && MainProperty.allyData[e].s != MainProperty.allyData[t].s ? MainProperty.allyData[e].s > MainProperty.allyData[t].s ? 1 : -1 : MainProperty.allySequence.pin.indexOf(e) > MainProperty.allySequence.pin.indexOf(t) ? 1 : -1
    }),
    Ally.DrawAllyList(),
    Menu.SetModeText(e.action);
    r = FilterSchedule(n, MainProperty.allyData, r, Args.CoverAndReturn);
    Outer.BatchProcess(r, !1, !1),
    UnGaryMask()
}
function ActionChangeType(e) {
    var t, a = [];
    1 == e.stick && 1 < e.dc && (RecoverSetting(!0, Args.Outer),
    u = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll",
    t = Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx,
    $(u).each(function() {
        $(this).children("div.gameList").each(function() {
            var e = t ? $(this).children("div.GLIn").children("table.GLInBox") : $(this).children("div.GLIn").children("table.GLInBox").children("tbody").children("tr.GLInList");
            $(e).each(function() {
                var e = $(this).attr("rel");
                a.indexOf(e) < 0 && a.push(e)
            })
        })
    }));
    var i = MainProperty.ballType;
    MainProperty.ballType = Tool.TransformGameType(e.sport, Args.ShortEn),
    MainProperty.sortOption.kind = e.type,
    MainProperty.playMode = parseInt(e.mode, 10),
    Tool.IsMultiSport(MainProperty.ballType) || "none" == MainProperty.ballType ? $("#ddlSort").addClass("none") : $("#ddlSort").removeClass("none"),
    MainProperty.playMode == PlayMode.ZD ? $("#menuBlock").addClass("rollLive") : $("#menuBlock").removeClass("rollLive"),
    MainProperty.coin = e.coin,
    0 == e.status && (e.menu = [],
    e.ally = [],
    e.game = [],
    e.score = [],
    e.odds = [],
    e.allyIndex = [],
    e.ballIndex = []);
    for (var n = {
        DS: [],
        ZD: []
    }, r = 0; r < e.ballIndex.length; r++) {
        var s = Tool.TransformGameType(e.ballIndex[r], Args.ShortEn);
        if (n.DS.push("DS" + s),
        n.ZD.push("ZD" + s),
        MainProperty.sortOption.kindSub["DS" + s] = 1,
        (MainProperty.sortOption.kindSub["ZD" + s] = 1) == e.stick && 1 < e.dc)
            for (var o = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll" : "#outerPage > div.gamePanelL_In", l = ["DS", "ZD"], c = 0; c < l.length; c++)
                0 < $(o + ' > table.gameTitle[rel="' + l[c] + s + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.on').length && (MainProperty.sortOption.kindSub[l[c] + s] = parseInt($(o + ' > table.gameTitle[rel="' + l[c] + s + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_GT_sel > div.GT_selIn > div.GT_selInBox > a.on').attr("set"), 10));
        1 == e.stick && 1 < e.dc && i == MainProperty.ballType || (MainProperty.BallAllyClosure["DS" + s] = !0,
        MainProperty.BallAllyClosure["ZD" + s] = !0)
    }
    MainProperty.ballSequence = n.ZD.concat(n.DS),
    InitialAlOptionCache(e.ally),
    InitialModeData(e.limit);
    var d = null
      , d = (e.ally ? (MainProperty.allyData = {},
    MainProperty.allySequence = {
        pin: [],
        pop: []
    },
    InitialCache(MainProperty, e.ally, null, null, null).allys) : MainProperty.allyData,
    e.game ? (MainProperty.gameData = {},
    InitialCache(MainProperty, null, e.game, e.score, null).games) : MainProperty.gameData);
    MainProperty.oddData = {};
    var u, h = InitialCache(MainProperty, null, null, null, e.odds).odds;
    if (e.gotoMoreGId && (m = MainProperty.gameData[e.gotoMoreGId] ? MainProperty.gameData[e.gotoMoreGId].aId : "",
    u = MainProperty.alOption.cacheName,
    MainProperty.alOption.cache[u].list.indexOf("All") < 0 && MainProperty.alOption.cache[u].list.indexOf(m) < 0 && MainProperty.alOption.cache[u].list.push(m)),
    Menu.DrawZPDate(),
    e.menu && (Menu.DrawMenuList(e.menu, i, !1, i != MainProperty.ballType && "cm" != e.action),
    MainProperty.kindSub = e.menu.kindSub || []),
    e.allyIndex && (MainProperty.allySequence.pin = CheckAllyIndex(e),
    MainProperty.allySequence.pop = $.extend([], MainProperty.allySequence.pin).sort(function(e, t) {
        return Tool.TransformAIdToModeBall(e) != Tool.TransformAIdToModeBall(t) ? MainProperty.ballSequence.indexOf(Tool.TransformAIdToModeBall(e)) > MainProperty.ballSequence.indexOf(Tool.TransformAIdToModeBall(t)) ? 1 : -1 : MainProperty.allyData[e] && MainProperty.allyData[t] && MainProperty.allyData[e].s != MainProperty.allyData[t].s ? MainProperty.allyData[e].s > MainProperty.allyData[t].s ? 1 : -1 : MainProperty.allySequence.pin.indexOf(e) > MainProperty.allySequence.pin.indexOf(t) ? 1 : -1
    })),
    Tool.IsMultiQtr()) {
        var p = (MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType
          , m = MainProperty.sortOption.kindSub[p] - 1;
        if (0 == MainProperty.kindSub[m] && !Tool.HasKindSubGame(m))
            for (r = 0; r < MainProperty.kindSub.length; r++)
                if (0 < MainProperty.kindSub[r] || Tool.HasKindSubGame(r)) {
                    MainProperty.sortOption.kindSub[p] = r + 1;
                    break
                }
    }
    "fv" == MainProperty.ballType && (MainProperty.alOption.fvAlly = 0 <= MainProperty.alOption.cache.fv.list.indexOf("All") ? $.extend([], MainProperty.allySequence.pop) : $.extend([], MainProperty.alOption.cache.fv.list)),
    Ally.DrawAllyList(),
    Menu.SetModeText(e.action);
    h = FilterSchedule(d, MainProperty.allyData, h, Args.CoverAndReturn);
    Outer.BatchProcess(h, !1, 1 == e.stick, a),
    UnGaryMask()
}
function ActionUpdate(e) {
    "coin"in e == 1 && (MainProperty.coin = e.coin);
    var t, a = !1, i = !1, n = !1, r = !1, s = [], o = [], l = [], c = [], d = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList";
    if (e.ballIndex) {
        for (var u = {
            DS: [],
            ZD: []
        }, h = 0; h < e.ballIndex.length; h++) {
            var p = Tool.TransformGameType(e.ballIndex[h], Args.ShortEn);
            u.DS.push("DS" + p),
            u.ZD.push("ZD" + p)
        }
        MainProperty.ballSequence = u.ZD.concat(u.DS)
    }
    if (e.menu) {
        if ("fv" != MainProperty.ballType && e.menu.list) {
            var m = e.menu.list.map(function(e) {
                return Tool.TransformGameType(e.type, Args.ShortEn)
            });
            if (e.menu.cs && 0 < e.menu.cs.length && m.push("cs"),
            m.indexOf(MainProperty.ballType) < 0) {
                if (m.remove("cs"),
                0 < m.length)
                    return void Menu.ChangeSport(null, Ball.none.key, Ball.none.idx);
                MainProperty.ballType = Ball.none.key
            }
        }
        if (e.menu.kindSub) {
            if (MainProperty.kindSub = e.menu.kindSub,
            Outer.UpdateKindSubOption()) {
                var g = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn);
                return Outer.BatchProcess(g, !0, !1),
                void (MainProperty.BallAllyClosure[(MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType] = !0)
            }
        } else
            Menu.DrawMenuList(e.menu, MainProperty.ballType, !0, !1)
    }
    if (e.ally)
        for (h = 0; h < e.ally.length; h++) {
            var f = e.ally[h]
              , v = f.aId;
            if (MainProperty.allyData[v])
                for (var _ in f)
                    if (f.hasOwnProperty(_) && "aId" != _)
                        switch (_) {
                        case "s":
                            MainProperty.allyData[v][_] = f[_],
                            n = !0,
                            MainProperty.sortOption.sort != Args.SortHot && !Tool.IsMultiSport(MainProperty.ballType) || ($(d + '[rel="' + v + '"] > ul.btn_GLT').hasClass("off") && l.indexOf(v) < 0 ? (y = (Tool.IsMultiSport(MainProperty.ballType) ? $(d + '[rel="' + v + '"]').closest("div.gameFAVbox") : $(d + '[rel="' + v + '"]').closest("div.gameList_scroll")).attr("rel"),
                            c.push({
                                aId: v,
                                modeBall: y
                            }),
                            l.push(v)) : MainProperty.allyData[v].gidSet.map(function(e) {
                                s.push(e),
                                o.push({
                                    gId: e,
                                    sT: "*"
                                })
                            }));
                            break;
                        case "an":
                            var y = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox" : "#outerPage > div.gamePanelL_In > div.gameList_scroll";
                            MainProperty.allyData[v][_] = AllyNameProcess(v, f[_]),
                            $(y + ' > div.gameList[rel="' + v + '"] > ul.btn_GLT > li:last').text(MainProperty.allyData[v][_])
                        }
        }
    if (e.allyIndex && (MainProperty.allySequence.pin = CheckAllyIndex(e),
    n = !0),
    n && (MainProperty.allySequence.pop = $.extend([], MainProperty.allySequence.pin).sort(function(e, t) {
        return Tool.TransformAIdToModeBall(e) != Tool.TransformAIdToModeBall(t) ? MainProperty.ballSequence.indexOf(Tool.TransformAIdToModeBall(e)) > MainProperty.ballSequence.indexOf(Tool.TransformAIdToModeBall(t)) ? 1 : -1 : MainProperty.allyData[e] && MainProperty.allyData[t] && MainProperty.allyData[e].s != MainProperty.allyData[t].s ? MainProperty.allyData[e].s > MainProperty.allyData[t].s ? 1 : -1 : MainProperty.allySequence.pin.indexOf(e) > MainProperty.allySequence.pin.indexOf(t) ? 1 : -1
    })),
    e.game)
        for (var P = d + (Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? " > div.GLIn > table.GLInBox" : " > div.GLIn > table.GLInBox > tbody > tr.GLInList"), h = 0; h < e.game.length; h++) {
            var S = (M = e.game[h]).gId;
            if (MainProperty.gameData[S]) {
                v = MainProperty.gameData[S].aId;
                if (MainProperty.allyData[v]) {
                    var b = [];
                    for (_ in M)
                        if (M.hasOwnProperty(_) && "gId" != _) {
                            switch (_) {
                            case "h":
                                MainProperty.gameData[S][_] = M[_],
                                s.indexOf(S) < 0 && (0 < $(P + '[rel="' + S + '"]').length || Tool.IsMultiSport(MainProperty.ballType)) && (s.push(S),
                                o.push({
                                    gId: S,
                                    sT: "*"
                                })),
                                i = !0;
                                break;
                            case "gd":
                                MainProperty.gameData[S][_] = M[_],
                                r = !0,
                                MainProperty.allyData[v].gidSet = $.extend([], MainProperty.allyData[v].gidSet).sort(function(e, t) {
                                    return MainProperty.gameData[e].gd != MainProperty.gameData[t].gd ? MainProperty.gameData[e].gd > MainProperty.gameData[t].gd ? 1 : -1 : MainProperty.allyData[v].gidSet.indexOf(e) > MainProperty.allyData[v].gidSet.indexOf(t) ? 1 : -1
                                });
                                var T = MainProperty.gameSequence.indexOf(S);
                                FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverNoReturn),
                                T != MainProperty.gameSequence.indexOf(S) && s.indexOf(S) < 0 && (0 < $(P + '[rel="' + S + '"]').length || Tool.IsMultiSport(MainProperty.ballType) ? (s.push(S),
                                o.push({
                                    gId: S,
                                    sT: "*"
                                })) : "All" != MainProperty.sortOption.zpDate && (0 <= MainProperty.gameData[S][_].indexOf(MainProperty.sortOption.zpDate) ? 0 == $(d + '[rel="' + v + '"]').length && l.indexOf(v) < 0 ? l.push(v) : $(d + '[rel="' + v + '"]').hasClass("shell") || s.push(S) : "All" != MainProperty.sortOption.zpDate && MainProperty.gameData[S].gd.indexOf(MainProperty.sortOption.zpDate) < 0 && $(d + '[rel="' + v + '"]').hasClass("shell") && 0 == MainProperty.allyData[v].gidSet.filter(function(e) {
                                    return 0 <= MainProperty.gameData[e].gd.indexOf(MainProperty.sortOption.zpDate)
                                }).length && c.push({
                                    aId: v,
                                    modeBall: (MainProperty.gameData[S].mode < 2 ? "DS" : "ZD") + MainProperty.gameData[S].type
                                })),
                                i = !0);
                                break;
                            case "rt":
                                MainProperty.gameData[S][_] = Tool.TransformRunTime(MainProperty.gameData[S].type, M[_]);
                                break;
                            case "st":
                                MainProperty.gameData[S][_] = parseInt(M[_], 10);
                                break;
                            case "pa":
                            case "pb":
                                MainProperty.gameData[S][_] = M[_] ? "-" + M[_] : "";
                                break;
                            case "coa":
                            case "cob":
                                MainProperty.gameData[S][_] = Tool.TransformCountry(M[_]);
                                break;
                            default:
                                MainProperty.gameData[S][_] = M[_]
                            }
                            b.push(_)
                        }
                    Outer.UpdateGame(S, b)
                }
            }
        }
    if (e.score)
        for (h = 0; h < e.score.length; h++) {
            var C = e.score[h]
              , S = C.gId;
            if (MainProperty.gameData[S]) {
                var M, v = (M = MainProperty.gameData[S]).aId;
                if (MainProperty.allyData[v]) {
                    b = [];
                    for (_ in C)
                        C.hasOwnProperty(_) && "gId" != _ && (0 <= ["runsA", "runsB", "sa", "sb"].indexOf(_) ? M[_] = Tool.TransformRuns(M.type, C[_], v, !0) : M[_] = C[_],
                        b.push(_));
                    Outer.UpdateGame(S, b)
                }
            }
        }
    if (e.odds)
        for (h = 0; h < e.odds.length; h++) {
            var I = e.odds[h]
              , S = I.path[0]
              , A = I.path[1]
              , L = I.path[2]
              , b = [];
            if (MainProperty.oddData[S] && MainProperty.oddData[S][A] && MainProperty.oddData[S][A][L]) {
                for (var _ in I)
                    if (I.hasOwnProperty(_))
                        if ("o" == _)
                            for (var x = 0; x < I[_].length; x++) {
                                var D = I[_][x];
                                MainProperty.oddData[S][A][L][D] = Tool.TransformPointer(L, I[_][x + 1]),
                                b.push(D),
                                x += 1
                            }
                        else
                            "l" == _ ? (MainProperty.oddData[S][A][L].line = I[_],
                            MainProperty.oddData[S][A][L].pk = Tool.TransformNumToPk(L, I[_]),
                            b.indexOf("pk") < 0 && b.push("pk")) : "la" == _ ? (MainProperty.oddData[S][A][L].lineAt = I[_],
                            b.indexOf("pk") < 0 && b.push("pk")) : "path" != _ && (MainProperty.oddData[S][A][L][_] = I[_]);
                Outer.UpdateOdd(S, A, L, b)
            }
        }
    if (r && (a = Menu.DrawZPDate()),
    a) {
        g = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn);
        Outer.BatchProcess(g, !0, !1)
    } else if (i || n) {
        FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverNoReturn);
        var w = (t = [],
        $(d + " > ul.btn_GLT:not(.off)").each(function() {
            t.push($(this).parent(".gameList").attr("rel"))
        }),
        t);
        0 < o.length && Outer.RemoveGame(o, Args.FakeDel),
        0 < s.length && Outer.InsertGame(s, !0);
        for (h = 0; h < w.length; h++)
            $(d + "[rel=" + w[h] + "] > ul.btn_GLT").removeClass("off"),
            $(d + "[rel=" + w[h] + "] > div.GLIn").show();
        0 < c.length && Outer.RemoveAllyShell(c),
        0 < l.length && Outer.InsertAllyShell(l),
        Outer.IsAllShrink()
    }
}
function ActionAddGame(e) {
    e.ally && "fv" != MainProperty.ballType && InitialCache(MainProperty, e.ally, null, null, null),
    e.allyIndex && "fv" != MainProperty.ballType && (MainProperty.allySequence.pin = CheckAllyIndex(e),
    MainProperty.allySequence.pop = $.extend([], MainProperty.allySequence.pin).sort(function(e, t) {
        return Tool.TransformAIdToModeBall(e) != Tool.TransformAIdToModeBall(t) ? MainProperty.ballSequence.indexOf(Tool.TransformAIdToModeBall(e)) > MainProperty.ballSequence.indexOf(Tool.TransformAIdToModeBall(t)) ? 1 : -1 : MainProperty.allyData[e] && MainProperty.allyData[t] && MainProperty.allyData[e].s != MainProperty.allyData[t].s ? MainProperty.allyData[e].s > MainProperty.allyData[t].s ? 1 : -1 : MainProperty.allySequence.pin.indexOf(e) > MainProperty.allySequence.pin.indexOf(t) ? 1 : -1
    }));
    var t = [];
    if (e.game && "fv" != MainProperty.ballType) {
        for (var a = [], i = 0; i < e.game.length; i++) {
            var n = e.game[i][0];
            MainProperty.gameData[n] || t.push(n)
        }
        for (var r = InitialCache(MainProperty, null, e.game, e.score, null).games, s = Object.keys(r), i = 0; i < s.length; i++) {
            var o = MainProperty.gameData[s[i]].aId;
            a.indexOf(o) < 0 && a.push(o)
        }
        a = a.map(function(e) {
            return MainProperty.allyData[e]
        });
        for (i = 0; i < a.length; i++) {
            var l = a[i].aId;
            MainProperty.allyData[l].gidSet = $.extend([], MainProperty.allyData[l].gidSet).sort(function(e, t) {
                if (MainProperty.gameData[e].gd != MainProperty.gameData[t].gd)
                    return MainProperty.gameData[e].gd > MainProperty.gameData[t].gd ? 1 : -1
            })
        }
    }
    if (e.odds)
        for (i = 0; i < e.odds.length; i++) {
            var c = e.odds[i]
              , n = c[0];
            if (MainProperty.gameData[n]) {
                MainProperty.oddData[n] || (MainProperty.oddData[n] = {});
                for (var d = 1; d < c.length; d++) {
                    var u = c[d]
                      , h = MainProperty.gameData[n].mode < 2 ? "DS" + MainProperty.gameData[n].type : "ZD" + MainProperty.gameData[n].type;
                    t.indexOf(n) < 0 && t.push(n),
                    MainProperty.oddData[n][u[3]] || (MainProperty.oddData[n][u[3]] = {}),
                    MainProperty.oddData[n][u[3]][u[0]] || (MainProperty.oddData[n][u[3]][u[0]] = {});
                    var p = {
                        kT: u[0],
                        ra: u[1],
                        rb: u[2],
                        sT: u[3],
                        sId: u[4],
                        isParlay: u[5],
                        dt: u[6],
                        wt: u[7],
                        line: u[8],
                        pk: Tool.TransformNumToPk(u[0], u[8]),
                        lineAt: u[9],
                        obm: u[10],
                        gbm: u[11]
                    };
                    $.extend(MainProperty.oddData[n][u[3]][u[0]], p);
                    for (var m = 12; m < u.length; m++)
                        MainProperty.oddData[n][u[3]][u[0]][u[m]] = Tool.TransformPointer(u[0], u[m + 1]),
                        m += 1
                }
            }
        }
    e.allyIndex && "fv" != MainProperty.ballType && Ally.DrawAllyList(),
    e.limit && InitialModeData(e.limit);
    var g = Outer.UpdateKindSubOption()
      , r = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn);
    if (g)
        return Outer.BatchProcess(r, !0, !1),
        void (MainProperty.BallAllyClosure[(MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType] = !0);
    for (var f = [], v = [], _ = [], y = [], P = {
        open: [],
        close: []
    }, S = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll" : "#outerPage > div.gamePanelL_In", b = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList", T = b + (Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? " > div.GLIn > table.GLInBox" : " > div.GLIn > table.GLInBox > tbody > tr.GLInList"), i = 0; i < t.length; i++)
        if (!(MainProperty.gameSequence.indexOf(t[i]) < 0)) {
            var n = t[i]
              , h = (2 == (E = MainProperty.gameData[n]).mode ? "ZD" : "DS") + E.type
              , C = MainProperty.gameSequence.indexOf(n)
              , M = 0 < C ? MainProperty.gameSequence[C - 1] : -1
              , I = C < MainProperty.gameSequence.length - 1 ? MainProperty.gameSequence[C + 1] : -1
              , A = $(T + ":first").attr("rel") ? $(T + ":first").attr("rel") : -1
              , L = $(T + ":last").attr("rel") ? $(T + ":last").attr("rel") : -1
              , x = 0 == $(S + ' > table.gameTitle[rel="' + h + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_gameList_all').length
              , D = !$(S + ' > table.gameTitle[rel="' + h + '"] > tbody > tr > td.GT_T > div.GT_TBox > div.btn_gameList_all').hasClass("off")
              , w = $(b + '[rel="' + MainProperty.gameData[n].aId + '"]').hasClass("shell")
              , k = !!w || 0 != $(b + '[rel="' + MainProperty.gameData[n].aId + '"]').length
              , k = k && !w || D && !w || D && !k;
            if ("cs" == MainProperty.ballType && x && 0 == $(S + " > table.gameTitle > tbody > tr > td.GT_T > div.GT_TBox > div.btn_gameList_all:not(.off)").length)
                y.push(n);
            else if (0 < $(T + '[rel="' + n + '"]').length)
                f.push(n),
                v.push({
                    gId: n,
                    sT: "*"
                }),
                (0 < $(T + '[rel="' + n + '"]:visible').length ? P.open : P.close).push(n);
            else if (MainProperty.BallAllyClosure[h]) {
                var B = -1 == A ? null : A
                  , G = -1 == L ? null : L;
                if (Tool.IsMultiSport(MainProperty.ballType)) {
                    for (d = 0; d < MainProperty.gameSequence.length; d++) {
                        var O = MainProperty.gameSequence[d]
                          , h = (2 == (E = MainProperty.gameData[O]).mode ? "ZD" : "DS") + E.type;
                        if (0 == MainProperty.BallAllyClosure[h]) {
                            B = !(0 < d) || t.indexOf(MainProperty.gameSequence[d - 1]) < 0 ? null : MainProperty.gameSequence[d - 1];
                            break
                        }
                    }
                    for (d = MainProperty.gameSequence.length - 1; 0 <= d; d--) {
                        var E, O = MainProperty.gameSequence[d], h = (2 == (E = MainProperty.gameData[O]).mode ? "ZD" : "DS") + E.type;
                        if (0 == MainProperty.BallAllyClosure[h]) {
                            G = !(d < MainProperty.gameSequence.length - 1) || t.indexOf(MainProperty.gameSequence[d + 1]) < 0 ? null : MainProperty.gameSequence[d + 1];
                            break
                        }
                    }
                } else
                    B = A,
                    G = L;
                D || 0 != $(b + '[rel="' + MainProperty.gameData[n].aId + '"]').length ? -1 != M && -1 == t.indexOf(M) || A != I && -1 == t.indexOf(I) || !k ? -1 != I && -1 == t.indexOf(I) || L != M && -1 == t.indexOf(M) || !k ? 0 < $(T + '[rel="' + M + '"]').length && 0 < $(T + '[rel="' + I + '"]').length && k ? (f.push(n),
                2e3 < $("#outerPage")[0].scrollHeight && G && v.push({
                    gId: G,
                    sT: "*"
                })) : (null == B || null == G || MainProperty.gameSequence.indexOf(A) < C && MainProperty.gameSequence.indexOf(L) > C) && k && f.push(n) : (f.push(n),
                2e3 < $("#outerPage")[0].scrollHeight && B && v.push({
                    gId: B,
                    sT: "*"
                })) : (f.push(n),
                2e3 < $("#outerPage")[0].scrollHeight && k && G && v.push({
                    gId: G,
                    sT: "*"
                })) : MainProperty.sortOption.sort == Args.SortTime ? f.push(n) : _.indexOf(MainProperty.gameData[n].aId) < 0 && _.push(MainProperty.gameData[n].aId)
            } else
                0 < $(b + '[rel="' + E.aId + '"]:not(.shell)').length || 0 == $(b + '[rel="' + E.aId + '"]').length && k ? f.push(n) : 0 != $(b + '[rel="' + E.aId + '"]').length || k || (MainProperty.sortOption.sort == Args.SortTime ? f.push(n) : _.indexOf(MainProperty.gameData[n].aId) < 0 && _.push(MainProperty.gameData[n].aId))
        }
    0 < y.length && Outer.DrawBallShell(y),
    0 < _.length && Outer.InsertAllyShell(_),
    0 < v.length && Outer.RemoveGame(v, Args.FakeDel),
    0 < f.length && Outer.InsertGame(f, !0, P),
    0 == $(S + "> table.gameTitle").length && Outer.AddOrRemoveBallTable(Args.AddBallTable),
    Menu.DrawZPDate(),
    CartFast.InitialDisplay()
}
function ActionDelGame(e) {
    var t = !1
      , a = []
      , i = []
      , n = []
      , r = []
      , s = []
      , o = []
      , l = Tool.IsMultiSport(MainProperty.ballType) ? "#outerPage > div.gamePanelL_In > div.gameListAll_scroll > div.gameFAVbox > div.gameList" : "#outerPage > div.gamePanelL_In > div.gameList_scroll > div.gameList"
      , c = l + (Tool.IsSC(MainProperty.ballType) && MainProperty.sortOption.kind == Ball.sc.val.Wave.idx ? " > div.GLIn > table.GLInBox" : " > div.GLIn > table.GLInBox > tbody > tr.GLInList");
    if (e.val)
        for (var d = 0; d < e.val.length; d++) {
            var u, h = e.val[d], p = h[0], m = h[1];
            if (MainProperty.gameData[p] && s.indexOf(p) < 0 && s.push(p),
            -1 == m)
                MainProperty.gameData[p] && (g = MainProperty.gameData[p].aId,
                C = (MainProperty.gameData[p].mode < 2 ? "DS" : "ZD") + MainProperty.gameData[p].type,
                o.indexOf(g) < 0 && o.push(g),
                delete MainProperty.gameData[p],
                delete MainProperty.oddData[p],
                MainProperty.allyData[g].gidSet.remove(p),
                0 == MainProperty.allyData[g].gidSet.length && (delete MainProperty.allyData[g],
                MainProperty.allySequence.pin.remove(g),
                MainProperty.allySequence.pop.remove(g),
                "fv" == MainProperty.ballType && MainProperty.alOption.fvAlly.remove(g),
                u = MainProperty.alOption.cacheName,
                MainProperty.alOption.cache[u].list.remove(g),
                (0 == MainProperty.alOption.cache[u].list.length || "All" != MainProperty.alOption.cache[u].list && MainProperty.allySequence.pin.length == MainProperty.alOption.cache[u].list.length) && (MainProperty.alOption.cache[u].list = ["All"],
                t = !0)));
            else if (MainProperty.gameData[p] && MainProperty.oddData[p] && MainProperty.oddData[p][m]) {
                var g = MainProperty.gameData[p].aId;
                o.indexOf(g) < 0 && o.push(g);
                for (var f, v = 2; v < h.length; v++)
                    MainProperty.oddData[p][m][h[v]] && (f = Object.keys(MainProperty.oddData[p][m][h[v]]).filter(function(e) {
                        if (0 == isNaN(parseInt(e, 10)))
                            return e
                    }),
                    delete MainProperty.oddData[p][m][h[v]],
                    $.isEmptyObject(MainProperty.oddData[p][m]) && delete MainProperty.oddData[p][m],
                    $.isEmptyObject(MainProperty.oddData[p]) && delete MainProperty.oddData[p],
                    $(l + '[rel="' + g + '"]').hasClass("shell") || n.push({
                        gId: p,
                        sT: m,
                        kT: h[v],
                        item: f,
                        aId: g
                    }))
            }
        }
    var _ = $.extend([], MainProperty.gameSequence)
      , y = Outer.UpdateKindSubOption()
      , P = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn);
    if (y)
        return Outer.BatchProcess(P, !0, !1),
        void (MainProperty.BallAllyClosure[(MainProperty.playMode < 2 ? "DS" : "ZD") + MainProperty.ballType] = !0);
    if (t)
        Outer.BatchProcess(P, !0, !1),
        Inner.Close();
    else {
        for (var S = MainProperty.gameSequence.map(function(e) {
            return MainProperty.gameData[e].aId
        }).filter(function(e, t, a) {
            return a.indexOf(e) == t
        }), b = o.filter(function(e) {
            return S.indexOf(e) < 0 && $(l + '[rel="' + e + '"]').hasClass("shell")
        }), T = s.filter(function(e) {
            return MainProperty.gameSequence.indexOf(e) < 0
        }), d = 0; d < b.length; d++) {
            var C = (Tool.IsMultiSport(MainProperty.ballType) ? $(l + '[rel="' + b[d] + '"]').closest("div.gameFAVbox") : $(l + '[rel="' + b[d] + '"]').closest("div.gameList_scroll")).attr("rel");
            r.push({
                aId: b[d],
                modeBall: C
            })
        }
        for (var M = -1, d = _.indexOf($(c + ":first").attr("rel")) - 1; 0 <= d; d--)
            if (0 <= MainProperty.gameSequence.indexOf(_[d])) {
                if (!Tool.IsMultiSport(MainProperty.ballType)) {
                    M = MainProperty.gameSequence.indexOf(_[d]);
                    break
                }
                var I = (2 == (L = MainProperty.gameData[_[d]]).mode ? "ZD" : "DS") + L.type;
                if (1 == MainProperty.BallAllyClosure[I] && !$(l + '[rel="' + L.aId + '"]').hasClass("shell")) {
                    M = MainProperty.gameSequence.indexOf(_[d]);
                    break
                }
            }
        for (var A = -1, d = _.indexOf($(c + ":last").attr("rel")) + 1; d < _.length; d++)
            if (0 <= MainProperty.gameSequence.indexOf(_[d])) {
                if (!Tool.IsMultiSport(MainProperty.ballType)) {
                    A = MainProperty.gameSequence.indexOf(_[d]);
                    break
                }
                var L, I = (2 == (L = MainProperty.gameData[_[d]]).mode ? "ZD" : "DS") + L.type;
                if (1 == MainProperty.BallAllyClosure[I] && !$(l + '[rel="' + L.aId + '"]').hasClass("shell")) {
                    A = MainProperty.gameSequence.indexOf(_[d]);
                    break
                }
            }
        for (d = 0; d < T.length; d++) {
            C = (Tool.IsMultiSport(MainProperty.ballType) ? $(c + '[rel="' + T[d] + '"]').closest("div.gameFAVbox") : $(c + '[rel="' + T[d] + '"]').closest("div.gameList_scroll")).attr("rel");
            (0 < $(c + '[rel="' + T[d] + '"]').length || Tool.IsMultiSport(MainProperty.ballType)) && (i.push({
                gId: T[d],
                sT: "*"
            }),
            (MainProperty.BallAllyClosure[C] || Tool.IsMultiSport(MainProperty.ballType)) && (0 <= A && MainProperty.gameSequence[A] ? (a.push(MainProperty.gameSequence[A]),
            A++) : 0 <= M && MainProperty.gameSequence[M] && (a.push(MainProperty.gameSequence[M]),
            M--)))
        }
        0 < i.length && Outer.RemoveGame(i, Args.RealDel),
        0 < n.length && Outer.RemoveOdd(n),
        0 < r.length && (Outer.RemoveAllyShell(r),
        Outer.IsAllShrink()),
        0 < a.length && Outer.InsertGame(a, !0),
        Outer.AddOrRemoveBallTable(Args.RemoveBallTable)
    }
    Ally.DrawAllyList(),
    CartFast.InitialDisplay(),
    Menu.DrawZPDate() && (P = FilterSchedule(MainProperty.gameData, MainProperty.allyData, MainProperty.oddData, Args.CoverAndReturn),
    Outer.BatchProcess(P, !0, !1))
}
function ActionUpdateCart(e) {
    if (e.ally)
        for (var t = 0; t < e.ally.length; t++)
            CartBase.UpdateCartAllyData(e.ally[t]);
    if (e.game)
        for (t = 0; t < e.game.length; t++)
            CartBase.UpdateCartGameData(e.game[t]);
    if (e.odds)
        for (t = 0; t < e.odds.length; t++)
            CartBase.UpdateCartOddData(e.odds[t])
}
function ActionAddCart(e) {
    for (var t = 0; t < e.odds.length; t++)
        CartBase.AddCartData(e.odds[t])
}
function ActionDelCart(e) {
    for (var t = 0; t < e.val.length; t++)
        CartBase.DelCartData(e.val[t])
}
function ActionMore(n) {
    1 == n.stick && RecoverSetting(!0, Args.Inner);
    var e, r = MainProperty.innerPage, s = n.stick ? 0 : 1, o = MainProperty.panelData.panel, l = MainProperty.panelData.mId, c = MainProperty.panelData.RDAnimate, d = !1;
    n.odds && r == n.odds[0] && MainProperty.gameData[r] ? (cancelAnimationFrame(MainProperty.waitToDrawInner),
    MainProperty.gameData[r].mode == PlayMode.ZD ? $("#innerPage > div.gamePanelR_In > div.gameDetail").addClass("rollLive") : $("#innerPage > div.gamePanelR_In > div.gameDetail").removeClass("rollLive"),
    e = MainProperty.gameData[r].aId,
    MainProperty.innerData.allyData[e] = MainProperty.allyData[e],
    MainProperty.innerData.gameData[r] = MainProperty.gameData[r],
    InitialCache(MainProperty.innerData, null, null, null, [n.odds]),
    PanelBase.Initial(n),
    MainProperty.waitToDrawInner = requestAnimationFrame(function() {
        if (MainProperty.innerPage && MainProperty.gameData[MainProperty.innerPage]) {
            Inner.ShowPage(),
            $("#innerMenu").next("div.GDList_In").show(),
            $("#innerNoData").hide(),
            ChatVue.half.allow = !0,
            Inner.DrawSchedule(MainProperty.innerPage, null),
            $("#innerPage").show(),
            Inner.BindClickEvent(),
            $("#innerMenu > li.btn_GDListT").removeClass("show"),
            $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a").removeClass("show"),
            $("#innerMenu > li.btn_GDListT_menu").hide();
            for (var e = !1, t = $("#innerMenu > li.btn_GDListT").add("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a"), a = 0; a < t.length; a++) {
                var i = $(t[a]).attr("page");
                0 < $('#innerSchedule > div.gameStyle_list[page="' + i + '"]:not([style*="display: none"])').length && ($(t[a]).addClass("show"),
                e = !0)
            }
            0 < $("#innerMenu > li.btn_GDListT_menu > div.GDLT_In > div.GDLT_InBox > a.show").length && $("#innerMenu > li.btn_GDListT_menu").show(),
            e ? ($("#innerMenu > li.btn_GDListT:first").addClass("show").addClass("on"),
            $("#innerMenu").removeClass("none")) : ($("#innerMenu").addClass("none"),
            $("#innerMenu").next("div.GDList_In").hide(),
            $("#innerNoData").show(),
            ChatVue.half.allow = !1),
            RecoverSetting(!1, Args.Inner),
            MainProperty.gameData[MainProperty.innerPage].mode == PlayMode.ZD ? (ChatVue.smId = n.smid,
            ChatVue.ot = MainProperty.gameData[r].aId.endsWith("3") ? 1 : 0,
            ChatVue.gpId = MainProperty.gameData[r].gpid,
            $(".gameDetail_scroll").removeClass("noChatroom"),
            ChatVue.show = !0) : (ChatVue.show = !1,
            $(".gameDetail_scroll").addClass("noChatroom")),
            MainProperty.panelData.panel = PanelBase.GetDefaultPanel(!s),
            Panel.SetRDAnimateHeight(),
            l == MainProperty.panelData.mId && c == MainProperty.panelData.RDAnimate || 0 == MainProperty.panelData.RDAnimate || Panel.DrawRDAnimate(),
            MainProperty.innerPage == MainProperty.panelData.popGameLive.gId ? s ? 0 <= [Args.GameLive, Args.Anchor].indexOf(MainProperty.panelData.panel) && (PanelBase.IsPopAndInnerSameLive(Args.GameLive) || PanelBase.IsPopAndInnerSameLive(Args.Anchor)) ? Panel.ClosePopLiveTV(!1, !1, !0) : d = Panel.SetAnchor(Args.LiveTv, !0) : PanelBase.ClearInnerLive(MainProperty.panelData.popGameLive.type) : d = Panel.SetAnchor(Args.LiveTv, s),
            $("#innerView").show(),
            Panel.SetActiveHtml(s, "ActionMore " + s + " sn: " + n.sn),
            (s || MainProperty.panelData.panel != o || d) && Panel.SetChatRoomType(),
            Panel.SetTitle(MainProperty.panelData.panel != o)
        }
    })) : Inner.Close()
}
function ActionUpdateMore(e) {
    if (e.odds)
        for (var t = 0; t < e.odds.length; t++) {
            var a = e.odds[t]
              , i = a.path[0]
              , n = a.path[1]
              , r = a.path[2]
              , s = [];
            if (MainProperty.innerData.oddData[i] && MainProperty.innerData.oddData[i][n] && MainProperty.innerData.oddData[i][n][r] && MainProperty.innerData.gameData[i]) {
                for (var o in a)
                    if (a.hasOwnProperty(o))
                        if ("o" == o)
                            for (var l = 0; l < a[o].length; l++) {
                                var c = a[o][l];
                                MainProperty.innerData.oddData[i][n][r][c] = Tool.TransformPointer(r, a[o][l + 1]),
                                s.push(c),
                                l += 1
                            }
                        else
                            "l" == o ? (MainProperty.innerData.oddData[i][n][r].line = a[o],
                            MainProperty.innerData.oddData[i][n][r].pk = Tool.TransformNumToPk(r, a[o]),
                            s.indexOf("pk") < 0 && s.push("pk")) : "la" == o ? (MainProperty.innerData.oddData[i][n][r].lineAt = a[o],
                            s.indexOf("pk") < 0 && s.push("pk")) : "path" != o && (MainProperty.innerData.oddData[i][n][r][o] = a[o],
                            ("ra" == o || "rb" == o) && s.indexOf(o) < 0 && s.push(o));
                Inner.UpdateOdd(i, n, r, s)
            }
        }
}
function ActionAddMore(e) {
    if (e.odds && 0 < e.odds.length) {
        for (var t = [], a = 0; a < e.odds.length; a++) {
            var i = e.odds[a]
              , n = i[0];
            if (MainProperty.innerPage && MainProperty.gameData[n]) {
                MainProperty.innerData.oddData[n] || (MainProperty.innerData.oddData[n] = {});
                for (var r = 1; r < i.length; r++) {
                    var s = i[r];
                    MainProperty.innerData.oddData[n][s[3]] || (MainProperty.innerData.oddData[n][s[3]] = {}),
                    MainProperty.innerData.oddData[n][s[3]][s[0]] || (MainProperty.innerData.oddData[n][s[3]][s[0]] = {});
                    var o = {
                        kT: s[0],
                        ra: s[1],
                        rb: s[2],
                        sT: s[3],
                        sId: s[4],
                        isParlay: s[5],
                        dt: s[6],
                        wt: s[7],
                        line: s[8],
                        pk: Tool.TransformNumToPk(s[0], s[8]),
                        lineAt: s[9],
                        obm: s[10],
                        gbm: s[11]
                    };
                    $.extend(MainProperty.innerData.oddData[n][s[3]][s[0]], o);
                    for (var l = 12; l < s.length; l++)
                        MainProperty.innerData.oddData[n][s[3]][s[0]][s[l]] = Tool.TransformPointer(s[0], s[l + 1]),
                        l += 1;
                    t.push({
                        kT: s[0],
                        sT: s[3]
                    })
                }
            }
        }
        MainProperty.innerPage && (Inner.InsertMore(t),
        CartFast.InitialDisplay())
    }
}
function ActionDelMore(e) {
    if (e.val && 0 < e.val.length) {
        for (var t = [], a = 0; a < e.val.length; a++) {
            var i, n = e.val[a], r = n[0], s = n[1];
            if (-1 == s)
                return MainProperty.innerData.gameData[r] && (i = MainProperty.innerData.gameData[r].aId,
                delete MainProperty.innerData.gameData[r],
                delete MainProperty.innerData.oddData[r],
                MainProperty.innerData.allyData[i].gidSet.remove(r)),
                void Inner.Close();
            if (MainProperty.innerData.oddData[r] && MainProperty.innerData.oddData[r][s]) {
                for (var o = 2; o < n.length; o++)
                    delete MainProperty.innerData.oddData[r][s][n[o]],
                    t.push({
                        kT: n[o],
                        sT: s
                    });
                $.isEmptyObject(MainProperty.innerData.oddData[r][s]) && delete MainProperty.innerData.oddData[r][s]
            }
        }
        MainProperty.innerPage && 0 < t.length && (Inner.RemoveMore(t),
        CartFast.InitialDisplay())
    }
}
function ActionUpdatePanel(e) {
    if (MainProperty.innerPage == e.gId) {
        PanelBase.UpdateCache(e),
        0 != MainProperty.panelData.RDAnimate && (e.mId || e.rAnimate) && Panel.DrawRDAnimate();
        var t, a, i = MainProperty.panelData.panel;
        if (MainProperty.panelData.panel = PanelBase.GetDefaultPanel(!0),
        t = MainProperty.panelData.panel != i,
        a = Panel.SetAnchor(Args.LiveTv, t),
        t)
            Panel.SetActiveHtml(!0, "ActionUpdatePanel " + t + " sn: " + e.sn);
        else
            switch (MainProperty.panelData.panel) {
            case Args.ScoreBoard:
                e.board && Panel.UpdateScoreBoard(e.board),
                e.game && Panel.UpdateScoreBoard(e.game);
                break;
            case Args.RDAnimation:
                (e.rAnimate || e.mId) && Panel.SetActiveHtml(!0, "ActionUpdatePanel(RDAnimation) sn: " + e.sn);
                break;
            case Args.GameLive:
                0 < MainProperty.panelData.gameLive.domain.length && (e.live && (Panel.SetActiveHtml(!0, "ActionUpdatePanel(GameLive) sn: " + e.sn),
                Panel.DrawInnerLiveBattle()),
                e.game && Panel.UpdateInnerLiveBattle(e.game));
                break;
            case Args.Anchor:
                0 < MainProperty.panelData.girlLive.domain.length && (e.girlLive && (Panel.SetActiveHtml(!0, "ActionUpdatePanel(Anchor) sn: " + e.sn),
                Panel.DrawInnerLiveBattle()),
                e.game && Panel.UpdateInnerLiveBattle(e.game));
                break;
            default:
                $("#innerView > div").hide(),
                Panel.ResetAction()
            }
        if (e.gift) {
            for (var n = 0; e.gift.item && n < e.gift.item.length; n++) {
                var r = e.gift.item[n];
                ChatVue.$set(ChatVue.$store.gift.gift, r[0], {
                    id: r[0],
                    name: r[1],
                    num: r[2],
                    preview: "gift/" + r[0] + ".png",
                    tip: ""
                })
            }
            ChatVue.$store.gift.giftIndex = e.gift.index || ChatVue.$store.gift.giftIndex
        }
        (a || t) && Panel.SetChatRoomType(),
        Panel.SetTitle(t)
    }
}
function ActionPopLive(e) {
    if (MainProperty.panelData.popGameLive.gId == e.gId)
        if (null === e.live && MainProperty.panelData.popGameLive.type == Args.GameLive || null === e.girlLive && MainProperty.panelData.popGameLive.type == Args.Anchor)
            Panel.ClosePopLiveTV(!1, !0, !0);
        else {
            if (e.game) {
                for (var t in e.game)
                    switch (t) {
                    case "pa":
                    case "pb":
                        MainProperty.panelData.popGameLive.game[t] = e.game[t] ? "-" + e.game[t] : "";
                        break;
                    default:
                        MainProperty.panelData.popGameLive.game[t] = e.game[t]
                    }
                Panel.DrawPopLiveBattle()
            }
            e.live && MainProperty.panelData.popGameLive.type == Args.GameLive && (MainProperty.panelData.popGameLive.domain = Array.isArray(e.live.domain) ? e.live.domain : [],
            MainProperty.panelData.popGameLive.route = e.live.route || "",
            MainProperty.panelData.popGameLive.rSteamId = e.live.rSteamId || "",
            PlayerAPI[Args.PopLiveTv].SetChannel(MainProperty.panelData.popGameLive.route, MainProperty.panelData.popGameLive.domain, MainProperty.panelData.popGameLive.rSteamId, "ActionPopLive gameLive") && PlayerAPI[Args.PopLiveTv].InitPlayer(VideoSource.Hls)),
            e.girlLive && MainProperty.panelData.popGameLive.type == Args.Anchor && (MainProperty.panelData.popGameLive.domain = Array.isArray(e.girlLive.domain) ? e.girlLive.domain : [],
            MainProperty.panelData.popGameLive.anchor = Array.isArray(e.girlLive.anchor) ? e.girlLive.anchor : [],
            Panel.SetAnchor(Args.PopLiveTv, !1),
            PlayerAPI[Args.PopLiveTv].SetChannel(MainProperty.panelData.popGameLive.route, MainProperty.panelData.popGameLive.domain, null, "ActionPopLive girlLive") && PlayerAPI[Args.PopLiveTv].InitPlayer(VideoSource.Sldp),
            PanelBase.IsPopAndInnerSameLive(Args.Anchor) && Panel.SetChatRoomType())
        }
}
function ActionUpdatePopLive(e) {
    if (MainProperty.panelData.popGameLive.gId == e.gId)
        if (null === e.live && MainProperty.panelData.popGameLive.type == Args.GameLive || null === e.girlLive && MainProperty.panelData.popGameLive.type == Args.Anchor)
            Panel.ClosePopLiveTV(!1, !0, !0);
        else {
            if (e.game) {
                for (var t in e.game)
                    switch (t) {
                    case "pa":
                    case "pb":
                        MainProperty.panelData.popGameLive.game[t] = e.game[t] ? "-" + e.game[t] : "";
                        break;
                    default:
                        MainProperty.panelData.popGameLive.game[t] = e.game[t]
                    }
                Panel.UpdatePopLiveBattle(e.game)
            }
            if (e.live) {
                for (var t in e.live)
                    switch (t) {
                    case "domain":
                        MainProperty.panelData.popGameLive[t] = Array.isArray(e.live[t]) ? e.live[t] : [];
                        break;
                    case "route":
                    case "rSteamId":
                        MainProperty.panelData.popGameLive[t] = e.live[t] || ""
                    }
                PlayerAPI[Args.PopLiveTv].SetChannel(MainProperty.panelData.popGameLive.route, MainProperty.panelData.popGameLive.domain, MainProperty.panelData.popGameLive.rSteamId, "ActionUpdatePopLive gameLive") && PlayerAPI[Args.PopLiveTv].InitPlayer(VideoSource.Hls)
            }
            if (e.girlLive) {
                for (var t in e.girlLive)
                    switch (t) {
                    case "domain":
                    case "anchor":
                        MainProperty.panelData.popGameLive[t] = Array.isArray(e.girlLive[t]) ? e.girlLive[t] : []
                    }
                Panel.SetAnchor(Args.PopLiveTv, !1),
                PlayerAPI[Args.PopLiveTv].SetChannel(MainProperty.panelData.popGameLive.route, MainProperty.panelData.popGameLive.domain, null, "ActionUpdatePopLive girlLive") && PlayerAPI[Args.PopLiveTv].InitPlayer(VideoSource.Sldp),
                PanelBase.IsPopAndInnerSameLive(Args.Anchor) && Panel.SetChatRoomType()
            }
        }
}
window.jQuery && function(e) {
    e.fn.hoverDelay = function(a, i, n, r) {
        var n = n || 150
          , r = r || 150
          , i = i || a
          , s = []
          , o = [];
        return this.each(function(t) {
            e(this).mouseenter(function() {
                var e = this;
                clearTimeout(o[t]),
                s[t] = setTimeout(function() {
                    a.apply(e)
                }, n)
            }).mouseleave(function() {
                var e = this;
                clearTimeout(s[t]),
                o[t] = setTimeout(function() {
                    i.apply(e)
                }, r)
            })
        })
    }
}(jQuery),
function(e) {
    e = e.getElementById("pc.min.js");
    e && (e.className = "success")
}(this.document || this);

